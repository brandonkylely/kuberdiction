input,target
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""cluster-admin"" entry",kubectl config set-credentials cluster-admin --auth-provider=oidc --auth-provider-arg=client-secret-
Update pod 'gateway' with the label 'role' and the value 'backend',kubectl label pods gateway role=backend
"Listen on port 8088 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8088:8081
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/web-app-pod 8080:6379
Create a deployment named gitlab that runs the postgres image and expose port 8088,kubectl create deployment gitlab --image=postgres --port=8088
Update pod 'backend' with the label 'role' and the value 'backend',kubectl label pods backend role=backend
Return snapshot of previous terminated code-explorer container logs from pod cdn-service-pod,kubectl logs -p -c code-explorer cdn-service-pod
Import environment from a secret,kubectl set env --from=secret/monitoring-credentials-secret deployment/search-engine-deployment
Get output from lunar-launcher from pod email-service-pod,kubectl attach email-service-pod -c lunar-launcher
Create a copy of cdn-service-pod changing the command of rocket-ranger,kubectl debug cdn-service-pod -it --copy-to=debug-image-web --container=rocket-ranger -- sh
Add a taint with key 'workload' on nodes having label environment=production,kubectl taint node -l environment=production  workload=monitoring-node-15:PreferNoSchedule
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp velero/task-processor-pod-17:/tmp/foo :/tmp/bar
"Delete pods and services with same names ""web"" and ""proxy""","kubectl delete pod,service web proxy"
"Listen on port 3000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 3000:8000"
Describe a pod,kubectl describe pods/message-broker
Create a job with a command,kubectl create job indexing --image=mongo -- mongo --version
"Listen on port 8000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8000:5000"
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=data-cluster
"Listen on port 8000 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8000:6379"
Set deployment load-balancer-deployment's service account to fluentd,kubectl set serviceaccount deployment load-balancer-deployment fluentd
Set deployment database-deployment's service account to kube-proxy,kubectl set serviceaccount deployment database-deployment kube-proxy
Deny CSR 'csr-abc123',kubectl certificate deny csr-abc123
Start a python pod and let the container expose port 5001,kubectl run hazelcast --image=python --port=5001
Display only the most recent 5 lines of output in pod proxy-server-pod,kubectl logs --tail=5 proxy-server-pod
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8080 5000
"Listen on a random port locally, forwarding to 6379 in the pod",kubectl port-forward pod/mypod :6379
Set deployment log-aggregator-deployment's service account to jenkins,kubectl set serviceaccount deployment log-aggregator-deployment jenkins
Display only the most recent 20 lines of output in pod proxy-server-pod,kubectl logs --tail=20 proxy-server-pod
Edit the job 'cache-warming-job' in JSON using the v1 API format,kubectl edit job.v1.batch/cache-warming-job -o json
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/ui-config deployment/user-management-deployment
"Get output from running the 'jenkins --version' command from pod database-pod, using the first container by default",kubectl exec database-pod -- jenkins --version
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/options/file2.txt
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 9090 8000
Update all containers in all replication controllers in the project to have ENV=prod,kubectl set env rc --all API_KEY=your-api-key
"Wait for the pod ""database-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/database-pod
Set the certificate-authority-data field on the cluster-gamma cluster,"kubectl config set clusters.cluster-gamma.certificate-authority-data $(echo ""cert_data_here"" | base64 -i -)"
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/analytics-pod :8088
"Create a role binding for app-operator, sysadmin, and security-auditors using the foo cluster role",kubectl create rolebinding foo --clusterrole=foo --user=app-operator --user=sysadmin --group=security-auditors
Create a job with a command,kubectl create job batch-processing --image=jenkins -- jenkins --version
"Get output from running the 'mysqld' command from pod security-service-pod, using the first container by default",kubectl exec security-service-pod -- mysqld
Describe one context in your kubeconfig file,kubectl config get-contexts service-account-context
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.dev-context.cluster prod-cluster
"Listen on port 3000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 3000:9090"
"Listen on port 3000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 3000:3000"
"Create a service for an node deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment node --port=8010 --target-port=909000
"Create a service for a replicated php, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc php --port=8080 --target-port=888800
Return snapshot of previous terminated mycontainer container logs from pod email-service-pod,kubectl logs -p -c mycontainer email-service-pod
"Auto scale a replication controller ""cdn"", with the number of pods between 1 and 8, target CPU utilization at 90%",kubectl autoscale rc cdn --max=8 --cpu-percent=90
Return snapshot logs from all containers in pods defined by label tier=frontend,kubectl logs -l tier=frontend --all-containers=true
"Check to see if I can get the job named ""data-migration-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/data-migration-job -n kube-node-lease
Begin streaming the logs of the astro-container container in pod log-aggregator-pod,kubectl logs -f -c astro-container log-aggregator-pod
"Get output from running the 'mysql --version' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- mysql --version
"Listen on port 8000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/security-service-pod 8000:3000
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node storage-node-13 -p '{""spec"":{""type"":""LoadBalancer""}'"
Start a node pod and let the container expose port 9091,kubectl run hazelcast --image=node --port=9091
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/log-config deployment/proxy-service-deployment
Delete the context for the team-alpha-context cluster,kubectl config delete-context team-alpha-context
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/preferences/file2.txt
Restart a daemon set,kubectl rollout restart daemonset/nginx
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8081 8080
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to /etc/kubernetes locally,kubectl cp metallb-system/file-server-pod-14:/var/run/secrets/kubernetes.io/serviceaccount/ /etc/kubernetes
Roll back to daemonset revision 3,kubectl rollout undo daemonset/test --to-revision=3
"Listen on port 9090 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 9090:8080
Create a new ExternalName service named external-email-service,kubectl create service externalname external-email-service --external-name blog-test.blog
"Delete pods and services with same names ""media-stream"" and ""vpn""","kubectl delete pod,service media-stream vpn"
Set the resource request and limits for all containers in elasticsearch,"kubectl set resources deployment elasticsearch --limits=cpu=200m,memory=512Mi --requests=cpu=50m,memory=4Gi"
"Listen on port 3000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 3000:8088"
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=8089 --target-port=300100
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod vpn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach vpn-service-pod -c lunar-launcher -i -t
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/web-app-pod 8088:8000
"Delete pods and services with same names ""proxy"" and ""payment""","kubectl delete pod,service proxy payment"
"Update pod 'gateway' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway expiration-date='2024-12-31'
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.app-1-context.cluster kube-cluster-2
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8000 8080
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=cluster-alpha
Create a deployment named wordpress that runs the node image and expose port 7000,kubectl create deployment wordpress --image=node --port=7000
"If the deployment named bar's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/bar
Create a job with a command,kubectl create job backup --image=ethereum/client-go -- geth attach
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""apps"" API group",kubectl get deployments.v2.0.0.apps -o yaml
Add a taint with key 'cpu-type' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  cpu-type=node-2:PreferNoSchedule
"Set a deployments mysql container cpu limits to ""50m"" and memory to ""256Mi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=50m,memory=256Mi"
"Delete pods and services with same names ""api"" and ""email""","kubectl delete pod,service api email"
"Listen on port 8088 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8088:8000
Set deployment notification-handler-deployment's service account to my-service-account,kubectl set serviceaccount deployment notification-handler-deployment my-service-account
"Update pod 'api' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods api owner='alice-smith'
Import environment from a config map with a prefix,kubectl set env --from=configmap/log-config --prefix=MYSQL_ deployment/mydeployment
Import environment from a secret,kubectl set env --from=secret/ssh-key-secret deployment/notification-handler-deployment
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""mobile-apps"" API group",kubectl get deployments.v1.1.1.mobile-apps -o json
Create a deployment named mattermost that runs the docker.elastic.co/elasticsearch/elasticsearch image with 3 replicas,kubectl create deployment mattermost --image=docker.elastic.co/elasticsearch/elasticsearch --replicas=3
"Auto scale a deployment ""api"", with the number of pods between 7 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment api --min=7 --max=10
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod 5000:8081
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""internal-apps"" API group",kubectl get deployments.legacy-1.0.0.internal-apps -o json
Create an ingress with TLS enabled using the default ingress certificate and different path types,"kubectl create ingress ingtls --class=default \
--rule=""site.com/=svc:https,tls"" \
--rule=""website.com/path/subpath*=othersvc:7000"""
"Update pod 'backend' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend SLA='99.9% uptime'
Set deployment scheduler-app-deployment's service account to kube-proxy,kubectl set serviceaccount deployment scheduler-app-deployment kube-proxy
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=my-k8s-cluster
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8080 5432
"Get output from running the 'redis-server' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- redis-server
"Listen on port 6379 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 6379:5000"
"Create a single ingress called 'app1-ingress' that directs requests to website.com/bar to svc # svc1:7000 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""website.com/bar=svc1:7000,tls=my-cert"""
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=cluster-gamma
Create a cron job with a command,"kubectl create cronjob backup-job --image=redis --schedule=""*/1 * * * *"" -- redis-server --version"
Create a new secret named payment-gateway-secret from an env file,kubectl create secret generic payment-gateway-secret --from-env-file=path/to/configs.env
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/analytics-pod 8000:5432
Set deployment search-engine-deployment's service account to kube-proxy,kubectl set serviceaccount deployment search-engine-deployment kube-proxy
Remove from node 'storage-node-13' all the taints with key 'environment',kubectl taint nodes storage-node-13 environment-
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""custom-apps"" API group",kubectl get deployments.v1.1.1.custom-apps -o yaml
Create a job with a command,kubectl create job backup --image=centos -- sleep 3600
"If the deployment named bar's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/bar
"Listen on port 8081 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8081:8088
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name practice-online.site
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=rbac.authorization.k8s.io
Copy /tmp/foo_dir from a remote pod to /tmp/bar locally,kubectl cp openfaas/admin-dashboard-pod-16:/tmp/foo_dir /tmp/bar
Create a copy of e-commerce-pod changing all container images to jenkins,kubectl debug e-commerce-pod --copy-to=my-custom-dbg --set-image=*=jenkins
Scale a replica set named 'backend-service-replicaset' to 3,kubectl scale --replicas=3 rs/backend-service-replicaset
"Delete pods and services with same names ""payment"" and ""security""","kubectl delete pod,service payment security"
Show all logs from pod e-commerce-pod written in the last hour,kubectl logs --since=1h e-commerce-pod
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/auth-service-pod
Get the documentation of a specific field of a resource,kubectl explain resource=pods.metadata.name
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/configurations/file2.txt
"Update pod 'auth' with the annotation 'contact-email' and the value 'support@example.com', overwriting any existing value",kubectl annotate --overwrite pods auth contact-email='support@example.com'
Update pod 'payment' with the label 'tier' and the value 'frontend',kubectl label pods payment tier=frontend
Create a copy of payment-gateway-pod changing all container images to postgres,kubectl debug payment-gateway-pod --copy-to=debug-image-app --set-image=*=postgres
"Listen on port 5000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5000:5432
"Update pod 'chat-app' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods chat-app monitoring-tool='Prometheus'
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-config-prod deployment/gateway-deployment
Start a wordpress pod and let the container expose port 3000,kubectl run hazelcast --image=wordpress --port=3000
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod backend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach backend-pod -c lunar-launcher -i -t
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/monitoring-stack-deployment -c email-service-pod-1
"Auto scale a deployment ""auth"", with the number of pods between 5 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment auth --min=5 --max=10
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 5432 8000
"Listen on port 5432 locally, forwarding to 8081 in the pod",kubectl port-forward pod/chat-app-pod 5432:8081
"Remove exec auth plugin environment variables for the ""security-user"" entry",kubectl config set-credentials security-user --exec-env=var-to-remove-
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=3000:5001
"Listen on port 8888 locally, forwarding to 6379 in the pod",kubectl port-forward pod/analytics-pod 8888:6379
Remove from node 'web-node-8' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes web-node-8 disktype:NoSchedule-
Get output from running the 'go' command in time-machine from pod web-app-pod,kubectl exec web-app-pod -c time-machine -- go
Create a deployment named monitoring that runs the amazonlinux image,kubectl create deployment monitoring --image=amazonlinux
Create a deployment named api that runs the nginx image with 5 replicas,kubectl create deployment api --image=nginx --replicas=5
"Check to see if I can get the job named ""image-processing-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/image-processing-job -n kube-public
Return snapshot logs from container notification-handler-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/notification-handler-deployment -c log-aggregator-pod-1
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/web-service"
Create a new secret named ssl-key-secret with key1=supersecret and key2=topsecret,kubectl create secret generic ssl-key-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json SLA='99.9% uptime'
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 5000 5000
"Get output from running the 'python' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- python
Get output from running the 'mysqld' command in cyber-sleuth from pod web-app-pod,kubectl exec web-app-pod -c cyber-sleuth -- mysqld
Remove from node 'edge-node-10' all the taints with key 'zone',kubectl taint nodes edge-node-10 zone-
"Listen on port 9090 locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod 9090:8888
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/backend-pod
"Listen on port 8080 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8080:5000
Begin streaming the logs of the quantum-quark container in pod media-stream-pod,kubectl logs -f -c quantum-quark media-stream-pod
"Listen on a random port locally, forwarding to 8000 in the pod",kubectl port-forward pod/analytics-pod :8000
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n kube-dns
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/analytics-pod 8000:8080
"Listen on port 5432 locally, forwarding to 5000 in the pod",kubectl port-forward pod/frontend-pod 5432:5000
Embed certificate authority data for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --embed-certs --certificate-authority=~/.kube/kube-cluster-2/kubernetes.ca.crt
Begin streaming the logs from all containers in pods defined by label stack=tech-stack,kubectl logs -f -l stack=tech-stack --all-containers=true
"Listen on port 5000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod 5000:8088
Update image of all containers of daemonset staging to 'redis:6.2.5',kubectl set image daemonset staging *=redis:6.2.5
Roll back to daemonset revision 1,kubectl rollout undo daemonset/nginx --to-revision=1
"Create a role named ""admin_role"" with ResourceName specified",kubectl create role admin_role --verb=get --resource=pods --resource-name=log-aggregator --resource-name=machine-learning
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=8088 --target-port=330600
"If the deployment named baz's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/baz
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named backend-pod,kubectl logs deployment/monitoring-stack-deployment -c backend-pod-1
"Listen on port 8888 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8888:3000"
Update a cluster role binding for dashboard,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:dashboard
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/frontend-pod 6379:8081
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod email-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach email-service-pod -c warp-drive -i -t
Create a deployment named gitlab that runs the jenkins image and expose port 8083,kubectl create deployment gitlab --image=jenkins --port=8083
Import environment from a secret,kubectl set env --from=secret/ldap-credentials-secret deployment/api-server-deployment
Create a cron job with a command,"kubectl create cronjob backup-job --image=node --schedule=""*/1 * * * *"" -- node"
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/log-aggregator-deployment -c email-service-pod-1
"Start a python pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=python --overrides='{ ""apiVersion"": ""v2.0.0"", ""spec"": { ... } }'"
Update image of all containers of daemonset namespace-1 to 'alpine:3.14',kubectl set image daemonset namespace-1 *=alpine:3.14
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node k8s-node-1 -p '{""spec"":{""type"":""LoadBalancer""}'"
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 8080 8088
"If the deployment named payment-service-rs's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/payment-service-rs
Create a cron job with a command,"kubectl create cronjob log-rotation --image=alpine --schedule=""*/1 * * * *"" -- apk add curl"
Create a copy of analytics-pod changing all container images to jenkins,kubectl debug analytics-pod --copy-to=debug-image-1 --set-image=*=jenkins
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/batch-processing-job -n namespace-1
Add a taint with key 'datacenter' on nodes having label myLabel,kubectl taint node -l myLabel  datacenter=dev-node-4:PreferNoSchedule
Start a nginx pod and let the container expose port 3306,kubectl run hazelcast --image=nginx --port=3306
"Auto scale a deployment ""payment"", with the number of pods between 7 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment payment --min=7 --max=15
Remove from node 'k8s-node-1' all the taints with key 'dedicated',kubectl taint nodes k8s-node-1 dedicated-
Display only the most recent 53 lines of output in pod log-aggregator-pod,kubectl logs --tail=53 log-aggregator-pod
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node node-1 -p $'spec:\n unschedulable: true'
"Check to see if I can get the job named ""cron-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/cron-job -n kube-public
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node testing-node-11 -p '{""spec"":{""unschedulable"":true}}'"
"Update node 'prod-node-5' with a taint with key 'special' and value 'backup' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes prod-node-5 special=backup:NoSchedule
Remove from node 'monitoring-node-15' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes monitoring-node-15 app:PreferNoSchedule-
Add to node 'dev-node-4' a taint with key 'cpu-type' and no value,kubectl taint nodes dev-node-4 cpu-type:NoSchedule
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8000 8000
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=5432 --target-port=300100
Add a taint with key 'app' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  app=kube-master-9:PreferNoSchedule
Create a deployment with a command,kubectl create deployment auth --image=mysql -- mysql
Get output from running the 'redis-server --version' command in cyber-sleuth from pod monitoring-pod,kubectl exec monitoring-pod -c cyber-sleuth -- redis-server --version
Update deployment 'web-app-deployment' with a new environment variable,kubectl set env deployment/web-app-deployment SMTP_HOST=smtp.example.com
"Create a role named ""custom_role"" with ResourceName specified",kubectl create role custom_role --verb=list --resource=pods --resource-name=audit-logger --resource-name=cache-redis
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""my-apps"" API group",kubectl get deployments.hotfix-1.1.2.my-apps -o yaml
"Listen on port 5000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 5000:9090"
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8888 8080
Create a new NodePort service named media-stream-nodeport,kubectl create service nodeport media-stream-nodeport --tcp=8081:7000
"Update pod 'payment' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods payment criticality='high'
"Create a cluster role named ""bar"" that allows user to perform ""list"", ""create"" and ""connect"" on services","kubectl create clusterrole bar --verb=list,create,connect --resource=services"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/backend-pod 5000 5432
"Delete pods and services with same names ""api"" and ""vpn""","kubectl delete pod,service api vpn"
Add a taint with key 'disktype' on nodes having label role=database,kubectl taint node -l role=database  disktype=dev-node-4:PreferNoSchedule
"Listen on port 8081 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8081:8081
Get output from running the 'apk add curl' command in lunar-launcher from pod analytics-pod,kubectl exec analytics-pod -c lunar-launcher -- apk add curl
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=properties=/path/to/parameters/file1.txt --from-file=key1=/path/to/preferences/file2.txt
Create a new config map named global-config from an env file,kubectl create configmap global-config --from-env-file=path/to/configurations.env
Create an ingress with TLS enabled using the default ingress certificate and different path types,"kubectl create ingress ingtls --class=default \
--rule=""foo.com/=svc:https,tls"" \
--rule=""site.com/path/subpath*=othersvc:9000"""
Update deployment 'frontend-deployment' with a new environment variable,kubectl set env deployment/frontend-deployment SMTP_USERNAME=your-username
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json app-version=2.5.1
Scale a replica set named 'bar' to 1,kubectl scale --replicas=1 rs/bar
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/log-config deployment/cache-cluster-deployment
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""web-app"" entry",kubectl config set-credentials web-app --auth-provider=oidc --auth-provider-arg=client-secret-
"Update pod 'payment' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment custom-label=my-custom-value
Start a nginx pod and let the container expose port 6379,kubectl run hazelcast --image=nginx --port=6379
"If the deployment named webapp-replicaset's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/webapp-replicaset
Approve CSR 'csr-webserver-1',kubectl certificate approve csr-webserver-1
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8000 3000
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/cache-service"
Create a new ExternalName service named external-monitoring-service,kubectl create service externalname external-monitoring-service --external-name blog-test.blog
"Listen on port 8080 locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod 8080:8000
Create a new secret named email-credentials-secret with key1=supersecret and key2=topsecret,kubectl create secret generic email-credentials-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
Unset namespace in staging-context context,kubectl config unset contexts.staging-context.namespace
"Listen on port 8088 locally, forwarding to 5000 in the pod",kubectl port-forward pod/security-service-pod 8088:5000
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=cluster-beta
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=authentication.k8s.io
Update pod 'analytics' with the label 'env' and the value 'staging',kubectl label pods analytics env=staging
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/env-vars deployment/proxy-service-deployment
Return snapshot logs from pod vpn-service-pod with only one container,kubectl logs vpn-service-pod
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/proxy-server-pod 5000:6379
Add a taint with key 'environment' on nodes having label myLabel,kubectl taint node -l myLabel  environment=node-2:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/log-config deployment/order-processing-deployment
"Listen on port 5000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod 5000:5432
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/api-service-pod 5000:6379
Create a copy of frontend-pod changing all container images to busybox,kubectl debug frontend-pod --copy-to=my-debugger --set-image=*=busybox
"Delete pods and services with same names ""database"" and ""email""","kubectl delete pod,service database email"
Get output from running the 'mysql' command in rocket-ranger from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c rocket-ranger -- mysql
Set deployment authentication-service-deployment's service account to prometheus,kubectl set serviceaccount deployment authentication-service-deployment prometheus
"Listen on port 5432 locally, forwarding to 8000 in the pod",kubectl port-forward pod/e-commerce-pod 5432:8000
Begin streaming the logs of the cosmic-container container in pod cdn-service-pod,kubectl logs -f -c cosmic-container cdn-service-pod
"Update pod 'frontend' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods frontend SLA='99.9% uptime'
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=8083 --target-port=500000
"Listen on port 5000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 5000:6379
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=conf=/path/to/configurations/file1.txt --from-file=data=/path/to/parameters/file2.txt
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/web-app-pod
"Auto scale a replication controller ""vpn"", with the number of pods between 1 and 2, target CPU utilization at 81%",kubectl autoscale rc vpn --max=2 --cpu-percent=81
"Listen on port 5000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 5000:8081"
Set deployment api-server-deployment's service account to prometheus,kubectl set serviceaccount deployment api-server-deployment prometheus
Get output from running the 'ash' command in astro-container from pod mypod,kubectl exec mypod -c astro-container -- ash
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/user-management-deployment SMTP_PASSWORD=your-password -o yaml
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""beta-apps"" API group",kubectl get deployments.hotfix-1.1.2.beta-apps -o yaml
Delete pods and services with label myLabel,"kubectl delete pods,services -l myLabel"
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach gateway-pod -c code-explorer -i -t
Return snapshot of previous terminated lunar-launcher container logs from pod vpn-service-pod,kubectl logs -p -c lunar-launcher vpn-service-pod
"Listen on a random port locally, forwarding to 3000 in the pod",kubectl port-forward pod/chat-app-pod :3000
"Get output from running 'bash' command from the first pod of the service analytics-service, using the first container by default",kubectl exec svc/analytics-service -- bash
"Delete pods and services with same names ""media-stream"" and ""log-aggregator""","kubectl delete pod,service media-stream log-aggregator"
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/notification-sender-job -n logging
"Create a single ingress called 'public-service-ingress' that directs requests to foo.com/bar to svc # svc1:8181 with a tls secret ""my-cert""","kubectl create ingress public-service-ingress --rule=""foo.com/bar=svc1:8181,tls=my-cert"""
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/analytics-pod 3000:6379
"Update pod 'backend' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend deployment-script='https://example.com/deploy.sh'
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/frontend-pod 6379 8888
"Update pod 'auth' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth monitoring-tool=Prometheus
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/monitoring-service 8088:https
Add to node 'dev-node-4' a taint with key 'app' and no value,kubectl taint nodes dev-node-4 app:NoSchedule
Create a new secret named oauth-secret from an env file,kubectl create secret generic oauth-secret --from-env-file=path/to/configurations.env
"Update pod 'chat-app' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods chat-app env='staging'
Create a new LoadBalancer service named ingress-controller-lb,kubectl create service loadbalancer ingress-controller-lb --tcp=9091:8089
"Update pod 'foo' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods foo team='frontend-team'
"Check to see if I can get the job named ""report-generation-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/report-generation-job -n development
"Get output from running the 'node' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- node
"Update pod 'frontend' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend criticality=high
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-secrets deployment/database-deployment
Create a cron job with a command,"kubectl create cronjob metrics-collection --image=ruby --schedule=""*/1 * * * *"" -- irb"
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=5432:8888
Create a deployment named ingress that runs the alpine image and expose port 3000,kubectl create deployment ingress --image=alpine --port=3000
Create a copy of database-pod changing all container images to hazelcast/hazelcast,kubectl debug database-pod --copy-to=my-debugger --set-image=*=hazelcast/hazelcast
"Listen on port 5000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 5000:3000"
"Listen on port 3000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 3000:6379
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=8888 --target-port=900000
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 5432 8081
Create a job with a command,kubectl create job image-build-job --image=node -- node --version
Remove from node 'app-node-6' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes app-node-6 cpu-type:NoSchedule-
"Set a deployments alpine container cpu limits to ""50m"" and memory to ""1Gi""","kubectl set resources deployment alpine -c=nginx --limits=cpu=50m,memory=1Gi"
Get output from running the 'go' command in nano-bot from pod vpn-service-pod,kubectl exec vpn-service-pod -c nano-bot -- go
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kube-public/backend-pod-13:/tmp/foo /tmp/bar
"Delete pods and services with same names ""monitoring"" and ""frontend""","kubectl delete pod,service monitoring frontend"
Add a taint with key 'app' on nodes having label app=web-app,kubectl taint node -l app=web-app  app=prod-node-5:PreferNoSchedule
Get output from code-explorer from pod cdn-service-pod,kubectl attach cdn-service-pod -c code-explorer
Create a new secret named ssl-key-secret with keys for each file in folder bar,kubectl create secret generic ssl-key-secret --from-file=path/to/properties
"Listen on port 8081 locally, forwarding to 9090 in the pod",kubectl port-forward pod/cdn-service-pod 8081:9090
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller frontend-rc
Create a job with a command,kubectl create job database-seeding-job --image=jenkins -- jenkins --version
Restart a daemon set,kubectl rollout restart daemonset/staging
Return snapshot of previous terminated time-machine container logs from pod proxy-server-pod,kubectl logs -p -c time-machine proxy-server-pod
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=3306:8888
"Listen on port 8081 locally, forwarding to 8888 in the pod",kubectl port-forward pod/backend-pod 8081:8888
"Get output from running 'mongo --version' command from the first pod of the deployment search-engine-deployment, using the first container by default",kubectl exec deploy/search-engine-deployment -- mongo --version
"Auto scale a deployment ""vpn"", with the number of pods between 1 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment vpn --min=1 --max=11
Begin streaming the logs of the time-machine container in pod security-service-pod,kubectl logs -f -c time-machine security-service-pod
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/backend-pod 8088:8000
"Listen on port 8000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/cdn-service-pod 8000:3000
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.dev-context.cluster star-cluster
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/api-config deployment/frontend-deployment
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/proxy-service-pod
Get output from running the 'mysql' command in quantum-quark from pod frontend-pod,kubectl exec frontend-pod -c quantum-quark -- mysql
"Mark node ""app-node-6"" as unschedulable",kubectl cordon app-node-6
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=edge-cluster
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/database-indexing-job -n logging
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8080 8080
"Listen on port 6379 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/payment-service 6379:https
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/db-config deployment/user-management-deployment
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f containerd-config.toml -p '{""spec"":{""someField"":""newValue""}'"
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.client-2-context.cluster my-k8s-cluster
Begin streaming the logs of the stardust-shuttle container in pod backend-pod,kubectl logs -f -c stardust-shuttle backend-pod
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 6379 9090
Edit the job 'content-import-job' in JSON using the v1 API format,kubectl edit job.v1.batch/content-import-job -o json
"Listen on port 5000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5000:8080
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n kube-node-lease
Display only the most recent 5 lines of output in pod e-commerce-pod,kubectl logs --tail=5 e-commerce-pod
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/api-service-pod 5432 9090
Add a taint with key 'zone' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  zone=backup-node-14:PreferNoSchedule
"Start a postgres pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=postgres --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
"Listen on port 8888 locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod 8888:5432
Create a copy of analytics-pod changing the command of warp-drive,kubectl debug analytics-pod -it --copy-to=debug-image-web --container=warp-drive -- sh
Return snapshot of previous terminated mycontainer container logs from pod web-app-pod,kubectl logs -p -c mycontainer web-app-pod
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/app-secrets deployment/web-app-deployment
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.team-alpha-context.cluster cluster-gamma
Embed certificate authority data for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --embed-certs --certificate-authority=~/.kube/dev-cluster/kubernetes.ca.crt
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/monitoring-config deployment/gateway-deployment
Begin streaming the logs of the cosmic-container container in pod security-service-pod,kubectl logs -f -c cosmic-container security-service-pod
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.edge-context.cluster prod-cluster
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/frontend-pod :8081
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/vpn-service-pod
Create a deployment named my-dep that runs the mongo image and expose port 5432,kubectl create deployment my-dep --image=mongo --port=5432
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/notification-sender-job -n kube-system
"Set a deployments wordpress container cpu limits to ""100m"" and memory to ""1Gi""","kubectl set resources deployment wordpress -c=nginx --limits=cpu=100m,memory=1Gi"
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/web-service 5432:https
Remove from node 'node-1' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes node-1 environment:NoSchedule-
Start a confluentinc/cp-kafka pod and let the container expose port 5432,kubectl run hazelcast --image=confluentinc/cp-kafka --port=5432
"Create a service for an node deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment node --port=8000 --target-port=300100
Create a new ClusterIP service named inventory-service-clusterip,kubectl create service clusterip inventory-service-clusterip --tcp=8181:8084
Begin streaming the logs of the code-explorer container in pod database-pod,kubectl logs -f -c code-explorer database-pod
Rename the context 'testing-context' to 'team-beta-context' in your kubeconfig file,kubectl config rename-context testing-context team-beta-context
Create a pod using the data in conf.json,kubectl create -f ./conf.json
Start a alpine pod and let the container expose port 8083,kubectl run hazelcast --image=alpine --port=8083
Create a new namespace named kube-ingress,kubectl create namespace kube-ingress
"Auto scale a deployment ""security"", with the number of pods between 5 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=5 --max=10
List a single pod in JSON output format,kubectl get -o json pod cdn-service-pod
"Auto scale a deployment ""web"", with the number of pods between 4 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment web --min=4 --max=11
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=8082:8082
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/web-app-pod 9090 5432
Remove from node 'storage-node-13' all the taints with key 'cpu-type',kubectl taint nodes storage-node-13 cpu-type-
List the clusters that kubectl knows about,kubectl config get-clusters
Set deployment monitoring-stack-deployment's service account to my-service-account,kubectl set serviceaccount deployment monitoring-stack-deployment my-service-account
"If the deployment named web's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/web
"Update pod 'proxy-server' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server team='frontend team'
Set deployment gateway-deployment's service account to tekton,kubectl set serviceaccount deployment gateway-deployment tekton
Copy ~/.config/kube local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp ~/.config/kube kube-flannel/auth-service-pod-11:/tmp/bar_dir
Update pod 'media-stream' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods media-stream unhealthy-
Add a taint with key 'app' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  app=kube-master-9:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-name-config deployment/api-server-deployment
"Listen on port 5000 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 5000:5432"
Show metrics for the pods defined by label zone=us-east-1,kubectl top pod -l zone=us-east-1
Create a new secret named azure-storage-secret from an env file,kubectl create secret generic azure-storage-secret --from-env-file=path/to/settings.env
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/global-config deployment/database-deployment
Update image of all containers of daemonset namespace-2 to 'ruby:3.0.2',kubectl set image daemonset namespace-2 *=ruby:3.0.2
Return snapshot of previous terminated cosmic-container container logs from pod chat-app-pod,kubectl logs -p -c cosmic-container chat-app-pod
Begin streaming the logs of the quantum-quark container in pod payment-gateway-pod,kubectl logs -f -c quantum-quark payment-gateway-pod
Return snapshot of previous terminated cosmic-container container logs from pod proxy-service-pod,kubectl logs -p -c cosmic-container proxy-service-pod
Edit the job 'security-scan-job' in JSON using the v1 API format,kubectl edit job.v1.batch/security-scan-job -o json
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp velero/security-scanner-pod-18::/tmp/foo :/tmp/bar
Get output from running the 'sleep 3600' command in warp-drive from pod analytics-pod,kubectl exec analytics-pod -c warp-drive -- sleep 3600
Describe a node,kubectl describe nodes gpu-node-7.gpu-cluster.internal
Start a redis pod and let the container expose port 8089,kubectl run hazelcast --image=redis --port=8089
"Create a service for a replicated hazelcast using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs hazelcast --port=8083 --target-port=500000
"Listen on port 8088 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8088:8080
Get output from running the 'composer --version' command in cyber-sleuth from pod auth-service-pod,kubectl exec auth-service-pod -c cyber-sleuth -- composer --version
"Listen on port 9090 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 9090:8080
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=staging-cluster
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/db-config deployment/notification-handler-deployment
"Listen on port 5000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5000:8088
Dump current cluster state to :/tmp/foo,kubectl cluster-info dump --output-directory=:/tmp/foo
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/backend-microservice-deployment -c proxy-server-pod-1
"Listen on port 8080 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8080:5000
Set the certificate-authority-data field on the data-cluster cluster,"kubectl config set clusters.data-cluster.certificate-authority-data $(echo ""cert_data_here"" | base64 -i -)"
Begin streaming the logs of the ruby container in pod e-commerce-pod,kubectl logs -f -c ruby e-commerce-pod
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=3306 --target-port=900000
Return snapshot of previous terminated nano-bot container logs from pod mypod,kubectl logs -p -c nano-bot mypod
"If the deployment named frontend-rs's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/frontend-rs
"Listen on port 8088 locally, forwarding to 6379 in the pod",kubectl port-forward pod/backend-pod 8088:6379
Set the user field on the on-prem-context context entry without touching other values,kubectl config set-context on-prem-context --user=cluster-admin
"If the deployment named prod-app-rs's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/prod-app-rs
Set the user field on the client-1-context context entry without touching other values,kubectl config set-context client-1-context --user=cluster-admin
Approve CSR 'csr-sqgzp',kubectl certificate approve csr-sqgzp
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/options/file2.txt
Get output from running the 'jenkins-plugin-cli' command in stardust-shuttle from pod analytics-pod,kubectl exec analytics-pod -c stardust-shuttle -- jenkins-plugin-cli
Start a jenkins pod and let the container expose port 5000,kubectl run hazelcast --image=jenkins --port=5000
Set deployment frontend-deployment's service account to default,kubectl set serviceaccount deployment frontend-deployment default
"Auto scale a deployment ""auth"", with the number of pods between 1 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment auth --min=1 --max=12
"Start a amazonlinux pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=amazonlinux --overrides='{ ""apiVersion"": ""hotfix-1.1.2"", ""spec"": { ... } }'"
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=3001 --target-port=909200
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/api-service-pod 8000:5432
Remove from node 'app-node-6' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes app-node-6 workload:NoSchedule-
Unset namespace in on-prem-context context,kubectl config unset contexts.on-prem-context.namespace
Import environment from a secret,kubectl set env --from=secret/cert-manager-secret deployment/mydeployment
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/app-secrets deployment/load-balancer-deployment
"Create a service for a pod security-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod security-service-pod --port=9092 --name=frontend
Return snapshot of previous terminated code-explorer container logs from pod analytics-pod,kubectl logs -p -c code-explorer analytics-pod
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node app-node-6 -p '{""data"":{""key"":""new-value""}'"
"Start a redis pod and set labels ""app=redis"" and ""env=prod"" in the container","kubectl run hazelcast --image=redis --labels=""app=redis,env=prod"""
"Delete pods and services with same names ""security"" and ""payment""","kubectl delete pod,service security payment"
"Listen on port 8081 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8081:5432
"Listen on port 3000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/mypod 3000:9090
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/monitoring-config deployment/load-balancer-deployment
Add to node 'testing-node-11' a taint with key 'workload' and no value,kubectl taint nodes testing-node-11 workload:NoSchedule
List resource information in custom columns,"kubectl get pod analytics-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
"Enable the Google Compute Platform auth provider for the ""web-app"" entry",kubectl config set-credentials web-app --auth-provider=gcp
Delete the context for the prod-context cluster,kubectl config delete-context prod-context
Create a job with a command,kubectl create job monitoring-job --image=postgres -- psql
Note: --prune is still in Alpha # Apply the configuration in manifest.yaml that matches label app=web-app and delete all other resources that are not in the file and match label app=nginx,kubectl apply --prune -f manifest.yaml -l app=web-app
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8088 9090
"Create a cluster role name ""admin_role"" with NonResourceURL specified","kubectl create clusterrole ""admin_role"" --verb=update --non-resource-url=/api/v1/nodes/*"
"If the deployment named frontend-rs's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/frontend-rs
Return snapshot of previous terminated nebula-navigator container logs from pod mypod,kubectl logs -p -c nebula-navigator mypod
"Listen on port 8000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8000:9090"
Update image of all containers of daemonset namespace-1 to 'wordpress:5.8.1',kubectl set image daemonset namespace-1 *=wordpress:5.8.1
Update image of all containers of daemonset namespace-2 to 'centos:8.4.2105',kubectl set image daemonset namespace-2 *=centos:8.4.2105
"Delete pods and services with same names ""backend"" and ""proxy""","kubectl delete pod,service backend proxy"
Get output from cosmic-container from pod proxy-service-pod,kubectl attach proxy-service-pod -c cosmic-container
Get output from running the 'elasticsearch' command in quantum-quark from pod proxy-service-pod,kubectl exec proxy-service-pod -c quantum-quark -- elasticsearch
"Listen on port 9090 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 9090:8080
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/gateway-service"
Create a new ExternalName service named external-git-service,kubectl create service externalname external-git-service --external-name document-company.com
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/gateway-pod
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/cdn-service-pod
Add to node 'prod-node-5' a taint with key 'hardware' and no value,kubectl taint nodes prod-node-5 hardware:NoSchedule
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/kube-system-config deployment/email-server-deployment
Roll back to the previous deployment,kubectl rollout undo deployment/staging
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to /tmp/bar locally,kubectl cp kube-dns/backend-pod-13:/var/run/secrets/kubernetes.io/serviceaccount/ /tmp/bar
Update image of all containers of daemonset namespace- to 'redis:6.2.5',kubectl set image daemonset namespace-3 *=redis:6.2.5
Add a taint with key 'disktype' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  disktype=node-2:PreferNoSchedule
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/scheduler-app-deployment -c e-commerce-pod-1
Get output from running the 'apk add curl' command in code-explorer from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c code-explorer -- apk add curl
Set deployment proxy-service-deployment's service account to default,kubectl set serviceaccount deployment proxy-service-deployment default
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/ui-config deployment/user-management-deployment
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/notification-sender-job -n default
"Update pod 'backend' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods backend compliance-level='PCI-DSS'
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""external-apps"" API group",kubectl get deployments.v2.0.0.external-apps -o json
Create a deployment with a command,kubectl create deployment web --image=ruby -- ruby --version
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.app-2-context.cluster prod-cluster
Create a copy of gateway-pod changing all container images to wordpress,kubectl debug gateway-pod --copy-to=debug-image-web --set-image=*=wordpress
Create a new config map named ui-config from the key=value pairs in the file,kubectl create configmap ui-config --from-file=path/to/profiles
Update pod 'vpn' with the label 'component' and the value 'web',kubectl label pods vpn component=web
Import environment from a config map with a prefix,kubectl set env --from=configmap/api-config --prefix=MYSQL_ deployment/payment-processor-deployment
Create a new LoadBalancer service named log-aggregator-lb,kubectl create service loadbalancer log-aggregator-lb --tcp=5000:8084
Update pod 'media-stream' only if the resource is unchanged from version 1,kubectl annotate pods media-stream description='my frontend running nginx' --resource-version=1
Begin streaming the logs of the quantum-quark container in pod backend-pod,kubectl logs -f -c quantum-quark backend-pod
"Listen on port 9090 locally, forwarding to 6379 in the pod",kubectl port-forward pod/mypod 9090:6379
Return snapshot of previous terminated cyber-sleuth container logs from pod mypod,kubectl logs -p -c cyber-sleuth mypod
Get output from running pod log-aggregator-pod; use the 'kubectl.kubernetes.io/default-container' annotation # for selecting the container to be attached or the first container in the pod will be chosen,kubectl attach log-aggregator-pod
Create a new secret named app-config-secret with keys for each file in folder bar,kubectl create secret generic app-config-secret --from-file=path/to/options
Deny CSR 'csr-backend-5',kubectl certificate deny csr-backend-5
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/logging-service"
"If the deployment named dev-environment-rs's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/dev-environment-rs
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/proxy-server-pod
"Listen on port 9090 locally, forwarding to 9090 in the pod",kubectl port-forward pod/security-service-pod 9090:9090
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=cluster-beta
Create a new secret named database-secret with key1=supersecret and key2=topsecret,kubectl create secret generic database-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
"Delete pods and services with same names ""cdn"" and ""gateway""","kubectl delete pod,service cdn gateway"
Begin streaming the logs of the astro-container container in pod vpn-service-pod,kubectl logs -f -c astro-container vpn-service-pod
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f node-config.toml -p '{""spec"":{""someField"":""newValue""}'"
Display only the most recent 3 lines of output in pod monitoring-pod,kubectl logs --tail=3 monitoring-pod
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8081 3000
Add a taint with key 'dedicated' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  dedicated=storage-node-13:PreferNoSchedule
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/api-service-pod 8081:8080
"Listen on port 8888 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8888:8000"
Begin streaming the logs of the rocket-ranger container in pod media-stream-pod,kubectl logs -f -c rocket-ranger media-stream-pod
Update image of all containers of daemonset prod to 'debian:11.0',kubectl set image daemonset prod *=debian:11.0
"Listen on port 9090 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 9090:8081"
"Listen on port 5432 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 5432:8081
"Delete pods and services with same names ""email"" and ""vpn""","kubectl delete pod,service email vpn"
View the details of daemonset revision 7,kubectl rollout history daemonset/prod --revision=7
Return snapshot logs from container web-app-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/web-app-deployment -c proxy-service-pod-1
Create a cron job with a command,"kubectl create cronjob cron-task --image=wordpress --schedule=""*/1 * * * *"" -- apache2ctl -D FOREGROUND"
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/chat-app-pod 8888:3000
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/gateway-pod
"List all allowed actions in namespace ""logging""",kubectl auth can-i --list --namespace=logging
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=9092 --target-port=888800
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json contact-email=support@example.com
Update pod 'database' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods database role-
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""sandbox-apps"" API group",kubectl get deployments.hotfix-1.1.2.sandbox-apps -o json
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.staging-context.cluster prod-cluster
Embed certificate authority data for the data-cluster cluster entry,kubectl config set-cluster data-cluster --embed-certs --certificate-authority=~/.kube/e2e/kubernetes.ca.crt
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.app-1-context.cluster my-k8s-cluster
View the details of daemonset revision 5,kubectl rollout history daemonset/test --revision=5
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-config-prod deployment/user-management-deployment
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=apiextensions.k8s.io
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/kube-system-config deployment/load-balancer-deployment
Start a wordpress pod and let the container expose port 8081,kubectl run hazelcast --image=wordpress --port=8081
Check to see if I can read pod logs,kubectl auth can-i get pods --subresource=log
"Update pod 'email' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email custom-label=my-custom-value
"Listen on port 6379 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 6379:5432
"Create a job from a cron job named ""email-notifications""",kubectl create job test-job --from=cronjob/email-notifications
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/log-aggregator-pod 8088:8081
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in a specific container,kubectl cp /tmp/foo_dir backend-pod-13:/tmp/bar -c auth-service
Create a deployment with a command,kubectl create deployment wordpress --image=jenkins -- jenkins-plugin-cli
Get output from running the 'dotnet --list-runtimes' command in stardust-shuttle from pod gateway-pod,kubectl exec gateway-pod -c stardust-shuttle -- dotnet --list-runtimes
Disable cert checking for the dev cluster entry,kubectl config set-cluster on-prem-cluster --insecure-skip-tls-verify=true
Update pod 'security' with the label 'component' and the value 'api',kubectl label pods security component=api
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""apps"" API group",kubectl get deployments.stable-2.0.0.apps -o yaml
Create a new secret named docker-registry-secret with specified keys instead of names on disk,kubectl create secret generic docker-registry-secret --from-file=ssh-privatekey=path/to/id_rsa --from-file=ssh-publickey=path/to/id_rsa.pub
Set the resource request and limits for all containers in mongo,"kubectl set resources deployment mongo --limits=cpu=200m,memory=512Mi --requests=cpu=10,memory=512Mi"
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=settings=/path/to/settings/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Get output from running the 'mysql --version' command in time-machine from pod frontend-pod,kubectl exec frontend-pod -c time-machine -- mysql --version
"Listen on port 8888 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8888:3000
Update image of all containers of daemonset nginx to 'node:14.17.3',kubectl set image daemonset nginx *=node:14.17.3
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""beta-apps"" API group",kubectl get deployments.rc-1.1.0.beta-apps -o json
"Listen on port 8088 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8088:5432
"Update pod 'foo' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods foo custom-label='my-custom-value'
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/loadbalancer-service"
Create a new ClusterIP service named shipping-service-clusterip,kubectl create service clusterip shipping-service-clusterip --tcp=8082:5001
Add a taint with key 'disktype' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  disktype=node-2:PreferNoSchedule
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/proxy-server-pod 5432:9090
Get output from lunar-launcher from pod security-service-pod,kubectl attach security-service-pod -c lunar-launcher
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/mypod 3000 3000
Update image of all containers of daemonset namespace-1 to 'node:14.17.3',kubectl set image daemonset namespace-1 *=node:14.17.3
"Delete pods and services with same names ""cdn"" and ""api""","kubectl delete pod,service cdn api"
Create a new LoadBalancer service named database-lb,kubectl create service loadbalancer database-lb --tcp=6379:7000
"Auto scale a deployment ""security"", with the number of pods between 3 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=3 --max=13
Remove from node 'backup-node-14' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes backup-node-14 cpu-type:NoSchedule-
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8000 3000
Add to node 'monitoring-node-15' a taint with key 'zone' and no value,kubectl taint nodes monitoring-node-15 zone:NoSchedule
Embed certificate authority data for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --embed-certs --certificate-authority=~/.kube/sun-cluster/kubernetes.ca.crt
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=dev-cluster
Get output from cyber-sleuth from pod cdn-service-pod,kubectl attach cdn-service-pod -c cyber-sleuth
Create a new ExternalName service named external-monitoring-service,kubectl create service externalname external-monitoring-service --external-name mockup-cloud.cloud
Create a new secret named api-secret-key from an env file,kubectl create secret generic api-secret-key --from-env-file=path/to/configurations.env
"Update pod 'web' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling', overwriting any existing value",kubectl annotate --overwrite pods web scaling-policy='auto-horizontal-scaling'
Start a golang pod and let the container expose port 3001,kubectl run hazelcast --image=golang --port=3001
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/web-service"
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
"Listen on port 5432 locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod 5432:8081
Return snapshot of previous terminated mycontainer container logs from pod media-stream-pod,kubectl logs -p -c mycontainer media-stream-pod
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json contact-email=support@example.com
"Update pod 'backend' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend alert-email=alerts@example.com
Update image of all containers of daemonset prod to 'centos:8.4.2105',kubectl set image daemonset prod *=centos:8.4.2105
"Enable the Google Compute Platform auth provider for the ""john.doe"" entry",kubectl config set-credentials john.doe --auth-provider=gcp
"Listen on a random port locally, forwarding to 6379 in the pod",kubectl port-forward pod/proxy-server-pod :6379
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube kube-dns/database-pod-2:/tmp/bar
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""backup-apps"" API group",kubectl get deployments.beta-1.0.backup-apps -o json
"Update a pod identified by the type and name in ""config.json""",kubectl label -f config.json status=unhealthy
"If the deployment named frontend-rs's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/frontend-rs
"Listen on port 8000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8000:8081"
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/web-app-pod 8081:5432
"Listen on port 5000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5000:8088
"If the deployment named payment-service-rs's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/payment-service-rs
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=settings=/path/to/configurations/file1.txt --from-file=key2=/path/to/configs/file2.txt
Begin streaming the logs of the time-machine container in pod backend-pod,kubectl logs -f -c time-machine backend-pod
"Update pod 'monitoring' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods monitoring env='staging'
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 5432 8080
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n development
Add a taint with key 'dedicated' on nodes having label release=beta,kubectl taint node -l release=beta  dedicated=k8s-node-1:PreferNoSchedule
"Create a single ingress called 'web-ingress' that directs requests to foo.com/bar to svc # svc1:8080 with a tls secret ""my-cert""","kubectl create ingress web-ingress --rule=""foo.com/bar=svc1:8080,tls=my-cert"""
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=properties=/path/to/parameters/file1.txt --from-file=key1=/path/to/data/file2.txt
"Set a deployments hazelcast container cpu limits to ""3"" and memory to ""1Gi""","kubectl set resources deployment hazelcast -c=nginx --limits=cpu=3,memory=1Gi"
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8888 5432
Add a taint with key 'zone' on nodes having label team=devops,kubectl taint node -l team=devops  zone=node-1:PreferNoSchedule
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8081 6379
Add a taint with key 'environment' on nodes having label team=devops,kubectl taint node -l team=devops  environment=db-node-7:PreferNoSchedule
Import environment from a config map with a prefix,kubectl set env --from=configmap/global-config --prefix=MYSQL_ deployment/web-app-deployment
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/log-rotation-job -n monitoring
Begin streaming the logs of the code-explorer container in pod chat-app-pod,kubectl logs -f -c code-explorer chat-app-pod
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod chat-app-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
Return snapshot of previous terminated cyber-sleuth container logs from pod e-commerce-pod,kubectl logs -p -c cyber-sleuth e-commerce-pod
Create a job with a command,kubectl create job log-collection --image=node -- node --version
Update all deployments' and rc's nginx container's image to 'python:3.9.7',"kubectl set image deployments,rc python=python:3.9.7 --all"
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/cdn-service-pod 5000:8081
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=8084 --target-port=500000
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=web-cluster
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 5000 6379
"Set a deployments kafka container cpu limits to ""100m"" and memory to ""128Mi""","kubectl set resources deployment kafka -c=nginx --limits=cpu=100m,memory=128Mi"
Begin streaming the logs of the nano-bot container in pod database-pod,kubectl logs -f -c nano-bot database-pod
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.user-b-context.cluster cluster-alpha
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.cloud-context.cluster moon-cluster
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/security-service-pod
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=galaxy-cluster
Add to node 'monitoring-node-15' a taint with key 'app' and no value,kubectl taint nodes monitoring-node-15 app:NoSchedule
"Delete pods and services with same names ""cdn"" and ""monitoring""","kubectl delete pod,service cdn monitoring"
Update pod 'api' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods api tier-
Begin streaming the logs of the cosmic-container container in pod backend-pod,kubectl logs -f -c cosmic-container backend-pod
Create a new ExternalName service named external-file-storage-service,kubectl create service externalname external-file-storage-service --external-name blog-test.blog
Set the resource request and limits for all containers in hazelcast,"kubectl set resources deployment hazelcast --limits=cpu=200m,memory=512Mi --requests=cpu=3,memory=64Mi"
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8080 8888
"Delete pods and services with same names ""gateway"" and ""log-aggregator""","kubectl delete pod,service gateway log-aggregator"
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.app-1-context.cluster on-prem-cluster
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-name-config deployment/proxy-service-deployment
Scale a replica set named 'foo' to 3,kubectl scale --replicas=3 rs/foo
Create a deployment named prometheus that runs the amazonlinux image and expose port 3001,kubectl create deployment prometheus --image=amazonlinux --port=3001
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=8081 --target-port=808300
Remove the environment variable ENV from container 'cyber-sleuth' in all deployment configs,"kubectl set env deployments --all --containers=""cyber-sleuth"" ENV-"
Get output from running the 'docker run -d ubuntu sleep 3600' command in lunar-launcher from pod database-pod,kubectl exec database-pod -c lunar-launcher -- docker run -d ubuntu sleep 3600
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/preferences/file2.txt
Rename the context 'old-name' to 'team-beta-context' in your kubeconfig file,kubectl config rename-context old-name team-beta-context
Create a job with a command,kubectl create job log-processing-job --image=golang -- go version
Begin streaming the logs of the nebula-navigator container in pod web-app-pod,kubectl logs -f -c nebula-navigator web-app-pod
"Delete pods and services with same names ""database"" and ""auth""","kubectl delete pod,service database auth"
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/api-service-pod
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.user-b-context.cluster cloud-cluster
"Get output from running the 'geth version' command from pod database-pod, using the first container by default",kubectl exec database-pod -- geth version
"Listen on port 8000 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8000:6379"
Start a nginx pod and let the container expose port 3000,kubectl run hazelcast --image=nginx --port=3000
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml team='frontend team'
Add a taint with key 'datacenter' on nodes having label app=web-app,kubectl taint node -l app=web-app  datacenter=node-2:PreferNoSchedule
"Listen on port 5432 locally, forwarding to 6379 in the pod",kubectl port-forward pod/web-app-pod 5432:6379
Update image of all containers of daemonset app-v2 to 'python:3.9.7',kubectl set image daemonset app-v2 *=python:3.9.7
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""testing-apps"" API group",kubectl get deployments.hotfix-1.1.2.testing-apps -o json
Begin streaming the logs of the stardust-shuttle container in pod auth-service-pod,kubectl logs -f -c stardust-shuttle auth-service-pod
Create a pod disruption budget named auth-service-pdb that will select all pods with the tier=frontend label # and require minumum 9 of them being available at any point in time,kubectl create poddisruptionbudget auth-service-pdb --selector=tier=frontend --min-available=9
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/vpn-service-pod
Start a python pod and let the container expose port 7000,kubectl run hazelcast --image=python --port=7000
Get output from quantum-quark from pod analytics-pod,kubectl attach analytics-pod -c quantum-quark
Get output from running the 'pg_dump --version' command in rocket-ranger from pod vpn-service-pod,kubectl exec vpn-service-pod -c rocket-ranger -- pg_dump --version
"Listen on port 3000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 3000:8888
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node k8s-node-1 -p $'spec:\n unschedulable: true'
"Update node 'node-2' with a taint with key 'datacenter' and value 'dc-1' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes node-2 datacenter=dc-1:NoExecute
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-settings deployment/notification-handler-deployment
Create a job with a command,kubectl create job batch-processing --image=php --
Start a amazonlinux pod and let the container expose port 8082,kubectl run hazelcast --image=amazonlinux --port=8082
Show all logs from pod api-service-pod written in the last hour,kubectl logs --since=1h api-service-pod
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/chat-app-pod 8080:3000
Diff resources included in conf.json,kubectl diff -f conf.json
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp argocd/image-resizer-pod-20:/tmp/foo :/tmp/bar
Get output from stardust-shuttle from pod monitoring-pod,kubectl attach monitoring-pod -c stardust-shuttle
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=9000 --target-port=500000
Create a new secret named payment-gateway-secret with keys for each file in folder bar,kubectl create secret generic payment-gateway-secret --from-file=path/to/profiles
Return snapshot of previous terminated cosmic-container container logs from pod proxy-server-pod,kubectl logs -p -c cosmic-container proxy-server-pod
Create a deployment named monitoring that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 8000,kubectl create deployment monitoring --image=docker.elastic.co/elasticsearch/elasticsearch --port=8000
Start a postgres pod and let the container expose port 8084,kubectl run hazelcast --image=postgres --port=8084
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""legacy-apps"" API group",kubectl get deployments.hotfix-1.1.2.legacy-apps -o yaml
Set deployment backend-microservice-deployment's service account to kube-dns,kubectl set serviceaccount deployment backend-microservice-deployment kube-dns
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.admin-context.cluster my-k8s-cluster
Describe pods by label version=v1.0.0,kubectl describe po -l version=v1.0.0
Create a new NodePort service named gateway-nodeport,kubectl create service nodeport gateway-nodeport --tcp=9091:3001
Create a job with a command,kubectl create job image-build-job --image=php -- composer --version
Approve CSR 'csr-postgres-12',kubectl certificate approve csr-postgres-12
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-secrets deployment/web-app-deployment
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8088 8080
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node k8s-node-1 -p $'data:\n key: new-value'
Import environment from a secret,kubectl set env --from=secret/password-secret deployment/monitoring-stack-deployment
"Update pod 'chat-app' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods chat-app team='frontend-team'
"Update pod 'chat-app' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app criticality=high
"Listen on port 8080 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8080:8088"
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-config-prod deployment/database-deployment
"Scale a resource identified by type and name specified in ""config.json"" to 3",kubectl scale --replicas=3 -f config.json
Display only the most recent 3 lines of output in pod payment-gateway-pod,kubectl logs --tail=3 payment-gateway-pod
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/web-app-deployment SMTP_PASSWORD=your-password -o yaml
Start a confluentinc/cp-kafka pod and let the container expose port 8081,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8081
Create a new namespace named staging,kubectl create namespace staging
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/ui-config deployment/cache-cluster-deployment
Begin streaming the logs of the warp-drive container in pod mypod,kubectl logs -f -c warp-drive mypod
"Wait for the pod ""vpn-service-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/vpn-service-pod
Start a amazonlinux pod and let the container expose port 8081,kubectl run hazelcast --image=amazonlinux --port=8081
Update pod 'email' with the label 'app' and the value 'myapp',kubectl label pods email app=myapp
Create a deployment with a command,kubectl create deployment jenkins --image=redis -- redis-server
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node web-node-8 -p '{""spec"":{""containers"":[{""name"":""container-name"", ""resources"":{""limits"":{""cpu"":""200m""}}}]}'"
"Start a nginx pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=nginx --overrides='{ ""apiVersion"": ""hotfix-1.1.2"", ""spec"": { ... } }'"
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/kube-system-config deployment/gateway-deployment
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod media-stream-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach media-stream-pod -c cosmic-container -i -t
Set the last-applied-configuration of a resource to match the contents of a file,kubectl apply set-last-applied -f pod.yaml
Remove from node 'kube-master-9' all the taints with key 'datacenter',kubectl taint nodes kube-master-9 datacenter-
Use the context for the kube-cluster-1 cluster,kubectl config use-context kube-cluster-1
"Get output from running 'bash' command from the first pod of the deployment order-processing-deployment, using the first container by default",kubectl exec deploy/order-processing-deployment -- bash
"Delete pods and services with same names ""log-aggregator"" and ""log-aggregator""","kubectl delete pod,service log-aggregator log-aggregator"
"Update pod 'database' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database security-scan-status=pass
Begin streaming the logs of the time-machine container in pod auth-service-pod,kubectl logs -f -c time-machine auth-service-pod
"Get output from running 'go' command from the first pod of the deployment email-server-deployment, using the first container by default",kubectl exec deploy/email-server-deployment -- go
Create a copy of analytics-pod adding a debug container and changing container images,"kubectl debug analytics-pod -it --copy-to=debug-image-memcached --image=debian --set-image=database=mysql:5.7,app=app:debug"
"Set a deployment's openjdk:16.0.2 container image to 'openjdk', and its busybox container image to 'busybox'",kubectl set image deployment/openjdk busybox=busybox openjdk=openjdk:16.0.2
Create a job with a command,kubectl create job certificate-renewal --image=jenkins -- java -jar /usr/share/jenkins/jenkins.war
"Create a service for a replication controller identified by type and name specified in ""node-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f node-controller.yaml --port=5000 --target-port=637900
"Update pod 'monitoring' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods monitoring custom-label='my-custom-value'
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/ui-config deployment/proxy-service-deployment
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/vpn-service-pod
Embed certificate authority data for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --embed-certs --certificate-authority=~/.kube/kube-cluster-2/kubernetes.ca.crt
Add a taint with key 'zone' on nodes having label release=beta,kubectl taint node -l release=beta  zone=kube-master-9:PreferNoSchedule
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8000 8081
Set the server field on the on-prem-cluster cluster to https://1.2.3.4,kubectl config set clusters.on-prem-cluster.server https://1.2.3.4
Display only the most recent 20 lines of output in pod media-stream-pod,kubectl logs --tail=20 media-stream-pod
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json deployment-script='https://example.com/deploy.sh'
"Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment nginx --port=9000 --target-port=900000
"Set a deployments wordpress container cpu limits to ""1"" and memory to ""2Gi""","kubectl set resources deployment wordpress -c=nginx --limits=cpu=1,memory=2Gi"
Create a copy of api-service-pod changing all container images to wordpress,kubectl debug api-service-pod --copy-to=my-debugger --set-image=*=wordpress
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/cache-warming-job -n production
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=5000:8088
Set only the server field on the app-cluster cluster entry without touching other values,kubectl config set-cluster app-cluster --server=https://1.2.3.4
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/parameters/file2.txt
Set deployment web-app-deployment's service account to vault,kubectl set serviceaccount deployment web-app-deployment vault
Get output from running the 'jenkins-plugin-cli' command in cyber-sleuth from pod media-stream-pod,kubectl exec media-stream-pod -c cyber-sleuth -- jenkins-plugin-cli
Get output from running the 'jenkins --version' command in astro-container from pod mypod,kubectl exec mypod -c astro-container -- jenkins --version
"Get output from running the 'mongo' command from pod database-pod, using the first container by default",kubectl exec database-pod -- mongo
Replace a pod based on the JSON passed into stdin,cat settings.json | kubectl replace -f -
"Update pod 'frontend' with the annotation 'description' and the value 'Web server for marketing site', overwriting any existing value",kubectl annotate --overwrite pods frontend description='Web server for marketing site'
Begin streaming the logs of the warp-drive container in pod log-aggregator-pod,kubectl logs -f -c warp-drive log-aggregator-pod
"Create a role named ""foo"" with ResourceName specified",kubectl create role foo --verb=create --resource=pods --resource-name=file-storage --resource-name=document-storage
Import environment from a secret,kubectl set env --from=secret/payment-gateway-secret deployment/notification-handler-deployment
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/properties/file2.txt
Set deployment frontend-deployment's service account to flux,kubectl set serviceaccount deployment frontend-deployment flux
"Listen on port 8080 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8080:8000
Return snapshot of previous terminated rocket-ranger container logs from pod e-commerce-pod,kubectl logs -p -c rocket-ranger e-commerce-pod
"Listen on port 3000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/log-aggregator-pod 3000:9090
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/env-vars deployment/api-server-deployment
Update deployment 'mydeployment' with a new environment variable,kubectl set env deployment/mydeployment PORT=8080
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/log-analysis-job -n kube-ingress
Import environment from a secret,kubectl set env --from=secret/tls-certificate-secret deployment/authentication-service-deployment
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/configurations/file2.txt
Add a taint with key 'special' on nodes having label team=devops,kubectl taint node -l team=devops  special=web-node-8:PreferNoSchedule
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=3001 --target-port=300100
Create a new secret named encryption-key-secret with keys for each file in folder bar,kubectl create secret generic encryption-key-secret --from-file=path/to/profiles
Add a taint with key 'special' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  special=kube-master-9:PreferNoSchedule
Remove from node 'backup-node-14' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes backup-node-14 datacenter:NoExecute-
Create a new ExternalName service named external-database-service,kubectl create service externalname external-database-service --external-name tutorial-ai.ai
Remove from node 'edge-node-10' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes edge-node-10 zone:PreferNoSchedule-
"Listen on port 5000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 5000:9090"
Update pod 'database' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods database env-
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 5000 8081
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-secrets deployment/user-management-deployment
Show metrics for the pods defined by label customer=acme-corp,kubectl top pod -l customer=acme-corp
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/e-commerce-pod
"Create a single ingress called 'www-ingress' that directs requests to website.com/input to svc # svc1:8000 with a tls secret ""my-cert""","kubectl create ingress www-ingress --rule=""website.com/input=svc1:8000,tls=my-cert"""
Add a taint with key 'hardware' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  hardware=app-node-6:PreferNoSchedule
"Scale a resource identified by type and name specified in ""settings.json"" to 5",kubectl scale --replicas=5 -f settings.json
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=moon-cluster
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=7000:8080
"Listen on port 5000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod 5000:3000
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.cloud-context.cluster cloud-cluster
"Get output from running 'mongo' command from the first pod of the service payment-service, using the first container by default",kubectl exec svc/payment-service -- mongo
Update deployment 'user-management-deployment' with a new environment variable,kubectl set env deployment/user-management-deployment REDIS_HOST=redis-server
Add to node 'gpu-node-12' a taint with key 'zone' and no value,kubectl taint nodes gpu-node-12 zone:NoSchedule
Add a taint with key 'zone' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  zone=storage-node-13:PreferNoSchedule
Return snapshot logs from first container of a job named certificates-renewal-job,kubectl logs job/certificates-renewal-job
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/scheduler-service"
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/auth-service-pod
Create a cron job with a command,"kubectl create cronjob backup-job --image=php --schedule=""*/1 * * * *"" --"
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 3000 3000
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/env-vars deployment/search-engine-deployment
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/proxy-service-pod
"Update pod 'chat-app' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods chat-app status=unhealthy
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.team-beta-context.cluster prod-cluster
Create a copy of database-pod changing all container images to busybox,kubectl debug database-pod --copy-to=my-custom-dbg --set-image=*=busybox
Remove from node 'testing-node-11' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes testing-node-11 app:PreferNoSchedule-
Add a taint with key 'disktype' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  disktype=storage-node-13:PreferNoSchedule
Set some of the local shell environment into a deployment config on the server,env | grep RAILS_ | kubectl set env -e - deployment/monitoring-stack-deployment
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/frontend-pod
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""apps"" API group",kubectl get deployments.rc-1.1.0.apps -o json
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 8888,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=8888
Copy :/tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp kubeapps/image-resizer-pod-20::/tmp/foo /etc/kubernetes
"Listen on port 8081 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/database-service 8081:https
"Delete pods and services with same names ""email"" and ""database""","kubectl delete pod,service email database"
Start a nginx pod and let the container expose port 8080,kubectl run hazelcast --image=nginx --port=8080
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir cert-manager/front-end-pod-12::/tmp/bar
Set the resource request and limits for all containers in elasticsearch,"kubectl set resources deployment elasticsearch --limits=cpu=200m,memory=512Mi --requests=cpu=2,memory=256Mi"
Create a job with a command,kubectl create job cleanup --image=php --
Set the resource request and limits for all containers in alpine,"kubectl set resources deployment alpine --limits=cpu=200m,memory=512Mi --requests=cpu=200m,memory=2Gi"
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=certificates.k8s.io
Add a taint with key 'disktype' on nodes having label myLabel,kubectl taint node -l myLabel  disktype=dev-node-4:PreferNoSchedule
Approve CSR 'csr-backend-5',kubectl certificate approve csr-backend-5
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.client-2-context.cluster app-cluster
Begin streaming the logs of the astro-container container in pod monitoring-pod,kubectl logs -f -c astro-container monitoring-pod
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/db-config deployment/monitoring-stack-deployment
Create a job with a command,kubectl create job audit-job --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
Start a confluentinc/cp-kafka pod and let the container expose port 8083,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8083
"Listen on port 8000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/mypod 8000:9090
Add a taint with key 'hardware' on nodes having label role=database,kubectl taint node -l role=database  hardware=monitoring-node-15:PreferNoSchedule
Update deployment 'backend-microservice-deployment' with a new environment variable,kubectl set env deployment/backend-microservice-deployment SMTP_HOST=smtp.example.com
Get output from running the 'node' command in nebula-navigator from pod web-app-pod,kubectl exec web-app-pod -c nebula-navigator -- node
"Listen on port 8081 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8081:3000
Add a taint with key 'workload' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  workload=app-node-6:PreferNoSchedule
Add a taint with key 'dedicated' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  dedicated=gpu-node-12:PreferNoSchedule
"Set a deployments node container cpu limits to ""10"" and memory to ""512Mi""","kubectl set resources deployment node -c=nginx --limits=cpu=10,memory=512Mi"
Rename the context 'cluster-2-context' to 'new-context' in your kubeconfig file,kubectl config rename-context cluster-2-context new-context
Return snapshot logs from container gateway-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/gateway-deployment -c gateway-pod-1
"Update pod 'chat-app' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app git-repo='https://github.com/example/my-app'
Add to node 'dev-node-4' a taint with key 'special' and no value,kubectl taint nodes dev-node-4 special:NoSchedule
Update pod 'monitoring' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods monitoring role-
Start a alpine pod and let the container expose port 8080,kubectl run hazelcast --image=alpine --port=8080
Create a job with a command,kubectl create job audit-job --image=alpine -- sleep 3600
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl exec -n kube-system admin-dashboard-pod-16 -- tar cf - :/tmp/foo | tar xf - -C /tmp/bar
"Listen on a random port locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod :8888
Start a nginx pod and let the container expose port 8000,kubectl run hazelcast --image=nginx --port=8000
"Create a service for a replicated python using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs python --port=3000 --target-port=500000
Return snapshot logs from container load-balancer-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/load-balancer-deployment -c analytics-pod-1
Describe one context in your kubeconfig file,kubectl config get-contexts user-b-context
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/monitoring-service 9090:https
Remove from node 'monitoring-node-15' all the taints with key 'zone',kubectl taint nodes monitoring-node-15 zone-
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""beta-1.0"", ""spec"": { ... } }'"
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/analytics-pod
Create a new ExternalName service named external-database-service,kubectl create service externalname external-database-service --external-name education-edu.edu
"Get output from running the 'bash' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- bash
Create a new ClusterIP service named notification-service-clusterip,kubectl create service clusterip notification-service-clusterip --tcp=9000:8084
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/cdn-service-pod
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""prod-apps"" API group",kubectl get deployments.v1.1.1.prod-apps -o yaml
Update image of all containers of daemonset development to 'ruby:3.0.2',kubectl set image daemonset development *=ruby:3.0.2
Remove from node 'edge-node-10' all the taints with key 'dedicated',kubectl taint nodes edge-node-10 dedicated-
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 9090 3000
Return snapshot of previous terminated mycontainer container logs from pod mypod,kubectl logs -p -c mycontainer mypod
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/proxy-server-pod 9090:8088
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/global-config deployment/load-balancer-deployment
Create a new NodePort service named cdn-service-nodeport,kubectl create service nodeport cdn-service-nodeport --tcp=3306:8089
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""experimental-apps"" API group",kubectl get deployments.v1.1.1.experimental-apps -o yaml
Add a taint with key 'app' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  app=backup-node-14:PreferNoSchedule
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/log-aggregator-pod
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kube-dns/cache-pod-5:/tmp/foo /tmp/bar
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp logging/image-resizer-pod-20:/tmp/foo /tmp/bar_dir
Get the password for the moon-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""moon-cluster"")].user.password}'"
Return snapshot logs from container user-management-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/user-management-deployment -c proxy-server-pod-1
Create a new NodePort service named ingress-controller-nodeport,kubectl create service nodeport ingress-controller-nodeport --tcp=8000:8081
Remove from node 'edge-node-10' all the taints with key 'cpu-type',kubectl taint nodes edge-node-10 cpu-type-
View the details of daemonset revision 3,kubectl rollout history daemonset/namespace-2 --revision=3
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json description='Web server for marketing site'
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/security-service-pod
"Check to see if I can get the job named ""image-processing-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/image-processing-job -n monitoring
"Get output from running 'kafka-topics --list' command from the first pod of the service notification-service, using the first container by default",kubectl exec svc/notification-service -- kafka-topics --list
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""third-party-apps"" API group",kubectl get deployments.legacy-1.0.0.third-party-apps -o json
Create a new ExternalName service named external-third-party-api-service,kubectl create service externalname external-third-party-api-service --external-name bar.com
"Listen on port 5432 locally, forwarding to 8080 in the pod",kubectl port-forward pod/frontend-pod 5432:8080
Delete the context for the cluster-1-context cluster,kubectl config delete-context cluster-1-context
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/frontend-pod
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/backend-pod 8080 8080
"Auto scale a deployment ""frontend"", with the number of pods between 7 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=7 --max=15
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=80 --target-port=800000
Create a deployment named db that runs the amazonlinux image and expose port 8082,kubectl create deployment db --image=amazonlinux --port=8082
"Check to see if I can get the job named ""security-scan-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/security-scan-job -n kube-dns
"Get output from running 'psql' command from the first pod of the deployment email-server-deployment, using the first container by default",kubectl exec deploy/email-server-deployment -- psql
"Create a cluster role named ""custom_role"" with API Group specified","kubectl create clusterrole custom_role --verb=create,list,delete --resource=replicasets.apps"
Update pod 'foo' with the label 'component' and the value 'web',kubectl label pods foo component=web
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=cluster-gamma
Copy :/tmp/foo_dir local directory to /etc/kubernetes_dir in a remote pod in the default namespace,kubectl cp :/tmp/foo_dir worker-pod-4:/etc/kubernetes_dir
Embed certificate authority data for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod cdn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach cdn-service-pod -c nano-bot -i -t
Add a taint with key 'cpu-type' on nodes having label myLabel,kubectl taint node -l myLabel  cpu-type=node-2:PreferNoSchedule
Add a taint with key 'app' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  app=web-node-8:PreferNoSchedule
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/data/file2.txt
"Set a deployments centos container cpu limits to ""500m"" and memory to ""64Mi""","kubectl set resources deployment centos -c=nginx --limits=cpu=500m,memory=64Mi"
Update pod 'web' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods web role-
"Listen on port 6379 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 6379:5432"
Add a taint with key 'hardware' on nodes having label app=web-app,kubectl taint node -l app=web-app  hardware=testing-node-11:PreferNoSchedule
"Get output from running the 'mysqld' command from pod mypod, using the first container by default",kubectl exec mypod -- mysqld
"Set a deployments php container cpu limits to ""10"" and memory to ""128Mi""","kubectl set resources deployment php -c=nginx --limits=cpu=10,memory=128Mi"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/analytics-pod 5000 8081
"Auto scale a replication controller ""api"", with the number of pods between 1 and 5, target CPU utilization at 20%",kubectl autoscale rc api --max=5 --cpu-percent=20
"Create a cluster role binding for jane.doe, bob.smith, and developers using the reader cluster role",kubectl create clusterrolebinding reader --clusterrole=reader --user=jane.doe --user=bob.smith --group=developers
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.edge-context.cluster moon-cluster
Return snapshot logs from container search-engine-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/search-engine-deployment -c proxy-service-pod-1
"Update pod 'monitoring' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring alert-email=alerts@example.com
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/nginx
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp rook-ceph/security-scanner-pod-18::/tmp/foo /tmp/bar
Create a new ClusterIP service named shipping-service-clusterip,kubectl create service clusterip shipping-service-clusterip --tcp=5001:8084
Create a new NodePort service named vpn-service-nodeport,kubectl create service nodeport vpn-service-nodeport --tcp=9092:3000
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/kube-system-config deployment/email-server-deployment
Create a new NodePort service named e-commerce-nodeport,kubectl create service nodeport e-commerce-nodeport --tcp=9091:5000
"Check to see if I can get the job named ""cron-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/cron-job -n logging
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""mobile-apps"" API group",kubectl get deployments.stable-2.0.0.mobile-apps -o json
"Set a deployments python container cpu limits to ""2"" and memory to ""256Mi""","kubectl set resources deployment python -c=nginx --limits=cpu=2,memory=256Mi"
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Create a job with a command,kubectl create job database-seeding-job --image=alpine -- sleep 3600
Get output from lunar-launcher from pod analytics-pod,kubectl attach analytics-pod -c lunar-launcher
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=cluster-alpha
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""extensions"" API group",kubectl get deployments.legacy-1.0.0.extensions -o yaml
Create a cron job with a command,"kubectl create cronjob cron-task --image=jenkins --schedule=""*/1 * * * *"" -- jenkins --version"
Get output from running the 'gem --version' command in warp-drive from pod backend-pod,kubectl exec backend-pod -c warp-drive -- gem --version
Update pod 'auth' with the label 'role' and the value 'frontend',kubectl label pods auth role=frontend
Create a deployment named monitoring that runs the php image with 2 replicas,kubectl create deployment monitoring --image=php --replicas=2
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 6379 5432
"Update pod 'payment' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods payment expiration-date='2024-12-31'
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/monitoring-config deployment/gateway-deployment
Begin streaming the logs of the astro-container container in pod proxy-service-pod,kubectl logs -f -c astro-container proxy-service-pod
"Update pod 'security' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security deployment-script='https://example.com/deploy.sh'
Show all logs from pod media-stream-pod written in the last hour,kubectl logs --since=1h media-stream-pod
Return snapshot of previous terminated mycontainer container logs from pod cdn-service-pod,kubectl logs -p -c mycontainer cdn-service-pod
"Create a job from a cron job named ""backup-job""",kubectl create job test-job --from=cronjob/backup-job
"If the deployment named prod-app-rs's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/prod-app-rs
"Update pod 'web' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods web owner='alice-smith'
"Create a cluster role name ""foo"" with NonResourceURL specified","kubectl create clusterrole ""foo"" --verb=get --non-resource-url=/healthz"
Return snapshot logs from container payment-processor-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/payment-processor-deployment -c proxy-server-pod-1
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/namespace-config deployment/user-management-deployment
Set deployment notification-handler-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment notification-handler-deployment kube-scheduler
Replace a pod using the data in pod.json,kubectl replace -f ./pod.json
"Set only the ""client-key"" field on the ""cloud-user"" # entry, without touching other values",kubectl config set-credentials cloud-user --client-key=~/.kube/admin.key
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 9000,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=9000
"Get output from running 'wp' command from the first pod of the deployment search-engine-deployment, using the first container by default",kubectl exec deploy/search-engine-deployment -- wp
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/user-service"
"Listen on port 8000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8000:8081
"Listen on port 5000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5000:8888
"Listen on port 8080 locally, forwarding to 9090 in the pod",kubectl port-forward pod/web-app-pod 8080:9090
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/gateway-pod
"Create a single ingress called 'app2-ingress' that directs requests to testing.com/example to svc # svc1:8000 with a tls secret ""my-cert""","kubectl create ingress app2-ingress --rule=""testing.com/example=svc1:8000,tls=my-cert"""
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=cluster-alpha
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod chat-app-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=e2e
Create a new secret named api-key-secret from an env file,kubectl create secret generic api-key-secret --from-env-file=path/to/data.env
Start a alpine pod and let the container expose port 5001,kubectl run hazelcast --image=alpine --port=5001
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""apps"" API group",kubectl get deployments.alpha-2.0.apps -o json
Create a new LoadBalancer service named my-lbs,kubectl create service loadbalancer my-lbs --tcp=9090:3306
Update pod 'vpn' with the label 'tier' and the value 'backend',kubectl label pods vpn tier=backend
Remove from node 'app-node-6' all the taints with key 'environment',kubectl taint nodes app-node-6 environment-
Add a taint with key 'hardware' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  hardware=prod-node-5:PreferNoSchedule
Create a new ClusterIP service named my-cs (in headless mode),"kubectl create service clusterip my-cs --clusterip=""None"""
Create a new config map named db-config from the key=value pairs in the file,kubectl create configmap db-config --from-file=path/to/configs
Return snapshot of previous terminated nano-bot container logs from pod vpn-service-pod,kubectl logs -p -c nano-bot vpn-service-pod
Add to node 'web-node-8' a taint with key 'environment' and no value,kubectl taint nodes web-node-8 environment:NoSchedule
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp logging/file-server-pod-14:/tmp/foo /tmp/bar_dir
Rename the context 'cluster-1-context' to 'user-a-context' in your kubeconfig file,kubectl config rename-context cluster-1-context user-a-context
Rename the context 'on-prem-context' to 'team-beta-context' in your kubeconfig file,kubectl config rename-context on-prem-context team-beta-context
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=5432 --target-port=808000
Update deployment 'authentication-service-deployment' with a new environment variable,kubectl set env deployment/authentication-service-deployment ENV=prod
Start a postgres pod,kubectl run nginx --image=postgres
"Listen on port 8888 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8888:5000"
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name sample-domain.net
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 3000 5000
Create a new ExternalName service named external-database-service,kubectl create service externalname external-database-service --external-name document-company.com
"Set a deployments ruby container cpu limits to ""500m"" and memory to ""4Gi""","kubectl set resources deployment ruby -c=nginx --limits=cpu=500m,memory=4Gi"
"Listen on port 6379 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 6379:8888
"Start a nginx pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=nginx --restart=Never
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/monitoring-config deployment/scheduler-app-deployment
Update pod 'database' with the label 'tier' and the value 'backend',kubectl label pods database tier=backend
Diff file read from stdin,cat preferences.yaml | kubectl diff -f -
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.cloud-context.cluster staging-cluster
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/proxy-server-pod 8088:9090
Add a taint with key 'special' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  special=dev-node-4:PreferNoSchedule
Update image of all containers of daemonset namespace- to 'mongo:5.0.2',kubectl set image daemonset namespace-3 *=mongo:5.0.2
Remove from node 'monitoring-node-15' all the taints with key 'dedicated',kubectl taint nodes monitoring-node-15 dedicated-
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/security-service-pod 3000:5432
"Update pod 'vpn' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods vpn backup-strategy='daily-backups'
Build from github,kubectl kustomize https://github.com/kubernetes-sigs/kustomize.git/examples/helloWorld?ref=v1.0.6
"Update pod 'gateway' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway description='Web server for marketing site'
List all services in ps output format with more information (such as node name),kubectl get services -o wide
"Listen on port 8088 locally, forwarding to 6379 in the pod",kubectl port-forward pod/api-service-pod 8088:6379
Import environment from a secret,kubectl set env --from=secret/monitoring-credentials-secret deployment/api-server-deployment
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=settings=/path/to/preferences/file1.txt --from-file=key2=/path/to/preferences/file2.txt
Get output from nebula-navigator from pod backend-pod,kubectl attach backend-pod -c nebula-navigator
Create a copy of e-commerce-pod changing all container images to node,kubectl debug e-commerce-pod --copy-to=debug-image-app --set-image=*=node
"Get output from running 'bash' command from the first pod of the service monitoring-service, using the first container by default",kubectl exec svc/monitoring-service -- bash
Create a new secret named git-credentials-secret with keys for each file in folder bar,kubectl create secret generic git-credentials-secret --from-file=path/to/preferences
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node backup-node-14 -p '{""spec"":{""type"":""LoadBalancer""}'"
Return snapshot logs from container user-management-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/user-management-deployment -c frontend-pod-1
Add to node 'backup-node-14' a taint with key 'special' and no value,kubectl taint nodes backup-node-14 special:NoSchedule
"Get output from running the 'go run hello.go' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- go run hello.go
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.metadata.annotations
Start a hazelcast pod and let the container expose port 9000,kubectl run hazelcast --image=hazelcast/hazelcast --port=9000
"Create a single ingress called 'app1-ingress' that directs requests to foo.com/module to svc # svc1:5000 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""foo.com/module=svc1:5000,tls=my-cert"""
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/env-vars deployment/user-management-deployment
Import environment from a secret,kubectl set env --from=secret/azure-storage-secret deployment/proxy-service-deployment
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube prometheus/logging-agent-pod-7:/tmp/bar
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/cdn-service-pod
"Listen on port 9090 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 9090:3000
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""api-v2"" API group",kubectl get deployments.v1.1.1.api-v2 -o json
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=5001:9000
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8088 8888
Remove from node 'testing-node-11' all the taints with key 'zone',kubectl taint nodes testing-node-11 zone-
Create a new config map named app-config based on folder configurations,kubectl create configmap app-config --from-file=path/to/configurations
"Listen on port 9090 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 9090:8888
Add a taint with key 'hardware' on nodes having label team=devops,kubectl taint node -l team=devops  hardware=worker-node-3:PreferNoSchedule
Set the resource request and limits for all containers in golang,"kubectl set resources deployment golang --limits=cpu=200m,memory=512Mi --requests=cpu=3,memory=128Mi"
Return snapshot logs from container mydeployment-1 of a deployment named api-service-pod,kubectl logs deployment/mydeployment -c api-service-pod-1
"Create a service for a pod database-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod database-pod --port=6379 --name=frontend
"Update pod 'log-aggregator' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods log-aggregator app-version='2.5.1'
"Delete pods and services with same names ""foo"" and ""cdn""","kubectl delete pod,service foo cdn"
Get output from running the 'postgres' command in nano-bot from pod vpn-service-pod,kubectl exec vpn-service-pod -c nano-bot -- postgres
Add a taint with key 'hardware' on nodes having label role=database,kubectl taint node -l role=database  hardware=kube-master-9:PreferNoSchedule
Create a cron job with a command,"kubectl create cronjob metrics-collection --image=mysql --schedule=""*/1 * * * *"" -- mysqld"
Get output from running the 'dotnet --list-sdks' command in code-explorer from pod monitoring-pod,kubectl exec monitoring-pod -c code-explorer -- dotnet --list-sdks
"Listen on port 8081 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8081:5000
"Listen on port 8080 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/gateway-service 8080:https
Add a taint with key 'hardware' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  hardware=node-1:PreferNoSchedule
Get output from astro-container from pod proxy-server-pod,kubectl attach proxy-server-pod -c astro-container
Display only the most recent 23 lines of output in pod gateway-pod,kubectl logs --tail=23 gateway-pod
"If the deployment named app-v2-replicaset's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/app-v2-replicaset
"Listen on port 9090 locally, forwarding to 3000 in the pod",kubectl port-forward pod/analytics-pod 9090:3000
"Create a service for a replicated alpine using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs alpine --port=80 --target-port=888800
Approve CSR 'csr-worker-3',kubectl certificate approve csr-worker-3
"Listen on port 8088 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8088:8088"
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=data-cluster
Create a copy of payment-gateway-pod changing all container images to python,kubectl debug payment-gateway-pod --copy-to=debug-image-api --set-image=*=python
Get output from quantum-quark from pod proxy-service-pod,kubectl attach proxy-service-pod -c quantum-quark
Add a taint with key 'datacenter' on nodes having label myLabel,kubectl taint node -l myLabel  datacenter=worker-node-3:PreferNoSchedule
Update pod 'email' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods email env-
"Update pod 'backend' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods backend env='staging'
Create a new NodePort service named api-service-nodeport,kubectl create service nodeport api-service-nodeport --tcp=8083:8010
Create a job with a command,kubectl create job backup --image=python -- python --version
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/db-config deployment/scheduler-app-deployment
Create a new ExternalName service named external-payment-gateway-service,kubectl create service externalname external-payment-gateway-service --external-name example-domain.com
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/analytics-pod
Create a deployment named auth that runs the python image and expose port 8089,kubectl create deployment auth --image=python --port=8089
List resource information in custom columns,"kubectl get pod auth-service-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Use the context for the cloud-cluster cluster,kubectl config use-context cloud-cluster
Create a new LoadBalancer service named frontend-lb,kubectl create service loadbalancer frontend-lb --tcp=8081:8888
"Listen on port 5432 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5432:5432
"Update pod 'media-stream' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream contact-email=support@example.com
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/mypod :8080
"Set a deployments elasticsearch container cpu limits to ""500m"" and memory to ""128Mi""","kubectl set resources deployment elasticsearch -c=nginx --limits=cpu=500m,memory=128Mi"
"Update pod 'database' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods database security-scan-status='pass'
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 6379 8088
Copy :/tmp/foo local file to :/tmp/bar in a remote pod in namespace,kubectl cp :/tmp/foo logging/file-server-pod-14::/tmp/bar
Update pod 'payment' with the label 'component' and the value 'api',kubectl label pods payment component=api
Return snapshot of previous terminated stardust-shuttle container logs from pod proxy-service-pod,kubectl logs -p -c stardust-shuttle proxy-service-pod
Get the password for the data-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""data-cluster"")].user.password}'"
Get output from running the 'bash' command in rocket-ranger from pod vpn-service-pod,kubectl exec vpn-service-pod -c rocket-ranger -- bash
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""api-v1"" API group",kubectl get deployments.v1.1.0.api-v1 -o json
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named mypod,kubectl logs deployment/analytics-platform-deployment -c mypod-1
Begin streaming the logs of the code-explorer container in pod auth-service-pod,kubectl logs -f -c code-explorer auth-service-pod
"Listen on port 3000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 3000:5000
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node worker-node-3 -p $'spec:\n replicas: 3'
"If the deployment named webapp-replicaset's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/webapp-replicaset
Describe pods by label project=project-alpha,kubectl describe po -l project=project-alpha
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.testing-context.cluster testing-cluster
Return snapshot of previous terminated ruby container logs from pod backend-pod,kubectl logs -p -c ruby backend-pod
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=8888 --target-port=844300
"Update pod 'analytics' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics env=staging
"Update pod 'vpn' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn SLA='99.9% uptime'
Create a job with a command,kubectl create job testing --image=wordpress -- mysql --version
"Set a deployments elasticsearch container cpu limits to ""50m"" and memory to ""256Mi""","kubectl set resources deployment elasticsearch -c=nginx --limits=cpu=50m,memory=256Mi"
"Delete pods and services with same names ""api"" and ""media-stream""","kubectl delete pod,service api media-stream"
Create a new secret named database-secret from an env file,kubectl create secret generic database-secret --from-env-file=path/to/data.env
"Listen on port 8888 locally, forwarding to 6379 in the pod",kubectl port-forward pod/e-commerce-pod 8888:6379
Describe a node,kubectl describe nodes worker-node-1.k8s-cluster.local
"Define new exec auth plugin args for the ""jane.smith"" entry",kubectl config set-credentials jane.smith --exec-arg=arg1 --exec-arg=arg2
Create a new namespace named logging,kubectl create namespace logging
Create an ingress with TLS enabled using the default ingress certificate and different path types,"kubectl create ingress ingtls --class=default \
--rule=""testing.com/=svc:https,tls"" \
--rule=""website.com/path/subpath*=othersvc:8084"""
Get output from running the 'java -jar /usr/share/jenkins/jenkins.war' command in quantum-quark from pod backend-pod,kubectl exec backend-pod -c quantum-quark -- java -jar /usr/share/jenkins/jenkins.war
Update deployment 'api-server-deployment' with a new environment variable,kubectl set env deployment/api-server-deployment CACHE_SIZE=64MB
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 6379 6379
Create a new resource quota named secret-quota,kubectl create quota secret-quota --hard=secrets=10
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/kube-system-config deployment/payment-processor-deployment
Return snapshot logs from container database-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/database-deployment -c security-service-pod-1
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/log-analysis-job -n kube-public
"Listen on port 9090 locally, forwarding to 3000 in the pod",kubectl port-forward pod/web-app-pod 9090:3000
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/global-config deployment/notification-handler-deployment
"Mark node ""k8s-node-1"" as schedulable",kubectl uncordon k8s-node-1
Set deployment authentication-service-deployment's service account to spinnaker,kubectl set serviceaccount deployment authentication-service-deployment spinnaker
Set deployment mydeployment's service account to prometheus,kubectl set serviceaccount deployment mydeployment prometheus
"Listen on port 8080 locally, forwarding to 5000 in the pod",kubectl port-forward pod/frontend-pod 8080:5000
Remove from node 'db-node-7' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes db-node-7 workload:NoSchedule-
Create a deployment with a command,kubectl create deployment auth --image=ubuntu -- docker run -it ubuntu
Add to node 'web-node-8' a taint with key 'hardware' and no value,kubectl taint nodes web-node-8 hardware:NoSchedule
"Delete pods and services with same names ""auth"" and ""database""","kubectl delete pod,service auth database"
Get output from running the 'node --version' command in code-explorer from pod chat-app-pod,kubectl exec chat-app-pod -c code-explorer -- node --version
Embed certificate authority data for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
Create a copy of web-app-pod changing all container images to alpine,kubectl debug web-app-pod --copy-to=debug-image-app --set-image=*=alpine
"Listen on port 5000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5000:5000
Set deployment frontend-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment frontend-deployment kube-scheduler
Remove from node 'kube-master-9' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes kube-master-9 hardware:NoExecute-
Create a job with a command,kubectl create job indexing --image=ethereum/client-go -- geth
"Delete pods and services with same names ""email"" and ""foo""","kubectl delete pod,service email foo"
Create a new config map named namespace-config with key1=config1 and key2=config2,kubectl create configmap namespace-config --from-literal=settings=config1 --from-literal=key2=config2
Create a deployment with a command,kubectl create deployment drupal --image=golang -- go
Import environment from a secret,kubectl set env --from=secret/cert-manager-secret deployment/api-server-deployment
Create a job with a command,kubectl create job report-generation-job --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
Get output from quantum-quark from pod mypod,kubectl attach mypod -c quantum-quark
"Create a service for a replicated hazelcast, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc hazelcast --port=8000 --target-port=808900
Return snapshot logs from container authentication-service-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/authentication-service-deployment -c analytics-pod-1
Set deployment log-aggregator-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment log-aggregator-deployment kube-scheduler
Start a hazelcast pod,kubectl run nginx --image=hazelcast/hazelcast
Embed certificate authority data for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --embed-certs --certificate-authority=~/.kube/testing-cluster/kubernetes.ca.crt
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/analytics-pod 3000:8081
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=6379:8088
Copy ~/.config/kube from a remote pod to /etc/kubernetes locally,kubectl cp argocd/load-balancer-pod-9:~/.config/kube /etc/kubernetes
"Listen on port 8081 locally, forwarding to 8888 in the pod",kubectl port-forward pod/log-aggregator-pod 8081:8888
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/cache-cluster-deployment -c monitoring-pod-1
Import environment from a secret,kubectl set env --from=secret/aws-credentials-secret deployment/email-server-deployment
"Listen on port 6379 locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod 6379:8088
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=properties=/path/to/configurations/file1.txt --from-file=key1=/path/to/configs/file2.txt
Embed certificate authority data for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
Remove from node 'kube-master-9' all the taints with key 'disktype',kubectl taint nodes kube-master-9 disktype-
Return snapshot of previous terminated warp-drive container logs from pod api-service-pod,kubectl logs -p -c warp-drive api-service-pod
Create a new config map named app-config from the key=value pairs in the file,kubectl create configmap app-config --from-file=path/to/data
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 8088 5432
Add a taint with key 'special' on nodes having label myLabel,kubectl taint node -l myLabel  special=dev-node-4:PreferNoSchedule
"Listen on port 6379 locally, forwarding to 8080 in the pod",kubectl port-forward pod/api-service-pod 6379:8080
"Update node 'testing-node-11' with a taint with key 'workload' and value 'high-priority' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes testing-node-11 workload=high-priority:NoSchedule
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=properties=/path/to/settings/file1.txt --from-file=key1=/path/to/configs/file2.txt
"Listen on port 3000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 3000:9090"
Create a copy of auth-service-pod adding a debug container and changing container images,"kubectl debug auth-service-pod -it --copy-to=dgb-img --image=debian --set-image=mailer=mailer:latest,app=app:debug"
Return snapshot logs from container order-processing-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/order-processing-deployment -c payment-gateway-pod-1
"Set a deployments runtime container cpu limits to ""5"" and memory to ""2Gi""","kubectl set resources deployment runtime -c=nginx --limits=cpu=5,memory=2Gi"
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/properties/file2.txt
"Update pod 'api' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods api backup-strategy='daily-backups'
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 5001,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=5001
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 8083,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=8083
Start a hazelcast pod and let the container expose port 8000,kubectl run hazelcast --image=hazelcast/hazelcast --port=8000
Get output from running the 'elasticsearch' command in quantum-quark from pod e-commerce-pod,kubectl exec e-commerce-pod -c quantum-quark -- elasticsearch
Update pod 'vpn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods vpn env-
Restart a daemon set,kubectl rollout restart daemonset/services
"Scale a resource identified by type and name specified in ""params.json"" to 5",kubectl scale --replicas=5 -f params.json
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/global-config deployment/database-deployment
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/python
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/backend-pod 8088:5432
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-name-config deployment/analytics-platform-deployment
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/monitoring-config deployment/monitoring-stack-deployment
Update pod 'log-aggregator' only if the resource is unchanged from version 1,kubectl annotate pods log-aggregator description='my frontend running nginx' --resource-version=1
"Update pod 'frontend' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend owner='alice smith'
Add a taint with key 'zone' on nodes having label team=devops,kubectl taint node -l team=devops  zone=kube-master-9:PreferNoSchedule
"Get output from running 'wp' command from the first pod of the deployment notification-handler-deployment, using the first container by default",kubectl exec deploy/notification-handler-deployment -- wp
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/parameters/file2.txt
Get output from lunar-launcher from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c lunar-launcher
Create a cron job with a command,"kubectl create cronjob monthly-audit --image=python --schedule=""*/1 * * * *"" -- python"
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8088 8888
"Update pod 'vpn' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods vpn app-version='2.5.1'
Set deployment order-processing-deployment's service account to metrics-server,kubectl set serviceaccount deployment order-processing-deployment metrics-server
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=staging-cluster
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod 8888:8888
"Auto scale a deployment ""backend"", with the number of pods between 4 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment backend --min=4 --max=13
Embed certificate authority data for the app-cluster cluster entry,kubectl config set-cluster app-cluster --embed-certs --certificate-authority=~/.kube/prod-cluster/kubernetes.ca.crt
"Listen on port 8080 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8080:8000
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=8088:8080
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8888 8888
Remove from node 'db-node-7' all the taints with key 'environment',kubectl taint nodes db-node-7 environment-
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8081 8081
Get output from running the 'pip --version' command in nebula-navigator from pod web-app-pod,kubectl exec web-app-pod -c nebula-navigator -- pip --version
Update deployment 'notification-handler-deployment' with a new environment variable,kubectl set env deployment/notification-handler-deployment SMTP_USERNAME=your-username
"Listen on port 8000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8000:8088
"Listen on port 3000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/security-service-pod 3000:8888
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 5432 8888
Get output from running the 'geth' command in quantum-quark from pod vpn-service-pod,kubectl exec vpn-service-pod -c quantum-quark -- geth
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node node-2 -p '{""spec"":{""replicas"":3}'"
"Delete pods and services with same names ""auth"" and ""auth""","kubectl delete pod,service auth auth"
Remove from node 'app-node-6' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes app-node-6 zone:PreferNoSchedule-
Set deployment user-management-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment user-management-deployment kube-scheduler
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/app-config deployment/proxy-service-deployment
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 6379 8888
Embed certificate authority data for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --embed-certs --certificate-authority=~/.kube/prod-cluster/kubernetes.ca.crt
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/mypod 8888:8000
Return snapshot of previous terminated rocket-ranger container logs from pod media-stream-pod,kubectl logs -p -c rocket-ranger media-stream-pod
"Check to see if I can get the job named ""load-testing-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/load-testing-job -n kube-ingress
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=app-cluster
"Update pod 'media-stream' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream SLA='99.9% uptime'
Return snapshot of previous terminated nebula-navigator container logs from pod proxy-service-pod,kubectl logs -p -c nebula-navigator proxy-service-pod
Set deployment database-deployment's service account to my-service-account,kubectl set serviceaccount deployment database-deployment my-service-account
Create a deployment named sonarqube that runs the jenkins image and expose port 9092,kubectl create deployment sonarqube --image=jenkins --port=9092
Set the resource request and limits for all containers in golang,"kubectl set resources deployment golang --limits=cpu=200m,memory=512Mi --requests=cpu=2,memory=128Mi"
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/security-service-pod :5000
Return snapshot of previous terminated mycontainer container logs from pod database-pod,kubectl logs -p -c mycontainer database-pod
Begin streaming the logs of the mycontainer container in pod proxy-service-pod,kubectl logs -f -c mycontainer proxy-service-pod
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.beta-1.0.sandbox-apps -o json
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.dev-2.2.0.sandbox-apps -o yaml
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node edge-node-10 -p '{""data"":{""key"":""new-value""}'"
Create a copy of e-commerce-pod adding a debug container and changing container images,"kubectl debug e-commerce-pod -it --copy-to=debug-image-api --image=debian --set-image=proxy=nginx:1.21,api=api:v2"
"Listen on port 5432 locally, forwarding to 8888 in the pod",kubectl port-forward pod/api-service-pod 5432:8888
Start a python pod and let the container expose port 8083,kubectl run hazelcast --image=python --port=8083
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8088 --target-port=909100
Display only the most recent 3 lines of output in pod email-service-pod,kubectl logs --tail=3 email-service-pod
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/e-commerce-pod 8088:8088
"Update pod 'email' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email last-deployment=2023-03-15
"Scale a resource identified by type and name specified in ""docker-registry.yaml"" to 1",kubectl scale --replicas=1 -f docker-registry.yaml
Update pod 'chat-app' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods chat-app tier-
"Update pod 'backend' with the annotation 'contact-email' and the value 'support@example.com', overwriting any existing value",kubectl annotate --overwrite pods backend contact-email='support@example.com'
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/data-synchronization-job -n default
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json monitoring-tool=Prometheus
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/web-service"
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod 8888:3000
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=e2e
Create a copy of monitoring-pod changing all container images to node,kubectl debug monitoring-pod --copy-to=my-custom-dbg --set-image=*=node
Start a ubuntu pod and let the container expose port 8089,kubectl run hazelcast --image=ubuntu --port=8089
Create a copy of monitoring-pod adding a debug container and changing container images,"kubectl debug monitoring-pod -it --copy-to=debug-image-1 --image=debian --set-image=app=app:debug,worker=my-custom-worker:1.2.3"
Remove from node 'worker-node-3' all the taints with key 'environment',kubectl taint nodes worker-node-3 environment-
Get output from running the 'sleep 3600' command in warp-drive from pod media-stream-pod,kubectl exec media-stream-pod -c warp-drive -- sleep 3600
Add a taint with key 'workload' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  workload=edge-node-10:PreferNoSchedule
Remove from node 'testing-node-11' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes testing-node-11 special:NoSchedule-
Create a new secret named cert-manager-secret with keys for each file in folder bar,kubectl create secret generic cert-manager-secret --from-file=path/to/configurations
Roll back to daemonset revision 5,kubectl rollout undo daemonset/namespace-1 --to-revision=5
Update pod 'proxy-server' with the label 'unhealthy' and the value 'true',kubectl label pods proxy-server unhealthy=true
"Start a centos pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=centos --overrides='{ ""apiVersion"": ""alpha-2.0"", ""spec"": { ... } }'"
Get output from cyber-sleuth from pod media-stream-pod,kubectl attach media-stream-pod -c cyber-sleuth
"Get output from running the 'postgres' command from pod api-service-pod, using the first container by default",kubectl exec api-service-pod -- postgres
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.service-account-context.cluster on-prem-cluster
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/user-management-deployment SECRET_KEY=your-secret-key -o yaml
Get output from code-explorer from pod web-app-pod,kubectl attach web-app-pod -c code-explorer
Create a deployment named drupal that runs the nginx image and expose port 8443,kubectl create deployment drupal --image=nginx --port=8443
Create a priority class named high-priority,"kubectl create priorityclass high-priority --value=1000 --description=""Top priority, critical workloads"""
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp openfaas/load-balancer-pod-9:/tmp/foo_dir :/tmp/bar
Set deployment proxy-service-deployment's service account to spinnaker,kubectl set serviceaccount deployment proxy-service-deployment spinnaker
Get output from running the 'geth attach' command in rocket-ranger from pod media-stream-pod,kubectl exec media-stream-pod -c rocket-ranger -- geth attach
Set deployment web-app-deployment's service account to jenkins,kubectl set serviceaccount deployment web-app-deployment jenkins
Return snapshot of previous terminated nano-bot container logs from pod proxy-service-pod,kubectl logs -p -c nano-bot proxy-service-pod
"Auto scale a deployment ""payment"", with the number of pods between 2 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment payment --min=2 --max=12
View the details of daemonset revision 1,kubectl rollout history daemonset/staging --revision=1
"Listen on port 8000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/security-service-pod 8000:8888
Begin streaming the logs of the code-explorer container in pod vpn-service-pod,kubectl logs -f -c code-explorer vpn-service-pod
Get output from running the 'mysql --version' command in mycontainer from pod database-pod,kubectl exec database-pod -c mycontainer -- mysql --version
Get output from running the 'dotnet --list-runtimes' command in time-machine from pod gateway-pod,kubectl exec gateway-pod -c time-machine -- dotnet --list-runtimes
Update all deployments' and rc's nginx container's image to 'golang:1.17',"kubectl set image deployments,rc golang=golang:1.17 --all"
View the details of daemonset revision 3,kubectl rollout history daemonset/my-deployment --revision=3
Return snapshot logs from container frontend-deployment-1 of a deployment named database-pod,kubectl logs deployment/frontend-deployment -c database-pod-1
Copy ~/.config/kube local file to :/tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube argocd/monitoring-agent-pod-6::/tmp/bar
Create a copy of e-commerce-pod changing all container images to node,kubectl debug e-commerce-pod --copy-to=debug-image-web --set-image=*=node
Get output from running the 'php --version' command in warp-drive from pod e-commerce-pod,kubectl exec e-commerce-pod -c warp-drive -- php --version
Create a copy of api-service-pod changing all container images to nginx,kubectl debug api-service-pod --copy-to=debug-image-api --set-image=*=nginx
Show all logs from pod backend-pod written in the last hour,kubectl logs --since=1h backend-pod
"Update pod 'analytics' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods analytics security-scan-status='pass'
Copy ~/.config/kube local file to :/tmp/bar in a remote pod in a specific container,kubectl cp ~/.config/kube cache-pod-5::/tmp/bar -c image-resizer
Get output from running the 'elasticsearch --version' command in rocket-ranger from pod analytics-pod,kubectl exec analytics-pod -c rocket-ranger -- elasticsearch --version
"Get output from running 'wp' command from the first pod of the service cache-service, using the first container by default",kubectl exec svc/cache-service -- wp
Create a job with a command,kubectl create job audit-job --image=wordpress -- apache2ctl -D FOREGROUND
Import environment from a secret,kubectl set env --from=secret/git-credentials-secret deployment/authentication-service-deployment
"Create a service for a replicated hazelcast, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc hazelcast --port=7000 --target-port=818100
Add a taint with key 'workload' on nodes having label myLabel,kubectl taint node -l myLabel  workload=storage-node-13:PreferNoSchedule
Copy ~/.config/kube local file to /etc/kubernetes in a remote pod in a specific container,kubectl cp ~/.config/kube file-server-pod-14:/etc/kubernetes -c file-server
"Listen on port 9090 locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod 9090:8888
Get output from running the 'redis-cli' command in cyber-sleuth from pod api-service-pod,kubectl exec api-service-pod -c cyber-sleuth -- redis-cli
"Update pod 'frontend' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods frontend app-version='2.5.1'
Describe pods by label app=web-app,kubectl describe po -l app=web-app
Start a ubuntu pod and let the container expose port 9090,kubectl run hazelcast --image=ubuntu --port=9090
Begin streaming the logs of the mycontainer container in pod chat-app-pod,kubectl logs -f -c mycontainer chat-app-pod
"Delete pods and services with same names ""monitoring"" and ""log-aggregator""","kubectl delete pod,service monitoring log-aggregator"
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.dev-context.cluster web-cluster
"Run a proxy to the Kubernetes API server on port 8181, serving static content from ./local/www/",kubectl proxy --port=8181 --www=./local/www/
Get output from running the 'python' command in code-explorer from pod monitoring-pod,kubectl exec monitoring-pod -c code-explorer -- python
"Listen on port 3000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 3000:3000
Return snapshot logs from container proxy-service-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/proxy-service-deployment -c log-aggregator-pod-1
Update pod 'email' with the label 'env' and the value 'production',kubectl label pods email env=production
Get output from running pod frontend-pod; use the 'kubectl.kubernetes.io/default-container' annotation # for selecting the container to be attached or the first container in the pod will be chosen,kubectl attach frontend-pod
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/chat-app-pod 8080:8888
Get output from running the 'docker run -it ubuntu' command in quantum-quark from pod api-service-pod,kubectl exec api-service-pod -c quantum-quark -- docker run -it ubuntu
"If the deployment named db-migration-replicaset's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/db-migration-replicaset
Return snapshot of previous terminated nano-bot container logs from pod cdn-service-pod,kubectl logs -p -c nano-bot cdn-service-pod
Start a amazonlinux pod and let the container expose port 3001,kubectl run hazelcast --image=amazonlinux --port=3001
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 3000 5000
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json release-notes='https://example.com/release-notes/v2.5.1'
Delete pods and services with label app=web-app,"kubectl delete pods,services -l app=web-app"
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/chat-app-pod 8080:8081
"Auto scale a deployment ""proxy-server"", with the number of pods between 2 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy-server --min=2 --max=11
"Create a second service based on the above service, exposing the container port 8443 as port 443 with the name ""ubuntu-https""",kubectl expose service ubuntu --port=443 --target-port=8089 --name=nginx-https
Set deployment web-app-deployment's service account to argocd,kubectl set serviceaccount deployment web-app-deployment argocd
Set deployment analytics-platform-deployment's service account to fluentd,kubectl set serviceaccount deployment analytics-platform-deployment fluentd
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=9091 --target-port=808300
Create a job with a command,kubectl create job scaling-job --image=amazonlinux -- bash
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.cluster-1-context.cluster cluster-gamma
"Embed client certificate data in the ""cloud-user"" entry",kubectl config set-credentials cloud-user --client-certificate=~/.kube/admin.crt --embed-certs=true
Dump a set of namespaces to /tmp/foo_dir,"kubectl cluster-info dump --namespaces default,kube-system --output-directory=/tmp/foo_dir"
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-config-dev deployment/load-balancer-deployment
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""system"" entry",kubectl config set-credentials system --auth-provider=oidc --auth-provider-arg=client-secret-
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-settings deployment/mydeployment
Create a copy of backend-pod changing all container images to jenkins,kubectl debug backend-pod --copy-to=debug-image-api --set-image=*=jenkins
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8000 5000
"Check to see if I can get the job named ""content-import-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/content-import-job -n kube-system
Start a ruby pod and let the container expose port 9090,kubectl run hazelcast --image=ruby --port=9090
Set deployment search-engine-deployment's service account to tiller,kubectl set serviceaccount deployment search-engine-deployment tiller
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/api-config deployment/web-app-deployment
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod 3000:6379
Create a new secret named cert-manager-secret from an env file,kubectl create secret generic cert-manager-secret --from-env-file=path/to/configs.env
"If the deployment named staging-app-rs's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/staging-app-rs
Get output from running the 'node' command in code-explorer from pod monitoring-pod,kubectl exec monitoring-pod -c code-explorer -- node
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-config deployment/api-server-deployment
View the details of daemonset revision 7,kubectl rollout history daemonset/services --revision=7
Create a cron job with a command,"kubectl create cronjob weekly-summary --image=mcr.microsoft.com/dotnet/core/runtime --schedule=""*/1 * * * *"" -- dotnet"
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
Update deployment 'monitoring-stack-deployment' with a new environment variable,kubectl set env deployment/monitoring-stack-deployment ENV=prod
Add a taint with key 'hardware' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  hardware=testing-node-11:PreferNoSchedule
Add a taint with key 'dedicated' on nodes having label service=auth,kubectl taint node -l service=auth  dedicated=node-2:PreferNoSchedule
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/api-service-pod 9090 9090
"Listen on port 8000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/analytics-pod 8000:3000
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8080 8080
Get output from running the 'redis-server' command in astro-container from pod auth-service-pod,kubectl exec auth-service-pod -c astro-container -- redis-server
Import environment from a secret,kubectl set env --from=secret/azure-storage-secret deployment/search-engine-deployment
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f kubelet-config.yaml -p '{""spec"":{""someField"":""newValue""}'"
"Get output from running the 'pip --version' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- pip --version
"Create a job from a cron job named ""monthly-audit""",kubectl create job test-job --from=cronjob/monthly-audit
Delete the context for the on-prem-context cluster,kubectl config delete-context on-prem-context
Begin streaming the logs of the ruby container in pod database-pod,kubectl logs -f -c ruby database-pod
"Listen on port 5000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 5000:5000"
Get output from running the 'mysql' command in lunar-launcher from pod proxy-server-pod,kubectl exec proxy-server-pod -c lunar-launcher -- mysql
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/log-aggregator-pod 8080:8081
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/backend-pod 8000 5000
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/docker-registry"
Remove from node 'edge-node-10' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes edge-node-10 app:PreferNoSchedule-
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=kube-cluster-2
Rename the context 'local-context' to 'app-2-context' in your kubeconfig file,kubectl config rename-context local-context app-2-context
Replace a pod using the data in conf.json,kubectl replace -f ./conf.json
"Listen on port 8888 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8888:9090
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=8082 --target-port=844300
Get output from running the 'pip --version' command in warp-drive from pod cdn-service-pod,kubectl exec cdn-service-pod -c warp-drive -- pip --version
Get output from running the 'elasticsearch --version' command in time-machine from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c time-machine -- elasticsearch --version
Return snapshot of previous terminated lunar-launcher container logs from pod mypod,kubectl logs -p -c lunar-launcher mypod
"If the deployment named dev-environment-rs's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/dev-environment-rs
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/ui-config deployment/backend-microservice-deployment
"Get output from running 'go version' command from the first pod of the service analytics-service, using the first container by default",kubectl exec svc/analytics-service -- go version
Get output from mycontainer from pod security-service-pod,kubectl attach security-service-pod -c mycontainer
Create a new secret named git-credentials-secret from an env file,kubectl create secret generic git-credentials-secret --from-env-file=path/to/properties.env
Set deployment order-processing-deployment's service account to elasticsearch,kubectl set serviceaccount deployment order-processing-deployment elasticsearch
Get output from running the 'mysqld' command in nebula-navigator from pod frontend-pod,kubectl exec frontend-pod -c nebula-navigator -- mysqld
Create a new config map named global-config based on folder configurations,kubectl create configmap global-config --from-file=path/to/configurations
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8080 6379
Update pod 'media-stream' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods media-stream env-
Get output from running the 'bash' command in nano-bot from pod web-app-pod,kubectl exec web-app-pod -c nano-bot -- bash
"Get output from running the 'python' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- python
Create a copy of backend-pod changing all container images to amazonlinux,kubectl debug backend-pod --copy-to=debug-image-1 --set-image=*=amazonlinux
Create a copy of database-pod changing the command of mycontainer,kubectl debug database-pod -it --copy-to=dgb-img --container=mycontainer -- sh
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/order-processing-deployment S3_BUCKET=my-s3-bucket -o yaml
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.alpha-2.0.sandbox-apps -o yaml
Remove from node 'web-node-8' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes web-node-8 dedicated:NoSchedule-
Create a copy of cdn-service-pod changing all container images to node,kubectl debug cdn-service-pod --copy-to=my-custom-dbg --set-image=*=node
"Listen on port 5000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5000:8081
Set deployment proxy-service-deployment's service account to istio,kubectl set serviceaccount deployment proxy-service-deployment istio
"Get output from running the 'geth attach' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- geth attach
"Get output from running the 'nginx' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- nginx
"Listen on port 8081 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8081:8080
"Get output from running the 'wp' command from pod mypod, using the first container by default",kubectl exec mypod -- wp
"Update pod 'log-aggregator' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator backup-strategy='daily backups'
"Delete pods and services with same names ""api"" and ""database""","kubectl delete pod,service api database"
Create a new NodePort service named payment-gateway-nodeport,kubectl create service nodeport payment-gateway-nodeport --tcp=9092:8010
Begin streaming the logs of the nano-bot container in pod proxy-service-pod,kubectl logs -f -c nano-bot proxy-service-pod
"Listen on port 6379 locally, forwarding to 6379 in the pod",kubectl port-forward pod/security-service-pod 6379:6379
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod 8888:8000
Add a taint with key 'zone' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  zone=kube-master-9:PreferNoSchedule
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=app-cluster
Rollback to the previous deployment,kubectl rollout undo deployment/my-deployment
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 5432 5000
"Update pod 'database' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods database SLA='99.9% uptime'
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json criticality=high
Begin streaming the logs of the warp-drive container in pod web-app-pod,kubectl logs -f -c warp-drive web-app-pod
Update deployment 'cache-cluster-deployment' with a new environment variable,kubectl set env deployment/cache-cluster-deployment DB_USER=username
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""custom-apps"" API group",kubectl get deployments.v2.1.0.custom-apps -o yaml
Begin streaming the logs of the ruby container in pod auth-service-pod,kubectl logs -f -c ruby auth-service-pod
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""my-apps"" API group",kubectl get deployments.feature-branch-2.3.0.my-apps -o json
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=web-cluster
"Listen on port 8888 locally, forwarding to 9090 in the pod",kubectl port-forward pod/security-service-pod 8888:9090
Rename the context 'testing-context' to 'new-context' in your kubeconfig file,kubectl config rename-context testing-context new-context
Rename the context 'dev-context' to 'edge-context' in your kubeconfig file,kubectl config rename-context dev-context edge-context
Set deployment mydeployment's service account to metrics-server,kubectl set serviceaccount deployment mydeployment metrics-server
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/authentication-service-deployment DB_HOST=localhost -o yaml
Get output from running the 'irb' command in nano-bot from pod proxy-service-pod,kubectl exec proxy-service-pod -c nano-bot -- irb
Add to node 'app-node-6' a taint with key 'zone' and no value,kubectl taint nodes app-node-6 zone:NoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node monitoring-node-15 -p $'spec:\n unschedulable: true'
"Listen on port 3000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 3000:8088
"Listen on port 8081 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8081:6379"
Create a copy of cdn-service-pod adding a debug container and changing container images,"kubectl debug cdn-service-pod -it --copy-to=my-debugger --image=debian --set-image=database=mysql:5.7,web=nginx:latest"
"Delete pods and services with same names ""web"" and ""auth""","kubectl delete pod,service web auth"
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.edge-context.cluster kube-cluster-2
Scale a replica set named 'payment-service-rs' to 3,kubectl scale --replicas=3 rs/payment-service-rs
"Delete pods and services with same names ""gateway"" and ""analytics""","kubectl delete pod,service gateway analytics"
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/options/file2.txt
Display only the most recent 12 lines of output in pod cdn-service-pod,kubectl logs --tail=12 cdn-service-pod
Set deployment proxy-service-deployment's service account to vault,kubectl set serviceaccount deployment proxy-service-deployment vault
"Listen on port 8080 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8080:6379"
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=3001 --target-port=818100
"Get output from running the 'node' command from pod database-pod, using the first container by default",kubectl exec database-pod -- node
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.app-1-context.cluster cluster-alpha
"Delete pods and services with same names ""chat-app"" and ""frontend""","kubectl delete pod,service chat-app frontend"
Get output from running the 'go' command in nano-bot from pod chat-app-pod,kubectl exec chat-app-pod -c nano-bot -- go
"Get output from running 'node' command from the first pod of the deployment api-server-deployment, using the first container by default",kubectl exec deploy/api-server-deployment -- node
"Update pod 'frontend' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend compliance-level=PCI-DSS
Display only the most recent 43 lines of output in pod backend-pod,kubectl logs --tail=43 backend-pod
"Update a pod identified by the type and name in ""pod.json""",kubectl label -f pod.json status=unhealthy
Return snapshot of previous terminated warp-drive container logs from pod gateway-pod,kubectl logs -p -c warp-drive gateway-pod
Add to node 'k8s-node-1' a taint with key 'cpu-type' and no value,kubectl taint nodes k8s-node-1 cpu-type:NoSchedule
Get output from running the 'pip --version' command in stardust-shuttle from pod chat-app-pod,kubectl exec chat-app-pod -c stardust-shuttle -- pip --version
Embed certificate authority data for the web-cluster cluster entry,kubectl config set-cluster web-cluster --embed-certs --certificate-authority=~/.kube/data-cluster/kubernetes.ca.crt
Add to node 'worker-node-3' a taint with key 'app' and no value,kubectl taint nodes worker-node-3 app:NoSchedule
Show all logs from pod gateway-pod written in the last hour,kubectl logs --since=1h gateway-pod
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/queue-processing-job -n default
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod api-service-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
"Listen on port 5432 locally, forwarding to 6379 in the pod",kubectl port-forward pod/mypod 5432:6379
Get output from nano-bot from pod web-app-pod,kubectl attach web-app-pod -c nano-bot
Display only the most recent 3 lines of output in pod web-app-pod,kubectl logs --tail=3 web-app-pod
Scale a replica set named 'dev-environment-rs' to 1,kubectl scale --replicas=1 rs/dev-environment-rs
"Listen on port 8080 locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod 8080:5432
Create a new ExternalName service named external-messaging-service,kubectl create service externalname external-messaging-service --external-name mockup-cloud.cloud
Create a copy of gateway-pod changing all container images to docker.elastic.co/elasticsearch/elasticsearch,kubectl debug gateway-pod --copy-to=my-custom-dbg --set-image=*=docker.elastic.co/elasticsearch/elasticsearch
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.edge-context.cluster cluster-gamma
Create a new LoadBalancer service named web-app-lb,kubectl create service loadbalancer web-app-lb --tcp=3001:8000
Update pod 'security' with the label 'component' and the value 'web',kubectl label pods security component=web
Set deployment frontend-deployment's service account to kube-dns,kubectl set serviceaccount deployment frontend-deployment kube-dns
"Enable the OpenID Connect auth provider for the ""system"" entry with additional args",kubectl config set-credentials system --auth-provider=oidc --auth-provider-arg=client-id=foo --auth-provider-arg=client-secret=bar
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/log-aggregator-deployment DB_PASSWORD=secretpassword -o yaml
Add a taint with key 'dedicated' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  dedicated=prod-node-5:PreferNoSchedule
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=settings=/path/to/options/file1.txt --from-file=key2=/path/to/settings/file2.txt
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-config-dev deployment/web-app-deployment
"Create a service for a replicated centos using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs centos --port=3001 --target-port=700000
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""prod-apps"" API group",kubectl get deployments.v1.0.0.prod-apps -o json
Get output from running the 'nginx' command in cyber-sleuth from pod web-app-pod,kubectl exec web-app-pod -c cyber-sleuth -- nginx
Create an ingress with TLS enabled using the default ingress certificate and different path types,"kubectl create ingress ingtls --class=default \
--rule=""foo.com/=svc:https,tls"" \
--rule=""foo.com/path/subpath*=othersvc:9091"""
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.dev-context.cluster cluster-alpha
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.staging-context.cluster sun-cluster
Return snapshot of previous terminated quantum-quark container logs from pod proxy-service-pod,kubectl logs -p -c quantum-quark proxy-service-pod
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.user-b-context.cluster app-cluster
Create a job with a command,kubectl create job data-migration-job --image=docker.elastic.co/elasticsearch/elasticsearch -- elasticsearch --version
"Get output from running the 'dotnet' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- dotnet
"Mark node ""node-2"" as schedulable",kubectl uncordon node-2
"Delete pods and services with same names ""log-aggregator"" and ""analytics""","kubectl delete pod,service log-aggregator analytics"
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""web-apps"" API group",kubectl get deployments.stable-2.0.0.web-apps -o yaml
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.cluster-1-context.cluster cloud-cluster
Display only the most recent 20 lines of output in pod monitoring-pod,kubectl logs --tail=20 monitoring-pod
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8088 8081
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""beta-apps"" API group",kubectl get deployments.v1.1.1.beta-apps -o json
"List a pod identified by type and name specified in ""config.yaml"" in YAML output format",kubectl get -f config.yaml -o yaml
Update deployment 'order-processing-deployment' with a new environment variable,kubectl set env deployment/order-processing-deployment DB_USER=username
"Delete pods and services with same names ""frontend"" and ""proxy-server""","kubectl delete pod,service frontend proxy-server"
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/app-config-prod deployment/log-aggregator-deployment
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/cdn-service-pod 8000:8081
"Create a role named ""admin_role"" with ResourceName specified",kubectl create role admin_role --verb=connect --resource=pods --resource-name=dashboard-ui --resource-name=monitoring-prometheus
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/notification-service"
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/proxy-server-pod 8000:5000
Create a deployment with a command,kubectl create deployment drupal --image=alpine -- sleep 3600
Print the client and server versions for the current context,kubectl version
Add a taint with key 'cpu-type' on nodes having label service=auth,kubectl taint node -l service=auth  cpu-type=node-1:PreferNoSchedule
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.client-1-context.cluster kube-cluster-2
Update deployment 'scheduler-app-deployment' with a new environment variable,kubectl set env deployment/scheduler-app-deployment DB_HOST=localhost
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json last-deployment=2023-03-15
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/parameters/file2.txt
"Update pod 'web' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web criticality=high
Create a job with a command,kubectl create job image-build-job --image=mysql -- mysql
Add a taint with key 'cpu-type' on nodes having label release=beta,kubectl taint node -l release=beta  cpu-type=testing-node-11:PreferNoSchedule
"Listen on port 5000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5000:8888
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/log-aggregator-pod :5000
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8081 8081
Start a centos pod and let the container expose port 8443,kubectl run hazelcast --image=centos --port=8443
"Update pod 'email' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email monitoring-tool=Prometheus
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""web-apps"" API group",kubectl get deployments.legacy-1.0.0.web-apps -o yaml
Start a mongo pod and let the container expose port 8082,kubectl run hazelcast --image=mongo --port=8082
Set deployment backend-microservice-deployment's service account to spinnaker,kubectl set serviceaccount deployment backend-microservice-deployment spinnaker
Create a new secret named git-credentials-secret with keys for each file in folder bar,kubectl create secret generic git-credentials-secret --from-file=path/to/parameters
Import environment from a config map with a prefix,kubectl set env --from=configmap/api-config --prefix=MYSQL_ deployment/monitoring-stack-deployment
Create a new secret named jwt-secret from an env file,kubectl create secret generic jwt-secret --from-env-file=path/to/configs.env
List a single pod in JSON output format,kubectl get -o json pod monitoring-pod
"Listen on port 5432 locally, forwarding to 5432 in the pod",kubectl port-forward pod/web-app-pod 5432:5432
"Update pod 'auth' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth SLA='99.9% uptime'
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/proxy-service"
Set deployment load-balancer-deployment's service account to flux,kubectl set serviceaccount deployment load-balancer-deployment flux
"Listen on port 8000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/web-app-pod 8000:6379
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""external-apps"" API group",kubectl get deployments.stable-2.0.0.external-apps -o yaml
"Start a python pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=python --overrides='{ ""apiVersion"": ""feature-branch-2.3.0"", ""spec"": { ... } }'"
Update pod 'backend' with the label 'tier' and the value 'frontend',kubectl label pods backend tier=frontend
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named backend-pod,kubectl logs deployment/log-aggregator-deployment -c backend-pod-1
"Auto scale a deployment ""analytics"", with the number of pods between 5 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment analytics --min=5 --max=14
Create a new secret named ssh-key-secret from an env file,kubectl create secret generic ssh-key-secret --from-env-file=path/to/preferences.env
List a single pod in YAML output format,kubectl get -o yaml pod cdn-service-pod
Copy ~/.config/kube local file to /etc/kubernetes in a remote pod in namespace,kubectl cp ~/.config/kube kube-public/file-server-pod-14:/etc/kubernetes
"Listen on port 5000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/analytics-service 5000:https
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod :5000
Return snapshot logs from container order-processing-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/order-processing-deployment -c vpn-service-pod-1
"Listen on port 8080 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8080:8081"
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/proxy-service-pod
Display only the most recent 12 lines of output in pod auth-service-pod,kubectl logs --tail=12 auth-service-pod
Create a job with a command,kubectl create job batch-processing --image=mysql -- mysql --version
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-dns-service
Return snapshot of previous terminated nebula-navigator container logs from pod backend-pod,kubectl logs -p -c nebula-navigator backend-pod
"Listen on port 8888 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8888:8081
Return snapshot logs from container order-processing-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/order-processing-deployment -c analytics-pod-1
Import environment from a secret,kubectl set env --from=secret/api-secret-key deployment/order-processing-deployment
Import environment from a secret,kubectl set env --from=secret/tls-certificate-secret deployment/proxy-service-deployment
Create a copy of vpn-service-pod changing all container images to mongo,kubectl debug vpn-service-pod --copy-to=debug-image-api --set-image=*=mongo
"List a pod identified by type and name specified in ""pod.yaml"" in JSON output format",kubectl get -f pod.yaml -o json
Remove from node 'node-1' all the taints with key 'hardware',kubectl taint nodes node-1 hardware-
Update pod 'email' with the label 'role' and the value 'frontend',kubectl label pods email role=frontend
"Create or update exec auth plugin environment variables for the ""admin"" entry",kubectl config set-credentials admin --exec-env=key1=val1 --exec-env=key2=val2
Update pod 'log-aggregator' with the label 'tier' and the value 'database',kubectl label pods log-aggregator tier=database
"Auto scale a deployment ""log-aggregator"", with the number of pods between 1 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment log-aggregator --min=1 --max=9
"Delete pods and services with same names ""gateway"" and ""media-stream""","kubectl delete pod,service gateway media-stream"
"Listen on port 8081 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8081:8888
Update deployment 'api-server-deployment' with a new environment variable,kubectl set env deployment/api-server-deployment LOG_LEVEL=info
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8081 6379
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/queue-processing-job -n production
Create a new secret named my-secret from an env file,kubectl create secret generic my-secret --from-env-file=path/to/configurations.env
"Update pod 'proxy' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy SLA='99.9% uptime'
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=properties=/path/to/preferences/file1.txt --from-file=key1=/path/to/configurations/file2.txt
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/parameters/file2.txt
Set the resource request and limits for all containers in alpine,"kubectl set resources deployment alpine --limits=cpu=200m,memory=512Mi --requests=cpu=200m,memory=256Mi"
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/backend-pod 8888 8000
Begin streaming the logs of the lunar-launcher container in pod proxy-service-pod,kubectl logs -f -c lunar-launcher proxy-service-pod
Create a copy of gateway-pod changing all container images to postgres,kubectl debug gateway-pod --copy-to=debug-image-web --set-image=*=postgres
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/web-app-pod 3000:8000
Get output from quantum-quark from pod cdn-service-pod,kubectl attach cdn-service-pod -c quantum-quark
Create a new ClusterIP service named payment-service-clusterip,kubectl create service clusterip payment-service-clusterip --tcp=9092:8084
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name placeholder-app.app
Create a new secret named api-key-secret with keys for each file in folder bar,kubectl create secret generic api-key-secret --from-file=path/to/parameters
Set deployment cache-cluster-deployment's service account to kube-dns,kubectl set serviceaccount deployment cache-cluster-deployment kube-dns
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 8081 3000
"Listen on port 8088 locally, forwarding to 6379 in the pod",kubectl port-forward pod/mypod 8088:6379
Remove from node 'gpu-node-12' all the taints with key 'disktype',kubectl taint nodes gpu-node-12 disktype-
Start a centos pod and let the container expose port 27017,kubectl run hazelcast --image=centos --port=27017
Remove from node 'edge-node-10' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes edge-node-10 dedicated:NoSchedule-
"Create a cluster role name ""foo"" with NonResourceURL specified","kubectl create clusterrole ""foo"" --verb=update --non-resource-url=/healthz"
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/env-vars deployment/notification-handler-deployment
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/virus-scan-job -n kube-node-lease
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/notification-sender-job -n kube-node-lease
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/queue-processing-job -n staging
Create a new config map named app-config-prod based on folder profiles,kubectl create configmap app-config-prod --from-file=path/to/profiles
"Check to see if I can get the job named ""cleanup-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/cleanup-job -n cert-manager
Show metrics for a given node,kubectl top node node-2
Start a python pod and let the container expose port 3306,kubectl run hazelcast --image=python --port=3306
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/proxy-server-pod 8088:8081
Create a new secret named encryption-key-secret from an env file,kubectl create secret generic encryption-key-secret --from-env-file=path/to/options.env
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=9091 --target-port=888800
Get the password for the app-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""app-cluster"")].user.password}'"
Get output from nano-bot from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c nano-bot
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json custom-label=my-custom-value
Create a new secret named ssl-key-secret with keys for each file in folder bar,kubectl create secret generic ssl-key-secret --from-file=path/to/configs
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named mypod,kubectl logs deployment/log-aggregator-deployment -c mypod-1
"Create a single ingress called 'web-ingress' that directs requests to testing.com/example to svc # svc1:8088 with a tls secret ""my-cert""","kubectl create ingress web-ingress --rule=""testing.com/example=svc1:8088,tls=my-cert"""
Start a mongo pod,kubectl run nginx --image=mongo
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.user-b-context.cluster prod-cluster
Create a new secret named database-secret with keys for each file in folder bar,kubectl create secret generic database-secret --from-file=path/to/configs
Create a deployment named mattermost that runs the golang image,kubectl create deployment mattermost --image=golang
"Listen on port 5432 locally, forwarding to 8088 in the pod",kubectl port-forward pod/e-commerce-pod 5432:8088
Set deployment order-processing-deployment's service account to spinnaker,kubectl set serviceaccount deployment order-processing-deployment spinnaker
Remove from node 'db-node-7' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes db-node-7 datacenter:NoExecute-
Delete the robot-user user,kubectl config delete-user robot-user
Get the documentation of a specific field of a resource,kubectl explain resource=services.spec.volumes
Update pod 'gateway' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods gateway tier-
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/data/file2.txt
Import environment from a secret,kubectl set env --from=secret/api-key-secret deployment/mydeployment
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=7000:8888
Create a new ClusterIP service named backend-service-clusterip,kubectl create service clusterip backend-service-clusterip --tcp=3001:5432
"Remove exec auth plugin environment variables for the ""admin"" entry",kubectl config set-credentials admin --exec-env=var-to-remove-
Get output from astro-container from pod chat-app-pod,kubectl attach chat-app-pod -c astro-container
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/proxy-server-pod 3000:8000
"Delete pods and services with same names ""log-aggregator"" and ""database""","kubectl delete pod,service log-aggregator database"
"Listen on port 5432 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 5432:5432
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/amazonlinux
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""api-v2"" API group",kubectl get deployments.stable-2.0.0.api-v2 -o json
"Listen on port 6379 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 6379:5000
Create a new ExternalName service named my-ns,kubectl create service externalname my-ns --external-name travel-sample.travel
"Update pod 'database' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods database backup-strategy='daily-backups'
"Get output from running 'npm --version' command from the first pod of the deployment payment-processor-deployment, using the first container by default",kubectl exec deploy/payment-processor-deployment -- npm --version
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/media-stream-pod
Create a new secret named monitoring-credentials-secret with keys for each file in folder bar,kubectl create secret generic monitoring-credentials-secret --from-file=path/to/profiles
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/e-commerce-pod 8080:8088
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""external-apps"" API group",kubectl get deployments.v3.0.0.external-apps -o json
Return snapshot of previous terminated cyber-sleuth container logs from pod backend-pod,kubectl logs -p -c cyber-sleuth backend-pod
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/web-app-pod 9090 5000
List a single pod in YAML output format,kubectl get -o yaml pod api-service-pod
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.prod-context.cluster testing-cluster
Roll back to daemonset revision 1,kubectl rollout undo daemonset/namespace-3 --to-revision=1
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/properties/file2.txt
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=moon-cluster
"Get output from running the 'postgres' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- postgres
"Update pod 'web' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods web status=unhealthy
Embed certificate authority data for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
"Delete pods and services with same names ""proxy"" and ""database""","kubectl delete pod,service proxy database"
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/log-aggregator-pod 8081:8080
Create a copy of auth-service-pod adding a debug container and attach to it,kubectl debug auth-service-pod -it --image=busybox --copy-to=debug-image-memcached
Begin streaming the logs from all containers in pods defined by label app=nginx,kubectl logs -f -l app=nginx --all-containers=true
"Listen on port 5000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/proxy-server-pod 5000:5432
Set the resource request and limits for all containers in kafka,"kubectl set resources deployment kafka --limits=cpu=200m,memory=512Mi --requests=cpu=200m,memory=256Mi"
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/proxy-service-deployment
"Update pod 'chat-app' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app last-deployment=2023-03-15
Return snapshot logs from container payment-processor-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/payment-processor-deployment -c gateway-pod-1
"Listen on port 8000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8000:3000
"If the deployment named api-service-rs's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/api-service-rs
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 6379 8080
Create a new secret named my-secret from an env file,kubectl create secret generic my-secret --from-env-file=path/to/configs.env
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/api-service-pod
"Listen on port 8888 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/database-service 8888:https
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach gateway-pod -c nano-bot -i -t
Return snapshot logs from container user-management-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/user-management-deployment -c e-commerce-pod-1
"Set a deployments php container cpu limits to ""50m"" and memory to ""128Mi""","kubectl set resources deployment php -c=nginx --limits=cpu=50m,memory=128Mi"
"Create a cluster role name ""bar"" with NonResourceURL specified","kubectl create clusterrole ""bar"" --verb=watch --non-resource-url=/port-forward"
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/security-service-pod 8080:6379
Update pod 'analytics' only if the resource is unchanged from version 1,kubectl label pods analytics status=unhealthy --resource-version=1
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.admin-context.cluster dev-cluster
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/monitoring-pod
Describe pods by label instance=app-instance-1,kubectl describe po -l instance=app-instance-1
Add a taint with key 'zone' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  zone=app-node-6:PreferNoSchedule
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name mockup-cloud.cloud
Get output from running the 'redis-server' command in quantum-quark from pod media-stream-pod,kubectl exec media-stream-pod -c quantum-quark -- redis-server
Return snapshot logs from all containers in pods defined by label component=proxy,kubectl logs -l component=proxy --all-containers=true
Get output from warp-drive from pod auth-service-pod,kubectl attach auth-service-pod -c warp-drive
"Create a service for a pod proxy-server-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod proxy-server-pod --port=8083 --name=frontend
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/scheduler-app-deployment -c chat-app-pod-1
Start a php pod and let the container expose port 8084,kubectl run hazelcast --image=php --port=8084
Create a deployment named jenkins-x that runs the nginx image,kubectl create deployment jenkins-x --image=nginx
Create a job with a command,kubectl create job backup --image=php --
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/backend-pod 5000:6379
Return snapshot logs from container load-balancer-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/load-balancer-deployment -c monitoring-pod-1
"Listen on port 8088 locally, forwarding to 5000 in the pod",kubectl port-forward pod/api-service-pod 8088:5000
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/notification-service"
"Listen on port 5432 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5432:5000
Create a new config map named env-vars from an env file,kubectl create configmap env-vars --from-env-file=path/to/properties.env
"Delete pods and services with same names ""backend"" and ""foo""","kubectl delete pod,service backend foo"
Update image of all containers of daemonset namespace- to 'node:14.17.3',kubectl set image daemonset namespace-3 *=node:14.17.3
"Listen on port 9090 locally, forwarding to 6379 in the pod",kubectl port-forward pod/proxy-server-pod 9090:6379
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=8089 --target-port=808800
"If the deployment named payment-service-rs's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/payment-service-rs
"Delete pods and services with same names ""media-stream"" and ""backend""","kubectl delete pod,service media-stream backend"
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=edge-cluster
"Listen on port 6379 locally, forwarding to 8088 in the pod",kubectl port-forward pod/proxy-server-pod 6379:8088
Add a taint with key 'disktype' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  disktype=edge-node-10:PreferNoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node node-1 -p $'spec:\n containers:\n- name: container-name\n  resources:\n    limits:\n      cpu: 200m'
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/security-service-pod 8888:5000
"Create a role named ""view"" with ResourceName specified",kubectl create role view --verb=delete --resource=pods --resource-name=dev-database --resource-name=dev-database
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/log-aggregator-pod
Get output from running the 'python' command in lunar-launcher from pod chat-app-pod,kubectl exec chat-app-pod -c lunar-launcher -- python
Create a job with a command,kubectl create job cleanup --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-settings deployment/order-processing-deployment
"If the deployment named api-service-rs's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/api-service-rs
Return snapshot logs from container proxy-service-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/proxy-service-deployment -c monitoring-pod-1
Return snapshot of previous terminated mycontainer container logs from pod log-aggregator-pod,kubectl logs -p -c mycontainer log-aggregator-pod
"Delete pods and services with same names ""frontend"" and ""foo""","kubectl delete pod,service frontend foo"
"Update pod 'chat-app' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods chat-app custom-label='my-custom-value'
Return snapshot logs from container proxy-service-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/proxy-service-deployment -c proxy-service-pod-1
Create a job with a command,kubectl create job database-seeding-job --image=alpine -- apk add curl
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.cloud-context.cluster dev-cluster
Dry run; print the corresponding API objects without creating them,kubectl run nginx --image=nginx --dry-run=client
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""custom-deployments"" API group",kubectl get deployments.v2.0.0.custom-deployments -o json
"Start a amazonlinux pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=amazonlinux --restart=Never
"Listen on port 8000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8000:9090
"Create a service for a replicated php, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc php --port=3000 --target-port=909000
Add a taint with key 'hardware' on nodes having label release=beta,kubectl taint node -l release=beta  hardware=gpu-node-12:PreferNoSchedule
"Listen on port 8081 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8081:3000"
Return snapshot logs from container proxy-service-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/proxy-service-deployment -c frontend-pod-1
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8081 3000
Create a new config map named api-config based on folder properties,kubectl create configmap api-config --from-file=path/to/properties
Create a new NodePort service named auth-service-nodeport,kubectl create service nodeport auth-service-nodeport --tcp=8082:9090
Return snapshot logs from container email-server-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/email-server-deployment -c email-service-pod-1
"Listen on port 8081 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8081:6379
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 5000:9090
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod chat-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach chat-app-pod -c mycontainer -i -t
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""testing-apps"" API group",kubectl get deployments.v3.0.0.testing-apps -o yaml
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""apps"" API group",kubectl get deployments.stable-2.0.0.apps -o json
"List a pod identified by type and name specified in ""setup.yaml"" in YAML output format",kubectl get -f setup.yaml -o yaml
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 5000 5000
Start a php pod and let the container expose port 8888,kubectl run hazelcast --image=php --port=8888
Set deployment payment-processor-deployment's service account to prometheus,kubectl set serviceaccount deployment payment-processor-deployment prometheus
"Update pod 'proxy-server' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods proxy-server app-version='2.5.1'
Scale a replica set named 'payment-service-rs' to 7,kubectl scale --replicas=7 rs/payment-service-rs
Edit the job 'queue-processing-job' in JSON using the v1 API format,kubectl edit job.v1.batch/queue-processing-job -o json
Begin streaming the logs of the ruby container in pod cdn-service-pod,kubectl logs -f -c ruby cdn-service-pod
"If the deployment named mysql's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/mysql
"Listen on port 6379 locally, forwarding to 5000 in the pod",kubectl port-forward pod/api-service-pod 6379:5000
Import environment from a secret,kubectl set env --from=secret/azure-storage-secret deployment/mydeployment
"Listen on port 6379 locally, forwarding to 6379 in the pod",kubectl port-forward pod/web-app-pod 6379:6379
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-config --prefix=MYSQL_ deployment/email-server-deployment
Begin streaming the logs of the cyber-sleuth container in pod proxy-service-pod,kubectl logs -f -c cyber-sleuth proxy-service-pod
Begin streaming the logs of the astro-container container in pod analytics-pod,kubectl logs -f -c astro-container analytics-pod
Create a deployment named logging that runs the nginx image and expose port 9092,kubectl create deployment logging --image=nginx --port=9092
Set deployment user-management-deployment's service account to fluentd,kubectl set serviceaccount deployment user-management-deployment fluentd
"Check to see if I can get the job named ""image-processing-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/image-processing-job -n kube-system
"Delete pods and services with same names ""email"" and ""cdn""","kubectl delete pod,service email cdn"
Add a taint with key 'datacenter' on nodes having label role=database,kubectl taint node -l role=database  datacenter=web-node-8:PreferNoSchedule
Return snapshot logs from container gateway-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/gateway-deployment -c e-commerce-pod-1
Create a new secret named api-secret-key with keys for each file in folder bar,kubectl create secret generic api-secret-key --from-file=path/to/properties
"Create a single ingress called 'app2-ingress' that directs requests to site.com/input to svc # svc1:5001 with a tls secret ""my-cert""","kubectl create ingress app2-ingress --rule=""site.com/input=svc1:5001,tls=my-cert"""
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/db-config deployment/email-server-deployment
"Listen on port 5432 locally, forwarding to 5432 in the pod",kubectl port-forward pod/analytics-pod 5432:5432
"If the deployment named app-v2-replicaset's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/app-v2-replicaset
Start a wordpress pod and let the container expose port 8082,kubectl run hazelcast --image=wordpress --port=8082
Get output from running the 'redis-server' command in nano-bot from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c nano-bot -- redis-server
"Auto scale a deployment ""email"", with the number of pods between 4 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment email --min=4 --max=8
"Listen on port 8088 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8088:9090"
"Create a role binding for user1, user2, and group1 using the foo cluster role",kubectl create rolebinding foo --clusterrole=foo --user=user1 --user=user2 --group=group1
Create a new secret named payment-gateway-secret from an env file,kubectl create secret generic payment-gateway-secret --from-env-file=path/to/data.env
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/db-config deployment/gateway-deployment
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""api-v2"" API group",kubectl get deployments.rc-1.1.0.api-v2 -o json
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/log-config deployment/database-deployment
"Create a single ingress called 'myapp-ingress' that directs requests to website.com/module to svc # svc1:8000 with a tls secret ""my-cert""","kubectl create ingress myapp-ingress --rule=""website.com/module=svc1:8000,tls=my-cert"""
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/ui-config deployment/database-deployment
Create a new resource quota named persistent-volume-quota,kubectl create quota persistent-volume-quota --hard=persistentvolumeclaims=10
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8888 3000
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.client-2-context.cluster data-cluster
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""beta-apps"" API group",kubectl get deployments.stable-2.0.0.beta-apps -o json
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json last-deployment=2023-03-15
Add a taint with key 'special' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  special=web-node-8:PreferNoSchedule
Get output from the first pod of a replica set named php,kubectl attach rs/php
Import environment from a secret,kubectl set env --from=secret/database-secret deployment/load-balancer-deployment
Get output from cyber-sleuth from pod database-pod,kubectl attach database-pod -c cyber-sleuth
Delete pods and services with label team=devops,"kubectl delete pods,services -l team=devops"
Delete the app-operator user,kubectl config delete-user app-operator
"Listen on port 8088 locally, forwarding to 6379 in the pod",kubectl port-forward pod/security-service-pod 8088:6379
"Update pod 'analytics' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics app-version=2.5.1
"Delete pods and services with same names ""gateway"" and ""frontend""","kubectl delete pod,service gateway frontend"
Remove from node 'app-node-6' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes app-node-6 datacenter:NoExecute-
Show metrics for the pods defined by label service=auth,kubectl top pod -l service=auth
Begin streaming the logs of the nano-bot container in pod frontend-pod,kubectl logs -f -c nano-bot frontend-pod
Add a taint with key 'datacenter' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  datacenter=db-node-7:PreferNoSchedule
Embed certificate authority data for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --embed-certs --certificate-authority=~/.kube/data-cluster/kubernetes.ca.crt
"Update pod 'proxy' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling', overwriting any existing value",kubectl annotate --overwrite pods proxy scaling-policy='auto-horizontal-scaling'
Return snapshot logs from container user-management-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/user-management-deployment -c payment-gateway-pod-1
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""legacy-apps"" API group",kubectl get deployments.feature-branch-2.3.0.legacy-apps -o yaml
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/web-app-pod
Copy ~/.config/kube from a remote pod to /etc/kubernetes locally,kubectl cp argocd/logging-agent-pod-7:~/.config/kube /etc/kubernetes
"Listen on port 8080 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8080:5000
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube prometheus/front-end-pod-12:/tmp/bar
"If the deployment named baz's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/baz
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8888 8088
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=8443:8088
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/cdn-service-pod
Get output from code-explorer from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c code-explorer
Get output from running the 'geth' command in mycontainer from pod analytics-pod,kubectl exec analytics-pod -c mycontainer -- geth
Create a new secret named ldap-credentials-secret from an env file,kubectl create secret generic ldap-credentials-secret --from-env-file=path/to/data.env
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""third-party-apps"" API group",kubectl get deployments.v1.1.1.third-party-apps -o json
"Set a deployments mongo container cpu limits to ""2"" and memory to ""1Gi""","kubectl set resources deployment mongo -c=nginx --limits=cpu=2,memory=1Gi"
Create a new config map named monitoring-config from the key=value pairs in the file,kubectl create configmap monitoring-config --from-file=path/to/profiles
"Listen on port 8088 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8088:8000"
"Listen on port 8088 locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod 8088:8080
"Update pod 'media-stream' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream scaling-policy=auto-horizontal-scaling
Use the context for the kube-cluster-2 cluster,kubectl config use-context kube-cluster-2
"Mark node ""kube-master-9"" as schedulable",kubectl uncordon kube-master-9
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.cluster-1-context.cluster moon-cluster
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/app-config-dev deployment/frontend-deployment
Return snapshot logs from container gateway-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/gateway-deployment -c email-service-pod-1
Begin streaming the logs of the cosmic-container container in pod api-service-pod,kubectl logs -f -c cosmic-container api-service-pod
"Enable the Google Compute Platform auth provider for the ""security-user"" entry",kubectl config set-credentials security-user --auth-provider=gcp
"Listen on port 5432 locally, forwarding to 3000 in the pod",kubectl port-forward pod/frontend-pod 5432:3000
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=3001 --target-port=844300
Display only the most recent 53 lines of output in pod api-service-pod,kubectl logs --tail=53 api-service-pod
Create a job with a command,kubectl create job scaling-job --image=postgres -- psql
"Get output from running the 'dotnet --list-sdks' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- dotnet --list-sdks
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=properties=/path/to/properties/file1.txt --from-file=key1=/path/to/data/file2.txt
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/log-aggregator-deployment -c cdn-service-pod-1
"Auto scale a deployment ""media-stream"", with the number of pods between 3 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment media-stream --min=3 --max=9
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""extensions"" API group",kubectl get deployments.v2.0.0.extensions -o json
Add a taint with key 'zone' on nodes having label service=auth,kubectl taint node -l service=auth  zone=gpu-node-12:PreferNoSchedule
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/logging-service"
Create a copy of cdn-service-pod changing all container images to nginx,kubectl debug cdn-service-pod --copy-to=dgb-img --set-image=*=nginx
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=cloud-cluster
"Listen on port 8088 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8088:5000"
Start a ruby pod and let the container expose port 5001,kubectl run hazelcast --image=ruby --port=5001
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 8888 5432
"Start a amazonlinux pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=amazonlinux --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
Add to node 'node-2' a taint with key 'datacenter' and no value,kubectl taint nodes node-2 datacenter:NoSchedule
Start a jenkins pod and let the container expose port 8888,kubectl run hazelcast --image=jenkins --port=8888
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/email-service-pod
Build some shared configuration directory,kubectl kustomize /home/config/production
"Listen on port 8081 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8081:8000
Update pod 'analytics' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods analytics env-
Add a taint with key 'cpu-type' on nodes having label team=devops,kubectl taint node -l team=devops  cpu-type=k8s-node-1:PreferNoSchedule
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod e-commerce-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach e-commerce-pod -c astro-container -i -t
Create a new secret named database-secret with keys for each file in folder bar,kubectl create secret generic database-secret --from-file=path/to/options
"Update pod 'monitoring' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring security-scan-status=pass
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node edge-node-10 -p $'spec:\n type: LoadBalancer'
Update pod 'gateway' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods gateway env-
"Set a deployments mongo container cpu limits to ""500m"" and memory to ""64Mi""","kubectl set resources deployment mongo -c=nginx --limits=cpu=500m,memory=64Mi"
"Delete pods and services with same names ""proxy"" and ""proxy-server""","kubectl delete pod,service proxy proxy-server"
Return snapshot logs from container database-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/database-deployment -c payment-gateway-pod-1
Start a ruby pod and let the container expose port 8443,kubectl run hazelcast --image=ruby --port=8443
Get output from running the 'jenkins --version' command in astro-container from pod cdn-service-pod,kubectl exec cdn-service-pod -c astro-container -- jenkins --version
"Set a deployments python container cpu limits to ""200m"" and memory to ""1Gi""","kubectl set resources deployment python -c=nginx --limits=cpu=200m,memory=1Gi"
Get output from running the 'geth' command in astro-container from pod auth-service-pod,kubectl exec auth-service-pod -c astro-container -- geth
Add to node 'backup-node-14' a taint with key 'datacenter' and no value,kubectl taint nodes backup-node-14 datacenter:NoSchedule
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=8000 --target-port=844300
"Listen on port 8000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/monitoring-service 8000:https
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/proxy-server-pod 6379:8000
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=settings=/path/to/parameters/file1.txt --from-file=key2=/path/to/data/file2.txt
Add a taint with key 'datacenter' on nodes having label role=database,kubectl taint node -l role=database  datacenter=db-node-7:PreferNoSchedule
Return snapshot of previous terminated quantum-quark container logs from pod log-aggregator-pod,kubectl logs -p -c quantum-quark log-aggregator-pod
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-config deployment/web-app-deployment
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/gateway-pod
Create a new secret named git-credentials-secret from an env file,kubectl create secret generic git-credentials-secret --from-env-file=path/to/options.env
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/data/file2.txt
Return snapshot of previous terminated time-machine container logs from pod monitoring-pod,kubectl logs -p -c time-machine monitoring-pod
Add a taint with key 'cpu-type' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  cpu-type=kube-master-9:PreferNoSchedule
"Listen on port 8000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod 8000:9090
"Run a proxy to the Kubernetes API server on port 3000, serving static content from ./local/www/",kubectl proxy --port=3000 --www=./local/www/
Create a copy of vpn-service-pod adding a debug container and changing container images,"kubectl debug vpn-service-pod -it --copy-to=debug-image-api --image=debian --set-image=logger=logging-app:debug,api=api:v2"
Return snapshot logs from container email-server-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/email-server-deployment -c security-service-pod-1
Set the resource request and limits for all containers in mongo,"kubectl set resources deployment mongo --limits=cpu=200m,memory=512Mi --requests=cpu=50m,memory=128Mi"
Return snapshot logs from container notification-handler-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/notification-handler-deployment -c gateway-pod-1
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/security-service-pod 8000:5000
"Update pod 'monitoring' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods monitoring app-version='2.5.1'
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""apps"" API group",kubectl get deployments.alpha-2.0.apps -o yaml
Update pod 'email' with the label 'role' and the value 'backend',kubectl label pods email role=backend
Create a new secret named ldap-credentials-secret from an env file,kubectl create secret generic ldap-credentials-secret --from-env-file=path/to/preferences.env
"Update pod 'auth' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods auth owner='alice-smith'
List the environment variables defined on all pods,kubectl set env pods --all --list
"Listen on port 8000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8000:8888"
Update deployment 'analytics-platform-deployment' with a new environment variable,kubectl set env deployment/analytics-platform-deployment DB_USER=username
"Get output from running the 'dotnet --list-runtimes' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- dotnet --list-runtimes
"If the deployment named api-service-rs's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/api-service-rs
Start a postgres pod and let the container expose port 8088,kubectl run hazelcast --image=postgres --port=8088
Start a alpine pod and let the container expose port 3000,kubectl run hazelcast --image=alpine --port=3000
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/env-vars deployment/backend-microservice-deployment
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp cert-manager/admin-dashboard-pod-16:/tmp/foo /tmp/bar
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""legacy-apps"" API group",kubectl get deployments.v1.0.0.legacy-apps -o yaml
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""api-v2"" API group",kubectl get deployments.v2.1.0.api-v2 -o json
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json owner='alice smith'
"If the deployment named dev-environment-rs's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/dev-environment-rs
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/settings/file2.txt
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node backup-node-14 -p '{""spec"":{""someField"":""newValue""}'"
Update pod 'security' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods security component-
"Get output from running 'kafka-topics --list' command from the first pod of the service analytics-service, using the first container by default",kubectl exec svc/analytics-service -- kafka-topics --list
"Listen on port 8080 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8080:6379
"Get output from running the 'geth version' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- geth version
Return snapshot of previous terminated nebula-navigator container logs from pod cdn-service-pod,kubectl logs -p -c nebula-navigator cdn-service-pod
"Get output from running 'dotnet' command from the first pod of the deployment database-deployment, using the first container by default",kubectl exec deploy/database-deployment -- dotnet
Get output from running the 'elasticsearch' command in nebula-navigator from pod api-service-pod,kubectl exec api-service-pod -c nebula-navigator -- elasticsearch
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=3001 --target-port=500000
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/logging-service"
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/api-config deployment/order-processing-deployment
"Listen on port 6379 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 6379:9090"
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=kube-cluster-2
Set deployment payment-processor-deployment's service account to metrics-server,kubectl set serviceaccount deployment payment-processor-deployment metrics-server
Get output from running the 'mongo --version' command in mycontainer from pod backend-pod,kubectl exec backend-pod -c mycontainer -- mongo --version
"Create or update exec auth plugin environment variables for the ""developer"" entry",kubectl config set-credentials developer --exec-env=key1=val1 --exec-env=key2=val2
Create a new secret named tls-certificate-secret with keys for each file in folder bar,kubectl create secret generic tls-certificate-secret --from-file=path/to/settings
Return snapshot logs from container payment-processor-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/payment-processor-deployment -c frontend-pod-1
Return snapshot logs from pod payment-gateway-pod with multi containers,kubectl logs payment-gateway-pod --all-containers=true
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/mypod 8000:8081
Start the nginx pod using a different command and custom arguments,kubectl run nginx --image=nginx --command -- <cmd> <arg1> ... <argN>
"Get output from running 'wp' command from the first pod of the service frontend-service, using the first container by default",kubectl exec svc/frontend-service -- wp
Add to node 'worker-node-3' a taint with key 'workload' and no value,kubectl taint nodes worker-node-3 workload:NoSchedule
Update pod 'api' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods api unhealthy-
Add a taint with key 'workload' on nodes having label release=beta,kubectl taint node -l release=beta  workload=kube-master-9:PreferNoSchedule
"Listen on port 6379 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 6379:3000"
Get output from running the 'npm --version' command in time-machine from pod mypod,kubectl exec mypod -c time-machine -- npm --version
Update pod 'email' with the label 'component' and the value 'worker',kubectl label pods email component=worker
Get output from mycontainer from pod e-commerce-pod,kubectl attach e-commerce-pod -c mycontainer
"Delete pods and services with same names ""database"" and ""api""","kubectl delete pod,service database api"
Remove from node 'prod-node-5' all the taints with key 'disktype',kubectl taint nodes prod-node-5 disktype-
Delete a pod using the type and name specified in docker-registry.yaml,kubectl delete -f ./docker-registry.yaml
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/auth-service-pod
Get output from running the 'php --version' command in cyber-sleuth from pod media-stream-pod,kubectl exec media-stream-pod -c cyber-sleuth -- php --version
Create a new ExternalName service named external-identity-provider-service,kubectl create service externalname external-identity-provider-service --external-name placeholder-app.app
"Wait for the pod ""email-service-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/email-service-pod
"Create a single ingress called 'internal-ingress' that directs requests to foo.com/bar to svc # svc1:27017 with a tls secret ""my-cert""","kubectl create ingress internal-ingress --rule=""foo.com/bar=svc1:27017,tls=my-cert"""
Add a taint with key 'app' on nodes having label app=web-app,kubectl taint node -l app=web-app  app=edge-node-10:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/log-config deployment/web-app-deployment
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8888 3000
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=3000 --target-port=808200
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=edge-cluster
Create a deployment named my-dep that runs the centos image and expose port 3000,kubectl create deployment my-dep --image=centos --port=3000
Set deployment web-app-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment web-app-deployment kube-controller-manager
Edit the deployment 'search-engine-deployment' in YAML and save the modified config in its annotation,kubectl edit deployment/search-engine-deployment -o yaml --save-config
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/web-app-pod 6379:8000
Show metrics for the pods defined by label namespace=mynamespace,kubectl top pod -l namespace=mynamespace
"Listen on port 5432 locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod 5432:8888
Create a new secret named password-secret from an env file,kubectl create secret generic password-secret --from-env-file=path/to/configurations.env
Create a job with a command,kubectl create job backup --image=ruby -- ruby --version
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8081 8000
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.client-2-context.cluster kube-cluster-2
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
"If the deployment named dev-environment-rs's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/dev-environment-rs
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""backup-apps"" API group",kubectl get deployments.dev-2.2.0.backup-apps -o json
Copy ~/.config/kube from a remote pod to /etc/kubernetes locally,kubectl cp argocd/auth-service-pod-11:~/.config/kube /etc/kubernetes
Begin streaming the logs of the quantum-quark container in pod analytics-pod,kubectl logs -f -c quantum-quark analytics-pod
Get output from code-explorer from pod monitoring-pod,kubectl attach monitoring-pod -c code-explorer
Set deployment search-engine-deployment's service account to flux,kubectl set serviceaccount deployment search-engine-deployment flux
Describe all configmaps,kubectl describe configmaps
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8080 8000
"Create a service for a pod chat-app-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod chat-app-pod --port=8000 --name=frontend
"Listen on port 8088 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8088:8080
Set deployment search-engine-deployment's service account to cert-manager,kubectl set serviceaccount deployment search-engine-deployment cert-manager
"Listen on port 5432 locally, forwarding to 3000 in the pod",kubectl port-forward pod/api-service-pod 5432:3000
"Listen on port 5000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod 5000:8888
Get output from the first pod of a replica set named centos,kubectl attach rs/centos
Get output from nano-bot from pod mypod,kubectl attach mypod -c nano-bot
Set deployment backend-microservice-deployment's service account to prometheus,kubectl set serviceaccount deployment backend-microservice-deployment prometheus
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=sun-cluster
Add to node 'storage-node-13' a taint with key 'dedicated' and no value,kubectl taint nodes storage-node-13 dedicated:NoSchedule
Add a taint with key 'environment' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  environment=backup-node-14:PreferNoSchedule
Set deployment monitoring-stack-deployment's service account to istio,kubectl set serviceaccount deployment monitoring-stack-deployment istio
Get the documentation of a specific field of a resource,kubectl explain resource=pods.spec.volumes
Add a taint with key 'environment' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  environment=node-1:PreferNoSchedule
Begin streaming the logs of the cyber-sleuth container in pod e-commerce-pod,kubectl logs -f -c cyber-sleuth e-commerce-pod
Execute set-last-applied against each configuration file in a directory,kubectl apply set-last-applied -f settings/
Create a deployment named nats that runs the amazonlinux image and expose port 7000,kubectl create deployment nats --image=amazonlinux --port=7000
Watch the rollout status of a deployment,kubectl rollout status deployment/namespace-2
Add a taint with key 'hardware' on nodes having label component=proxy,kubectl taint node -l component=proxy  hardware=web-node-8:PreferNoSchedule
Get output from running the 'mysql --version' command in stardust-shuttle from pod frontend-pod,kubectl exec frontend-pod -c stardust-shuttle -- mysql --version
List resource information in custom columns,"kubectl get pod frontend-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Edit the deployment 'database-deployment' in YAML and save the modified config in its annotation,kubectl edit deployment/database-deployment -o yaml --save-config
Return snapshot logs from container mydeployment-1 of a deployment named monitoring-pod,kubectl logs deployment/mydeployment -c monitoring-pod-1
Create a copy of chat-app-pod changing all container images to ruby,kubectl debug chat-app-pod --copy-to=debug-image-web --set-image=*=ruby
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""experimental-apps"" API group",kubectl get deployments.beta-1.0.experimental-apps -o json
Create a new service account named cert-manager,kubectl create serviceaccount cert-manager
Set deployment authentication-service-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment authentication-service-deployment gitlab-runner
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""testing-apps"" API group",kubectl get deployments.v1.1.1.testing-apps -o yaml
"Listen on port 5432 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 5432:8081"
"Listen on port 8081 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8081:8888"
Update pod 'chat-app' with the label 'env' and the value 'staging',kubectl label pods chat-app env=staging
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name travel-sample.travel
Display only the most recent 31 lines of output in pod chat-app-pod,kubectl logs --tail=31 chat-app-pod
"Listen on port 6379 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 6379:5000
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8888 8888
"Listen on port 5000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod 5000:8080
Remove from node 'worker-node-3' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes worker-node-3 cpu-type:NoSchedule-
"Create a service for a replication controller identified by type and name specified in ""php-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f php-controller.yaml --port=8084 --target-port=500100
"Delete pods and services with same names ""gateway"" and ""security""","kubectl delete pod,service gateway security"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8081 3000
Add a taint with key 'environment' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  environment=dev-node-4:PreferNoSchedule
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=kube-cluster-2
Rollback to the previous deployment,kubectl rollout undo deployment/namespace-1
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.edge-context.cluster cluster-alpha
"Update node 'storage-node-13' with a taint with key 'cpu-type' and value 'x86' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes storage-node-13 cpu-type=x86:NoSchedule
Restart a deployment,kubectl rollout restart deployment/test
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 3000 6379
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/database-pod
Add a taint with key 'hardware' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  hardware=testing-node-11:PreferNoSchedule
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/monitoring-service"
"Listen on port 8888 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8888:8088"
Add a taint with key 'cpu-type' on nodes having label myLabel,kubectl taint node -l myLabel  cpu-type=dev-node-4:PreferNoSchedule
Return snapshot of previous terminated quantum-quark container logs from pod web-app-pod,kubectl logs -p -c quantum-quark web-app-pod
Get output from running the 'geth version' command in nebula-navigator from pod e-commerce-pod,kubectl exec e-commerce-pod -c nebula-navigator -- geth version
"Create a cluster role name ""admin_role"" with NonResourceURL specified","kubectl create clusterrole ""admin_role"" --verb=create --non-resource-url=/healthz"
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/web-app-pod 8000:8088
Embed certificate authority data for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --embed-certs --certificate-authority=~/.kube/kube-cluster-1/kubernetes.ca.crt
Embed certificate authority data for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod auth-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach auth-service-pod -c lunar-launcher -i -t
Create a cron job with a command,"kubectl create cronjob cron-task --image=ethereum/client-go --schedule=""*/1 * * * *"" -- geth"
Set deployment api-server-deployment's service account to default,kubectl set serviceaccount deployment api-server-deployment default
Create a job with a command,kubectl create job audit-job --image=python -- python --version
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/web-service"
"Get output from running the 'dotnet --list-sdks' command from pod proxy-server-pod, using the first container by default",kubectl exec proxy-server-pod -- dotnet --list-sdks
Begin streaming the logs of the warp-drive container in pod vpn-service-pod,kubectl logs -f -c warp-drive vpn-service-pod
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.staging-context.cluster testing-cluster
"Get output from running the 'postgres' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- postgres
Create a deployment named worker that runs the postgres image and expose port 27017,kubectl create deployment worker --image=postgres --port=27017
Create a job,kubectl create job report-generation-job --image=busybox
"Set a deployments centos container cpu limits to ""5"" and memory to ""256Mi""","kubectl set resources deployment centos -c=nginx --limits=cpu=5,memory=256Mi"
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/monitoring-pod
Get output from running the 'mongo' command in lunar-launcher from pod web-app-pod,kubectl exec web-app-pod -c lunar-launcher -- mongo
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/security-service-pod
Import environment from a secret,kubectl set env --from=secret/tls-certificate-secret deployment/backend-microservice-deployment
Add a taint with key 'environment' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  environment=db-node-7:PreferNoSchedule
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 9090 3000
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir kube-dns/ingress-controller-pod-8:/tmp/bar
"Update pod 'security' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods security SLA='99.9% uptime'
Add a taint with key 'special' on nodes having label myLabel,kubectl taint node -l myLabel  special=node-2:PreferNoSchedule
"Listen on port 8088 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8088:8000
Set deployment payment-processor-deployment's service account to jenkins,kubectl set serviceaccount deployment payment-processor-deployment jenkins
Update image of all containers of daemonset prod to 'mongo:5.0.2',kubectl set image daemonset prod *=mongo:5.0.2
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""mobile-apps"" API group",kubectl get deployments.v3.0.0.mobile-apps -o yaml
"Listen on port 8080 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8080:8088"
"Delete pods and services with same names ""analytics"" and ""proxy""","kubectl delete pod,service analytics proxy"
"Start a alpine pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=alpine --restart=Never
"Listen on port 8888 locally, forwarding to 5432 in the pod",kubectl port-forward pod/log-aggregator-pod 8888:5432
Get output from time-machine from pod auth-service-pod,kubectl attach auth-service-pod -c time-machine
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/data-synchronization-job -n development
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/scheduler-service"
"If the deployment named bar's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/bar
Create a new secret named azure-storage-secret with key1=supersecret and key2=topsecret,kubectl create secret generic azure-storage-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/payment-service"
Update pod 'frontend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods frontend app-
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""extensions"" API group",kubectl get deployments.v1.0.0.extensions -o json
"Listen on port 8081 locally, forwarding to 5000 in the pod",kubectl port-forward pod/api-service-pod 8081:5000
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named backend-pod,kubectl logs deployment/scheduler-app-deployment -c backend-pod-1
Create a new ExternalName service named external-geolocation-service,kubectl create service externalname external-geolocation-service --external-name document-company.com
Update image of all containers of daemonset app-v2 to 'ubuntu:20.04',kubectl set image daemonset app-v2 *=ubuntu:20.04
Get output from running the 'node --version' command in quantum-quark from pod vpn-service-pod,kubectl exec vpn-service-pod -c quantum-quark -- node --version
Get output from running the 'docker run -it ubuntu' command in nebula-navigator from pod auth-service-pod,kubectl exec auth-service-pod -c nebula-navigator -- docker run -it ubuntu
Display only the most recent 31 lines of output in pod analytics-pod,kubectl logs --tail=31 analytics-pod
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 9090 9090
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8080 8088
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""internal-apps"" API group",kubectl get deployments.beta-1.0.internal-apps -o json
Import environment from a secret,kubectl set env --from=secret/api-secret-key deployment/frontend-deployment
"List deployments in YAML output format, in the ""custom-version"" version of the ""extensions"" API group",kubectl get deployments.custom-version.extensions -o yaml
"If the deployment named db-migration-replicaset's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/db-migration-replicaset
Set deployment cache-cluster-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment cache-cluster-deployment kube-scheduler
Add a taint with key 'disktype' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  disktype=dev-node-4:PreferNoSchedule
"Scale a resource identified by type and name specified in ""pod.json"" to 3",kubectl scale --replicas=3 -f pod.json
"Check to see if I can get the job named ""load-testing-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/load-testing-job -n testing
Create a copy of api-service-pod changing all container images to golang,kubectl debug api-service-pod --copy-to=debug-image-web --set-image=*=golang
"Set a deployments amazonlinux container cpu limits to ""2"" and memory to ""512Mi""","kubectl set resources deployment amazonlinux -c=nginx --limits=cpu=2,memory=512Mi"
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.dev-context.cluster my-k8s-cluster
"Listen on port 8888 locally, forwarding to 8081 in the pod",kubectl port-forward pod/mypod 8888:8081
Start a golang pod and let the container expose port 7000,kubectl run hazelcast --image=golang --port=7000
Update pod 'vpn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods vpn tier-
"Auto scale a deployment ""media-stream"", with the number of pods between 3 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment media-stream --min=3 --max=15
Return snapshot logs from container payment-processor-deployment-1 of a deployment named mypod,kubectl logs deployment/payment-processor-deployment -c mypod-1
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/api-service-pod
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.testing-context.cluster prod-cluster
Update image of all containers of daemonset namespace-2 to 'wordpress:5.8.1',kubectl set image daemonset namespace-2 *=wordpress:5.8.1
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/ui-config deployment/gateway-deployment
"Update pod 'backend' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend expiration-date='2024-12-31'
"Update pod 'monitoring' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring custom-label=my-custom-value
Add a taint with key 'special' on nodes having label myLabel,kubectl taint node -l myLabel  special=k8s-node-1:PreferNoSchedule
Create a new secret named azure-storage-secret from an env file,kubectl create secret generic azure-storage-secret --from-env-file=path/to/parameters.env
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8000 8000
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/api-config deployment/order-processing-deployment
Roll back to daemonset revision 3,kubectl rollout undo daemonset/services --to-revision=3
Create a copy of mypod changing all container images to ethereum/client-go,kubectl debug mypod --copy-to=dgb-img --set-image=*=ethereum/client-go
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=web-cluster
"Update pod 'web' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web expiration-date='2024-12-31'
Create a job with a command,kubectl create job cleanup --image=ethereum/client-go -- geth version
"Delete pods and services with same names ""gateway"" and ""auth""","kubectl delete pod,service gateway auth"
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/security-service-pod 8088:8088
Scale a replica set named 'baz' to 5,kubectl scale --replicas=5 rs/baz
Delete a pod using the type and name specified in preferences.json,kubectl delete -f ./preferences.json
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod auth-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach auth-service-pod -c cosmic-container -i -t
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-security-service
View the rollout history of a deployment,kubectl rollout history deployment/development
Create a new secret named encryption-key-secret with key1=supersecret and key2=topsecret,kubectl create secret generic encryption-key-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
Create a job with a command,kubectl create job cleanup --image=ubuntu -- docker run -it ubuntu
Update image of all containers of daemonset prod to 'ubuntu:20.04',kubectl set image daemonset prod *=ubuntu:20.04
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""mobile-apps"" API group",kubectl get deployments.feature-branch-2.3.0.mobile-apps -o yaml
"Create a service for an node deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment node --port=8082 --target-port=330600
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/log-aggregator-pod 8080:3000
"Create a service for a replicated hazelcast using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs hazelcast --port=9091 --target-port=543200
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/global-config deployment/monitoring-stack-deployment
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""testing-apps"" API group",kubectl get deployments.dev-2.2.0.testing-apps -o yaml
"Start a ethereum/client-go pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ethereum/client-go --overrides='{ ""apiVersion"": ""feature-branch-2.3.0"", ""spec"": { ... } }'"
Update pod 'api' only if the resource is unchanged from version 1,kubectl label pods api status=unhealthy --resource-version=1
Create a deployment named loadbalancer that runs the mongo image with 2 replicas,kubectl create deployment loadbalancer --image=mongo --replicas=2
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/log-aggregator-deployment -c monitoring-pod-1
Add a taint with key 'zone' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  zone=worker-node-3:PreferNoSchedule
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/properties/file2.txt
Remove from node 'backup-node-14' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes backup-node-14 environment:NoSchedule-
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod monitoring-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach monitoring-pod -c cosmic-container -i -t
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/web-app-pod 8081:8081
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-config deployment/mydeployment
"Mark node ""backup-node-14"" as schedulable",kubectl uncordon backup-node-14
Show metrics for the pods defined by label tier=frontend,kubectl top pod -l tier=frontend
Describe a node,kubectl describe nodes analytics-node-9.analytics-cluster.local
Create a new ExternalName service named external-caching-service,kubectl create service externalname external-caching-service --external-name documentation-tech.tech
Set deployment notification-handler-deployment's service account to elasticsearch,kubectl set serviceaccount deployment notification-handler-deployment elasticsearch
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod frontend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach frontend-pod -c cosmic-container -i -t
Begin streaming the logs of the warp-drive container in pod e-commerce-pod,kubectl logs -f -c warp-drive e-commerce-pod
Create a job with a command,kubectl create job report-generation-job --image=docker.elastic.co/elasticsearch/elasticsearch -- elasticsearch --version
Scale multiple replication controllers,kubectl scale --replicas=5 rc/foo rc/bar rc/baz
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 6379 8081
Create a deployment named mattermost that runs the php image and expose port 27017,kubectl create deployment mattermost --image=php --port=27017
Resume an already paused deployment,kubectl rollout resume deployment/prod
"Delete pods and services with same names ""security"" and ""auth""","kubectl delete pod,service security auth"
Add a taint with key 'hardware' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  hardware=monitoring-node-15:PreferNoSchedule
Use the context for the cluster-alpha cluster,kubectl config use-context cluster-alpha
Add to node 'edge-node-10' a taint with key 'zone' and no value,kubectl taint nodes edge-node-10 zone:NoSchedule
"Get output from running 'node --version' command from the first pod of the deployment log-aggregator-deployment, using the first container by default",kubectl exec deploy/log-aggregator-deployment -- node --version
"Listen on port 9090 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 9090:8080
Create a job with a command,kubectl create job indexing --image=ethereum/client-go -- geth version
"Run a proxy to the Kubernetes API server on port 8088, serving static content from ./local/www/",kubectl proxy --port=8088 --www=./local/www/
Start a hazelcast pod and let the container expose port 3001,kubectl run hazelcast --image=hazelcast/hazelcast --port=3001
Create a job with a command,kubectl create job batch-processing --image=redis -- redis-server
Remove from node 'k8s-node-1' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes k8s-node-1 dedicated:NoSchedule-
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/auth-service-pod
Create a copy of gateway-pod changing all container images to wordpress,kubectl debug gateway-pod --copy-to=debug-image-app --set-image=*=wordpress
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=settings=/path/to/configurations/file1.txt --from-file=key2=/path/to/properties/file2.txt
Start a node pod and let the container expose port 5432,kubectl run hazelcast --image=node --port=5432
Create a new secret named docker-registry-secret with keys for each file in folder bar,kubectl create secret generic docker-registry-secret --from-file=path/to/settings
Get output from code-explorer from pod email-service-pod,kubectl attach email-service-pod -c code-explorer
Set deployment mydeployment's service account to kube-proxy,kubectl set serviceaccount deployment mydeployment kube-proxy
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod api-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach api-service-pod -c astro-container -i -t
"Listen on port 3000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 3000:9090
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.app-2-context.cluster dev-cluster
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name education-edu.edu
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json criticality=high
Get output from running the 'gem --version' command in nebula-navigator from pod mypod,kubectl exec mypod -c nebula-navigator -- gem --version
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/api-service-pod 9090 6379
Create a copy of database-pod adding a debug container and changing container images,"kubectl debug database-pod -it --copy-to=debug-image-web --image=debian --set-image=web=nginx:latest,scheduler=my-scheduler:1.0"
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/vpn-service-pod
"Listen on port 8000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8000:8000"
"Create a service for a replicated nginx using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs nginx --port=3001 --target-port=844300
Display only the most recent 5 lines of output in pod gateway-pod,kubectl logs --tail=5 gateway-pod
Start a wordpress pod and let the container expose port 8888,kubectl run hazelcast --image=wordpress --port=8888
Return only the phase value of the specified pod,kubectl get -o template pod/payment-gateway-pod --template={{.status.phase}}
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=5001 --target-port=808200
Create a job with a command,kubectl create job log-collection --image=mysql -- mysql
Copy /tmp/foo local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo argocd/metrics-exporter-pod-10:/etc/kubernetes
Create a deployment named logging that runs the postgres image,kubectl create deployment logging --image=postgres
Create a new NodePort service named proxy-service-nodeport,kubectl create service nodeport proxy-service-nodeport --tcp=8080:27017
Add a taint with key 'dedicated' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  dedicated=prod-node-5:PreferNoSchedule
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json git-repo='https://github.com/example/my-app'
Create a new LoadBalancer service named vpn-service-lb,kubectl create service loadbalancer vpn-service-lb --tcp=8181:8084
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=conf=/path/to/configs/file1.txt --from-file=data=/path/to/options/file2.txt
"Listen on port 8081 locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod 8081:5000
Create a new secret named app-config-secret using a combination of a file and a literal,kubectl create secret generic app-config-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
Get output from running the 'pip --version' command in rocket-ranger from pod proxy-server-pod,kubectl exec proxy-server-pod -c rocket-ranger -- pip --version
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod :8088
Create a new secret named gcp-service-account-secret with keys for each file in folder bar,kubectl create secret generic gcp-service-account-secret --from-file=path/to/data
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/web-app-pod
Return snapshot of previous terminated rocket-ranger container logs from pod database-pod,kubectl logs -p -c rocket-ranger database-pod
"Listen on port 8081 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8081:8088
"Listen on port 5000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5000:8088
"Listen on port 8000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8000:3000"
Scale a replica set named 'prod-app-rs' to 7,kubectl scale --replicas=7 rs/prod-app-rs
Add to node 'storage-node-13' a taint with key 'zone' and no value,kubectl taint nodes storage-node-13 zone:NoSchedule
Return snapshot of previous terminated stardust-shuttle container logs from pod web-app-pod,kubectl logs -p -c stardust-shuttle web-app-pod
Begin streaming the logs of the astro-container container in pod web-app-pod,kubectl logs -f -c astro-container web-app-pod
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""third-party-apps"" API group",kubectl get deployments.feature-branch-2.3.0.third-party-apps -o yaml
Create a copy of database-pod adding a debug container and changing container images,"kubectl debug database-pod -it --copy-to=debug-image-memcached --image=debian --set-image=mailer=mailer:latest,web=nginx:latest"
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.local-context.cluster prod-cluster
Roll back to daemonset revision 3,kubectl rollout undo daemonset/app-v2 --to-revision=3
Remove from node 'node-2' all the taints with key 'datacenter',kubectl taint nodes node-2 datacenter-
Get output from running the 'geth attach' command in time-machine from pod analytics-pod,kubectl exec analytics-pod -c time-machine -- geth attach
"Listen on port 3000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 3000:6379
"List deployments in JSON output format, in the ""custom-version"" version of the ""testing-apps"" API group",kubectl get deployments.custom-version.testing-apps -o json
Edit the job 'load-testing-job' in JSON using the v1 API format,kubectl edit job.v1.batch/load-testing-job -o json
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 9090 6379
Update deployment 'proxy-service-deployment' with a new environment variable,kubectl set env deployment/proxy-service-deployment ENV=prod
Create a job with a command,kubectl create job cleanup --image=docker.elastic.co/elasticsearch/elasticsearch -- elasticsearch --version
"Embed client certificate data in the ""api-user"" entry",kubectl config set-credentials api-user --client-certificate=~/.kube/admin.crt --embed-certs=true
Return snapshot logs from first container of a job named backup-job,kubectl logs job/backup-job
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.prod-context.cluster sun-cluster
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/backend-pod 8081 8081
"List deployments in YAML output format, in the ""custom-version"" version of the ""legacy-apps"" API group",kubectl get deployments.custom-version.legacy-apps -o yaml
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/proxy-server-pod 8888:8080
Diff resources included in settings.json,kubectl diff -f settings.json
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod proxy-server-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-server-pod -c lunar-launcher -i -t
Begin streaming the logs of the nebula-navigator container in pod database-pod,kubectl logs -f -c nebula-navigator database-pod
Create a deployment named logging that runs the amazonlinux image with 6 replicas,kubectl create deployment logging --image=amazonlinux --replicas=6
Create a job with a command,kubectl create job log-processing-job --image=mysql -- mysql
Get output from running the 'elasticsearch-plugin --list' command in quantum-quark from pod analytics-pod,kubectl exec analytics-pod -c quantum-quark -- elasticsearch-plugin --list
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8888 5432
Copy ~/.config/kube from a remote pod to /tmp/bar locally,kubectl cp kube-proxy/backend-pod-13:~/.config/kube /tmp/bar
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=dev-cluster
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.admin-context.cluster testing-cluster
Create a pod disruption budget named database-pdb that will select all pods with the owner=team-1 label # and require at least one of them being available at any point in time,kubectl create poddisruptionbudget database-pdb --selector=owner=team-1 --min-available=1
"Start a mongo pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mongo --overrides='{ ""apiVersion"": ""v1.1.0"", ""spec"": { ... } }'"
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod 6379:3000
"Get output from running 'go version' command from the first pod of the service proxy-service, using the first container by default",kubectl exec svc/proxy-service -- go version
"Listen on port 8000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8000:8081
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp monitoring/image-resizer-pod-20:/tmp/foo /tmp/bar
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/cdn-service-pod 9090:8088
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node k8s-node-1 -p $'spec:\n someField: newValue'
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.cluster-1-context.cluster testing-cluster
Get the documentation of a specific field of a resource,kubectl explain resource=services.metadata.namespace
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/monitoring-config deployment/cache-cluster-deployment
"Listen on port 8080 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8080:3000
Create a job with a command,kubectl create job backup --image=mongo -- mongo
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8888 9090
Get output from running the 'yum install -y aws-cli' command in warp-drive from pod database-pod,kubectl exec database-pod -c warp-drive -- yum install -y aws-cli
"Get output from running the 'postgres' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- postgres
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/api-config deployment/search-engine-deployment
"Get output from running the 'bash' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- bash
Return snapshot logs from container gateway-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/gateway-deployment -c chat-app-pod-1
Edit the service named 'loadbalancer-service',kubectl edit svc/loadbalancer-service
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/monitoring-config deployment/analytics-platform-deployment
Update all deployments' and rc's nginx container's image to 'amazonlinux:2',"kubectl set image deployments,rc amazonlinux=amazonlinux:2 --all"
Start a php pod and let the container expose port 9092,kubectl run hazelcast --image=php --port=9092
Get output from running the 'ash' command in code-explorer from pod backend-pod,kubectl exec backend-pod -c code-explorer -- ash
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.user-a-context.cluster staging-cluster
"Listen on port 8888 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8888:3000
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=on-prem-cluster
Create a new secret named docker-registry-secret with keys for each file in folder bar,kubectl create secret generic docker-registry-secret --from-file=path/to/options
Create a new secret named database-secret from an env file,kubectl create secret generic database-secret --from-env-file=path/to/configs.env
Return snapshot of previous terminated warp-drive container logs from pod vpn-service-pod,kubectl logs -p -c warp-drive vpn-service-pod
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/monitoring-config deployment/proxy-service-deployment
Start a mongo pod and let the container expose port 9090,kubectl run hazelcast --image=mongo --port=9090
"Check to see if I can get the job named ""report-generation-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/report-generation-job -n staging
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 3000 8081
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.cluster-1-context.cluster prod-cluster
"Update node 'storage-node-13' with a taint with key 'hardware' and value 'gpu' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes storage-node-13 hardware=gpu:NoExecute
Update all deployments' and rc's nginx container's image to 'redis:6.2.5',"kubectl set image deployments,rc redis=redis:6.2.5 --all"
Delete the moon-cluster cluster,kubectl config delete-cluster moon-cluster
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8080 8080
"Auto scale a deployment ""frontend"", with the number of pods between 6 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=6 --max=10
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/global-config deployment/authentication-service-deployment
Create a new config map named monitoring-config from an env file,kubectl create configmap monitoring-config --from-env-file=path/to/options.env
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 5432 9090
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/kube-system-config deployment/web-app-deployment
Remove from node 'dev-node-4' all the taints with key 'app',kubectl taint nodes dev-node-4 app-
Create a new config map named kube-system-config from an env file,kubectl create configmap kube-system-config --from-env-file=path/to/data.env
Create a copy of gateway-pod changing all container images to mysql,kubectl debug gateway-pod --copy-to=debug-image-memcached --set-image=*=mysql
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=5000:9091
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/e-commerce-pod 9090:8000
"Listen on port 5000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5000:5000
"Listen on port 9090 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 9090:8088"
Create a new config map named app-config-prod with key1=config1 and key2=config2,kubectl create configmap app-config-prod --from-literal=conf=config1 --from-literal=data=config2
"Delete pods and services with same names ""security"" and ""vpn""","kubectl delete pod,service security vpn"
"Get output from running 'psql' command from the first pod of the service backend-service, using the first container by default",kubectl exec svc/backend-service -- psql
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kube-system/admin-dashboard-pod-16:/tmp/foo /tmp/bar_dir
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp rook-ceph/backend-pod-13::/tmp/foo /tmp/bar
Embed certificate authority data for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --embed-certs --certificate-authority=~/.kube/e2e/kubernetes.ca.crt
"Update pod 'security' with the annotation 'contact-email' and the value 'support@example.com', overwriting any existing value",kubectl annotate --overwrite pods security contact-email='support@example.com'
Return snapshot logs from container user-management-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/user-management-deployment -c analytics-pod-1
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8080 9090
Remove from node 'db-node-7' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes db-node-7 dedicated:NoSchedule-
"Create a service for a pod web-app-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod web-app-pod --port=8181 --name=frontend
Deny CSR 'csr-mongo-13',kubectl certificate deny csr-mongo-13
Set deployment cache-cluster-deployment's service account to cert-manager,kubectl set serviceaccount deployment cache-cluster-deployment cert-manager
View the rollout history of a deployment,kubectl rollout history deployment/namespace-1
Update image of all containers of daemonset nginx to 'openjdk:16.0.2',kubectl set image daemonset nginx *=openjdk:16.0.2
"Listen on port 3000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/scheduler-service 3000:https
Add a taint with key 'datacenter' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  datacenter=storage-node-13:PreferNoSchedule
"Auto scale a replication controller ""email"", with the number of pods between 1 and 3, target CPU utilization at 60%",kubectl autoscale rc email --max=3 --cpu-percent=60
Unset namespace in app-2-context context,kubectl config unset contexts.app-2-context.namespace
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-settings deployment/cache-cluster-deployment
Create a new ExternalName service named external-dns-service,kubectl create service externalname external-dns-service --external-name bar.com
Set the user field on the local-context context entry without touching other values,kubectl config set-context local-context --user=cluster-admin
"List deployments in JSON output format, in the ""custom-version"" version of the ""internal-apps"" API group",kubectl get deployments.custom-version.internal-apps -o json
"Listen on port 8080 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8080:6379"
Create a job with a command,kubectl create job log-processing-job --image=mongo -- mongo
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/monitoring-pod
Add to node 'gpu-node-12' a taint with key 'datacenter' and no value,kubectl taint nodes gpu-node-12 datacenter:NoSchedule
Set deployment mydeployment's service account to jenkins,kubectl set serviceaccount deployment mydeployment jenkins
Begin streaming the logs of the cosmic-container container in pod database-pod,kubectl logs -f -c cosmic-container database-pod
"Delete pods and services with same names ""backend"" and ""web""","kubectl delete pod,service backend web"
Add a taint with key 'workload' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  workload=kube-master-9:PreferNoSchedule
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod :5432
Return snapshot of previous terminated quantum-quark container logs from pod media-stream-pod,kubectl logs -p -c quantum-quark media-stream-pod
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/chat-app-pod 3000:8081
Get output from running the 'psql' command in nano-bot from pod auth-service-pod,kubectl exec auth-service-pod -c nano-bot -- psql
"Listen on port 9090 locally, forwarding to 9090 in the pod",kubectl port-forward pod/analytics-pod 9090:9090
"Update pod 'email' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email owner='alice smith'
Copy /tmp/foo_dir from a remote pod to /tmp/bar locally,kubectl cp logging/ingress-controller-pod-8:/tmp/foo_dir /tmp/bar
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/db-service"
Set the server field on the app-cluster cluster to https://1.2.3.4,kubectl config set clusters.app-cluster.server https://1.2.3.4
Resume an already paused deployment,kubectl rollout resume deployment/namespace-2
Create a cron job with a command,"kubectl create cronjob log-rotation --image=amazonlinux --schedule=""*/1 * * * *"" -- yum install -y aws-cli"
Begin streaming the logs of the stardust-shuttle container in pod email-service-pod,kubectl logs -f -c stardust-shuttle email-service-pod
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-config deployment/analytics-platform-deployment
"Create a service for a pod backend-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod backend-pod --port=8083 --name=frontend
"Update pod 'security' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security SLA='99.9% uptime'
"Set a deployments ruby container cpu limits to ""5"" and memory to ""4Gi""","kubectl set resources deployment ruby -c=nginx --limits=cpu=5,memory=4Gi"
Create a new LoadBalancer service named auth-service-lb,kubectl create service loadbalancer auth-service-lb --tcp=8888:8888
Set the resource request and limits for all containers in mysql,"kubectl set resources deployment mysql --limits=cpu=200m,memory=512Mi --requests=cpu=10,memory=64Mi"
"Listen on port 5000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 5000:9090"
Update deployment 'payment-processor-deployment' with a new environment variable,kubectl set env deployment/payment-processor-deployment DB_HOST=localhost
Update image of all containers of daemonset development to 'golang:1.17',kubectl set image daemonset development *=golang:1.17
Create a copy of log-aggregator-pod adding a debug container and changing container images,"kubectl debug log-aggregator-pod -it --copy-to=debug-image-memcached --image=debian --set-image=api=api:v2,app=app:debug"
Remove from node 'web-node-8' all the taints with key 'disktype',kubectl taint nodes web-node-8 disktype-
Begin streaming the logs of the ruby container in pod gateway-pod,kubectl logs -f -c ruby gateway-pod
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=on-prem-cluster
"Listen on port 8080 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8080:5432"
"Check to see if I can get the job named ""backup-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/backup-job -n production
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/log-aggregator-deployment -c e-commerce-pod-1
Copy ~/.config/kube_dir local directory to /etc/kubernetes_dir in a remote pod in the default namespace,kubectl cp ~/.config/kube_dir load-balancer-pod-9:/etc/kubernetes_dir
Start the python pod using a different command and custom arguments,kubectl run nginx --image=python --command -- <cmd> <arg1> ... <argN>
"Get output from running 'node --version' command from the first pod of the service user-service, using the first container by default",kubectl exec svc/user-service -- node --version
"Listen on port 8080 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8080:8888"
Return snapshot of previous terminated rocket-ranger container logs from pod proxy-server-pod,kubectl logs -p -c rocket-ranger proxy-server-pod
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/email-service 9090:https
Rename the context 'cloud-context' to 'new-context' in your kubeconfig file,kubectl config rename-context cloud-context new-context
"Delete pods and services with same names ""media-stream"" and ""database""","kubectl delete pod,service media-stream database"
Get output from the first pod of a replica set named ruby,kubectl attach rs/ruby
Start a wordpress pod and let the container expose port 9092,kubectl run hazelcast --image=wordpress --port=9092
"Listen on port 8088 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8088:5432
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=conf=/path/to/settings/file1.txt --from-file=data=/path/to/settings/file2.txt
"Create a service for a replication controller identified by type and name specified in ""ubuntu-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f ubuntu-controller.yaml --port=5000 --target-port=808200
Create a deployment named mattermost that runs the mongo image and expose port 9092,kubectl create deployment mattermost --image=mongo --port=9092
Set deployment backend-microservice-deployment's service account to elasticsearch,kubectl set serviceaccount deployment backend-microservice-deployment elasticsearch
"Update pod 'vpn' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods vpn security-scan-status='pass'
"Start a wordpress pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=wordpress --overrides='{ ""apiVersion"": ""legacy-1.0.0"", ""spec"": { ... } }'"
Create a new ExternalName service named external-geolocation-service,kubectl create service externalname external-geolocation-service --external-name blog-test.blog
"Listen on port 5432 locally, forwarding to 8088 in the pod",kubectl port-forward pod/analytics-pod 5432:8088
Create a new ExternalName service named external-identity-provider-service,kubectl create service externalname external-identity-provider-service --external-name sandbox-site.co
Update deployment 'api-server-deployment' with a new environment variable,kubectl set env deployment/api-server-deployment MAX_CONNECTIONS=100
Set only the server field on the cluster-gamma cluster entry without touching other values,kubectl config set-cluster cluster-gamma --server=https://1.2.3.4
"Create a cluster role name ""reader"" with AggregationRule specified","kubectl create clusterrole reader --aggregation-rule=""rbac.example.com/aggregate-to-security=true"""
"Create a single ingress called 'app-ingress' that directs requests to foo.com/bar to svc # svc1:9092 with a tls secret ""my-cert""","kubectl create ingress app-ingress --rule=""foo.com/bar=svc1:9092,tls=my-cert"""
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/namespace-config deployment/search-engine-deployment
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.user-a-context.cluster kube-cluster-2
Update a cluster role binding for istio,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:istio
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod 8088:8081
"Listen on port 6379 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 6379:8080"
"Get output from running the 'geth version' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- geth version
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=on-prem-cluster
"Create a job from a cron job named ""cron-task""",kubectl create job test-job --from=cronjob/cron-task
Update image of all containers of daemonset development to 'php:7.4.22',kubectl set image daemonset development *=php:7.4.22
Add a taint with key 'special' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  special=backup-node-14:PreferNoSchedule
Create a new config map named namespace-config with key1=config1 and key2=config2,kubectl create configmap namespace-config --from-literal=conf=config1 --from-literal=data=config2
"Create a cluster role named ""bar"" with ResourceName specified",kubectl create clusterrole bar --verb=use --resource=pods --resource-name=billing-service --resource-name=content-delivery
"Get output from running the 'irb' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- irb
"Delete pods and services with same names ""payment"" and ""vpn""","kubectl delete pod,service payment vpn"
Set deployment order-processing-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment order-processing-deployment kube-scheduler
"Listen on port 8088 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8088:6379
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/proxy-server-pod 8080:8081
Create a deployment named monitoring that runs the alpine image and expose port 8088,kubectl create deployment monitoring --image=alpine --port=8088
"Listen on port 5000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5000:5000
Set the resource request and limits for all containers in nginx,"kubectl set resources deployment nginx --limits=cpu=200m,memory=512Mi --requests=cpu=500m,memory=2Gi"
"If the deployment named webapp-replicaset's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/webapp-replicaset
Remove from node 'storage-node-13' all the taints with key 'disktype',kubectl taint nodes storage-node-13 disktype-
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.cloud-context.cluster testing-cluster
Remove from node 'k8s-node-1' all the taints with key 'hardware',kubectl taint nodes k8s-node-1 hardware-
"Get output from running the 'yum install -y aws-cli' command from pod payment-gateway-pod, using the first container by default",kubectl exec payment-gateway-pod -- yum install -y aws-cli
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/cdn-service-pod
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=conf=/path/to/settings/file1.txt --from-file=data=/path/to/options/file2.txt
Get output from nebula-navigator from pod media-stream-pod,kubectl attach media-stream-pod -c nebula-navigator
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8080 3000
Update pod 'frontend' with the label 'component' and the value 'api',kubectl label pods frontend component=api
"Start a jenkins pod and set environment variables ""DNS_DOMAIN=cluster"" and ""POD_NAMESPACE=default"" in the container","kubectl run hazelcast --image=jenkins --env=""DNS_DOMAIN=cluster"" --env=""POD_NAMESPACE=default"""
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod web-app-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=9091 --target-port=300100
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=settings=/path/to/settings/file1.txt --from-file=key2=/path/to/profiles/file2.txt
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/analytics-pod
Update pod 'payment' with the label 'component' and the value 'worker',kubectl label pods payment component=worker
"Listen on port 8080 locally, forwarding to 8080 in the pod",kubectl port-forward pod/frontend-pod 8080:8080
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n staging
Update pod 'media-stream' with the label 'component' and the value 'api',kubectl label pods media-stream component=api
Add a taint with key 'hardware' on nodes having label myLabel,kubectl taint node -l myLabel  hardware=backup-node-14:PreferNoSchedule
Scale a replica set named 'bar' to 3,kubectl scale --replicas=3 rs/bar
Start a python pod and let the container expose port 8089,kubectl run hazelcast --image=python --port=8089
Import environment from a secret,kubectl set env --from=secret/oauth-secret deployment/monitoring-stack-deployment
Set deployment cache-cluster-deployment's service account to default,kubectl set serviceaccount deployment cache-cluster-deployment default
"Check to see if I can get the job named ""image-processing-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/image-processing-job -n production
Create a new ClusterIP service named analytics-service-clusterip,kubectl create service clusterip analytics-service-clusterip --tcp=3306:8083
Get output from stardust-shuttle from pod web-app-pod,kubectl attach web-app-pod -c stardust-shuttle
"Update pod 'proxy' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy deployment-script='https://example.com/deploy.sh'
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 5432 6379
"Create a single ingress called 'default-ingress' that directs requests to foo.com/example to svc # svc1:27017 with a tls secret ""my-cert""","kubectl create ingress default-ingress --rule=""foo.com/example=svc1:27017,tls=my-cert"""
Create a deployment named auth that runs the centos image and expose port 27017,kubectl create deployment auth --image=centos --port=27017
Create a new secret named ssl-key-secret from an env file,kubectl create secret generic ssl-key-secret --from-env-file=path/to/options.env
"Listen on port 8088 locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod 8088:5000
Add a taint with key 'hardware' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  hardware=prod-node-5:PreferNoSchedule
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=testing-cluster
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/data/file2.txt
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/order-service"
Create an ingress with TLS enabled using a specific secret and pathType as Prefix,"kubectl create ingress ingsecret --class=default \
--rule=""testing.com/*=svc:27017,tls=secret1"""
Add a taint with key 'dedicated' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  dedicated=dev-node-4:PreferNoSchedule
Update image of all containers of daemonset namespace-2 to 'ubuntu:20.04',kubectl set image daemonset namespace-2 *=ubuntu:20.04
Remove from node 'web-node-8' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes web-node-8 environment:NoSchedule-
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/loadbalancer-service"
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json owner='alice smith'
"List deployments in JSON output format, in the ""custom-version"" version of the ""api-v1"" API group",kubectl get deployments.custom-version.api-v1 -o json
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/security-service-pod 3000:6379
Get output from running the 'geth version' command in time-machine from pod vpn-service-pod,kubectl exec vpn-service-pod -c time-machine -- geth version
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=27017:8888
Create a deployment named drupal that runs the node image,kubectl create deployment drupal --image=node
"Listen on port 8888 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/logging-service 8888:https
"Create a single ingress called 'web-ingress' that directs requests to site.com/example to svc # svc1:8082 with a tls secret ""my-cert""","kubectl create ingress web-ingress --rule=""site.com/example=svc1:8082,tls=my-cert"""
"Set a deployments nginx container cpu limits to ""2"" and memory to ""64Mi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=2,memory=64Mi"
Remove from node 'kube-master-9' all the taints with key 'cpu-type',kubectl taint nodes kube-master-9 cpu-type-
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=8010 --target-port=801000
Add a taint with key 'disktype' on nodes having label release=beta,kubectl taint node -l release=beta  disktype=testing-node-11:PreferNoSchedule
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""legacy-apps"" API group",kubectl get deployments.v1.0.0.legacy-apps -o json
Create a job with a command,kubectl create job audit-job --image=confluentinc/cp-kafka -- kafka-topics --list
"Update pod 'vpn' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn criticality=high
"Update pod 'email' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods email env='staging'
"Create a service for a replicated nginx using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs nginx --port=8083 --target-port=909200
Get output from running the 'mongod' command in stardust-shuttle from pod frontend-pod,kubectl exec frontend-pod -c stardust-shuttle -- mongod
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=properties=/path/to/configs/file1.txt --from-file=key1=/path/to/data/file2.txt
Update image of all containers of daemonset test to 'httpd:2.4.48',kubectl set image daemonset test *=httpd:2.4.48
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/gateway-pod
Create a new secret named monitoring-credentials-secret with keys for each file in folder bar,kubectl create secret generic monitoring-credentials-secret --from-file=path/to/configurations
Create a new ExternalName service named external-analytics-service,kubectl create service externalname external-analytics-service --external-name sandbox-site.co
Start a wordpress pod and let the container expose port 5432,kubectl run hazelcast --image=wordpress --port=5432
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=conf=/path/to/configurations/file1.txt --from-file=data=/path/to/parameters/file2.txt
Create a job with a command,kubectl create job data-migration-job --image=ruby -- ruby --version
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-secrets deployment/analytics-platform-deployment
Update deployment 'api-server-deployment' with a new environment variable,kubectl set env deployment/api-server-deployment SMTP_USERNAME=your-username
Get output from running the 'ruby --version' command in quantum-quark from pod gateway-pod,kubectl exec gateway-pod -c quantum-quark -- ruby --version
"Listen on port 8080 locally, forwarding to 8000 in the pod",kubectl port-forward pod/e-commerce-pod 8080:8000
"Update pod 'auth' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth scaling-policy=auto-horizontal-scaling
Remove from node 'monitoring-node-15' all the taints with key 'workload',kubectl taint nodes monitoring-node-15 workload-
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""v1.1.0"", ""spec"": { ... } }'"
"Run a proxy to the Kubernetes API server on port 8888, serving static content from ./local/www/",kubectl proxy --port=8888 --www=./local/www/
Set deployment authentication-service-deployment's service account to flux,kubectl set serviceaccount deployment authentication-service-deployment flux
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8000 8081
"Check to see if I can get the job named ""load-testing-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/load-testing-job -n cert-manager
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-config-prod deployment/search-engine-deployment
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/profiles/file2.txt
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""backup-apps"" API group",kubectl get deployments.v2.1.0.backup-apps -o json
Remove from node 'app-node-6' all the taints with key 'datacenter',kubectl taint nodes app-node-6 datacenter-
Begin streaming the logs of the rocket-ranger container in pod e-commerce-pod,kubectl logs -f -c rocket-ranger e-commerce-pod
Create a new secret named aws-credentials-secret from an env file,kubectl create secret generic aws-credentials-secret --from-env-file=path/to/configs.env
"Check to see if I can get the job named ""cron-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/cron-job -n kube-system
"Start a php pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=php --restart=Never
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=6379 --target-port=8000
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.status.serviceName
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=5000:5001
Return snapshot logs from container email-server-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/email-server-deployment -c log-aggregator-pod-1
Start a ubuntu pod and let the container expose port 8083,kubectl run hazelcast --image=ubuntu --port=8083
Create a copy of email-service-pod adding a debug container and changing container images,"kubectl debug email-service-pod -it --copy-to=my-debugger --image=debian --set-image=app=app:debug,database=mysql:5.7"
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=data-cluster
Update pod 'auth' with the label 'component' and the value 'worker',kubectl label pods auth component=worker
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8081 9090
Add to node 'web-node-8' a taint with key 'datacenter' and no value,kubectl taint nodes web-node-8 datacenter:NoSchedule
Start a jenkins pod and let the container expose port 8000,kubectl run hazelcast --image=jenkins --port=8000
Return snapshot logs from container authentication-service-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/authentication-service-deployment -c auth-service-pod-1
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/proxy-server-pod 3000:6379
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=moon-cluster
"Listen on port 5432 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5432:5000
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5000:9090
Return snapshot of previous terminated stardust-shuttle container logs from pod analytics-pod,kubectl logs -p -c stardust-shuttle analytics-pod
Create a job with a command,kubectl create job scaling-job --image=mysql -- mysql
Update image of all containers of daemonset namespace-1 to 'amazonlinux:2',kubectl set image daemonset namespace-1 *=amazonlinux:2
Unset namespace in app-1-context context,kubectl config unset contexts.app-1-context.namespace
Get output from lunar-launcher from pod monitoring-pod,kubectl attach monitoring-pod -c lunar-launcher
Start a confluentinc/cp-kafka pod and let the container expose port 8000,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8000
Create a new secret named ldap-credentials-secret from an env file,kubectl create secret generic ldap-credentials-secret --from-env-file=path/to/settings.env
Start a centos pod and let the container expose port 3001,kubectl run hazelcast --image=centos --port=3001
Add to node 'prod-node-5' a taint with key 'disktype' and no value,kubectl taint nodes prod-node-5 disktype:NoSchedule
Update image of all containers of daemonset test to 'php:7.4.22',kubectl set image daemonset test *=php:7.4.22
Set deployment user-management-deployment's service account to default,kubectl set serviceaccount deployment user-management-deployment default
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/api-config deployment/email-server-deployment
Add a taint with key 'datacenter' on nodes having label environment=production,kubectl taint node -l environment=production  datacenter=storage-node-13:PreferNoSchedule
"Create a service for a replicated wordpress using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs wordpress --port=8089 --target-port=801000
Start a amazonlinux pod and let the container expose port 6379,kubectl run hazelcast --image=amazonlinux --port=6379
"Delete pods and services with same names ""foo"" and ""log-aggregator""","kubectl delete pod,service foo log-aggregator"
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node worker-node-3 -p $'spec:\n someField: newValue'
"Listen on port 5000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod 5000:8088
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp argocd/message-broker-pod-15:~/.config/kube /tmp/bar_dir
Display only the most recent 3 lines of output in pod analytics-pod,kubectl logs --tail=3 analytics-pod
"Create a cluster role name ""admin_role"" with AggregationRule specified","kubectl create clusterrole admin_role --aggregation-rule=""rbac.example.com/aggregate-to-security=true"""
"Listen on port 9090 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 9090:8000"
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/logging-service"
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 9090 8888
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8080 8000
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kube-dns/web-app-pod-1::/tmp/foo :/tmp/bar
Update image of all containers of daemonset namespace-1 to 'ubuntu:20.04',kubectl set image daemonset namespace-1 *=ubuntu:20.04
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp metallb-system/metrics-exporter-pod-10:~/.config/kube /tmp/bar_dir
"Listen on port 9090 locally, forwarding to 8081 in the pod",kubectl port-forward pod/cdn-service-pod 9090:8081
"Get output from running the 'geth' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- geth
"Listen on port 8888 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8888:6379
Copy /tmp/foo local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo kube-flannel/auth-service-pod-11::/tmp/bar
Create a deployment named web that runs the ethereum/client-go image with 7 replicas,kubectl create deployment web --image=ethereum/client-go --replicas=7
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/gateway-service"
"Listen on port 8081 locally, forwarding to 3000 in the pod",kubectl port-forward pod/log-aggregator-pod 8081:3000
Embed certificate authority data for the star-cluster cluster entry,kubectl config set-cluster star-cluster --embed-certs --certificate-authority=~/.kube/prod-cluster/kubernetes.ca.crt
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8088 8088
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/monitoring-config deployment/order-processing-deployment
Return snapshot of previous terminated ruby container logs from pod database-pod,kubectl logs -p -c ruby database-pod
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.cluster-1-context.cluster edge-cluster
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/frontend-pod 8888:3000
Create a new ExternalName service named external-metrics-service,kubectl create service externalname external-metrics-service --external-name bar.com
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.team-beta-context.cluster kube-cluster-2
"Update pod 'payment' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment last-deployment=2023-03-15
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/ui-config deployment/backend-microservice-deployment
"Create a single ingress called 'rontend-ingress' that directs requests to site.com/module to svc # svc1:27017 with a tls secret ""my-cert""","kubectl create ingress rontend-ingress --rule=""site.com/module=svc1:27017,tls=my-cert"""
Update deployment 'payment-processor-deployment' with a new environment variable,kubectl set env deployment/payment-processor-deployment REDIS_HOST=redis-server
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=galaxy-cluster
Update pod 'chat-app' with the label 'env' and the value 'development',kubectl label pods chat-app env=development
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""backup-apps"" API group",kubectl get deployments.v3.0.0.backup-apps -o yaml
"Listen on port 5000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/analytics-pod 5000:5000
Embed certificate authority data for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --embed-certs --certificate-authority=~/.kube/kube-cluster-2/kubernetes.ca.crt
Create a job with a command,kubectl create job audit-job --image=php --
"Listen on port 8088 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8088:9090
Add a taint with key 'datacenter' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  datacenter=node-1:PreferNoSchedule
Return snapshot logs from container email-server-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/email-server-deployment -c cdn-service-pod-1
Display only the most recent 53 lines of output in pod analytics-pod,kubectl logs --tail=53 analytics-pod
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=settings=/path/to/configurations/file1.txt --from-file=key2=/path/to/settings/file2.txt
Create a copy of web-app-pod changing all container images to mysql,kubectl debug web-app-pod --copy-to=debug-image-1 --set-image=*=mysql
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/web-service"
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/golang
Create a copy of media-stream-pod changing the command of rocket-ranger,kubectl debug media-stream-pod -it --copy-to=my-debugger --container=rocket-ranger -- sh
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.cluster-2-context.cluster edge-cluster
Set deployment user-management-deployment's service account to my-service-account,kubectl set serviceaccount deployment user-management-deployment my-service-account
"Get output from running the 'apk add curl' command from pod mypod, using the first container by default",kubectl exec mypod -- apk add curl
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/frontend-pod
Begin streaming the logs of the time-machine container in pod proxy-service-pod,kubectl logs -f -c time-machine proxy-service-pod
Update pod 'payment' with the label 'unhealthy' and the value 'true',kubectl label pods payment unhealthy=true
List resources from a directory with kustomization.yaml - e.g. options/kustomization.yaml,kubectl get -k options/
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/backend-pod 3000 3000
Get output from running the 'python' command in warp-drive from pod mypod,kubectl exec mypod -c warp-drive -- python
List the environment variables defined on a deployments 'backend-microservice-deployment',kubectl set env deployment/backend-microservice-deployment --list
Import environment from a secret,kubectl set env --from=secret/payment-gateway-secret deployment/mydeployment
"Delete pods and services with same names ""payment"" and ""backend""","kubectl delete pod,service payment backend"
"Mark node ""app-node-6"" as schedulable",kubectl uncordon app-node-6
"If the deployment named dev-environment-rs's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/dev-environment-rs
"Listen on port 9090 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 9090:5432
Get output from running the 'psql' command in stardust-shuttle from pod proxy-server-pod,kubectl exec proxy-server-pod -c stardust-shuttle -- psql
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 5432,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=5432
Update pod 'chat-app' with the label 'release' and the value 'v2.0',kubectl label pods chat-app release=v2.0
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/proxy-service-deployment CACHE_SIZE=64MB -o yaml
Replace a pod using the data in docker-registry.yaml,kubectl replace -f ./docker-registry.yaml
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=star-cluster
"Check to see if I can get the job named ""cron-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/cron-job -n kube-ingress
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 9090 5432
Get output from cosmic-container from pod analytics-pod,kubectl attach analytics-pod -c cosmic-container
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/frontend-pod
Create a deployment named wordpress that runs the ethereum/client-go image and expose port 8888,kubectl create deployment wordpress --image=ethereum/client-go --port=8888
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""my-apps"" API group",kubectl get deployments.rc-1.1.0.my-apps -o yaml
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-config-prod deployment/notification-handler-deployment
Display only the most recent 31 lines of output in pod gateway-pod,kubectl logs --tail=31 gateway-pod
"Listen on port 5000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod 5000:5000
Set deployment log-aggregator-deployment's service account to prometheus,kubectl set serviceaccount deployment log-aggregator-deployment prometheus
Start a mysql pod and let the container expose port 8083,kubectl run hazelcast --image=mysql --port=8083
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=3001:8081
Update pod 'web' with the label 'release' and the value 'v1.0',kubectl label pods web release=v1.0
Add a taint with key 'datacenter' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  datacenter=gpu-node-12:PreferNoSchedule
Set deployment database-deployment's service account to elasticsearch,kubectl set serviceaccount deployment database-deployment elasticsearch
Create a deployment named my-dep that runs the nginx image and expose port 8083,kubectl create deployment my-dep --image=nginx --port=8083
Copy ~/.config/kube local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp ~/.config/kube kube-proxy/logging-agent-pod-7:/tmp/bar_dir
"Listen on port 5000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5000:8080
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp kube-server/front-end-pod-12:/tmp/foo_dir :/tmp/bar
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 5432 9090
"Get output from running the 'sleep 3600' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- sleep 3600
Create a new secret named payment-gateway-secret from an env file,kubectl create secret generic payment-gateway-secret --from-env-file=path/to/settings.env
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/analytics-platform-deployment -c cdn-service-pod-1
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=settings=/path/to/properties/file1.txt --from-file=key2=/path/to/configs/file2.txt
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=prod-cluster
Get output from running the 'bash' command in astro-container from pod proxy-service-pod,kubectl exec proxy-service-pod -c astro-container -- bash
Return snapshot of previous terminated time-machine container logs from pod mypod,kubectl logs -p -c time-machine mypod
Update pod 'foo' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods foo tier-
Create a new LoadBalancer service named analytics-lb,kubectl create service loadbalancer analytics-lb --tcp=6379:8088
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/log-config deployment/proxy-service-deployment
"Delete pods and services with same names ""email"" and ""web""","kubectl delete pod,service email web"
Update pod 'monitoring' with the label 'release' and the value 'v2.0',kubectl label pods monitoring release=v2.0
Start a redis pod and let the container expose port 5432,kubectl run hazelcast --image=redis --port=5432
Return snapshot logs from all containers in pods defined by label stack=tech-stack,kubectl logs -l stack=tech-stack --all-containers=true
Import environment from a config map with a prefix,kubectl set env --from=configmap/log-config --prefix=MYSQL_ deployment/user-management-deployment
"List deployments in JSON output format, in the ""custom-version"" version of the ""apps"" API group",kubectl get deployments.custom-version.apps -o json
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/api-service-pod 3000 6379
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 6379 6379
Create a job with a command,kubectl create job scaling-job --image=centos -- bash
Show metrics for a given pod and its containers,kubectl top pod api-service-pod --containers
Create a copy of payment-gateway-pod changing all container images to hazelcast/hazelcast,kubectl debug payment-gateway-pod --copy-to=dgb-img --set-image=*=hazelcast/hazelcast
"Listen on port 3000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/security-service-pod 3000:8080
Create a new LoadBalancer service named monitoring-lb,kubectl create service loadbalancer monitoring-lb --tcp=5001:3306
Update pod 'api' with the label 'env' and the value 'staging',kubectl label pods api env=staging
Delete pods and services with label environment=production,"kubectl delete pods,services -l environment=production"
Return snapshot logs from pod api-service-pod with multi containers,kubectl logs api-service-pod --all-containers=true
"Auto scale a deployment ""vpn"", with the number of pods between 6 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment vpn --min=6 --max=13
Update deployment 'scheduler-app-deployment' with a new environment variable,kubectl set env deployment/scheduler-app-deployment DEBUG=true
Delete the data-cluster cluster,kubectl config delete-cluster data-cluster
Add a taint with key 'cpu-type' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  cpu-type=web-node-8:PreferNoSchedule
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=settings=/path/to/configurations/file1.txt --from-file=key2=/path/to/preferences/file2.txt
Create a new config map named app-name-config from the key=value pairs in the file,kubectl create configmap app-name-config --from-file=path/to/data
"Listen on port 6379 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 6379:6379
Switch to raw terminal mode; sends stdin to 'bash' in nebula-navigator from pod e-commerce-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach e-commerce-pod -c nebula-navigator -i -t
Update pod 'security' with the label 'role' and the value 'cache',kubectl label pods security role=cache
Show metrics for all nodes,kubectl top node
Return snapshot logs from container database-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/database-deployment -c monitoring-pod-1
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name test-site.org
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node k8s-node-1 -p '{""spec"":{""rules"":[{""http"":{""paths"":[{""path"":""/"",""backend"":{""service"": {""name"": ""new-service""}}}]}}'"
Import environment from a secret,kubectl set env --from=secret/password-secret deployment/order-processing-deployment
"If the deployment named app-v2-replicaset's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/app-v2-replicaset
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/backend-microservice-deployment -c chat-app-pod-1
"Listen on port 9090 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 9090:5432"
Create a copy of chat-app-pod changing all container images to nginx,kubectl debug chat-app-pod --copy-to=dgb-img --set-image=*=nginx
Start a mysql pod and let the container expose port 5001,kubectl run hazelcast --image=mysql --port=5001
Start a mongo pod and let the container expose port 3000,kubectl run hazelcast --image=mongo --port=3000
Create a copy of chat-app-pod changing all container images to postgres,kubectl debug chat-app-pod --copy-to=debug-image-1 --set-image=*=postgres
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 6379 6379
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp velero/cache-pod-5::/tmp/foo /tmp/bar_dir
Start a redis pod and let the container expose port 7000,kubectl run hazelcast --image=redis --port=7000
"Get output from running 'nginx' command from the first pod of the deployment frontend-deployment, using the first container by default",kubectl exec deploy/frontend-deployment -- nginx
"If the deployment named prod-app-rs's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/prod-app-rs
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=web-cluster
Create a copy of chat-app-pod adding a debug container and changing container images,"kubectl debug chat-app-pod -it --copy-to=debug-image-memcached --image=debian --set-image=app=app:debug,database=mysql:5.7"
Rename the context 'cloud-context' to 'client-1-context' in your kubeconfig file,kubectl config rename-context cloud-context client-1-context
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/api-config deployment/database-deployment
"Listen on port 6379 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 6379:8081"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node node-2 -p '{""spec"":{""rules"":[{""http"":{""paths"":[{""path"":""/"",""backend"":{""service"": {""name"": ""new-service""}}}]}}'"
Roll back to the previous deployment,kubectl rollout undo deployment/test
Create a copy of proxy-server-pod changing all container images to mcr.microsoft.com/dotnet/core/runtime,kubectl debug proxy-server-pod --copy-to=dgb-img --set-image=*=mcr.microsoft.com/dotnet/core/runtime
Get output from running the 'sleep 3600' command in cosmic-container from pod database-pod,kubectl exec database-pod -c cosmic-container -- sleep 3600
Describe a pod,kubectl describe pods/database-pod
Start a mysql pod and let the container expose port 8089,kubectl run hazelcast --image=mysql --port=8089
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=kube-cluster-2
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""alpha-apps"" API group",kubectl get deployments.v2.1.0.alpha-apps -o json
Return snapshot of previous terminated lunar-launcher container logs from pod api-service-pod,kubectl logs -p -c lunar-launcher api-service-pod
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/log-aggregator-deployment -c vpn-service-pod-1
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8080 5000
Start a ruby pod,kubectl run nginx --image=ruby
Get output from running the 'elasticsearch' command in time-machine from pod media-stream-pod,kubectl exec media-stream-pod -c time-machine -- elasticsearch
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=testing-cluster
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
Begin streaming the logs of the lunar-launcher container in pod monitoring-pod,kubectl logs -f -c lunar-launcher monitoring-pod
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""experimental-apps"" API group",kubectl get deployments.v2.0.0.experimental-apps -o json
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""alpha-apps"" API group",kubectl get deployments.v2.1.0.alpha-apps -o yaml
Update pod 'backend' with the label 'env' and the value 'production',kubectl label pods backend env=production
Import environment from a secret,kubectl set env --from=secret/docker-registry-secret deployment/user-management-deployment
Create a pod using the data in config.json,kubectl create -f ./config.json
"Create a cluster role named ""foo"" with ResourceName specified",kubectl create clusterrole foo --verb=connect --resource=configmaps --resource-name=file-processing --resource-name=app-worker-1
Add to node 'storage-node-13' a taint with key 'hardware' and no value,kubectl taint nodes storage-node-13 hardware:NoSchedule
Create a new ClusterIP service named git-service-clusterip,kubectl create service clusterip git-service-clusterip --tcp=5001:8081
"Listen on port 8080 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8080:3000
"Start a jenkins pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=jenkins --overrides='{ ""apiVersion"": ""beta-1.0"", ""spec"": { ... } }'"
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/app-config deployment/gateway-deployment
"Listen on port 8888 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8888:8888"
Update image of all containers of daemonset test to 'debian:11.0',kubectl set image daemonset test *=debian:11.0
Update pod 'auth' with the label 'tier' and the value 'frontend',kubectl label pods auth tier=frontend
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/analytics-pod 9090 8888
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.local-context.cluster edge-cluster
"Listen on port 8888 locally, forwarding to 9090 in the pod",kubectl port-forward pod/e-commerce-pod 8888:9090
Get output from running the 'go version' command in nano-bot from pod e-commerce-pod,kubectl exec e-commerce-pod -c nano-bot -- go version
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""custom-deployments"" API group",kubectl get deployments.v1.1.0.custom-deployments -o json
"Listen on port 8088 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8088:6379"
Create a copy of web-app-pod adding a debug container and changing container images,"kubectl debug web-app-pod -it --copy-to=my-custom-dbg --image=debian --set-image=proxy=nginx:1.21,database=mysql:5.7"
Display only the most recent 20 lines of output in pod payment-gateway-pod,kubectl logs --tail=20 payment-gateway-pod
"Listen on port 9090 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 9090:5432
"Delete pods and services with same names ""web"" and ""database""","kubectl delete pod,service web database"
"If the deployment named api-service-rs's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/api-service-rs
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f kubeadm-config.yaml -p '{""stringData"":{""password"":""new-password""}'"
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/backend-pod 8081:5432
Delete the security-user user,kubectl config delete-user security-user
Update pod 'monitoring' with the label 'env' and the value 'development',kubectl label pods monitoring env=development
"Update node 'web-node-8' with a taint with key 'workload' and value 'high-priority' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes web-node-8 workload=high-priority:NoSchedule
Add a taint with key 'app' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  app=prod-node-5:PreferNoSchedule
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/payment-service 8088:https
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/batch-processing-job -n kube-dns
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/log-rotation-job -n kube-system
"Get output from running the 'elasticsearch' command from pod security-service-pod, using the first container by default",kubectl exec security-service-pod -- elasticsearch
Create a copy of media-stream-pod changing all container images to mongo,kubectl debug media-stream-pod --copy-to=my-debugger --set-image=*=mongo
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""api-v2"" API group",kubectl get deployments.v1.0.0.api-v2 -o yaml
Approve CSR 'csr-redis-11',kubectl certificate approve csr-redis-11
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""prod-apps"" API group",kubectl get deployments.legacy-1.0.0.prod-apps -o json
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/cache-service"
"Delete pods and services with same names ""backend"" and ""monitoring""","kubectl delete pod,service backend monitoring"
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=properties=/path/to/parameters/file1.txt --from-file=key1=/path/to/settings/file2.txt
Set deployment search-engine-deployment's service account to jenkins,kubectl set serviceaccount deployment search-engine-deployment jenkins
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Create a new secret named docker-registry-secret with keys for each file in folder bar,kubectl create secret generic docker-registry-secret --from-file=path/to/properties
Set deployment web-app-deployment's service account to tiller,kubectl set serviceaccount deployment web-app-deployment tiller
Create a job with a command,kubectl create job deployment-rollout-job --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.prod-context.cluster dev-cluster
"Listen on port 8081 locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod 8081:8088
"Listen on port 8888 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8888:8000"
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=8888:5000
"Delete pods and services with same names ""analytics"" and ""cdn""","kubectl delete pod,service analytics cdn"
Create a cron job with a command,"kubectl create cronjob data-sync --image=ruby --schedule=""*/1 * * * *"" -- irb"
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/settings/file2.txt
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""internal-apps"" API group",kubectl get deployments.stable-2.0.0.internal-apps -o yaml
Update pod 'proxy-server' with the label 'tier' and the value 'frontend',kubectl label pods proxy-server tier=frontend
"Listen on port 5432 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 5432:8080
Create a new secret named aws-credentials-secret with keys for each file in folder bar,kubectl create secret generic aws-credentials-secret --from-file=path/to/preferences
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 8081,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=8081
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=8181 --target-port=909000
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/api-service-pod :5432
"Listen on port 3000 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 3000:5432"
Return snapshot of previous terminated lunar-launcher container logs from pod email-service-pod,kubectl logs -p -c lunar-launcher email-service-pod
Create a job with a command,kubectl create job database-seeding-job --image=node -- npm --version
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=app-cluster
"Delete pods and services with same names ""database"" and ""cdn""","kubectl delete pod,service database cdn"
"Enable the Google Compute Platform auth provider for the ""developer"" entry",kubectl config set-credentials developer --auth-provider=gcp
Add to node 'k8s-node-1' a taint with key 'workload' and no value,kubectl taint nodes k8s-node-1 workload:NoSchedule
Set the user field on the user-a-context context entry without touching other values,kubectl config set-context user-a-context --user=cluster-admin
"Listen on port 6379 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 6379:8081"
"Listen on port 8081 locally, forwarding to 6379 in the pod",kubectl port-forward pod/api-service-pod 8081:6379
Create a new secret named monitoring-credentials-secret with key1=supersecret and key2=topsecret,kubectl create secret generic monitoring-credentials-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-settings deployment/backend-microservice-deployment
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod proxy-server-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-server-pod -c warp-drive -i -t
Create a new resource quota named ingress-quota,kubectl create quota ingress-quota --hard=ingresses=2
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node testing-node-11 -p '{""data"":{""key"":""new-value""}'"
"Set a deployments nginx container cpu limits to ""1"" and memory to ""256Mi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=1,memory=256Mi"
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""web-apps"" API group",kubectl get deployments.beta-1.0.web-apps -o json
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=star-cluster
Begin streaming the logs of the nebula-navigator container in pod email-service-pod,kubectl logs -f -c nebula-navigator email-service-pod
Update pod 'chat-app' with the label 'tier' and the value 'frontend',kubectl label pods chat-app tier=frontend
Start a ubuntu pod and let the container expose port 3306,kubectl run hazelcast --image=ubuntu --port=3306
Begin streaming the logs of the cosmic-container container in pod proxy-service-pod,kubectl logs -f -c cosmic-container proxy-service-pod
"Update pod 'chat-app' with the annotation 'description' and the value 'Web server for marketing site', overwriting any existing value",kubectl annotate --overwrite pods chat-app description='Web server for marketing site'
Create a deployment with a command,kubectl create deployment gateway --image=redis -- redis-cli
Describe all configmaps managed by the 'frontend' replication controller (rc-created pods # get the name of the rc as a prefix in the pod the name),kubectl describe configmaps frontend
Add a taint with key 'hardware' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  hardware=gpu-node-12:PreferNoSchedule
Update image of all containers of daemonset nginx to 'centos:8.4.2105',kubectl set image daemonset nginx *=centos:8.4.2105
Start a confluentinc/cp-kafka pod and let the container expose port 5000,kubectl run hazelcast --image=confluentinc/cp-kafka --port=5000
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.user-a-context.cluster app-cluster
"Listen on port 9090 locally, forwarding to 9090 in the pod",kubectl port-forward pod/e-commerce-pod 9090:9090
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod security-service-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Start a hazelcast pod and let the container expose port 27017,kubectl run hazelcast --image=hazelcast/hazelcast --port=27017
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/log-aggregator-pod 8000:5000
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/log-aggregator-deployment
Add a taint with key 'dedicated' on nodes having label team=devops,kubectl taint node -l team=devops  dedicated=storage-node-13:PreferNoSchedule
"Start a centos pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=centos --restart=Never
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=8084:8010
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n default
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8081 8000
"Listen on port 8088 locally, forwarding to 6379 in the pod",kubectl port-forward pod/analytics-pod 8088:6379
Update image of all containers of daemonset namespace- to 'debian:11.0',kubectl set image daemonset namespace-3 *=debian:11.0
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/analytics-pod 9090 5432
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=my-k8s-cluster
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.user-a-context.cluster kube-cluster-1
"Delete pods and services with same names ""email"" and ""log-aggregator""","kubectl delete pod,service email log-aggregator"
"Check to see if I can get the job named ""backup-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/backup-job -n development
Update pod 'payment' with the label 'tier' and the value 'backend',kubectl label pods payment tier=backend
"Delete pods and services with same names ""proxy-server"" and ""log-aggregator""","kubectl delete pod,service proxy-server log-aggregator"
Get output from cosmic-container from pod cdn-service-pod,kubectl attach cdn-service-pod -c cosmic-container
"Listen on port 9090 locally, forwarding to 5432 in the pod",kubectl port-forward pod/api-service-pod 9090:5432
Create a copy of email-service-pod changing all container images to alpine,kubectl debug email-service-pod --copy-to=debug-image-api --set-image=*=alpine
"Create a single ingress called 'private-ingress' that directs requests to foo.com/bar to svc # svc1:5000 with a tls secret ""my-cert""","kubectl create ingress private-ingress --rule=""foo.com/bar=svc1:5000,tls=my-cert"""
"Start the golang pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=golang -- <arg1> <arg2> ... <argN>
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/api-config deployment/load-balancer-deployment
Get output from running the 'go' command in astro-container from pod gateway-pod,kubectl exec gateway-pod -c astro-container -- go
Return snapshot of previous terminated astro-container container logs from pod analytics-pod,kubectl logs -p -c astro-container analytics-pod
"Listen on port 8000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8000:5000
"If the deployment named staging-app-rs's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/staging-app-rs
Embed certificate authority data for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.cluster-1-context.cluster kube-cluster-2
"Delete pods and services with same names ""frontend"" and ""vpn""","kubectl delete pod,service frontend vpn"
"Listen on port 5000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/cdn-service-pod 5000:8088
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/app-config-prod deployment/scheduler-app-deployment
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod api-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach api-service-pod -c code-explorer -i -t
Add a taint with key 'hardware' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  hardware=node-2:PreferNoSchedule
Get output from nebula-navigator from pod database-pod,kubectl attach database-pod -c nebula-navigator
Create a deployment named drupal that runs the hazelcast image and expose port 8000,kubectl create deployment drupal --image=hazelcast/hazelcast --port=8000
"Listen on port 8081 locally, forwarding to 5000 in the pod",kubectl port-forward pod/frontend-pod 8081:5000
Display only the most recent 43 lines of output in pod auth-service-pod,kubectl logs --tail=43 auth-service-pod
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/payment-processor-deployment
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-secrets deployment/cache-cluster-deployment
"Listen on port 3000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 3000:8081"
"Update pod 'log-aggregator' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods log-aggregator backup-strategy='daily-backups'
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-config-prod deployment/analytics-platform-deployment
"Check to see if I can get the job named ""cron-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/cron-job -n cert-manager
List all replication controllers and services together in ps output format,"kubectl get rc,services"
Add a taint with key 'app' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  app=dev-node-4:PreferNoSchedule
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kubeapps/payment-gateway-pod-19:/tmp/foo /tmp/bar
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json env=staging
Update deployment 'authentication-service-deployment' with a new environment variable,kubectl set env deployment/authentication-service-deployment SMTP_USERNAME=your-username
Remove from node 'db-node-7' all the taints with key 'cpu-type',kubectl taint nodes db-node-7 cpu-type-
"Listen on port 9090 locally, forwarding to 3000 in the pod",kubectl port-forward pod/security-service-pod 9090:3000
Update pod 'auth' with the label 'app' and the value 'myapp',kubectl label pods auth app=myapp
"If the deployment named baz's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/baz
"Listen on port 8081 locally, forwarding to 5000 in the pod",kubectl port-forward pod/analytics-pod 8081:5000
"Delete pods and services with same names ""chat-app"" and ""foo""","kubectl delete pod,service chat-app foo"
Get output from running the 'mysql --version' command in cosmic-container from pod api-service-pod,kubectl exec api-service-pod -c cosmic-container -- mysql --version
Create a copy of auth-service-pod changing all container images to hazelcast/hazelcast,kubectl debug auth-service-pod --copy-to=dgb-img --set-image=*=hazelcast/hazelcast
"Listen on a random port locally, forwarding to 8888 in the pod",kubectl port-forward pod/chat-app-pod :8888
Rename the context 'old-name' to 'admin-context' in your kubeconfig file,kubectl config rename-context old-name admin-context
Create a new config map named api-config from the key=value pairs in the file,kubectl create configmap api-config --from-file=path/to/data
"Update node 'gpu-node-12' with a taint with key 'hardware' and value 'gpu' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes gpu-node-12 hardware=gpu:NoExecute
Import environment from a secret,kubectl set env --from=secret/password-secret deployment/user-management-deployment
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name example-domain.com
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8888 5000
"Listen on port 8081 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8081:6379
Create a job with a command,kubectl create job log-collection --image=golang -- go
"Listen on port 8081 locally, forwarding to 9090 in the pod",kubectl port-forward pod/mypod 8081:9090
Get output from running the 'node' command in mycontainer from pod monitoring-pod,kubectl exec monitoring-pod -c mycontainer -- node
Delete the app-service user,kubectl config delete-user app-service
"Enable the Google Compute Platform auth provider for the ""cloud-user"" entry",kubectl config set-credentials cloud-user --auth-provider=gcp
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/gateway-service"
"Get output from running the 'nginx -g ""daemon off;""' command in astro-container from pod payment-gateway-pod","kubectl exec payment-gateway-pod -c astro-container -- nginx -g ""daemon off;"""
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json monitoring-tool=Prometheus
Get output from running the 'jenkins-plugin-cli' command in rocket-ranger from pod media-stream-pod,kubectl exec media-stream-pod -c rocket-ranger -- jenkins-plugin-cli
Create a new config map named app-config with key1=config1 and key2=config2,kubectl create configmap app-config --from-literal=conf=config1 --from-literal=data=config2
"Listen on port 6379 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 6379:6379
Get output from running the 'postgres' command in cosmic-container from pod vpn-service-pod,kubectl exec vpn-service-pod -c cosmic-container -- postgres
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/log-analysis-job -n logging
Create a job with a command,kubectl create job image-build-job --image=mongo -- mongod
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod security-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach security-service-pod -c lunar-launcher -i -t
Get output from running the 'docker run -d ubuntu sleep 3600' command in nano-bot from pod cdn-service-pod,kubectl exec cdn-service-pod -c nano-bot -- docker run -d ubuntu sleep 3600
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/namespace-config deployment/monitoring-stack-deployment
"Listen on port 3000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 3000:8088
Create a deployment named worker that runs the centos image and expose port 8081,kubectl create deployment worker --image=centos --port=8081
Get output from lunar-launcher from pod database-pod,kubectl attach database-pod -c lunar-launcher
Create a copy of vpn-service-pod changing all container images to ethereum/client-go,kubectl debug vpn-service-pod --copy-to=debug-image-web --set-image=*=ethereum/client-go
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/log-aggregator-pod 8888:5000
"Get output from running the 'redis-server --version' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- redis-server --version
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/api-service-pod 6379:8888
Create a new ExternalName service named external-geolocation-service,kubectl create service externalname external-geolocation-service --external-name practice-online.site
Display only the most recent 12 lines of output in pod security-service-pod,kubectl logs --tail=12 security-service-pod
Return snapshot logs from container notification-handler-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/notification-handler-deployment -c analytics-pod-1
Remove from node 'node-2' all the taints with key 'hardware',kubectl taint nodes node-2 hardware-
"Listen on port 6379 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 6379:8088
Update pod 'security' with the label 'env' and the value 'staging',kubectl label pods security env=staging
"Update a pod identified by the type and name in ""options.yaml""",kubectl label -f options.yaml status=unhealthy
Create a copy of analytics-pod adding a debug container and changing container images,"kubectl debug analytics-pod -it --copy-to=debug-image-1 --image=debian --set-image=logger=logging-app:debug,worker=my-custom-worker:1.2.3"
Return snapshot of previous terminated cyber-sleuth container logs from pod media-stream-pod,kubectl logs -p -c cyber-sleuth media-stream-pod
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8081 8888
"Check to see if I can get the job named ""report-generation-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/report-generation-job -n cert-manager
Display only the most recent 23 lines of output in pod log-aggregator-pod,kubectl logs --tail=23 log-aggregator-pod
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod 8081:5432
Show metrics for a given node,kubectl top node testing-node-11
Remove from node 'web-node-8' all the taints with key 'workload',kubectl taint nodes web-node-8 workload-
"Listen on port 8080 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8080:5000
"Auto scale a deployment ""log-aggregator"", with the number of pods between 6 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment log-aggregator --min=6 --max=13
Start a confluentinc/cp-kafka pod and let the container expose port 8084,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8084
Create a new secret named payment-gateway-secret with keys for each file in folder bar,kubectl create secret generic payment-gateway-secret --from-file=path/to/configs
"Listen on port 8088 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8088:8000"
Create a new secret named gcp-service-account-secret with keys for each file in folder bar,kubectl create secret generic gcp-service-account-secret --from-file=path/to/settings
Display only the most recent 23 lines of output in pod mypod,kubectl logs --tail=23 mypod
Update pod 'security' with the label 'release' and the value 'v1.0',kubectl label pods security release=v1.0
"Auto scale a replication controller ""frontend"", with the number of pods between 1 and 5, target CPU utilization at 60%",kubectl autoscale rc frontend --max=5 --cpu-percent=60
Remove from node 'gpu-node-12' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes gpu-node-12 workload:NoSchedule-
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name governmental-demo.gov
"Get output from running 'postgres' command from the first pod of the service frontend-service, using the first container by default",kubectl exec svc/frontend-service -- postgres
"Update node 'node-1' with a taint with key 'app' and value 'backend' and effect 'PreferNoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes node-1 app=backend:PreferNoSchedule
Create a deployment named jenkins that runs the amazonlinux image with 3 replicas,kubectl create deployment jenkins --image=amazonlinux --replicas=3
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""third-party-apps"" API group",kubectl get deployments.v2.1.0.third-party-apps -o json
"Run a proxy to the Kubernetes API server on port 3306, serving static content from ./local/www/",kubectl proxy --port=3306 --www=./local/www/
Remove from node 'prod-node-5' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes prod-node-5 special:NoSchedule-
Update pod 'chat-app' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods chat-app app-
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=staging-cluster
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=kube-cluster-2
"Update pod 'analytics' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics SLA='99.9% uptime'
Get output from running the 'jenkins-plugin-cli' command in nano-bot from pod proxy-server-pod,kubectl exec proxy-server-pod -c nano-bot -- jenkins-plugin-cli
Start a node pod and let the container expose port 9092,kubectl run hazelcast --image=node --port=9092
Edit the job 'deploy-artifacts-job' in JSON using the v1 API format,kubectl edit job.v1.batch/deploy-artifacts-job -o json
"Start a confluentinc/cp-kafka pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=confluentinc/cp-kafka --overrides='{ ""apiVersion"": ""rc-1.1.0"", ""spec"": { ... } }'"
Display only the most recent 23 lines of output in pod monitoring-pod,kubectl logs --tail=23 monitoring-pod
Delete a pod using the type and name specified in setup.json,kubectl delete -f ./setup.json
Add a taint with key 'dedicated' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  dedicated=storage-node-13:PreferNoSchedule
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=properties=/path/to/properties/file1.txt --from-file=key1=/path/to/preferences/file2.txt
Create a copy of email-service-pod changing the command of stardust-shuttle,kubectl debug email-service-pod -it --copy-to=my-custom-dbg --container=stardust-shuttle -- sh
"Listen on port 8888 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8888:9090
"Update pod 'auth' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods auth last-deployment='2023-03-15'
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod api-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach api-service-pod -c nano-bot -i -t
"Listen on port 8081 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8081:8081
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=staging-cluster
Create a cron job with a command,"kubectl create cronjob backup-job --image=python --schedule=""*/1 * * * *"" -- python --version"
Update pod 'cdn' with the label 'component' and the value 'worker',kubectl label pods cdn component=worker
"Mark node ""worker-node-3"" as schedulable",kubectl uncordon worker-node-3
Apply the configuration in pod.json to a pod,kubectl apply -f ./pod.json
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/monitoring-stack-deployment -c vpn-service-pod-1
Create a new config map named app-settings based on folder data,kubectl create configmap app-settings --from-file=path/to/data
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/log-aggregator-pod
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json compliance-level=PCI-DSS
Print the supported API resources sorted by a column,kubectl api-resources --sort-by=singularName
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl exec -n cert-manager monitoring-agent-pod-6 -- tar cf - /tmp/foo | tar xf - -C /tmp/bar
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json backup-strategy='daily backups'
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 6379 6379
"Delete pods and services with same names ""security"" and ""monitoring""","kubectl delete pod,service security monitoring"
"Update pod 'vpn' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods vpn env='staging'
"Set a deployments go container cpu limits to ""2"" and memory to ""512Mi""","kubectl set resources deployment go -c=nginx --limits=cpu=2,memory=512Mi"
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/configurations/file2.txt
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/configs/file2.txt
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod monitoring-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach monitoring-pod -c rocket-ranger -i -t
"Listen on port 9090 locally, forwarding to 9090 in the pod",kubectl port-forward pod/cdn-service-pod 9090:9090
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/e-commerce-pod
Set deployment gateway-deployment's service account to cert-manager,kubectl set serviceaccount deployment gateway-deployment cert-manager
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube default/database-pod-2:/tmp/bar
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node app-node-6 -p $'spec:\n unschedulable: true'
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod 8088:8888
Update pod 'proxy' with the label 'component' and the value 'worker',kubectl label pods proxy component=worker
"Listen on port 3000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 3000:8000
"Update pod 'payment' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment SLA='99.9% uptime'
"Create a role binding for user1, user2, and group1 using the reader cluster role",kubectl create rolebinding reader --clusterrole=reader --user=user1 --user=user2 --group=group1
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=prod-cluster
Create a copy of media-stream-pod adding a debug container and changing container images,"kubectl debug media-stream-pod -it --copy-to=debug-image-memcached --image=debian --set-image=api=api:v2,app=app:debug"
Create a new NodePort service named cdn-service-nodeport,kubectl create service nodeport cdn-service-nodeport --tcp=8181:8082
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/api-config deployment/notification-handler-deployment
"Get output from running the 'psql' command from pod cdn-service-pod, using the first container by default",kubectl exec cdn-service-pod -- psql
"Listen on port 5432 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5432:3000
"Update a pod identified by the type and name in ""preferences.yaml""",kubectl label -f preferences.yaml status=unhealthy
"Create a service for a replicated wordpress using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs wordpress --port=3306 --target-port=909100
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=app-cluster
Remove from node 'node-1' all the taints with key 'app',kubectl taint nodes node-1 app-
"Check to see if I can get the job named ""content-import-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/content-import-job -n kube-node-lease
Begin streaming the logs from all containers in pods defined by label component=proxy,kubectl logs -f -l component=proxy --all-containers=true
Start a golang pod and let the container expose port 8010,kubectl run hazelcast --image=golang --port=8010
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.prod-context.cluster my-k8s-cluster
Return snapshot of previous terminated warp-drive container logs from pod cdn-service-pod,kubectl logs -p -c warp-drive cdn-service-pod
Get output from running the 'mysql --version' command in code-explorer from pod media-stream-pod,kubectl exec media-stream-pod -c code-explorer -- mysql --version
Create a new secret named payment-gateway-secret from an env file,kubectl create secret generic payment-gateway-secret --from-env-file=path/to/profiles.env
"Create a single ingress called 'internal-ingress' that directs requests to testing.com/bar to svc # svc1:7000 with a tls secret ""my-cert""","kubectl create ingress internal-ingress --rule=""testing.com/bar=svc1:7000,tls=my-cert"""
"Update pod 'analytics' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods analytics env='staging'
"Listen on port 9090 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 9090:8000
"Listen on port 5000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 5000:8088"
"Create a service for a replicated php, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc php --port=8443 --target-port=808300
Start a redis pod and let the container expose port 5001,kubectl run hazelcast --image=redis --port=5001
"Delete pods and services with same names ""database"" and ""gateway""","kubectl delete pod,service database gateway"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/mypod 5000 6379
"Listen on port 8000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8000:8888"
Create a new config map named app-config-prod from an env file,kubectl create configmap app-config-prod --from-env-file=path/to/data.env
Update pod 'media-stream' with the label 'app' and the value 'myapp',kubectl label pods media-stream app=myapp
"Update pod 'gateway' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods gateway SLA='99.9% uptime'
Add a taint with key 'cpu-type' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  cpu-type=node-2:PreferNoSchedule
Rename the context 'cluster-2-context' to 'team-alpha-context' in your kubeconfig file,kubectl config rename-context cluster-2-context team-alpha-context
Unset namespace in testing-context context,kubectl config unset contexts.testing-context.namespace
Show metrics for a given pod and its containers,kubectl top pod database-pod --containers
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 3000 8088
"Listen on port 8000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/proxy-server-pod 8000:9090
"Set a deployments nginx container cpu limits to ""50m"" and memory to ""512Mi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=50m,memory=512Mi"
Create a deployment named registry that runs the redis image with 7 replicas,kubectl create deployment registry --image=redis --replicas=7
Create a new secret named email-credentials-secret from an env file,kubectl create secret generic email-credentials-secret --from-env-file=path/to/profiles.env
Restart a daemon set,kubectl rollout restart daemonset/namespace-2
"Remove exec auth plugin environment variables for the ""jane.smith"" entry",kubectl config set-credentials jane.smith --exec-env=var-to-remove-
Get output from running the 'pg_dump --version' command in quantum-quark from pod e-commerce-pod,kubectl exec e-commerce-pod -c quantum-quark -- pg_dump --version
Delete the context for the client-2-context cluster,kubectl config delete-context client-2-context
"If the deployment named dev-environment-rs's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/dev-environment-rs
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 3000 8888
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/configurations/file2.txt
"Listen on port 5432 locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod 5432:8888
Set the server field on the testing-cluster cluster to https://1.2.3.4,kubectl config set clusters.testing-cluster.server https://1.2.3.4
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/data/file2.txt
Remove from node 'prod-node-5' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes prod-node-5 hardware:NoExecute-
"Update pod 'api' with the annotation 'deployment-script' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods api deployment-script='https://example.com/deploy.sh'
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""experimental-apps"" API group",kubectl get deployments.feature-branch-2.3.0.experimental-apps -o json
"Mark node ""node-2"" as unschedulable",kubectl cordon node-2
"Set a deployments hazelcast container cpu limits to ""1"" and memory to ""128Mi""","kubectl set resources deployment hazelcast -c=nginx --limits=cpu=1,memory=128Mi"
Get output from rocket-ranger from pod cdn-service-pod,kubectl attach cdn-service-pod -c rocket-ranger
"Update pod 'monitoring' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods monitoring last-deployment='2023-03-15'
Add a taint with key 'workload' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  workload=k8s-node-1:PreferNoSchedule
Create a job with a command,kubectl create job report-generation-job --image=mongo -- mongod
Roll back to daemonset revision 7,kubectl rollout undo daemonset/prod --to-revision=7
"Set basic auth for the ""service-account"" entry",kubectl config set-credentials service-account --username=admin --password=uXFGweU9l35qcif
Create a new NodePort service named analytics-nodeport,kubectl create service nodeport analytics-nodeport --tcp=8084:5000
Create a deployment named jenkins that runs the ethereum/client-go image,kubectl create deployment jenkins --image=ethereum/client-go
Describe a node,kubectl describe nodes dev-node-2.mycompany.net
"Update pod 'chat-app' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app contact-email=support@example.com
Begin streaming the logs of the astro-container container in pod proxy-server-pod,kubectl logs -f -c astro-container proxy-server-pod
Update pod 'cdn' with the label 'env' and the value 'production',kubectl label pods cdn env=production
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 9090 9090
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/mypod 8088:9090
"Run a proxy to the Kubernetes API server on port 8089, serving static content from ./local/www/",kubectl proxy --port=8089 --www=./local/www/
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""sandbox-apps"" API group",kubectl get deployments.hotfix-1.1.2.sandbox-apps -o yaml
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/analytics-platform-deployment -c chat-app-pod-1
List the environment variables defined on a deployments 'analytics-platform-deployment',kubectl set env deployment/analytics-platform-deployment --list
"Check to see if I can get the job named ""cron-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/cron-job -n testing
Set the resource request and limits for all containers in kafka,"kubectl set resources deployment kafka --limits=cpu=200m,memory=512Mi --requests=cpu=1,memory=128Mi"
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=settings=/path/to/options/file1.txt --from-file=key2=/path/to/configurations/file2.txt
"Listen on port 9090 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 9090:5000
Set the server field on the prod-cluster cluster to https://1.2.3.4,kubectl config set clusters.prod-cluster.server https://1.2.3.4
Show metrics for a given pod and its containers,kubectl top pod frontend-pod --containers
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""testing-apps"" API group",kubectl get deployments.hotfix-1.1.2.testing-apps -o yaml
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/db-config deployment/notification-handler-deployment
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f node.json -p '{""spec"":{""type"":""LoadBalancer""}'"
Begin streaming the logs of the code-explorer container in pod analytics-pod,kubectl logs -f -c code-explorer analytics-pod
Add a taint with key 'special' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  special=storage-node-13:PreferNoSchedule
"Update pod 'proxy-server' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods proxy-server team='frontend-team'
Embed certificate authority data for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
Return snapshot logs from container email-server-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/email-server-deployment -c e-commerce-pod-1
Update a cluster role binding for tiller,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:tiller
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=prod-cluster
Rename the context 'old-name' to 'user-b-context' in your kubeconfig file,kubectl config rename-context old-name user-b-context
Rename the context 'on-prem-context' to 'new-context' in your kubeconfig file,kubectl config rename-context on-prem-context new-context
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""api-v2"" API group",kubectl get deployments.v2.0.0.api-v2 -o json
Get the documentation of the resource and its fields,kubectl explain resource=pods
Set deployment database-deployment's service account to default,kubectl set serviceaccount deployment database-deployment default
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/analytics-pod 6379:3000
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp argocd/backend-pod-13:~/.config/kube :/tmp/bar
"Update pod 'vpn' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn deployment-script='https://example.com/deploy.sh'
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""api-v2"" API group",kubectl get deployments.beta-1.0.api-v2 -o yaml
"Listen on port 6379 locally, forwarding to 8088 in the pod",kubectl port-forward pod/log-aggregator-pod 6379:8088
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""legacy-apps"" API group",kubectl get deployments.v3.0.0.legacy-apps -o json
Create a job with a command,kubectl create job backup --image=centos -- yum install -y wget
Start a mongo pod and let the container expose port 8181,kubectl run hazelcast --image=mongo --port=8181
Return snapshot logs from container user-management-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/user-management-deployment -c vpn-service-pod-1
"Get output from running 'ash' command from the first pod of the service logging-service, using the first container by default",kubectl exec svc/logging-service -- ash
Return snapshot of previous terminated rocket-ranger container logs from pod proxy-service-pod,kubectl logs -p -c rocket-ranger proxy-service-pod
Create a deployment named api that runs the wordpress image,kubectl create deployment api --image=wordpress
"If the deployment named staging-app-rs's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/staging-app-rs
Create a new config map named api-config from an env file,kubectl create configmap api-config --from-env-file=path/to/configs.env
Create a new LoadBalancer service named media-stream-lb,kubectl create service loadbalancer media-stream-lb --tcp=8081:6379
Get output from the first pod of a replica set named wordpress,kubectl attach rs/wordpress
Create a new NodePort service named proxy-server-nodeport,kubectl create service nodeport proxy-server-nodeport --tcp=9092:3000
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/app-config-dev deployment/proxy-service-deployment
Get output from code-explorer from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c code-explorer
Update pod 'security' with the label 'unhealthy' and the value 'true',kubectl label pods security unhealthy=true
Create a new ClusterIP service named log-service-clusterip,kubectl create service clusterip log-service-clusterip --tcp=8082:9090
"Listen on port 6379 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/logging-service 6379:https
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/kube-system-config deployment/payment-processor-deployment
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""prod-apps"" API group",kubectl get deployments.dev-2.2.0.prod-apps -o json
Add a taint with key 'zone' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  zone=node-1:PreferNoSchedule
Create a new service account named istio,kubectl create serviceaccount istio
Create a deployment named worker that runs the postgres image,kubectl create deployment worker --image=postgres
Get output from running the 'elasticsearch --version' command in nebula-navigator from pod mypod,kubectl exec mypod -c nebula-navigator -- elasticsearch --version
"Listen on port 5432 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 5432:5432
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=testing-cluster
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8000 8080
Get output from running the 'python --version' command in time-machine from pod gateway-pod,kubectl exec gateway-pod -c time-machine -- python --version
"Update pod 'api' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api team='frontend team'
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node db-node-7 -p $'spec:\n replicas: 3'
"Listen on port 8000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/log-aggregator-pod 8000:8888
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.user-b-context.cluster cluster-beta
Create a deployment named monitoring that runs the node image with 6 replicas,kubectl create deployment monitoring --image=node --replicas=6
Create a job with a command,kubectl create job log-processing-job --image=centos -- bash
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node web-node-8 -p '{""stringData"":{""password"":""new-password""}'"
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""apps"" API group",kubectl get deployments.v3.0.0.apps -o json
Set deployment scheduler-app-deployment's service account to default,kubectl set serviceaccount deployment scheduler-app-deployment default
Create a new ExternalName service named external-dns-service,kubectl create service externalname external-dns-service --external-name mockup-cloud.cloud
Update pod 'frontend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods frontend role-
Add to node 'prod-node-5' a taint with key 'app' and no value,kubectl taint nodes prod-node-5 app:NoSchedule
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=8084 --target-port=909200
Delete the context for the staging-context cluster,kubectl config delete-context staging-context
Remove the environment variable ENV from container 'nano-bot' in all deployment configs,"kubectl set env deployments --all --containers=""nano-bot"" ENV-"
"List all allowed actions in namespace ""default""",kubectl auth can-i --list --namespace=default
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node dev-node-4 -p $'spec:\n replicas: 3'
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=cluster-beta
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/docker-registry"
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8000 8000
"Listen on port 3000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 3000:5000"
Copy /tmp/foo_dir local directory to /tmp/bar_dir in a remote pod in the default namespace,kubectl cp /tmp/foo_dir message-broker-pod-15:/tmp/bar_dir
"Get output from running 'gem --version' command from the first pod of the service monitoring-service, using the first container by default",kubectl exec svc/monitoring-service -- gem --version
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.dev-context.cluster cluster-gamma
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8000 6379
Start a ruby pod and let the container expose port 3001,kubectl run hazelcast --image=ruby --port=3001
Create a new secret named password-secret with keys for each file in folder bar,kubectl create secret generic password-secret --from-file=path/to/properties
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=my-k8s-cluster
Add a taint with key 'environment' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  environment=edge-node-10:PreferNoSchedule
"Listen on port 9090 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 9090:8080"
"Check to see if I can get the job named ""load-testing-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/load-testing-job -n kube-system
"Listen on port 8081 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/monitoring-service 8081:https
Update pod 'proxy-server' with the label 'app' and the value 'myapp',kubectl label pods proxy-server app=myapp
Add a taint with key 'app' on nodes having label myLabel,kubectl taint node -l myLabel  app=web-node-8:PreferNoSchedule
Return snapshot logs from container order-processing-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/order-processing-deployment -c gateway-pod-1
Set deployment web-app-deployment's service account to metrics-server,kubectl set serviceaccount deployment web-app-deployment metrics-server
"Create a single ingress called 'myapp-ingress' that directs requests to website.com/input to svc # svc1:8083 with a tls secret ""my-cert""","kubectl create ingress myapp-ingress --rule=""website.com/input=svc1:8083,tls=my-cert"""
Create a job with a command,kubectl create job scaling-job --image=ubuntu -- docker run -it ubuntu
Roll back to the previous deployment,kubectl rollout undo deployment/prod
Create a job with a command,kubectl create job scaling-job --image=php -- php --version
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/e-commerce-pod 8888:8000
Add a taint with key 'special' on nodes having label myLabel,kubectl taint node -l myLabel  special=db-node-7:PreferNoSchedule
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/email-service-pod
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/analytics-platform-deployment -c frontend-pod-1
"Auto scale a replication controller ""cdn"", with the number of pods between 1 and 2, target CPU utilization at 20%",kubectl autoscale rc cdn --max=2 --cpu-percent=20
Remove from node 'node-1' all the taints with key 'special',kubectl taint nodes node-1 special-
Return snapshot logs from container frontend-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/frontend-deployment -c cdn-service-pod-1
Update deployment 'mydeployment' with a new environment variable,kubectl set env deployment/mydeployment API_KEY=your-api-key
"Delete pods and services with same names ""proxy-server"" and ""monitoring""","kubectl delete pod,service proxy-server monitoring"
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 6379 3000
Add a taint with key 'environment' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  environment=gpu-node-12:PreferNoSchedule
Add a taint with key 'disktype' on nodes having label app=web-app,kubectl taint node -l app=web-app  disktype=worker-node-3:PreferNoSchedule
Get output from running the 'node' command in warp-drive from pod chat-app-pod,kubectl exec chat-app-pod -c warp-drive -- node
Update deployment 'frontend-deployment' with a new environment variable,kubectl set env deployment/frontend-deployment SMTP_PASSWORD=your-password
"Enable the Google Compute Platform auth provider for the ""app-operator"" entry",kubectl config set-credentials app-operator --auth-provider=gcp
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8888 8081
Begin streaming the logs of the lunar-launcher container in pod email-service-pod,kubectl logs -f -c lunar-launcher email-service-pod
Update pod 'proxy' with the label 'env' and the value 'staging',kubectl label pods proxy env=staging
Update pod 'database' with the label 'env' and the value 'staging',kubectl label pods database env=staging
Remove from node 'worker-node-3' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes worker-node-3 disktype:NoSchedule-
"Listen on port 8888 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8888:3000"
Create a copy of email-service-pod adding a debug container and attach to it,kubectl debug email-service-pod -it --image=busybox --copy-to=debug-image-app
"If the deployment named mysql's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/mysql
"Listen on port 8081 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8081:8888"
Create a copy of analytics-pod adding a debug container and changing container images,"kubectl debug analytics-pod -it --copy-to=debug-image-api --image=debian --set-image=scheduler=my-scheduler:1.0,logger=logging-app:debug"
Update image of all containers of daemonset development to 'java:11.0.12',kubectl set image daemonset development *=java:11.0.12
Deny CSR 'csr-proxy-15',kubectl certificate deny csr-proxy-15
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/mypod 3000 8888
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod 8000:8088
Create a deployment named ingress that runs the redis image,kubectl create deployment ingress --image=redis
"Listen on port 5432 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 5432:8088
"Listen on port 5432 locally, forwarding to 8888 in the pod",kubectl port-forward pod/cdn-service-pod 5432:8888
"Listen on port 3000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 3000:5000
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=cluster-gamma
"Listen on port 6379 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 6379:8081"
Create a new LoadBalancer service named ingress-controller-lb,kubectl create service loadbalancer ingress-controller-lb --tcp=5001:8000
"Listen on port 8081 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8081:8888
"Update pod 'proxy' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy monitoring-tool=Prometheus
Return snapshot of previous terminated stardust-shuttle container logs from pod proxy-server-pod,kubectl logs -p -c stardust-shuttle proxy-server-pod
Add a taint with key 'workload' on nodes having label role=database,kubectl taint node -l role=database  workload=db-node-7:PreferNoSchedule
Set the resource request and limits for all containers in redis,"kubectl set resources deployment redis --limits=cpu=200m,memory=512Mi --requests=cpu=3,memory=2Gi"
Add a taint with key 'zone' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  zone=backup-node-14:PreferNoSchedule
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""backup-apps"" API group",kubectl get deployments.stable-2.0.0.backup-apps -o json
Update pod 'foo' with the label 'role' and the value 'cache',kubectl label pods foo role=cache
"Listen on port 8081 locally, forwarding to 8000 in the pod",kubectl port-forward pod/analytics-pod 8081:8000
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""third-party-apps"" API group",kubectl get deployments.hotfix-1.1.2.third-party-apps -o json
Edit the last-applied-configuration annotations by file in JSON,kubectl apply edit-last-applied -f preferences.yaml -o json
Update pod 'frontend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods frontend env-
Create a new secret named cert-manager-secret with keys for each file in folder bar,kubectl create secret generic cert-manager-secret --from-file=path/to/options
Start a jenkins pod and let the container expose port 8010,kubectl run hazelcast --image=jenkins --port=8010
"Update pod 'analytics' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods analytics last-deployment='2023-03-15'
Get output from cosmic-container from pod email-service-pod,kubectl attach email-service-pod -c cosmic-container
Describe pods by label role=database,kubectl describe po -l role=database
Set the last-applied-configuration of a resource to match the contents of a file,kubectl apply set-last-applied -f config.yaml
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp kube-flannel/ingress-controller-pod-8:~/.config/kube :/tmp/bar
"If the deployment named prod-app-rs's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/prod-app-rs
Get output from quantum-quark from pod web-app-pod,kubectl attach web-app-pod -c quantum-quark
"Listen on port 8080 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8080:8080
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod chat-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach chat-app-pod -c warp-drive -i -t
Get output from cosmic-container from pod monitoring-pod,kubectl attach monitoring-pod -c cosmic-container
Create a copy of vpn-service-pod changing all container images to ethereum/client-go,kubectl debug vpn-service-pod --copy-to=debug-image-memcached --set-image=*=ethereum/client-go
Get output from running the 'dotnet' command in code-explorer from pod media-stream-pod,kubectl exec media-stream-pod -c code-explorer -- dotnet
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""testing-apps"" API group",kubectl get deployments.v1.0.0.testing-apps -o json
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.prod-context.cluster on-prem-cluster
"Update pod 'payment' with the annotation 'git-repo' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods payment git-repo='https://github.com/example/my-app'
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod 9090:8088
"Listen on port 5000 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 5000:5432"
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir prometheus/auth-service-pod-11:/tmp/bar
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name demo-service.dev
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=cluster-beta
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/monitoring-config deployment/mydeployment
Return snapshot of previous terminated nebula-navigator container logs from pod security-service-pod,kubectl logs -p -c nebula-navigator security-service-pod
Delete resources from a directory containing kustomization.yaml - e.g. settings/kustomization.yaml,kubectl delete -k settings/
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""extensions"" API group",kubectl get deployments.rc-1.1.0.extensions -o yaml
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/analytics-pod
"Listen on port 9090 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 9090:5432
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""internal-apps"" API group",kubectl get deployments.hotfix-1.1.2.internal-apps -o yaml
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-config deployment/search-engine-deployment
Start a ethereum/client-go pod and let the container expose port 8000,kubectl run hazelcast --image=ethereum/client-go --port=8000
"Start a mysql pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mysql --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
Set deployment search-engine-deployment's service account to metrics-server,kubectl set serviceaccount deployment search-engine-deployment metrics-server
Create a new ExternalName service named external-notification-service,kubectl create service externalname external-notification-service --external-name governmental-demo.gov
Create a new config map named app-config-dev based on folder data,kubectl create configmap app-config-dev --from-file=path/to/data
Update pod 'email' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods email description-
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8443 --target-port=500100
Start a mysql pod and let the container expose port 8443,kubectl run hazelcast --image=mysql --port=8443
Get output from mycontainer from pod frontend-pod,kubectl attach frontend-pod -c mycontainer
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8081 5000
Describe a node,kubectl describe nodes storage-node-6.storage-farm.local
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/monitoring-stack-deployment -c security-service-pod-1
Get output from running the 'yum install -y wget' command in nebula-navigator from pod chat-app-pod,kubectl exec chat-app-pod -c nebula-navigator -- yum install -y wget
"Update pod 'backend' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend security-scan-status=pass
"Get output from running the 'python' command from pod web-app-pod, using the first container by default",kubectl exec web-app-pod -- python
Display only the most recent 5 lines of output in pod analytics-pod,kubectl logs --tail=5 analytics-pod
Create a copy of mypod changing all container images to postgres,kubectl debug mypod --copy-to=debug-image-1 --set-image=*=postgres
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/api-config deployment/backend-microservice-deployment
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=5000 --target-port=808400
Create a new config map named env-vars based on folder parameters,kubectl create configmap env-vars --from-file=path/to/parameters
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kube-flannel/metrics-exporter-pod-10:/tmp/foo /tmp/bar_dir
Use the context for the moon-cluster cluster,kubectl config use-context moon-cluster
"Listen on port 8888 locally, forwarding to 6379 in the pod",kubectl port-forward pod/proxy-server-pod 8888:6379
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node prod-node-5 -p '{""data"":{""key"":""new-value""}'"
Add a taint with key 'workload' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  workload=worker-node-3:PreferNoSchedule
Create a job with a command,kubectl create job report-generation-job --image=node -- node --version
List a single pod in JSON output format,kubectl get -o json pod email-service-pod
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=9091 --target-port=300000
"Listen on port 5432 locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod 5432:8080
Update pod 'proxy' with the label 'component' and the value 'web',kubectl label pods proxy component=web
Update pod 'foo' with the label 'release' and the value 'v1.0',kubectl label pods foo release=v1.0
"Update pod 'monitoring' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring last-deployment=2023-03-15
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 3000 5000
Display only the most recent 5 lines of output in pod log-aggregator-pod,kubectl logs --tail=5 log-aggregator-pod
Create a new secret named my-secret with keys for each file in folder bar,kubectl create secret generic my-secret --from-file=path/to/settings
Get output from running the 'dotnet --list-runtimes' command in code-explorer from pod mypod,kubectl exec mypod -c code-explorer -- dotnet --list-runtimes
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8088 8000
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/monitoring-stack-deployment -c payment-gateway-pod-1
"Get output from running 'postgres' command from the first pod of the deployment monitoring-stack-deployment, using the first container by default",kubectl exec deploy/monitoring-stack-deployment -- postgres
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=data-cluster
"Get output from running the 'mysql --version' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- mysql --version
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""extensions"" API group",kubectl get deployments.alpha-2.0.extensions -o yaml
"Update pod 'analytics' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods analytics compliance-level='PCI-DSS'
Set deployment log-aggregator-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment log-aggregator-deployment gitlab-runner
"Listen on port 3000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/security-service-pod 3000:9090
Display only the most recent 20 lines of output in pod mypod,kubectl logs --tail=20 mypod
Start a postgres pod and let the container expose port 8010,kubectl run hazelcast --image=postgres --port=8010
"Listen on port 6379 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 6379:5000"
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/monitoring-stack-deployment -c analytics-pod-1
"Get output from running the 'pip --version' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- pip --version
"Listen on port 8088 locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod 8088:6379
"Listen on port 9090 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 9090:9090"
Roll back to daemonset revision 7,kubectl rollout undo daemonset/my-deployment --to-revision=7
Copy ~/.config/kube from a remote pod to /etc/kubernetes locally,kubectl cp logging/auth-service-pod-11:~/.config/kube /etc/kubernetes
Rename the context 'cluster-1-context' to 'app-2-context' in your kubeconfig file,kubectl config rename-context cluster-1-context app-2-context
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/namespace-config deployment/database-deployment
Begin streaming the logs of the code-explorer container in pod frontend-pod,kubectl logs -f -c code-explorer frontend-pod
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""mobile-apps"" API group",kubectl get deployments.v1.0.0.mobile-apps -o yaml
"If the deployment named payment-service-rs's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/payment-service-rs
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp ingress-nginx/backend-pod-13:/tmp/foo_dir /tmp/bar_dir
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8082 --target-port=543200
Begin streaming the logs of the cyber-sleuth container in pod cdn-service-pod,kubectl logs -f -c cyber-sleuth cdn-service-pod
"Create a second service based on the above service, exposing the container port 8443 as port 443 with the name ""ubuntu-https""",kubectl expose service ubuntu --port=443 --target-port=80 --name=nginx-https
"Check to see if I can get the job named ""cleanup-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/cleanup-job -n logging
"Create a single ingress called 'api-gateway-ingress' that directs requests to testing.com/input to svc # svc1:8081 with a tls secret ""my-cert""","kubectl create ingress api-gateway-ingress --rule=""testing.com/input=svc1:8081,tls=my-cert"""
Create a new secret named private-key-secret with keys for each file in folder bar,kubectl create secret generic private-key-secret --from-file=path/to/properties
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/web-app-pod 8088:8081
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/database-pod
"Start the ubuntu pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=ubuntu -- <arg1> <arg2> ... <argN>
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/gateway-service"
"Listen on port 3000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/backend-pod 3000:9090
Return snapshot logs from container user-management-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/user-management-deployment -c media-stream-pod-1
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 6379 8088
Add a taint with key 'zone' on nodes having label team=devops,kubectl taint node -l team=devops  zone=gpu-node-12:PreferNoSchedule
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/options/file2.txt
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=testing-cluster
Embed certificate authority data for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --embed-certs --certificate-authority=~/.kube/dev-cluster/kubernetes.ca.crt
"Set a deployments go container cpu limits to ""5"" and memory to ""512Mi""","kubectl set resources deployment go -c=nginx --limits=cpu=5,memory=512Mi"
Add a taint with key 'app' on nodes having label role=database,kubectl taint node -l role=database  app=gpu-node-12:PreferNoSchedule
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/cache-warming-job -n monitoring
Create a new LoadBalancer service named e-commerce-lb,kubectl create service loadbalancer e-commerce-lb --tcp=8089:8181
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/monitoring-config deployment/monitoring-stack-deployment
Import environment from a secret,kubectl set env --from=secret/ssl-key-secret deployment/authentication-service-deployment
Copy /tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp kube-public/backend-pod-13:/tmp/foo /etc/kubernetes
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/data/file2.txt
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/cache-cluster-deployment -c auth-service-pod-1
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node node-2 -p $'data:\n key: new-value'
Set deployment analytics-platform-deployment's service account to elasticsearch,kubectl set serviceaccount deployment analytics-platform-deployment elasticsearch
Create a new secret named encryption-key-secret from an env file,kubectl create secret generic encryption-key-secret --from-env-file=path/to/profiles.env
Get output from astro-container from pod email-service-pod,kubectl attach email-service-pod -c astro-container
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=authorization.k8s.io
"Listen on port 8080 locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod 8080:5000
"Update pod 'auth' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods auth criticality='high'
Return snapshot of previous terminated nebula-navigator container logs from pod proxy-server-pod,kubectl logs -p -c nebula-navigator proxy-server-pod
"Update node 'monitoring-node-15' with a taint with key 'cpu-type' and value 'x86' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes monitoring-node-15 cpu-type=x86:NoSchedule
"Auto scale a replication controller ""analytics"", with the number of pods between 1 and 2, target CPU utilization at 50%",kubectl autoscale rc analytics --max=2 --cpu-percent=50
"Listen on port 8088 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8088:9090
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/search-service"
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/gateway-service"
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/backend-pod
"Listen on port 8888 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8888:9090"
"Listen on port 5432 locally, forwarding to 8000 in the pod",kubectl port-forward pod/log-aggregator-pod 5432:8000
Start a alpine pod and let the container expose port 8010,kubectl run hazelcast --image=alpine --port=8010
Display only the most recent 43 lines of output in pod media-stream-pod,kubectl logs --tail=43 media-stream-pod
Create a new secret named password-secret from an env file,kubectl create secret generic password-secret --from-env-file=path/to/properties.env
"Set a deployments alpine container cpu limits to ""2"" and memory to ""4Gi""","kubectl set resources deployment alpine -c=nginx --limits=cpu=2,memory=4Gi"
Print the supported namespaced resources,kubectl api-resources --scopespaced=true
"Listen on a random port locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod :8888
"Listen on port 5432 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5432:8888
Copy ~/.config/kube from a remote pod to /tmp/bar locally,kubectl cp argocd/backend-pod-13:~/.config/kube /tmp/bar
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8888 8000
Create a new secret named encryption-key-secret from an env file,kubectl create secret generic encryption-key-secret --from-env-file=path/to/configurations.env
Create a job with a command,kubectl create job image-build-job --image=php --
Add a taint with key 'datacenter' on nodes having label service=auth,kubectl taint node -l service=auth  datacenter=web-node-8:PreferNoSchedule
Create a job with a command,kubectl create job indexing --image=centos -- bash
"Listen on port 5432 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5432:8000
Delete the api-user user,kubectl config delete-user api-user
Remove the resource requests for resources on containers in mongo,"kubectl set resources deployment mongo --limits=cpu=0,memory=0 --requests=cpu=0,memory=0"
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/analytics-pod
Create a deployment named prometheus that runs the postgres image,kubectl create deployment prometheus --image=postgres
"Create a single ingress called 'external-ingress' that directs requests to site.com/input to svc # svc1:8081 with a tls secret ""my-cert""","kubectl create ingress external-ingress --rule=""site.com/input=svc1:8081,tls=my-cert"""
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/payment-service"
Add a taint with key 'app' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  app=node-2:PreferNoSchedule
Add a taint with key 'datacenter' on nodes having label team=devops,kubectl taint node -l team=devops  datacenter=monitoring-node-15:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-secrets deployment/backend-microservice-deployment
Return snapshot of previous terminated ruby container logs from pod media-stream-pod,kubectl logs -p -c ruby media-stream-pod
Add a taint with key 'hardware' on nodes having label myLabel,kubectl taint node -l myLabel  hardware=node-1:PreferNoSchedule
"If the deployment named prod-app-rs's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/prod-app-rs
Return snapshot logs from container user-management-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/user-management-deployment -c auth-service-pod-1
Rename the context 'cloud-context' to 'app-2-context' in your kubeconfig file,kubectl config rename-context cloud-context app-2-context
Create a new secret named monitoring-credentials-secret from an env file,kubectl create secret generic monitoring-credentials-secret --from-env-file=path/to/configs.env
Create a copy of database-pod adding a debug container and changing container images,"kubectl debug database-pod -it --copy-to=debug-image-1 --image=debian --set-image=api=api:v2,database=mysql:5.7"
Update image of all containers of daemonset test to 'mongo:5.0.2',kubectl set image daemonset test *=mongo:5.0.2
Create a job with a command,kubectl create job monitoring-job --image=centos -- bash
Start a alpine pod,kubectl run nginx --image=alpine
"Listen on port 8080 locally, forwarding to 8080 in the pod",kubectl port-forward pod/cdn-service-pod 8080:8080
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 6379 6379
Update a cluster role binding for kube-dns,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:kube-dns
Return snapshot logs from container order-processing-deployment-1 of a deployment named backend-pod,kubectl logs deployment/order-processing-deployment -c backend-pod-1
Set deployment load-balancer-deployment's service account to default,kubectl set serviceaccount deployment load-balancer-deployment default
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/chat-app-pod
Add a taint with key 'workload' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  workload=backup-node-14:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/ui-config deployment/cache-cluster-deployment
"Update pod 'security' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security monitoring-tool=Prometheus
Add a taint with key 'disktype' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  disktype=backup-node-14:PreferNoSchedule
Begin streaming the logs of the quantum-quark container in pod cdn-service-pod,kubectl logs -f -c quantum-quark cdn-service-pod
"Listen on port 8080 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8080:3000
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=galaxy-cluster
"Listen on port 9090 locally, forwarding to 9090 in the pod",kubectl port-forward pod/proxy-server-pod 9090:9090
Get output from warp-drive from pod gateway-pod,kubectl attach gateway-pod -c warp-drive
"Auto scale a deployment ""security"", with the number of pods between 4 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=4 --max=8
"Create a service for a pod analytics-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod analytics-pod --port=80 --name=frontend
Remove from node 'dev-node-4' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes dev-node-4 datacenter:NoExecute-
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.on-prem-context.cluster cloud-cluster
Return snapshot logs from container email-server-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/email-server-deployment -c auth-service-pod-1
Return snapshot logs from container web-app-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/web-app-deployment -c analytics-pod-1
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/proxy-server-pod 8081:8081
Update deployment 'backend-microservice-deployment' with a new environment variable,kubectl set env deployment/backend-microservice-deployment MONGO_URI=mongodb://localhost:27017/mydb
"Start a node pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=node --overrides='{ ""apiVersion"": ""v1.0.0"", ""spec"": { ... } }'"
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-settings deployment/email-server-deployment
Add to node 'edge-node-10' a taint with key 'cpu-type' and no value,kubectl taint nodes edge-node-10 cpu-type:NoSchedule
Add a taint with key 'app' on nodes having label release=beta,kubectl taint node -l release=beta  app=edge-node-10:PreferNoSchedule
Update pod 'backend' with the label 'env' and the value 'staging',kubectl label pods backend env=staging
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/virus-scan-job -n kube-system
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/mydeployment SMTP_HOST=smtp.example.com -o yaml
Rename the context 'dev-context' to 'client-2-context' in your kubeconfig file,kubectl config rename-context dev-context client-2-context
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/security-service-pod 8888:8888
Create a deployment named db that runs the ethereum/client-go image and expose port 8000,kubectl create deployment db --image=ethereum/client-go --port=8000
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""legacy-apps"" API group",kubectl get deployments.v1.1.0.legacy-apps -o yaml
Create a new LoadBalancer service named gateway-lb,kubectl create service loadbalancer gateway-lb --tcp=8443:3001
"Listen on port 5432 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 5432:8088"
"If the deployment named app-v2-replicaset's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/app-v2-replicaset
"Listen on port 3000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/backend-pod 3000:8888
"If the deployment named dev-environment-rs's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/dev-environment-rs
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/backend-service"
Begin streaming the logs of the stardust-shuttle container in pod payment-gateway-pod,kubectl logs -f -c stardust-shuttle payment-gateway-pod
Set the last-applied-configuration of a resource to match the contents of a file,kubectl apply set-last-applied -f preferences.yaml
Return snapshot logs from container web-app-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/web-app-deployment -c proxy-server-pod-1
"Start a centos pod and set labels ""app=centos"" and ""env=prod"" in the container","kubectl run hazelcast --image=centos --labels=""app=centos,env=prod"""
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=5001:8181
"Listen on port 9090 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 9090:6379
Begin streaming the logs of the ruby container in pod web-app-pod,kubectl logs -f -c ruby web-app-pod
Create a new NodePort service named email-service-nodeport,kubectl create service nodeport email-service-nodeport --tcp=8082:8443
"Listen on port 8888 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8888:9090
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/global-config deployment/backend-microservice-deployment
Start a mongo pod and let the container expose port 8089,kubectl run hazelcast --image=mongo --port=8089
Apply the configuration in docker-registry.yaml to a pod,kubectl apply -f ./docker-registry.yaml
"Listen on port 8081 locally, forwarding to 6379 in the pod",kubectl port-forward pod/e-commerce-pod 8081:6379
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 5432 8088
Create a deployment named drupal that runs the hazelcast image and expose port 5432,kubectl create deployment drupal --image=hazelcast/hazelcast --port=5432
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-secrets deployment/search-engine-deployment
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.on-prem-context.cluster cluster-beta
Create a deployment named loadbalancer that runs the confluentinc/cp-kafka image and expose port 9000,kubectl create deployment loadbalancer --image=confluentinc/cp-kafka --port=9000
"Listen on port 9090 locally, forwarding to 5432 in the pod",kubectl port-forward pod/proxy-server-pod 9090:5432
"Wait for the pod ""gateway-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/gateway-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""web-apps"" API group",kubectl get deployments.v3.0.0.web-apps -o yaml
Create a new config map named app-config from an env file,kubectl create configmap app-config --from-env-file=path/to/configurations.env
Start a ethereum/client-go pod and let the container expose port 5000,kubectl run hazelcast --image=ethereum/client-go --port=5000
Get output from running the 'irb' command in stardust-shuttle from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c stardust-shuttle -- irb
Return snapshot logs from container frontend-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/frontend-deployment -c email-service-pod-1
Create a cron job with a command,"kubectl create cronjob cron-task --image=mcr.microsoft.com/dotnet/core/runtime --schedule=""*/1 * * * *"" -- dotnet --list-runtimes"
Scale a replica set named 'web' to 7,kubectl scale --replicas=7 rs/web
"Create a role named ""reader"" with ResourceName specified",kubectl create role reader --verb=proxy --resource=pods --resource-name=content-delivery --resource-name=file-storage
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""api-v1"" API group",kubectl get deployments.v2.0.0.api-v1 -o yaml
Return snapshot logs from container authentication-service-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/authentication-service-deployment -c media-stream-pod-1
"Get output from running 'geth' command from the first pod of the service search-service, using the first container by default",kubectl exec svc/search-service -- geth
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/user-service"
Create a copy of gateway-pod changing all container images to node,kubectl debug gateway-pod --copy-to=dgb-img --set-image=*=node
"Create a service for a replication controller identified by type and name specified in ""alpine-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f alpine-controller.yaml --port=3001 --target-port=808400
"Create a role named ""foo"" with ResourceName specified",kubectl create role foo --verb=get --resource=pods --resource-name=keycloak-server --resource-name=database-master
Create a new config map named app-settings from the key=value pairs in the file,kubectl create configmap app-settings --from-file=path/to/settings
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""prod-apps"" API group",kubectl get deployments.feature-branch-2.3.0.prod-apps -o yaml
Start a ethereum/client-go pod,kubectl run nginx --image=ethereum/client-go
Set deployment database-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment database-deployment kube-scheduler
Return snapshot of previous terminated astro-container container logs from pod media-stream-pod,kubectl logs -p -c astro-container media-stream-pod
Describe a node,kubectl describe nodes networking-node-19.networking-cluster.local
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=galaxy-cluster
"Listen on port 5432 locally, forwarding to 8000 in the pod",kubectl port-forward pod/api-service-pod 5432:8000
"Wait for the pod ""backend-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/backend-pod
"Listen on port 8081 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8081:8000"
"Update pod 'vpn' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods vpn criticality='high'
"Listen on port 5000 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 5000:8080"
Copy /tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp velero/message-broker-pod-15:/tmp/foo /etc/kubernetes
Copy /tmp/foo_dir from a remote pod to /etc/kubernetes locally,kubectl cp kube-server/auth-service-pod-11:/tmp/foo_dir /etc/kubernetes
Begin streaming the logs of the lunar-launcher container in pod backend-pod,kubectl logs -f -c lunar-launcher backend-pod
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod 5000:9090
Update deployment 'analytics-platform-deployment' with a new environment variable,kubectl set env deployment/analytics-platform-deployment SMTP_HOST=smtp.example.com
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""extensions"" API group",kubectl get deployments.feature-branch-2.3.0.extensions -o yaml
"Set a deployments postgres container cpu limits to ""1"" and memory to ""2Gi""","kubectl set resources deployment postgres -c=nginx --limits=cpu=1,memory=2Gi"
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod monitoring-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach monitoring-pod -c astro-container -i -t
Create a copy of analytics-pod changing the command of time-machine,kubectl debug analytics-pod -it --copy-to=my-custom-dbg --container=time-machine -- sh
Create a new ExternalName service named external-notification-service,kubectl create service externalname external-notification-service --external-name dummy-website.io
"Listen on port 6379 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 6379:5000
"Update pod 'gateway' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway git-repo='https://github.com/example/my-app'
"Get output from running the 'go' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- go
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=settings=/path/to/options/file1.txt --from-file=key2=/path/to/settings/file2.txt
"Update node 'node-1' with a taint with key 'zone' and value 'us-west-1a' and effect 'PreferNoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes node-1 zone=us-west-1a:PreferNoSchedule
"Update pod 'log-aggregator' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods log-aggregator compliance-level='PCI-DSS'
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=5432 --target-port=888800
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/payment-service"
Start a alpine pod and let the container expose port 5000,kubectl run hazelcast --image=alpine --port=5000
Add a taint with key 'cpu-type' on nodes having label team=devops,kubectl taint node -l team=devops  cpu-type=db-node-7:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/monitoring-config deployment/mydeployment
"Delete pods and services with same names ""media-stream"" and ""email""","kubectl delete pod,service media-stream email"
Create a copy of monitoring-pod changing all container images to amazonlinux,kubectl debug monitoring-pod --copy-to=debug-image-api --set-image=*=amazonlinux
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/frontend-service"
Update image of all containers of daemonset services to 'wordpress:5.8.1',kubectl set image daemonset services *=wordpress:5.8.1
Create a new ExternalName service named external-cloud-storage-service,kubectl create service externalname external-cloud-storage-service --external-name governmental-demo.gov
"Set basic auth for the ""system"" entry",kubectl config set-credentials system --username=admin --password=uXFGweU9l35qcif
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""prod-apps"" API group",kubectl get deployments.v2.0.0.prod-apps -o json
Set deployment database-deployment's service account to jenkins,kubectl set serviceaccount deployment database-deployment jenkins
Create a new secret named cert-manager-secret from an env file,kubectl create secret generic cert-manager-secret --from-env-file=path/to/settings.env
"Set basic auth for the ""robot-user"" entry",kubectl config set-credentials robot-user --username=admin --password=uXFGweU9l35qcif
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/centos
Begin streaming the logs of the rocket-ranger container in pod gateway-pod,kubectl logs -f -c rocket-ranger gateway-pod
Set deployment analytics-platform-deployment's service account to kube-proxy,kubectl set serviceaccount deployment analytics-platform-deployment kube-proxy
"Delete pods and services with same names ""gateway"" and ""api""","kubectl delete pod,service gateway api"
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=7000:8888
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=cluster-alpha
Begin streaming the logs of the ruby container in pod proxy-server-pod,kubectl logs -f -c ruby proxy-server-pod
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.prod-context.cluster cluster-gamma
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node web-node-8 -p '{""spec"":{""someField"":""newValue""}'"
"Update node 'gpu-node-12' with a taint with key 'workload' and value 'high-priority' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes gpu-node-12 workload=high-priority:NoSchedule
Add a taint with key 'special' on nodes having label myLabel,kubectl taint node -l myLabel  special=kube-master-9:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-name-config deployment/cache-cluster-deployment
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/cloud-cluster/kubernetes.ca.crt
Display only the most recent 3 lines of output in pod log-aggregator-pod,kubectl logs --tail=3 log-aggregator-pod
Display only the most recent 23 lines of output in pod analytics-pod,kubectl logs --tail=23 analytics-pod
Add a taint with key 'workload' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  workload=prod-node-5:PreferNoSchedule
Create a cron job with a command,"kubectl create cronjob monthly-audit --image=golang --schedule=""*/1 * * * *"" -- go version"
Create a new config map named app-secrets based on folder profiles,kubectl create configmap app-secrets --from-file=path/to/profiles
Create a deployment named cache that runs the wordpress image with 6 replicas,kubectl create deployment cache --image=wordpress --replicas=6
Begin streaming the logs of the time-machine container in pod web-app-pod,kubectl logs -f -c time-machine web-app-pod
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/scheduler-service"
"Listen on port 8088 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8088:6379"
"Run a proxy to the Kubernetes API server on port 5432, serving static content from ./local/www/",kubectl proxy --port=5432 --www=./local/www/
Describe pods by label myLabel,kubectl describe po -l myLabel
"Update pod 'security' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods security status=unhealthy
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node prod-node-5 -p $'spec:\n containers:\n- name: container-name\n  resources:\n    limits:\n      cpu: 200m'
Set deployment monitoring-stack-deployment's service account to fluentd,kubectl set serviceaccount deployment monitoring-stack-deployment fluentd
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.client-1-context.cluster cloud-cluster
"Update pod 'database' with the annotation 'contact-email' and the value 'support@example.com', overwriting any existing value",kubectl annotate --overwrite pods database contact-email='support@example.com'
"Delete pods and services with same names ""email"" and ""email""","kubectl delete pod,service email email"
Add a taint with key 'dedicated' on nodes having label service=auth,kubectl taint node -l service=auth  dedicated=storage-node-13:PreferNoSchedule
"Update pod 'chat-app' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app compliance-level=PCI-DSS
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""external-apps"" API group",kubectl get deployments.beta-1.0.external-apps -o yaml
Remove from node 'node-2' all the taints with key 'cpu-type',kubectl taint nodes node-2 cpu-type-
Set deployment mydeployment's service account to gitlab-runner,kubectl set serviceaccount deployment mydeployment gitlab-runner
Begin streaming the logs of the stardust-shuttle container in pod cdn-service-pod,kubectl logs -f -c stardust-shuttle cdn-service-pod
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/ui-config deployment/backend-microservice-deployment
"Wait for the pod ""email-service-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/email-service-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 5000 5000
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=star-cluster
"List a pod identified by type and name specified in ""parameters.yaml"" in YAML output format",kubectl get -f parameters.yaml -o yaml
"Delete pods and services with same names ""auth"" and ""analytics""","kubectl delete pod,service auth analytics"
"Create a service for a replicated python using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs python --port=3001 --target-port=8000
"Delete pods and services with same names ""payment"" and ""foo""","kubectl delete pod,service payment foo"
"Listen on port 8888 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8888:5000
Describe one context in your kubeconfig file,kubectl config get-contexts team-beta-context
Show metrics for the pods defined by label stack=tech-stack,kubectl top pod -l stack=tech-stack
"Listen on port 8080 locally, forwarding to 8080 in the pod",kubectl port-forward pod/chat-app-pod 8080:8080
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/kube-system-config deployment/database-deployment
Update pod 'security' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods security app-
"Listen on port 3000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 3000:3000"
Set deployment log-aggregator-deployment's service account to metrics-server,kubectl set serviceaccount deployment log-aggregator-deployment metrics-server
List a single pod in YAML output format,kubectl get -o yaml pod gateway-pod
Create a new ClusterIP service named analytics-service-clusterip,kubectl create service clusterip analytics-service-clusterip --tcp=3001:5000
"Listen on port 5432 locally, forwarding to 5432 in the pod",kubectl port-forward pod/security-service-pod 5432:5432
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/configurations/file2.txt
"Listen on port 8088 locally, forwarding to 8080 in the pod",kubectl port-forward pod/proxy-server-pod 8088:8080
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/frontend-pod 8000:5000
"Get output from running the 'gem --version' command from pod web-app-pod, using the first container by default",kubectl exec web-app-pod -- gem --version
"Listen on port 5432 locally, forwarding to 8888 in the pod",kubectl port-forward pod/security-service-pod 5432:8888
Update a cluster role binding for my-service-account,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:my-service-account
Get output from running the 'nginx' command in code-explorer from pod security-service-pod,kubectl exec security-service-pod -c code-explorer -- nginx
Add a taint with key 'hardware' on nodes having label release=beta,kubectl taint node -l release=beta  hardware=edge-node-10:PreferNoSchedule
"Get output from running 'docker run -it ubuntu' command from the first pod of the deployment gateway-deployment, using the first container by default",kubectl exec deploy/gateway-deployment -- docker run -it ubuntu
Add a taint with key 'special' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  special=k8s-node-1:PreferNoSchedule
Get output from running the 'jenkins --version' command in code-explorer from pod proxy-server-pod,kubectl exec proxy-server-pod -c code-explorer -- jenkins --version
Set deployment order-processing-deployment's service account to flux,kubectl set serviceaccount deployment order-processing-deployment flux
"Auto scale a deployment ""payment"", with the number of pods between 5 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment payment --min=5 --max=10
Create a new ExternalName service named external-third-party-api-service,kubectl create service externalname external-third-party-api-service --external-name blog-test.blog
"Listen on port 3000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/analytics-pod 3000:9090
Set the server field on the cluster-alpha cluster to https://1.2.3.4,kubectl config set clusters.cluster-alpha.server https://1.2.3.4
"Get output from running 'ash' command from the first pod of the deployment gateway-deployment, using the first container by default",kubectl exec deploy/gateway-deployment -- ash
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 6379 8888
Begin streaming the logs from all containers in pods defined by label version=v1.0.0,kubectl logs -f -l version=v1.0.0 --all-containers=true
"Scale a resource identified by type and name specified in ""conf.json"" to 7",kubectl scale --replicas=7 -f conf.json
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.cloud-context.cluster my-k8s-cluster
"Set a deployments php container cpu limits to ""10"" and memory to ""4Gi""","kubectl set resources deployment php -c=nginx --limits=cpu=10,memory=4Gi"
Get output from running the 'redis-server' command in stardust-shuttle from pod mypod,kubectl exec mypod -c stardust-shuttle -- redis-server
Add a taint with key 'datacenter' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  datacenter=db-node-7:PreferNoSchedule
"Get output from running 'go run hello.go' command from the first pod of the deployment user-management-deployment, using the first container by default",kubectl exec deploy/user-management-deployment -- go run hello.go
"Listen on port 8000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8000:8888"
Add a taint with key 'cpu-type' on nodes having label myLabel,kubectl taint node -l myLabel  cpu-type=testing-node-11:PreferNoSchedule
Set deployment gateway-deployment's service account to default,kubectl set serviceaccount deployment gateway-deployment default
"Set a deployments ubuntu container cpu limits to ""3"" and memory to ""512Mi""","kubectl set resources deployment ubuntu -c=nginx --limits=cpu=3,memory=512Mi"
"Listen on port 5000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5000:5432
Start a wordpress pod and let the container expose port 8084,kubectl run hazelcast --image=wordpress --port=8084
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/analytics-platform-deployment -c email-service-pod-1
Create a new config map named app-config from the key=value pairs in the file,kubectl create configmap app-config --from-file=path/to/properties
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""alpha-apps"" API group",kubectl get deployments.hotfix-1.1.2.alpha-apps -o json
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/log-rotation-job -n default
Import environment from a secret,kubectl set env --from=secret/azure-storage-secret deployment/scheduler-app-deployment
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=settings=/path/to/options/file1.txt --from-file=key2=/path/to/configs/file2.txt
Get output from running the 'redis-cli' command in time-machine from pod vpn-service-pod,kubectl exec vpn-service-pod -c time-machine -- redis-cli
"Get output from running the 'node' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- node
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 6379 3000
"Set a deployments redis container cpu limits to ""3"" and memory to ""512Mi""","kubectl set resources deployment redis -c=nginx --limits=cpu=3,memory=512Mi"
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 27017,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=27017
Remove from node 'prod-node-5' all the taints with key 'app',kubectl taint nodes prod-node-5 app-
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/mypod 3000:8000
Create a pod based on the JSON passed into stdin,cat parameters.json | kubectl create -f -
Create a new secret named my-secret from an env file,kubectl create secret generic my-secret --from-env-file=path/to/settings.env
Get output from running the 'sleep 3600' command in nano-bot from pod vpn-service-pod,kubectl exec vpn-service-pod -c nano-bot -- sleep 3600
Create a new secret named gcp-service-account-secret from an env file,kubectl create secret generic gcp-service-account-secret --from-env-file=path/to/configs.env
Create a new secret named jwt-secret with keys for each file in folder bar,kubectl create secret generic jwt-secret --from-file=path/to/configurations
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/app-config deployment/backend-microservice-deployment
Update image of all containers of daemonset app-v2 to 'ruby:3.0.2',kubectl set image daemonset app-v2 *=ruby:3.0.2
"Listen on port 8888 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8888:8088
Update a single-container pod's image version (tag) to v4,kubectl get pod media-stream-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
Add to node 'k8s-node-1' a taint with key 'datacenter' and no value,kubectl taint nodes k8s-node-1 datacenter:NoSchedule
"Listen on port 3000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod 3000:8888
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.app-2-context.cluster cluster-beta
List resource information in custom columns,"kubectl get pod proxy-service-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/analytics-pod
"Wait for the pod ""web-app-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/web-app-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/user-service"
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=cluster-beta
Get output from running the 'nginx' command in warp-drive from pod chat-app-pod,kubectl exec chat-app-pod -c warp-drive -- nginx
"Listen on port 8088 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8088:8088"
Set deployment analytics-platform-deployment's service account to jenkins,kubectl set serviceaccount deployment analytics-platform-deployment jenkins
"Create a single ingress called 'public-ingress' that directs requests to foo.com/input to svc # svc1:9090 with a tls secret ""my-cert""","kubectl create ingress public-ingress --rule=""foo.com/input=svc1:9090,tls=my-cert"""
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""api-v1"" API group",kubectl get deployments.alpha-2.0.api-v1 -o yaml
Start a python pod and let the container expose port 5432,kubectl run hazelcast --image=python --port=5432
Return snapshot logs from container authentication-service-deployment-1 of a deployment named database-pod,kubectl logs deployment/authentication-service-deployment -c database-pod-1
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/frontend-pod 5432 5432
"List all allowed actions in namespace ""kube-node-lease""",kubectl auth can-i --list --namespace=kube-node-lease
"Create a role named ""custom_role"" with ResourceName specified",kubectl create role custom_role --verb=proxy --resource=pods --resource-name=message-queue --resource-name=auth-service
Scale a replica set named 'db-migration-replicaset' to 7,kubectl scale --replicas=7 rs/db-migration-replicaset
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/kube-system-config deployment/gateway-deployment
Describe one context in your kubeconfig file,kubectl config get-contexts local-context
Update image of all containers of daemonset namespace- to 'postgres:13.4',kubectl set image daemonset namespace-3 *=postgres:13.4
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/mypod 9090 8080
"Listen on port 9090 locally, forwarding to 5000 in the pod",kubectl port-forward pod/cdn-service-pod 9090:5000
Check the rollout status of a daemonset,kubectl rollout status daemonset/my-deployment
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""my-apps"" API group",kubectl get deployments.v3.0.0.my-apps -o yaml
"Update pod 'cdn' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn scaling-policy=auto-horizontal-scaling
Display only the most recent 23 lines of output in pod database-pod,kubectl logs --tail=23 database-pod
Show metrics for a given pod and its containers,kubectl top pod security-service-pod --containers
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 5432 5000
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""custom-deployments"" API group",kubectl get deployments.v1.1.0.custom-deployments -o yaml
Create a job with a command,kubectl create job batch-processing --image=redis -- redis-cli
Return snapshot of previous terminated rocket-ranger container logs from pod mypod,kubectl logs -p -c rocket-ranger mypod
Remove from node 'kube-master-9' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes kube-master-9 zone:PreferNoSchedule-
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=27017:9092
"Listen on port 5000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5000:8088
Create a copy of vpn-service-pod changing all container images to redis,kubectl debug vpn-service-pod --copy-to=dgb-img --set-image=*=redis
Update pod 'auth' with the label 'unhealthy' and the value 'true',kubectl label pods auth unhealthy=true
Create a new ExternalName service named external-notification-service,kubectl create service externalname external-notification-service --external-name news-demo.news
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.client-1-context.cluster cluster-alpha
Add a taint with key 'hardware' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  hardware=dev-node-4:PreferNoSchedule
"Update pod 'proxy' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy compliance-level=PCI-DSS
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""apps"" API group",kubectl get deployments.v2.0.0.apps -o json
Start a amazonlinux pod and let the container expose port 8888,kubectl run hazelcast --image=amazonlinux --port=8888
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.admin-context.cluster kube-cluster-1
"If the deployment named bar's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/bar
Start a hazelcast pod and let the container expose port 8181,kubectl run hazelcast --image=hazelcast/hazelcast --port=8181
"Listen on port 8081 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8081:3000"
Get the documentation of a specific field of a resource,kubectl explain resource=pods.spec.replicas
"Update pod 'monitoring' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring scaling-policy=auto-horizontal-scaling
Update image of all containers of daemonset nginx to 'postgres:13.4',kubectl set image daemonset nginx *=postgres:13.4
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod payment-gateway-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
Update pod 'email' with the label 'env' and the value 'development',kubectl label pods email env=development
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/kube-system-config deployment/user-management-deployment
Add a taint with key 'app' on nodes having label myLabel,kubectl taint node -l myLabel  app=app-node-6:PreferNoSchedule
Delete pods and services with label cluster=my-cluster,"kubectl delete pods,services -l cluster=my-cluster"
Create a new secret named ldap-credentials-secret from an env file,kubectl create secret generic ldap-credentials-secret --from-env-file=path/to/profiles.env
"Get output from running the 'redis-server --version' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- redis-server --version
Start a hazelcast pod and let the container expose port 8083,kubectl run hazelcast --image=hazelcast/hazelcast --port=8083
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-settings deployment/monitoring-stack-deployment
Get output from running the 'nginx' command in astro-container from pod gateway-pod,kubectl exec gateway-pod -c astro-container -- nginx
Add a taint with key 'disktype' on nodes having label team=devops,kubectl taint node -l team=devops  disktype=prod-node-5:PreferNoSchedule
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/backend-pod 8080:3000
Create a new secret named email-credentials-secret from an env file,kubectl create secret generic email-credentials-secret --from-env-file=path/to/configurations.env
"If the deployment named web's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/web
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""api-v1"" API group",kubectl get deployments.rc-1.1.0.api-v1 -o yaml
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/kube-system-config deployment/proxy-service-deployment
"Create a cluster role name ""custom_role"" with NonResourceURL specified","kubectl create clusterrole ""custom_role"" --verb=watch --non-resource-url=/exec/*"
Update image of all containers of daemonset prod to 'mysql:5.7.35',kubectl set image daemonset prod *=mysql:5.7.35
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8088 5000
Set deployment cache-cluster-deployment's service account to kube-proxy,kubectl set serviceaccount deployment cache-cluster-deployment kube-proxy
Add a taint with key 'disktype' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  disktype=prod-node-5:PreferNoSchedule
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod backend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach backend-pod -c stardust-shuttle -i -t
Edit the job 'batch-processing-job' in JSON using the v1 API format,kubectl edit job.v1.batch/batch-processing-job -o json
Create a job with a command,kubectl create job batch-processing --image=mongo -- mongod
Edit the service named 'cache-service',kubectl edit svc/cache-service
Add a taint with key 'disktype' on nodes having label environment=production,kubectl taint node -l environment=production  disktype=worker-node-3:PreferNoSchedule
Update pod 'api' with the label 'component' and the value 'web',kubectl label pods api component=web
Delete the kube-cluster-2 cluster,kubectl config delete-cluster kube-cluster-2
Create a copy of frontend-pod changing all container images to ethereum/client-go,kubectl debug frontend-pod --copy-to=debug-image-web --set-image=*=ethereum/client-go
Set the user field on the testing-context context entry without touching other values,kubectl config set-context testing-context --user=cluster-admin
Return snapshot of previous terminated nebula-navigator container logs from pod api-service-pod,kubectl logs -p -c nebula-navigator api-service-pod
Return snapshot of previous terminated cosmic-container container logs from pod gateway-pod,kubectl logs -p -c cosmic-container gateway-pod
Edit the deployment 'email-server-deployment' in YAML and save the modified config in its annotation,kubectl edit deployment/email-server-deployment -o yaml --save-config
Update deployment 'notification-handler-deployment' with a new environment variable,kubectl set env deployment/notification-handler-deployment ENV=prod
Add a taint with key 'workload' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  workload=web-node-8:PreferNoSchedule
Scale a replica set named 'baz' to 3,kubectl scale --replicas=3 rs/baz
Update pod 'web' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods web component-
"Create a single ingress called 'website-ingress' that directs requests to site.com/bar to svc # svc1:8000 with a tls secret ""my-cert""","kubectl create ingress website-ingress --rule=""site.com/bar=svc1:8000,tls=my-cert"""
"Listen on port 5000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5000:8000
"Get output from running the 'mysqld' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- mysqld
"Get output from running 'go' command from the first pod of the deployment frontend-deployment, using the first container by default",kubectl exec deploy/frontend-deployment -- go
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.local-context.cluster sun-cluster
"Listen on port 8081 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8081:8000
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8088 6379
"Listen on port 5432 locally, forwarding to 3000 in the pod",kubectl port-forward pod/cdn-service-pod 5432:3000
"Update pod 'analytics' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics security-scan-status=pass
"Listen on port 8080 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8080:8088"
Create a deployment named db that runs the ruby image and expose port 3000,kubectl create deployment db --image=ruby --port=3000
Update deployment 'mydeployment' with a new environment variable,kubectl set env deployment/mydeployment LOG_LEVEL=info
"Update pod 'api' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api compliance-level=PCI-DSS
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=settings=/path/to/options/file1.txt --from-file=key2=/path/to/profiles/file2.txt
Create a deployment named my-dep that runs the ruby image and expose port 9000,kubectl create deployment my-dep --image=ruby --port=9000
Return only the phase value of the specified pod,kubectl get -o template pod/security-service-pod --template={{.status.phase}}
"Run a proxy to the Kubernetes API server on port 8010, serving static content from ./local/www/",kubectl proxy --port=8010 --www=./local/www/
Create a new namespace named monitoring,kubectl create namespace monitoring
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/chat-app-pod 3000:6379
"Get output from running the 'redis-cli' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- redis-cli
"Delete pods and services with same names ""proxy"" and ""proxy""","kubectl delete pod,service proxy proxy"
"Listen on port 8888 locally, forwarding to 8088 in the pod",kubectl port-forward pod/security-service-pod 8888:8088
"Describe a pod identified by type and name in ""parameters.json""",kubectl describe -f parameters.json
Rename the context 'testing-context' to 'client-1-context' in your kubeconfig file,kubectl config rename-context testing-context client-1-context
"Delete pods and services with same names ""database"" and ""analytics""","kubectl delete pod,service database analytics"
"Get output from running the 'yum install -y aws-cli' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- yum install -y aws-cli
"Create a service for a replicated python using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs python --port=3306 --target-port=808400
Set deployment user-management-deployment's service account to elasticsearch,kubectl set serviceaccount deployment user-management-deployment elasticsearch
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json scaling-policy=auto-horizontal-scaling
"Create a service for a replicated alpine using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs alpine --port=5001 --target-port=330600
"Delete pods and services with same names ""foo"" and ""auth""","kubectl delete pod,service foo auth"
Get output from code-explorer from pod vpn-service-pod,kubectl attach vpn-service-pod -c code-explorer
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=6379 --target-port=909000
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node monitoring-node-15 -p '{""stringData"":{""password"":""new-password""}'"
"Auto scale a deployment ""gateway"", with the number of pods between 2 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=2 --max=14
"Set a deployments centos container cpu limits to ""100m"" and memory to ""64Mi""","kubectl set resources deployment centos -c=nginx --limits=cpu=100m,memory=64Mi"
Show merged kubeconfig settings,kubectl config view
Create a new config map named app-secrets from the key=value pairs in the file,kubectl create configmap app-secrets --from-file=path/to/data
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/database-pod
List resource information in custom columns,"kubectl get pod database-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Set deployment cache-cluster-deployment's service account to argocd,kubectl set serviceaccount deployment cache-cluster-deployment argocd
Embed certificate authority data for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --embed-certs --certificate-authority=~/.kube/data-cluster/kubernetes.ca.crt
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8088 5432
Create a deployment named jenkins-x that runs the redis image and expose port 3001,kubectl create deployment jenkins-x --image=redis --port=3001
"Update pod 'media-stream' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods media-stream custom-label='my-custom-value'
"Listen on port 9090 locally, forwarding to 3000 in the pod",kubectl port-forward pod/cdn-service-pod 9090:3000
Update pod 'proxy-server' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy-server app-
Get output from running the 'redis-cli' command in time-machine from pod api-service-pod,kubectl exec api-service-pod -c time-machine -- redis-cli
Create a job with a command,kubectl create job log-processing-job --image=php --
"Listen on port 8081 locally, forwarding to 3000 in the pod",kubectl port-forward pod/frontend-pod 8081:3000
Import environment from a secret,kubectl set env --from=secret/database-secret deployment/proxy-service-deployment
"Get output from running the 'mysql' command from pod api-service-pod, using the first container by default",kubectl exec api-service-pod -- mysql
Get output from running the 'npm --version' command in warp-drive from pod media-stream-pod,kubectl exec media-stream-pod -c warp-drive -- npm --version
Create a new secret named jwt-secret with keys for each file in folder bar,kubectl create secret generic jwt-secret --from-file=path/to/configs
Create a deployment named app that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 8084,kubectl create deployment app --image=docker.elastic.co/elasticsearch/elasticsearch --port=8084
"Listen on port 9090 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 9090:8081"
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8088 8888
Display only the most recent 53 lines of output in pod media-stream-pod,kubectl logs --tail=53 media-stream-pod
"Listen on port 5432 locally, forwarding to 3000 in the pod",kubectl port-forward pod/chat-app-pod 5432:3000
"Get output from running 'pg_dump --version' command from the first pod of the service user-service, using the first container by default",kubectl exec svc/user-service -- pg_dump --version
Create a deployment with a command,kubectl create deployment jenkins-x --image=mysql -- mysqld
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8080 6379
Create a new secret named private-key-secret with keys for each file in folder bar,kubectl create secret generic private-key-secret --from-file=path/to/settings
Create a new secret named private-key-secret from an env file,kubectl create secret generic private-key-secret --from-env-file=path/to/data.env
Update image of all containers of daemonset services to 'ubuntu:20.04',kubectl set image daemonset services *=ubuntu:20.04
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/proxy-server-pod 8000:8088
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/configs/file2.txt
Copy :/tmp/foo local file to /tmp/bar in a remote pod in a specific container,kubectl cp :/tmp/foo payment-gateway-pod-19:/tmp/bar -c image-resizer
"Get output from running 'mysql --version' command from the first pod of the service analytics-service, using the first container by default",kubectl exec svc/analytics-service -- mysql --version
"Start a wordpress pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=wordpress --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
"Get output from running 'kafka-topics --list' command from the first pod of the service payment-service, using the first container by default",kubectl exec svc/payment-service -- kafka-topics --list
Set deployment payment-processor-deployment's service account to default,kubectl set serviceaccount deployment payment-processor-deployment default
Get output from running the 'psql' command in astro-container from pod database-pod,kubectl exec database-pod -c astro-container -- psql
Get output from running the 'yum install -y wget' command in mycontainer from pod email-service-pod,kubectl exec email-service-pod -c mycontainer -- yum install -y wget
Update a single-container pod's image version (tag) to v4,kubectl get pod payment-gateway-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
Create a deployment named drupal that runs the postgres image with 2 replicas,kubectl create deployment drupal --image=postgres --replicas=2
"Get output from running the 'redis-server --version' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- redis-server --version
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/mypod 8888 3000
Remove from node 'storage-node-13' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes storage-node-13 app:PreferNoSchedule-
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 6379 8000
"Update pod 'chat-app' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app security-scan-status=pass
"Auto scale a replication controller ""monitoring"", with the number of pods between 1 and 3, target CPU utilization at 90%",kubectl autoscale rc monitoring --max=3 --cpu-percent=90
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=9091 --target-port=808800
"Update pod 'proxy-server' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods proxy-server status=unhealthy
"Create a single ingress called 'app-ingress' that directs requests to site.com/input to svc # svc1:6379 with a tls secret ""my-cert""","kubectl create ingress app-ingress --rule=""site.com/input=svc1:6379,tls=my-cert"""
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8888 5000
"Check to see if I can get the job named ""content-import-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/content-import-job -n cert-manager
Create a cron job with a command,"kubectl create cronjob cron-task --image=ubuntu --schedule=""*/1 * * * *"" -- docker run -it ubuntu"
Create a cron job with a command,"kubectl create cronjob weekly-summary --image=confluentinc/cp-kafka --schedule=""*/1 * * * *"" -- kafka-server-start /etc/kafka/server.properties"
Update pod 'vpn' only if the resource is unchanged from version 1,kubectl label pods vpn status=unhealthy --resource-version=1
"Start a centos pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=centos --overrides='{ ""apiVersion"": ""rc-1.1.0"", ""spec"": { ... } }'"
Copy /tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp velero/backend-pod-13:/tmp/foo /etc/kubernetes
"Run a proxy to the Kubernetes API server on port 9092, serving static content from ./local/www/",kubectl proxy --port=9092 --www=./local/www/
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json SLA='99.9% uptime'
Create a deployment named api that runs the jenkins image and expose port 8000,kubectl create deployment api --image=jenkins --port=8000
"Get output from running 'npm --version' command from the first pod of the service order-service, using the first container by default",kubectl exec svc/order-service -- npm --version
Roll back to the previous deployment with dry-run,kubectl rollout undo --dry-run=server deployment/namespace-1
"Listen on port 8080 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8080:5432
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/backend-pod
"Auto scale a deployment ""auth"", with the number of pods between 4 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment auth --min=4 --max=8
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/global-config deployment/backend-microservice-deployment
Create a new secret named password-secret from an env file,kubectl create secret generic password-secret --from-env-file=path/to/data.env
Set deployment authentication-service-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment authentication-service-deployment kube-scheduler
"Listen on port 8080 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/scheduler-service 8080:https
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=kube-cluster-1
"Delete pods and services with same names ""api"" and ""security""","kubectl delete pod,service api security"
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""alpha-apps"" API group",kubectl get deployments.dev-2.2.0.alpha-apps -o yaml
"If the deployment named foo's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/foo
Create a job with a command,kubectl create job monitoring-job --image=wordpress -- wp
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""experimental-apps"" API group",kubectl get deployments.v1.1.0.experimental-apps -o json
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json backup-strategy='daily backups'
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/ui-config deployment/authentication-service-deployment
Embed certificate authority data for the data-cluster cluster entry,kubectl config set-cluster data-cluster --embed-certs --certificate-authority=~/.kube/cluster-alpha/kubernetes.ca.crt
Return snapshot of previous terminated astro-container container logs from pod database-pod,kubectl logs -p -c astro-container database-pod
Create a new NodePort service named backend-nodeport,kubectl create service nodeport backend-nodeport --tcp=3000:5432
Create a copy of e-commerce-pod adding a debug container and attach to it,kubectl debug e-commerce-pod -it --image=busybox --copy-to=dgb-img
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 3000 3000
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.client-1-context.cluster sun-cluster
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/chat-app-pod 8088:5432
"Listen on port 5000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 5000:8888
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.metadata.labels
"Listen on port 8088 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8088:8888"
Copy ~/.config/kube local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp ~/.config/kube kubeapps/payment-gateway-pod-19:/tmp/bar_dir
Add a taint with key 'datacenter' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  datacenter=node-1:PreferNoSchedule
Set deployment frontend-deployment's service account to prometheus,kubectl set serviceaccount deployment frontend-deployment prometheus
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/log-aggregator-pod
Create a new secret named api-key-secret from an env file,kubectl create secret generic api-key-secret --from-env-file=path/to/settings.env
Remove from node 'worker-node-3' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes worker-node-3 app:PreferNoSchedule-
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json app-version=2.5.1
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.client-2-context.cluster prod-cluster
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/auth-service-pod
"Auto scale a deployment ""log-aggregator"", with the number of pods between 4 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment log-aggregator --min=4 --max=12
"If the deployment named baz's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/baz
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube cert-manager/task-processor-pod-17:/tmp/bar
"Auto scale a replication controller ""api"", with the number of pods between 1 and 7, target CPU utilization at 20%",kubectl autoscale rc api --max=7 --cpu-percent=20
"Listen on port 9090 locally, forwarding to 6379 in the pod",kubectl port-forward pod/analytics-pod 9090:6379
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/log-config deployment/database-deployment
Remove from node 'prod-node-5' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes prod-node-5 disktype:NoSchedule-
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/e-commerce-pod 5000:8000
"Delete pods and services with same names ""payment"" and ""cdn""","kubectl delete pod,service payment cdn"
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=kube-cluster-1
"Get output from running the 'redis-cli' command from pod gateway-pod, using the first container by default",kubectl exec gateway-pod -- redis-cli
Import environment from a secret,kubectl set env --from=secret/cert-manager-secret deployment/payment-processor-deployment
Create a deployment named jenkins-x that runs the jenkins image,kubectl create deployment jenkins-x --image=jenkins
"Get output from running 'redis-server --version' command from the first pod of the deployment web-app-deployment, using the first container by default",kubectl exec deploy/web-app-deployment -- redis-server --version
"Listen on port 9090 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 9090:8080
"Set a deployments amazonlinux container cpu limits to ""5"" and memory to ""128Mi""","kubectl set resources deployment amazonlinux -c=nginx --limits=cpu=5,memory=128Mi"
Update image of all containers of daemonset namespace- to 'alpine:3.14',kubectl set image daemonset namespace-3 *=alpine:3.14
"Get output from running 'python' command from the first pod of the service cache-service, using the first container by default",kubectl exec svc/cache-service -- python
Create a job with a command,kubectl create job log-processing-job --image=nginx -- nginx -t
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/log-aggregator-pod
Update image of all containers of daemonset app-v2 to 'postgres:13.4',kubectl set image daemonset app-v2 *=postgres:13.4
"Check to see if I can get the job named ""content-import-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/content-import-job -n logging
"Listen on port 8000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/frontend-pod 8000:3000
Start a postgres pod and let the container expose port 9000,kubectl run hazelcast --image=postgres --port=9000
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/user-management-deployment CACHE_SIZE=64MB -o yaml
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/backend-pod 6379:3000
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8081 8088
Begin streaming the logs of the stardust-shuttle container in pod e-commerce-pod,kubectl logs -f -c stardust-shuttle e-commerce-pod
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/cdn-service-pod :8080
Set deployment analytics-platform-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment analytics-platform-deployment gitlab-runner
"Create a service for a pod monitoring-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod monitoring-pod --port=5001 --name=frontend
Set the resource request and limits for all containers in alpine,"kubectl set resources deployment alpine --limits=cpu=200m,memory=512Mi --requests=cpu=2,memory=512Mi"
Get output from running the 'wp' command in cosmic-container from pod email-service-pod,kubectl exec email-service-pod -c cosmic-container -- wp
Create a deployment named db that runs the ethereum/client-go image with 3 replicas,kubectl create deployment db --image=ethereum/client-go --replicas=3
"Update node 'gpu-node-12' with a taint with key 'dedicated' and value 'special-user' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes gpu-node-12 dedicated=special-user:NoSchedule
Create a new secret named encryption-key-secret from an env file,kubectl create secret generic encryption-key-secret --from-env-file=path/to/parameters.env
"Listen on port 9090 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 9090:8081
Update pod 'media-stream' with the label 'role' and the value 'backend',kubectl label pods media-stream role=backend
Update deployment 'cache-cluster-deployment' with a new environment variable,kubectl set env deployment/cache-cluster-deployment QUEUE_NAME=task-queue
Return snapshot logs from container web-app-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/web-app-deployment -c gateway-pod-1
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.user-b-context.cluster galaxy-cluster
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to /etc/kubernetes locally,kubectl cp prometheus/auth-service-pod-11:/var/run/secrets/kubernetes.io/serviceaccount/ /etc/kubernetes
Update pod 'gateway' with the label 'env' and the value 'staging',kubectl label pods gateway env=staging
Set deployment email-server-deployment's service account to cert-manager,kubectl set serviceaccount deployment email-server-deployment cert-manager
Start a redis pod and let the container expose port 27017,kubectl run hazelcast --image=redis --port=27017
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=8010 --target-port=801000
Set deployment search-engine-deployment's service account to tekton,kubectl set serviceaccount deployment search-engine-deployment tekton
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/chat-app-pod :5432
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.client-2-context.cluster cluster-alpha
"Listen on port 8081 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8081:6379
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/env-vars deployment/frontend-deployment
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=properties=/path/to/settings/file1.txt --from-file=key1=/path/to/options/file2.txt
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n kube-dns
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node backup-node-14 -p '{""stringData"":{""password"":""new-password""}'"
Create a new ExternalName service named external-dns-service,kubectl create service externalname external-dns-service --external-name document-company.com
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/chat-app-pod 8081:8080
Return snapshot of previous terminated lunar-launcher container logs from pod backend-pod,kubectl logs -p -c lunar-launcher backend-pod
"Listen on port 8088 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8088:8000
"Listen on port 5000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/backend-pod 5000:8088
"If the deployment named foo's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/foo
Delete the web-app user,kubectl config delete-user web-app
"If the deployment named app-v2-replicaset's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/app-v2-replicaset
"Start a python pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=python --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
Update pod 'cdn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods cdn env-
"Listen on port 8088 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8088:8080"
Return snapshot logs from container email-server-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/email-server-deployment -c chat-app-pod-1
Remove from node 'node-1' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes node-1 datacenter:NoExecute-
"Create a cluster role binding for user1, user2, and group1 using the custom_role cluster role",kubectl create clusterrolebinding custom_role --clusterrole=custom_role --user=user1 --user=user2 --group=group1
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/env-vars deployment/database-deployment
Display only the most recent 3 lines of output in pod auth-service-pod,kubectl logs --tail=3 auth-service-pod
"Auto scale a deployment ""media-stream"", with the number of pods between 7 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment media-stream --min=7 --max=11
"Listen on port 8888 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8888:5000"
Return snapshot of previous terminated cosmic-container container logs from pod frontend-pod,kubectl logs -p -c cosmic-container frontend-pod
"Listen on port 8081 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8081:6379
Create a pod disruption budget named api-service-pdb that will select all pods with the env=production label # and require minumum 9 of them being available at any point in time,kubectl create poddisruptionbudget api-service-pdb --selector=env=production --min-available=9
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=galaxy-cluster
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=settings=/path/to/properties/file1.txt --from-file=key2=/path/to/properties/file2.txt
Set deployment frontend-deployment's service account to kube-proxy,kubectl set serviceaccount deployment frontend-deployment kube-proxy
Update all deployments' and rc's nginx container's image to 'alpine:3.14',"kubectl set image deployments,rc alpine=alpine:3.14 --all"
Return snapshot logs from container payment-processor-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/payment-processor-deployment -c monitoring-pod-1
"Auto scale a replication controller ""api"", with the number of pods between 1 and 7, target CPU utilization at 90%",kubectl autoscale rc api --max=7 --cpu-percent=90
"If the deployment named bar's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/bar
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/security-service-pod 5000:8000
Remove from node 'gpu-node-12' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes gpu-node-12 disktype:NoSchedule-
Import environment from a secret,kubectl set env --from=secret/tls-certificate-secret deployment/frontend-deployment
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 8888 8000
Embed certificate authority data for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod 6379:8888
Update deployment 'scheduler-app-deployment' with a new environment variable,kubectl set env deployment/scheduler-app-deployment SECRET_KEY=your-secret-key
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/log-config deployment/email-server-deployment
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/auth-service-pod
"Update pod 'email' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email security-scan-status=pass
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=cluster-gamma
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-settings deployment/search-engine-deployment
Get output from running the 'go version' command in time-machine from pod proxy-service-pod,kubectl exec proxy-service-pod -c time-machine -- go version
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/database-pod
Create a new config map named api-config from the key=value pairs in the file,kubectl create configmap api-config --from-file=path/to/profiles
"Listen on port 5000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 5000:9090"
Set the certificate-authority-data field on the cloud-cluster cluster,"kubectl config set clusters.cloud-cluster.certificate-authority-data $(echo ""cert_data_here"" | base64 -i -)"
"Create a service for an node deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment node --port=8083 --target-port=818100
Update pod 'payment' with the label 'role' and the value 'frontend',kubectl label pods payment role=frontend
"Get output from running the 'wp' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- wp
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c cosmic-container -i -t
Set deployment web-app-deployment's service account to dashboard,kubectl set serviceaccount deployment web-app-deployment dashboard
Create a pod based on the JSON passed into stdin,cat setup.json | kubectl create -f -
"Listen on port 8080 locally, forwarding to 8080 in the pod",kubectl port-forward pod/mypod 8080:8080
"Describe a pod identified by type and name in ""setup.json""",kubectl describe -f setup.json
"Check to see if I can get the job named ""report-generation-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/report-generation-job -n kube-system
Add a taint with key 'dedicated' on nodes having label myLabel,kubectl taint node -l myLabel  dedicated=dev-node-4:PreferNoSchedule
"Set a deployments postgres container cpu limits to ""500m"" and memory to ""2Gi""","kubectl set resources deployment postgres -c=nginx --limits=cpu=500m,memory=2Gi"
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/kube-system-config deployment/notification-handler-deployment
Update pod 'frontend' with the label 'unhealthy' and the value 'true',kubectl label pods frontend unhealthy=true
Set deployment mydeployment's service account to flux,kubectl set serviceaccount deployment mydeployment flux
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod cdn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach cdn-service-pod -c code-explorer -i -t
"Listen on port 5000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod 5000:5432
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/cdn-service-pod
Begin streaming the logs of the code-explorer container in pod e-commerce-pod,kubectl logs -f -c code-explorer e-commerce-pod
Return snapshot of previous terminated code-explorer container logs from pod auth-service-pod,kubectl logs -p -c code-explorer auth-service-pod
Show metrics for a given node,kubectl top node edge-node-10
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/analytics-pod
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/analytics-pod 9090 5000
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=properties=/path/to/properties/file1.txt --from-file=key1=/path/to/parameters/file2.txt
"Get output from running the 'psql' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- psql
Get output from running the 'geth version' command in nano-bot from pod api-service-pod,kubectl exec api-service-pod -c nano-bot -- geth version
Rename the context 'local-context' to 'user-b-context' in your kubeconfig file,kubectl config rename-context local-context user-b-context
"Start a golang pod and set labels ""app=golang"" and ""env=prod"" in the container","kubectl run hazelcast --image=golang --labels=""app=golang,env=prod"""
Update pod 'frontend' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods frontend description-
"Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment nginx --port=9090 --target-port=808300
Create a new ExternalName service named external-cloud-storage-service,kubectl create service externalname external-cloud-storage-service --external-name bar.com
"Listen on port 3000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 3000:8888
Create a deployment named my-dep that runs the amazonlinux image and expose port 9091,kubectl create deployment my-dep --image=amazonlinux --port=9091
"If the deployment named frontend-rs's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/frontend-rs
"Listen on port 9090 locally, forwarding to 3000 in the pod",kubectl port-forward pod/frontend-pod 9090:3000
Return snapshot logs from pod security-service-pod with only one container,kubectl logs security-service-pod
Embed certificate authority data for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --embed-certs --certificate-authority=~/.kube/dev-cluster/kubernetes.ca.crt
"Update pod 'payment' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment security-scan-status=pass
"Listen on port 8081 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8081:8081"
Create a new secret named gcp-service-account-secret with keys for each file in folder bar,kubectl create secret generic gcp-service-account-secret --from-file=path/to/configs
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/app-config deployment/api-server-deployment
Add a taint with key 'hardware' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  hardware=kube-master-9:PreferNoSchedule
"Set a deployments python container cpu limits to ""10"" and memory to ""256Mi""","kubectl set resources deployment python -c=nginx --limits=cpu=10,memory=256Mi"
Update pod 'payment' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods payment release-
Create a deployment named my-dep that runs the mcr.microsoft.com/dotnet/core/runtime image and expose port 8888,kubectl create deployment my-dep --image=mcr.microsoft.com/dotnet/core/runtime --port=8888
Add a taint with key 'hardware' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  hardware=kube-master-9:PreferNoSchedule
Get output from mycontainer from pod gateway-pod,kubectl attach gateway-pod -c mycontainer
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/backend-service"
"Auto scale a deployment ""monitoring"", with the number of pods between 2 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment monitoring --min=2 --max=9
Set the last-applied-configuration of a resource to match the contents of a file,kubectl apply set-last-applied -f parameters.yaml
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-notification-service
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""extensions"" API group",kubectl get deployments.dev-2.2.0.extensions -o json
Import environment from a config map with a prefix,kubectl set env --from=configmap/global-config --prefix=MYSQL_ deployment/load-balancer-deployment
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8080 8000
Create a new LoadBalancer service named web-app-lb,kubectl create service loadbalancer web-app-lb --tcp=9092:5000
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8000 9090
Add to node 'storage-node-13' a taint with key 'datacenter' and no value,kubectl taint nodes storage-node-13 datacenter:NoSchedule
Rename the context 'prod-context' to 'user-b-context' in your kubeconfig file,kubectl config rename-context prod-context user-b-context
"Create a single ingress called 'public-api-ingress' that directs requests to site.com/input to svc # svc1:5432 with a tls secret ""my-cert""","kubectl create ingress public-api-ingress --rule=""site.com/input=svc1:5432,tls=my-cert"""
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""testing-apps"" API group",kubectl get deployments.beta-1.0.testing-apps -o yaml
"Listen on port 8000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod 8000:6379
"Get output from running the 'irb' command from pod media-stream-pod, using the first container by default",kubectl exec media-stream-pod -- irb
Create a job with a command,kubectl create job testing --image=ubuntu -- docker run -it ubuntu
Set the user field on the team-alpha-context context entry without touching other values,kubectl config set-context team-alpha-context --user=cluster-admin
Add a taint with key 'cpu-type' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  cpu-type=node-1:PreferNoSchedule
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod 6379:8081
Start a redis pod and let the container expose port 8088,kubectl run hazelcast --image=redis --port=8088
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod mypod # and sends stdout/stderr from 'bash' back to the client,kubectl attach mypod -c quantum-quark -i -t
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.admin-context.cluster app-cluster
Get output from nebula-navigator from pod monitoring-pod,kubectl attach monitoring-pod -c nebula-navigator
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/monitoring-pod
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/frontend-pod 3000:8000
Create a cron job with a command,"kubectl create cronjob email-notifications --image=nginx --schedule=""*/1 * * * *"" -- nginx -g ""daemon off;"""
Add a taint with key 'disktype' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  disktype=kube-master-9:PreferNoSchedule
Scale a replica set named 'api-service-rs' to 7,kubectl scale --replicas=7 rs/api-service-rs
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/api-config deployment/load-balancer-deployment
Add a taint with key 'hardware' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  hardware=prod-node-5:PreferNoSchedule
"Listen on port 5432 locally, forwarding to 8000 in the pod",kubectl port-forward pod/proxy-server-pod 5432:8000
"Get output from running the 'geth' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- geth
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.cloud-context.cluster kube-cluster-2
Update pod 'vpn' with the label 'component' and the value 'worker',kubectl label pods vpn component=worker
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=data-cluster
Show metrics for a given pod and its containers,kubectl top pod vpn-service-pod --containers
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp default/admin-dashboard-pod-16:/tmp/foo_dir /tmp/bar_dir
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/monitoring-config deployment/scheduler-app-deployment
Add a taint with key 'disktype' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  disktype=node-2:PreferNoSchedule
"Update pod 'frontend' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend release-notes='https://example.com/release-notes/v2.5.1'
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/email-service-pod
"Listen on port 8081 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8081:3000
"Listen on port 6379 locally, forwarding to 9090 in the pod",kubectl port-forward pod/api-service-pod 6379:9090
Get output from running pod web-app-pod; use the 'kubectl.kubernetes.io/default-container' annotation # for selecting the container to be attached or the first container in the pod will be chosen,kubectl attach web-app-pod
Dump current cluster state to /path/to/cluster-state,kubectl cluster-info dump --output-directory=/path/to/cluster-state
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=cluster-gamma
Begin streaming the logs of the stardust-shuttle container in pod database-pod,kubectl logs -f -c stardust-shuttle database-pod
"Listen on port 5432 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5432:9090
List the environment variables defined on a deployments 'cache-cluster-deployment',kubectl set env deployment/cache-cluster-deployment --list
Create a job with a command,kubectl create job monitoring-job --image=nginx -- nginx -t
"Listen on port 8088 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8088:3000
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=8089 --target-port=808800
Display only the most recent 20 lines of output in pod analytics-pod,kubectl logs --tail=20 analytics-pod
Update image of all containers of daemonset staging to 'node:14.17.3',kubectl set image daemonset staging *=node:14.17.3
Create a new NodePort service named backend-nodeport,kubectl create service nodeport backend-nodeport --tcp=3000:3001
"Get output from running 'geth' command from the first pod of the deployment scheduler-app-deployment, using the first container by default",kubectl exec deploy/scheduler-app-deployment -- geth
"Listen on port 6379 locally, forwarding to 5000 in the pod",kubectl port-forward pod/frontend-pod 6379:5000
Start a jenkins pod and let the container expose port 8082,kubectl run hazelcast --image=jenkins --port=8082
Start a jenkins pod and let the container expose port 8088,kubectl run hazelcast --image=jenkins --port=8088
"Delete pods and services with same names ""chat-app"" and ""web""","kubectl delete pod,service chat-app web"
Import environment from a secret,kubectl set env --from=secret/aws-credentials-secret deployment/scheduler-app-deployment
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=9000 --target-port=909000
Add a taint with key 'disktype' on nodes having label environment=production,kubectl taint node -l environment=production  disktype=gpu-node-12:PreferNoSchedule
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/security-service-pod :5432
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 3000 3000
Create a deployment named jenkins-x that runs the wordpress image and expose port 5000,kubectl create deployment jenkins-x --image=wordpress --port=5000
Import environment from a secret,kubectl set env --from=secret/app-config-secret deployment/search-engine-deployment
Display only the most recent 20 lines of output in pod e-commerce-pod,kubectl logs --tail=20 e-commerce-pod
"Auto scale a deployment ""monitoring"", with the number of pods between 7 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment monitoring --min=7 --max=14
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/api-service-pod 3000 5432
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 3000 9090
Update pod 'frontend' only if the resource is unchanged from version 1,kubectl label pods frontend status=unhealthy --resource-version=1
Return snapshot logs from container notification-handler-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/notification-handler-deployment -c cdn-service-pod-1
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""prod-apps"" API group",kubectl get deployments.beta-1.0.prod-apps -o yaml
Set deployment user-management-deployment's service account to kube-dns,kubectl set serviceaccount deployment user-management-deployment kube-dns
"Listen on port 8080 locally, forwarding to 8000 in the pod",kubectl port-forward pod/analytics-pod 8080:8000
"Get output from running the 'pg_dump --version' command from pod security-service-pod, using the first container by default",kubectl exec security-service-pod -- pg_dump --version
Create a new LoadBalancer service named log-aggregator-lb,kubectl create service loadbalancer log-aggregator-lb --tcp=8888:9092
Add to node 'kube-master-9' a taint with key 'workload' and no value,kubectl taint nodes kube-master-9 workload:NoSchedule
Update pod 'database' with the label 'release' and the value 'v2.0',kubectl label pods database release=v2.0
Create a new NodePort service named web-app-nodeport,kubectl create service nodeport web-app-nodeport --tcp=5432:9091
Set deployment cache-cluster-deployment's service account to istio,kubectl set serviceaccount deployment cache-cluster-deployment istio
"List a pod identified by type and name specified in ""settings.yaml"" in YAML output format",kubectl get -f settings.yaml -o yaml
"Delete pods and services with same names ""media-stream"" and ""frontend""","kubectl delete pod,service media-stream frontend"
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.spec.selector
"Update pod 'monitoring' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring env=staging
"Auto scale a deployment ""foo"", with the number of pods between 3 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment foo --min=3 --max=15
Get output from cyber-sleuth from pod monitoring-pod,kubectl attach monitoring-pod -c cyber-sleuth
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8888 8081
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=sun-cluster
Delete resources from a directory containing kustomization.yaml - e.g. config/kustomization.yaml,kubectl delete -k config/
"Delete pods and services with same names ""email"" and ""proxy""","kubectl delete pod,service email proxy"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node prod-node-5 -p '{""stringData"":{""password"":""new-password""}'"
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 8000 8081
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""prod-apps"" API group",kubectl get deployments.v1.0.0.prod-apps -o yaml
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""custom-apps"" API group",kubectl get deployments.v1.1.1.custom-apps -o json
"Listen on port 8888 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8888:8081
"Update pod 'log-aggregator' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator team='frontend team'
"Listen on port 8080 locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod 8080:5432
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""experimental-apps"" API group",kubectl get deployments.v2.1.0.experimental-apps -o json
"Listen on a random port locally, forwarding to 3000 in the pod",kubectl port-forward pod/frontend-pod :3000
Add to node 'k8s-node-1' a taint with key 'app' and no value,kubectl taint nodes k8s-node-1 app:NoSchedule
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/api-config deployment/proxy-service-deployment
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.app-1-context.cluster edge-cluster
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/security-service-pod 8088:5432
"Listen on port 5000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/gateway-service 5000:https
Import environment from a secret,kubectl set env --from=secret/api-secret-key deployment/search-engine-deployment
Set the resource request and limits for all containers in ubuntu,"kubectl set resources deployment ubuntu --limits=cpu=200m,memory=512Mi --requests=cpu=2,memory=256Mi"
Create a new ExternalName service named external-metrics-service,kubectl create service externalname external-metrics-service --external-name travel-sample.travel
Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo kube-flannel/monitoring-agent-pod-6:/tmp/bar
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8088 8088
Remove from node 'app-node-6' all the taints with key 'hardware',kubectl taint nodes app-node-6 hardware-
"Listen on port 8081 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8081:5432
Start a postgres pod and let the container expose port 9091,kubectl run hazelcast --image=postgres --port=9091
"Listen on port 8080 locally, forwarding to 5000 in the pod",kubectl port-forward pod/log-aggregator-pod 8080:5000
"Listen on port 9090 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 9090:9090
Set deployment backend-microservice-deployment's service account to fluentd,kubectl set serviceaccount deployment backend-microservice-deployment fluentd
Get output from rocket-ranger from pod analytics-pod,kubectl attach analytics-pod -c rocket-ranger
Add a taint with key 'environment' on nodes having label team=devops,kubectl taint node -l team=devops  environment=gpu-node-12:PreferNoSchedule
"Listen on port 8080 locally, forwarding to 5432 in the pod",kubectl port-forward pod/mypod 8080:5432
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-config-dev deployment/log-aggregator-deployment
Begin streaming the logs of the mycontainer container in pod frontend-pod,kubectl logs -f -c mycontainer frontend-pod
Get the password for the web-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""web-cluster"")].user.password}'"
Add a taint with key 'workload' on nodes having label component=proxy,kubectl taint node -l component=proxy  workload=dev-node-4:PreferNoSchedule
Create a new config map named global-config from the key=value pairs in the file,kubectl create configmap global-config --from-file=path/to/data
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.rc-1.1.0.sandbox-apps -o json
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/authentication-service"
Set deployment user-management-deployment's service account to cert-manager,kubectl set serviceaccount deployment user-management-deployment cert-manager
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.app-1-context.cluster sun-cluster
Create a cron job with a command,"kubectl create cronjob alerts-cleanup --image=jenkins --schedule=""*/1 * * * *"" -- jenkins-plugin-cli"
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""rc-1.1.0"", ""spec"": { ... } }'"
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-name-config deployment/monitoring-stack-deployment
Import environment from a secret,kubectl set env --from=secret/private-key-secret deployment/proxy-service-deployment
Update pod 'gateway' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods gateway description-
Start a hazelcast pod and let the container expose port 8082,kubectl run hazelcast --image=hazelcast/hazelcast --port=8082
Set the resource request and limits for all containers in centos,"kubectl set resources deployment centos --limits=cpu=200m,memory=512Mi --requests=cpu=1,memory=64Mi"
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""my-apps"" API group",kubectl get deployments.v2.1.0.my-apps -o json
"Listen on port 8888 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8888:5432"
Add a taint with key 'hardware' on nodes having label component=proxy,kubectl taint node -l component=proxy  hardware=prod-node-5:PreferNoSchedule
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=testing-cluster
Get output from running the 'mysql' command in astro-container from pod proxy-service-pod,kubectl exec proxy-service-pod -c astro-container -- mysql
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8000 9090
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/db-config deployment/database-deployment
"Delete pods and services with same names ""monitoring"" and ""monitoring""","kubectl delete pod,service monitoring monitoring"
Get output from running the 'mysql --version' command in time-machine from pod gateway-pod,kubectl exec gateway-pod -c time-machine -- mysql --version
Begin streaming the logs of the warp-drive container in pod cdn-service-pod,kubectl logs -f -c warp-drive cdn-service-pod
Get output from running the 'node' command in code-explorer from pod api-service-pod,kubectl exec api-service-pod -c code-explorer -- node
Update pod 'vpn' with the label 'tier' and the value 'frontend',kubectl label pods vpn tier=frontend
"Delete pods and services with same names ""auth"" and ""api""","kubectl delete pod,service auth api"
"Set a deployments mysql container cpu limits to ""500m"" and memory to ""256Mi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=500m,memory=256Mi"
Restart a deployment,kubectl rollout restart deployment/namespace-3
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=kube-cluster-2
Add a taint with key 'hardware' on nodes having label app=web-app,kubectl taint node -l app=web-app  hardware=worker-node-3:PreferNoSchedule
"Set a deployments alpine container cpu limits to ""5"" and memory to ""64Mi""","kubectl set resources deployment alpine -c=nginx --limits=cpu=5,memory=64Mi"
Create a new secret named gcp-service-account-secret with key1=supersecret and key2=topsecret,kubectl create secret generic gcp-service-account-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""experimental-apps"" API group",kubectl get deployments.stable-2.0.0.experimental-apps -o json
Return snapshot of previous terminated warp-drive container logs from pod monitoring-pod,kubectl logs -p -c warp-drive monitoring-pod
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n kube-public
"Listen on port 5000 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 5000:6379"
Get output from running the 'python' command in mycontainer from pod media-stream-pod,kubectl exec media-stream-pod -c mycontainer -- python
"If the deployment named backend-service-replicaset's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/backend-service-replicaset
Create a new ExternalName service named external-email-service,kubectl create service externalname external-email-service --external-name mockup-cloud.cloud
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node kube-master-9 -p $'spec:\n unschedulable: true'
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=dev-cluster
Update pod 'proxy' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy unhealthy-
"Listen on port 8888 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8888:5432
Set deployment backend-microservice-deployment's service account to jenkins,kubectl set serviceaccount deployment backend-microservice-deployment jenkins
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=9092 --target-port=800000
"Set a deployments amazonlinux container cpu limits to ""100m"" and memory to ""512Mi""","kubectl set resources deployment amazonlinux -c=nginx --limits=cpu=100m,memory=512Mi"
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.local-context.cluster staging-cluster
Create a job with a command,kubectl create job database-seeding-job --image=mongo -- mongod
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=properties=/path/to/configs/file1.txt --from-file=key1=/path/to/properties/file2.txt
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json last-deployment=2023-03-15
Set only the server field on the kube-cluster-1 cluster entry without touching other values,kubectl config set-cluster kube-cluster-1 --server=https://1.2.3.4
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/auth-service-pod
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/preferences/file2.txt
"Listen on port 6379 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 6379:8081"
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/analytics-platform-deployment -c monitoring-pod-1
Copy /var/run/secrets/kubernetes.io/serviceaccount/ local file to :/tmp/bar in a remote pod in a specific container,kubectl cp /var/run/secrets/kubernetes.io/serviceaccount/ backend-pod-13::/tmp/bar -c auth-service
"Listen on port 8081 locally, forwarding to 6379 in the pod",kubectl port-forward pod/frontend-pod 8081:6379
Create a copy of chat-app-pod changing all container images to hazelcast/hazelcast,kubectl debug chat-app-pod --copy-to=debug-image-api --set-image=*=hazelcast/hazelcast
"Scale a resource identified by type and name specified in ""preferences.yaml"" to 5",kubectl scale --replicas=5 -f preferences.yaml
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""testing-apps"" API group",kubectl get deployments.feature-branch-2.3.0.testing-apps -o yaml
Create a new secret named private-key-secret with keys for each file in folder bar,kubectl create secret generic private-key-secret --from-file=path/to/data
Update image of all containers of daemonset namespace-2 to 'httpd:2.4.48',kubectl set image daemonset namespace-2 *=httpd:2.4.48
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=moon-cluster
Return snapshot logs from container email-server-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/email-server-deployment -c gateway-pod-1
Create a new secret named docker-registry-secret with keys for each file in folder bar,kubectl create secret generic docker-registry-secret --from-file=path/to/configurations
Display only the most recent 5 lines of output in pod cdn-service-pod,kubectl logs --tail=5 cdn-service-pod
Get output from running the 'go' command in astro-container from pod mypod,kubectl exec mypod -c astro-container -- go
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config-dev deployment/authentication-service-deployment
Create a deployment named proxy that runs the confluentinc/cp-kafka image,kubectl create deployment proxy --image=confluentinc/cp-kafka
Update deployment 'payment-processor-deployment' with a new environment variable,kubectl set env deployment/payment-processor-deployment GOOGLE_API_KEY=your-google-api-key
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-name-config deployment/email-server-deployment
"Update pod 'chat-app' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods chat-app SLA='99.9% uptime'
Update pod 'log-aggregator' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods log-aggregator description-
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/authentication-service"
Create a deployment named nats that runs the ethereum/client-go image with 3 replicas,kubectl create deployment nats --image=ethereum/client-go --replicas=3
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node web-node-8 -p $'stringData:\n password: new-password'
Deny CSR 'csr-worker-3',kubectl certificate deny csr-worker-3
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/order-service"
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/security-service-pod
Get output from running the 'psql' command in lunar-launcher from pod web-app-pod,kubectl exec web-app-pod -c lunar-launcher -- psql
Display only the most recent 5 lines of output in pod payment-gateway-pod,kubectl logs --tail=5 payment-gateway-pod
"Listen on port 6379 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/user-service 6379:https
Get output from running the 'bash' command in nebula-navigator from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c nebula-navigator -- bash
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 5000 6379
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp istio-system/image-resizer-pod-20:/tmp/foo :/tmp/bar
Diff file read from stdin,cat parameters.yaml | kubectl diff -f -
"Create a cluster role name ""default_role"" with AggregationRule specified","kubectl create clusterrole default_role --aggregation-rule=""rbac.example.com/aggregate-to-security=true"""
Create a new secret named gcp-service-account-secret with keys for each file in folder bar,kubectl create secret generic gcp-service-account-secret --from-file=path/to/preferences
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=kube-cluster-2
"Delete pods and services with same names ""monitoring"" and ""foo""","kubectl delete pod,service monitoring foo"
Add a taint with key 'datacenter' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  datacenter=prod-node-5:PreferNoSchedule
Scale a replica set named 'webapp-replicaset' to 3,kubectl scale --replicas=3 rs/webapp-replicaset
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=8082 --target-port=808100
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 8000,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=8000
"Listen on port 6379 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 6379:8000
Start a redis pod and let the container expose port 9091,kubectl run hazelcast --image=redis --port=9091
Create a deployment named my-dep that runs the alpine image,kubectl create deployment my-dep --image=alpine
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod mypod # and sends stdout/stderr from 'bash' back to the client,kubectl attach mypod -c time-machine -i -t
"Update pod 'api' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api app-version=2.5.1
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8888 8081
"Listen on port 5000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 5000:8888"
"Update pod 'api' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api git-repo='https://github.com/example/my-app'
Create a job with a command,kubectl create job log-processing-job --image=ubuntu -- docker run -it ubuntu
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node storage-node-13 -p $'spec:\n unschedulable: true'
Create a new LoadBalancer service named cdn-service-lb,kubectl create service loadbalancer cdn-service-lb --tcp=8083:27017
"Listen on port 8088 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8088:8000
"Listen on port 8080 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8080:5432
Copy :/tmp/foo local file to /tmp/bar_dir in a remote pod in a specific container,kubectl cp :/tmp/foo database-pod-2:/tmp/bar_dir -c monitoring-agent
Get output from astro-container from pod vpn-service-pod,kubectl attach vpn-service-pod -c astro-container
Add a taint with key 'workload' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  workload=backup-node-14:PreferNoSchedule
"Delete pods and services with same names ""payment"" and ""proxy-server""","kubectl delete pod,service payment proxy-server"
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/queue-processing-job -n kube-system
"Listen on port 5432 locally, forwarding to 8081 in the pod",kubectl port-forward pod/backend-pod 5432:8081
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/kube-system-config deployment/gateway-deployment
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/mypod 6379:3000
"Update pod 'auth' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods auth backup-strategy='daily-backups'
Get output from warp-drive from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c warp-drive
Create a deployment named jenkins that runs the amazonlinux image and expose port 3001,kubectl create deployment jenkins --image=amazonlinux --port=3001
Get output from running the 'dotnet --list-sdks' command in warp-drive from pod web-app-pod,kubectl exec web-app-pod -c warp-drive -- dotnet --list-sdks
Embed certificate authority data for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
"If the deployment named backend-service-replicaset's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/backend-service-replicaset
Display only the most recent 3 lines of output in pod frontend-pod,kubectl logs --tail=3 frontend-pod
"Create a service for a replication controller identified by type and name specified in ""ubuntu-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f ubuntu-controller.yaml --port=80 --target-port=844300
Create a new secret named monitoring-credentials-secret from an env file,kubectl create secret generic monitoring-credentials-secret --from-env-file=path/to/options.env
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod 8088:8888
View the details of daemonset revision 5,kubectl rollout history daemonset/prod --revision=5
Create a new secret named private-key-secret with keys for each file in folder bar,kubectl create secret generic private-key-secret --from-file=path/to/options
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/search-service"
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod email-service-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
"Auto scale a deployment ""frontend"", with the number of pods between 3 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=3 --max=14
Set the last-applied-configuration of a resource to match the contents of a file; will create the annotation if it does not already exist,kubectl apply set-last-applied -f preferences.yaml --create-annotation=true
"Create a cluster role named ""foo"" with API Group specified","kubectl create clusterrole foo --verb=use,delete,connect --resource=clusterrolebindings.rbac.authorization.k8s.io"
Create a deployment named sonarqube that runs the confluentinc/cp-kafka image and expose port 8010,kubectl create deployment sonarqube --image=confluentinc/cp-kafka --port=8010
Create a deployment named wordpress that runs the php image and expose port 8083,kubectl create deployment wordpress --image=php --port=8083
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=properties=/path/to/preferences/file1.txt --from-file=key1=/path/to/settings/file2.txt
Create a job with a command,kubectl create job image-build-job --image=wordpress -- wp
Roll back to daemonset revision 7,kubectl rollout undo daemonset/nginx --to-revision=7
"Delete pods and services with same names ""vpn"" and ""auth""","kubectl delete pod,service vpn auth"
Create a new ExternalName service named external-git-service,kubectl create service externalname external-git-service --external-name governmental-demo.gov
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""mobile-apps"" API group",kubectl get deployments.legacy-1.0.0.mobile-apps -o json
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node web-node-8 -p '{""spec"":{""replicas"":3}'"
"Listen on port 6379 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 6379:8081
"Listen on port 8888 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8888:8888
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/global-config deployment/mydeployment
"Listen on port 3000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 3000:6379
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/proxy-server-pod 9090:8080
Return snapshot of previous terminated stardust-shuttle container logs from pod vpn-service-pod,kubectl logs -p -c stardust-shuttle vpn-service-pod
Import environment from a secret,kubectl set env --from=secret/private-key-secret deployment/frontend-deployment
Get output from mycontainer from pod vpn-service-pod,kubectl attach vpn-service-pod -c mycontainer
"Listen on port 6379 locally, forwarding to 9090 in the pod",kubectl port-forward pod/security-service-pod 6379:9090
Create a copy of proxy-server-pod changing all container images to docker.elastic.co/elasticsearch/elasticsearch,kubectl debug proxy-server-pod --copy-to=debug-image-1 --set-image=*=docker.elastic.co/elasticsearch/elasticsearch
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/analytics-service"
Add a taint with key 'hardware' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  hardware=db-node-7:PreferNoSchedule
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/backend-pod 8080 8088
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.staging-context.cluster moon-cluster
Add a taint with key 'zone' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  zone=web-node-8:PreferNoSchedule
"Create a cluster role name ""custom_role"" with NonResourceURL specified","kubectl create clusterrole ""custom_role"" --verb=watch --non-resource-url=/metrics"
Add a taint with key 'zone' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  zone=testing-node-11:PreferNoSchedule
Start a confluentinc/cp-kafka pod and let the container expose port 3001,kubectl run hazelcast --image=confluentinc/cp-kafka --port=3001
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 3000 8888
"Start a confluentinc/cp-kafka pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=confluentinc/cp-kafka --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
Embed certificate authority data for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --embed-certs --certificate-authority=~/.kube/kube-cluster-1/kubernetes.ca.crt
"Check to see if I can get the job named ""content-import-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/content-import-job -n kube-public
Return snapshot of previous terminated stardust-shuttle container logs from pod media-stream-pod,kubectl logs -p -c stardust-shuttle media-stream-pod
Delete the testing-cluster cluster,kubectl config delete-cluster testing-cluster
"Define new exec auth plugin args for the ""app-operator"" entry",kubectl config set-credentials app-operator --exec-arg=arg1 --exec-arg=arg2
"Update pod 'cdn' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods cdn backup-strategy='daily-backups'
"Delete pods and services with same names ""proxy"" and ""frontend""","kubectl delete pod,service proxy frontend"
Remove from node 'edge-node-10' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes edge-node-10 environment:NoSchedule-
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/virus-scan-job -n namespace-1
Create a job with a command,kubectl create job security-scan-job --image=node -- npm --version
Update deployment 'search-engine-deployment' with a new environment variable,kubectl set env deployment/search-engine-deployment ENV=prod
Create a new ClusterIP service named ldap-service-clusterip,kubectl create service clusterip ldap-service-clusterip --tcp=8082:8081
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-config-dev deployment/user-management-deployment
Create an ingress with multiple hosts and the pathType as Prefix,"kubectl create ingress ingress1 --class=default \
--rule=""site.com/path*=svc:8081"" \
--rule=""input.com/admin*=svc2:http"""
Show metrics for the pods defined by label myLabel,kubectl top pod -l myLabel
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-settings deployment/scheduler-app-deployment
Create a deployment named ingress that runs the hazelcast image and expose port 8181,kubectl create deployment ingress --image=hazelcast/hazelcast --port=8181
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.client-2-context.cluster sun-cluster
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/database-pod
Create a deployment with a command,"kubectl create deployment ingress --image=ubuntu -- docker run ubuntu echo ""Hello"
"Delete pods and services with same names ""api"" and ""frontend""","kubectl delete pod,service api frontend"
"Update pod 'auth' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth criticality=high
Get the password for the my-k8s-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""my-k8s-cluster"")].user.password}'"
Create a job with a command,kubectl create job security-scan-job --image=golang -- go
Add to node 'edge-node-10' a taint with key 'hardware' and no value,kubectl taint nodes edge-node-10 hardware:NoSchedule
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/confluentinc/cp-kafka
"Listen on port 8088 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8088:8081"
Display only the most recent 20 lines of output in pod log-aggregator-pod,kubectl logs --tail=20 log-aggregator-pod
Edit the service named 'authentication-service',kubectl edit svc/authentication-service
Add a taint with key 'dedicated' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  dedicated=app-node-6:PreferNoSchedule
"Scale a resource identified by type and name specified in ""config.json"" to 5",kubectl scale --replicas=5 -f config.json
"Listen on port 5432 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5432:5432
Create a cron job with a command,"kubectl create cronjob report-generation --image=node --schedule=""*/1 * * * *"" -- node"
"Listen on port 8000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/proxy-server-pod 8000:6379
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=on-prem-cluster
Embed certificate authority data for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
Remove from node 'node-2' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes node-2 zone:PreferNoSchedule-
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""legacy-1.0.0"", ""spec"": { ... } }'"
"Create a role named ""admin_role"" with ResourceName specified",kubectl create role admin_role --verb=list --resource=pods --resource-name=search-elasticsearch --resource-name=app-worker-1
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=data-cluster
Scale a replica set named 'mysql' to 5,kubectl scale --replicas=5 rs/mysql
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=5001 --target-port=808800
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 5000 5000
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8888 9090
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/database-indexing-job -n kube-dns
Return snapshot of previous terminated quantum-quark container logs from pod analytics-pod,kubectl logs -p -c quantum-quark analytics-pod
Create a new ClusterIP service named git-service-clusterip,kubectl create service clusterip git-service-clusterip --tcp=6379:9090
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name travel-sample.travel
Remove from node 'node-1' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes node-1 app:PreferNoSchedule-
Get output from cosmic-container from pod backend-pod,kubectl attach backend-pod -c cosmic-container
"Listen on port 9090 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 9090:8888"
Start a jenkins pod and let the container expose port 6379,kubectl run hazelcast --image=jenkins --port=6379
"Listen on port 3000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 3000:5432
"Update node 'node-1' with a taint with key 'dedicated' and value 'special-user' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes node-1 dedicated=special-user:NoSchedule
Add a taint with key 'datacenter' on nodes having label team=devops,kubectl taint node -l team=devops  datacenter=node-1:PreferNoSchedule
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=5432 --target-port=888800
Create a new LoadBalancer service named frontend-lb,kubectl create service loadbalancer frontend-lb --tcp=8089:8081
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=cluster-beta
Copy /tmp/foo_dir local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo_dir monitoring/metrics-exporter-pod-10:/etc/kubernetes
Describe a pod,kubectl describe pods/logging-agent-pod
"Start a mongo pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mongo --overrides='{ ""apiVersion"": ""feature-branch-2.3.0"", ""spec"": { ... } }'"
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=settings=/path/to/parameters/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir monitoring/security-scanner-pod-18::/tmp/bar
Create a new ClusterIP service named payment-service-clusterip,kubectl create service clusterip payment-service-clusterip --tcp=8443:5432
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/scheduler-service"
Begin streaming the logs of the cosmic-container container in pod log-aggregator-pod,kubectl logs -f -c cosmic-container log-aggregator-pod
Print the supported non-namespaced resources,kubectl api-resources --versionspaced=false
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=kube-cluster-1
"Listen on port 9090 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 9090:6379
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=8181 --target-port=543200
Set deployment frontend-deployment's service account to vault,kubectl set serviceaccount deployment frontend-deployment vault
"Listen on port 9090 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 9090:3000"
Create a copy of api-service-pod adding a debug container and changing container images,"kubectl debug api-service-pod -it --copy-to=debug-image-web --image=debian --set-image=api=api:v2,app=app:debug"
"Auto scale a deployment ""analytics"", with the number of pods between 3 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment analytics --min=3 --max=13
Remove from node 'dev-node-4' all the taints with key 'disktype',kubectl taint nodes dev-node-4 disktype-
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/frontend-service"
Create a deployment named nats that runs the php image and expose port 8080,kubectl create deployment nats --image=php --port=8080
"Listen on port 5432 locally, forwarding to 3000 in the pod",kubectl port-forward pod/web-app-pod 5432:3000
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/chat-app-pod
Show metrics for a given pod and its containers,kubectl top pod gateway-pod --containers
"Check to see if I can get the job named ""content-import-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/content-import-job -n kube-dns
"Auto scale a replication controller ""media-stream"", with the number of pods between 1 and 3, target CPU utilization at 60%",kubectl autoscale rc media-stream --max=3 --cpu-percent=60
Delete pods and services with label version=v1.0.0,"kubectl delete pods,services -l version=v1.0.0"
Return snapshot logs from container load-balancer-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/load-balancer-deployment -c vpn-service-pod-1
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""web-apps"" API group",kubectl get deployments.v1.1.0.web-apps -o yaml
"Get output from running 'go' command from the first pod of the service cache-service, using the first container by default",kubectl exec svc/cache-service -- go
Create a copy of proxy-server-pod adding a debug container and changing container images,"kubectl debug proxy-server-pod -it --copy-to=my-custom-dbg --image=debian --set-image=scheduler=my-scheduler:1.0,proxy=nginx:1.21"
Create a new secret named api-key-secret from an env file,kubectl create secret generic api-key-secret --from-env-file=path/to/parameters.env
Get output from mycontainer from pod monitoring-pod,kubectl attach monitoring-pod -c mycontainer
Start a redis pod and let the container expose port 8084,kubectl run hazelcast --image=redis --port=8084
Create a new ExternalName service named external-email-service,kubectl create service externalname external-email-service --external-name example-domain.com
"Delete pods and services with same names ""web"" and ""web""","kubectl delete pod,service web web"
"Set a deployments mysql container cpu limits to ""3"" and memory to ""256Mi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=3,memory=256Mi"
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-config deployment/scheduler-app-deployment
"If the deployment named baz's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/baz
Get output from running the 'python --version' command in nano-bot from pod chat-app-pod,kubectl exec chat-app-pod -c nano-bot -- python --version
Update pod 'cdn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods cdn app-
"Create a role named ""view"" with SubResource specified","kubectl create role view --verb=update,get,patch --resource=namespaces,namespaces/status"
"Update pod 'frontend' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods frontend expiration-date='2024-12-31'
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 9090 8081
"Update pod 'web' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web backup-strategy='daily backups'
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8088 8088
Create a deployment named proxy that runs the docker.elastic.co/elasticsearch/elasticsearch image with 3 replicas,kubectl create deployment proxy --image=docker.elastic.co/elasticsearch/elasticsearch --replicas=3
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/ui-config deployment/user-management-deployment
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8000 5000
Update pod 'email' with the label 'unhealthy' and the value 'true',kubectl label pods email unhealthy=true
Get output from warp-drive from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c warp-drive
"Delete pods and services with same names ""auth"" and ""cdn""","kubectl delete pod,service auth cdn"
Get output from code-explorer from pod analytics-pod,kubectl attach analytics-pod -c code-explorer
"Listen on port 5432 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5432:8000
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/web-app-pod 6379 6379
Set deployment gateway-deployment's service account to argocd,kubectl set serviceaccount deployment gateway-deployment argocd
"Run a proxy to the Kubernetes API server on port 8083, serving static content from ./local/www/",kubectl proxy --port=8083 --www=./local/www/
Update image of all containers of daemonset test to 'wordpress:5.8.1',kubectl set image daemonset test *=wordpress:5.8.1
Update pod 'monitoring' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods monitoring app-
Update pod 'security' with the label 'app' and the value 'myapp',kubectl label pods security app=myapp
"Listen on port 9090 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 9090:8088
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=9090 --target-port=818100
Return snapshot logs from container api-server-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/api-server-deployment -c media-stream-pod-1
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 9090 5000
Start a ethereum/client-go pod and let the container expose port 3306,kubectl run hazelcast --image=ethereum/client-go --port=3306
"Listen on port 8088 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8088:3000
View the details of daemonset revision 5,kubectl rollout history daemonset/development --revision=5
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=cluster-alpha
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.service-account-context.cluster my-k8s-cluster
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""web-apps"" API group",kubectl get deployments.dev-2.2.0.web-apps -o yaml
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8888 8080
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=dev-cluster
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/web-app-deployment GOOGLE_API_KEY=your-google-api-key -o yaml
Create a deployment named monitoring that runs the ethereum/client-go image and expose port 9092,kubectl create deployment monitoring --image=ethereum/client-go --port=9092
Diff resources included in setup.json,kubectl diff -f setup.json
Add a taint with key 'dedicated' on nodes having label environment=production,kubectl taint node -l environment=production  dedicated=storage-node-13:PreferNoSchedule
View the details of daemonset revision 7,kubectl rollout history daemonset/namespace-2 --revision=7
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8081 8080
Copy :/tmp/foo local file to :/tmp/bar in a remote pod in namespace,kubectl cp :/tmp/foo argocd/worker-pod-4::/tmp/bar
Start a python pod and let the container expose port 8088,kubectl run hazelcast --image=python --port=8088
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node node-1 -p $'stringData:\n password: new-password'
Add a taint with key 'hardware' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  hardware=edge-node-10:PreferNoSchedule
"Get output from running 'geth attach' command from the first pod of the service api-service, using the first container by default",kubectl exec svc/api-service -- geth attach
Embed certificate authority data for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --embed-certs --certificate-authority=~/.kube/cluster-beta/kubernetes.ca.crt
Get output from running the 'python' command in nebula-navigator from pod cdn-service-pod,kubectl exec cdn-service-pod -c nebula-navigator -- python
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=9092:7000
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 5432 8000
Create a new secret named cert-manager-secret from an env file,kubectl create secret generic cert-manager-secret --from-env-file=path/to/parameters.env
"Get output from running 'docker run -it ubuntu' command from the first pod of the service web-service, using the first container by default",kubectl exec svc/web-service -- docker run -it ubuntu
"Listen on port 9090 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 9090:5000
Restart a daemon set,kubectl rollout restart daemonset/test
"Update pod 'proxy-server' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server owner='alice smith'
Start a ruby pod and let the container expose port 8010,kubectl run hazelcast --image=ruby --port=8010
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/ui-config deployment/email-server-deployment
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node monitoring-node-15 -p $'spec:\n replicas: 3'
Create a deployment named monitoring that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 8080,kubectl create deployment monitoring --image=docker.elastic.co/elasticsearch/elasticsearch --port=8080
"Listen on port 6379 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 6379:5432"
"Update pod 'media-stream' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream release-notes='https://example.com/release-notes/v2.5.1'
Add a taint with key 'dedicated' on nodes having label role=database,kubectl taint node -l role=database  dedicated=monitoring-node-15:PreferNoSchedule
Create a new config map named log-config based on folder preferences,kubectl create configmap log-config --from-file=path/to/preferences
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f machine-configuration.yaml -p '{""spec"":{""unschedulable"":true}}'"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node kube-master-9 -p '{""spec"":{""containers"":[{""name"":""container-name"", ""resources"":{""limits"":{""cpu"":""200m""}}}]}'"
Create a new LoadBalancer service named vpn-service-lb,kubectl create service loadbalancer vpn-service-lb --tcp=8084:8089
Start a centos pod and let the container expose port 5432,kubectl run hazelcast --image=centos --port=5432
Import environment from a secret,kubectl set env --from=secret/cert-manager-secret deployment/load-balancer-deployment
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/api-config deployment/gateway-deployment
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/cache-cluster-deployment -c proxy-server-pod-1
Update pod 'database' only if the resource is unchanged from version 1,kubectl annotate pods database description='my frontend running nginx' --resource-version=1
"Update pod 'web' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web team='frontend team'
Update pod 'backend' with the label 'component' and the value 'worker',kubectl label pods backend component=worker
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.on-prem-context.cluster edge-cluster
"Listen on port 8081 locally, forwarding to 6379 in the pod",kubectl port-forward pod/security-service-pod 8081:6379
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/chat-app-pod :8080
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""apps"" API group",kubectl get deployments.legacy-1.0.0.apps -o json
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/authentication-service"
Create a new secret named my-secret from an env file,kubectl create secret generic my-secret --from-env-file=path/to/data.env
"Create a single ingress called 'myapp-ingress' that directs requests to foo.com/bar to svc # svc1:9092 with a tls secret ""my-cert""","kubectl create ingress myapp-ingress --rule=""foo.com/bar=svc1:9092,tls=my-cert"""
"If the deployment named prod-app-rs's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/prod-app-rs
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-name-config deployment/proxy-service-deployment
"Listen on port 5000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/api-service-pod 5000:3000
"Create a single ingress called 'app-ingress' that directs requests to site.com/input to svc # svc1:8443 with a tls secret ""my-cert""","kubectl create ingress app-ingress --rule=""site.com/input=svc1:8443,tls=my-cert"""
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=8443 --target-port=808400
Create a job with a command,kubectl create job scaling-job --image=mysql -- mysql --version
Display only the most recent 53 lines of output in pod gateway-pod,kubectl logs --tail=53 gateway-pod
Set deployment order-processing-deployment's service account to my-service-account,kubectl set serviceaccount deployment order-processing-deployment my-service-account
Apply resources from a directory containing kustomization.yaml - e.g. params/kustomization.yaml,kubectl apply -k params/
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-settings deployment/notification-handler-deployment
"Listen on port 8000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/analytics-pod 8000:8000
Create a job with a command,"kubectl create job security-scan-job --image=nginx -- nginx -g ""daemon off;"""
Embed certificate authority data for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --embed-certs --certificate-authority=~/.kube/cloud-cluster/kubernetes.ca.crt
"Update pod 'frontend' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend SLA='99.9% uptime'
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""app-operator"" entry",kubectl config set-credentials app-operator --auth-provider=oidc --auth-provider-arg=client-secret-
"Listen on port 8088 locally, forwarding to 3000 in the pod",kubectl port-forward pod/analytics-pod 8088:3000
"Listen on port 8081 locally, forwarding to 9090 in the pod",kubectl port-forward pod/analytics-pod 8081:9090
"Update pod 'payment' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment release-notes='https://example.com/release-notes/v2.5.1'
"Listen on port 6379 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 6379:9090
"Create a role named ""bar"" with ResourceName specified",kubectl create role bar --verb=patch --resource=pods --resource-name=machine-learning --resource-name=prod-api-gateway
"If the deployment named db-migration-replicaset's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/db-migration-replicaset
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.user-b-context.cluster on-prem-cluster
"If the deployment named baz's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/baz
"Get output from running the 'elasticsearch' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- elasticsearch
"Start a ethereum/client-go pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ethereum/client-go --overrides='{ ""apiVersion"": ""hotfix-1.1.2"", ""spec"": { ... } }'"
Use the context for the galaxy-cluster cluster,kubectl config use-context galaxy-cluster
"Listen on port 8000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8000:5000
Create a job with a command,kubectl create job image-build-job --image=postgres -- postgres
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 8088 6379
"Delete pods and services with same names ""database"" and ""log-aggregator""","kubectl delete pod,service database log-aggregator"
Add a taint with key 'special' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  special=worker-node-3:PreferNoSchedule
Remove from node 'testing-node-11' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes testing-node-11 environment:NoSchedule-
Create a copy of auth-service-pod changing all container images to golang,kubectl debug auth-service-pod --copy-to=debug-image-web --set-image=*=golang
Return snapshot logs from container email-server-deployment-1 of a deployment named database-pod,kubectl logs deployment/email-server-deployment -c database-pod-1
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=9092 --target-port=300000
Remove from node 'monitoring-node-15' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes monitoring-node-15 environment:NoSchedule-
"Get output from running the 'kafka-server-start /etc/kafka/server.properties' command from pod mypod, using the first container by default",kubectl exec mypod -- kafka-server-start /etc/kafka/server.properties
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.app-1-context.cluster cluster-beta
Describe pods by label namespace=mynamespace,kubectl describe po -l namespace=mynamespace
Create a cron job,"kubectl create cronjob data-processing --image=busybox --schedule=""*/1 * * * *"""
Build some shared configuration directory,kubectl kustomize /usr/share/kubernetes/config/production
"Delete pods and services with same names ""vpn"" and ""security""","kubectl delete pod,service vpn security"
Create a copy of security-service-pod changing the command of cyber-sleuth,kubectl debug security-service-pod -it --copy-to=debug-image-1 --container=cyber-sleuth -- sh
Create a deployment named registry that runs the jenkins image,kubectl create deployment registry --image=jenkins
"Update pod 'payment' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment owner='alice smith'
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/monitoring-config deployment/log-aggregator-deployment
View the details of daemonset revision 3,kubectl rollout history daemonset/prod --revision=3
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/log-aggregator-pod 8080:6379
Create a deployment named web that runs the php image and expose port 9090,kubectl create deployment web --image=php --port=9090
"If the deployment named api-service-rs's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/api-service-rs
"Delete pods and services with same names ""monitoring"" and ""database""","kubectl delete pod,service monitoring database"
"Listen on port 9090 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 9090:8080"
"Update pod 'media-stream' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream alert-email=alerts@example.com
Create a new config map named ui-config from the key=value pairs in the file,kubectl create configmap ui-config --from-file=path/to/properties
Return snapshot logs from pod analytics-pod with only one container,kubectl logs analytics-pod
"Listen on port 8081 locally, forwarding to 6379 in the pod",kubectl port-forward pod/chat-app-pod 8081:6379
Update pod 'media-stream' with the label 'tier' and the value 'backend',kubectl label pods media-stream tier=backend
Create a new secret named api-secret-key with keys for each file in folder bar,kubectl create secret generic api-secret-key --from-file=path/to/preferences
Create a new secret named oauth-secret with keys for each file in folder bar,kubectl create secret generic oauth-secret --from-file=path/to/settings
Return snapshot of previous terminated ruby container logs from pod e-commerce-pod,kubectl logs -p -c ruby e-commerce-pod
"Listen on port 9090 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 9090:8081"
"Listen on port 8888 locally, forwarding to 8088 in the pod",kubectl port-forward pod/web-app-pod 8888:8088
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""web-apps"" API group",kubectl get deployments.feature-branch-2.3.0.web-apps -o yaml
Set the resource request and limits for all containers in jenkins,"kubectl set resources deployment jenkins --limits=cpu=200m,memory=512Mi --requests=cpu=50m,memory=512Mi"
"Set a deployments golang container cpu limits to ""10"" and memory to ""1Gi""","kubectl set resources deployment golang -c=nginx --limits=cpu=10,memory=1Gi"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8081 8000
Create a deployment named worker that runs the postgres image and expose port 8010,kubectl create deployment worker --image=postgres --port=8010
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8888 8888
Create a new NodePort service named e-commerce-nodeport,kubectl create service nodeport e-commerce-nodeport --tcp=8443:8181
"Delete pods and services with same names ""gateway"" and ""monitoring""","kubectl delete pod,service gateway monitoring"
"Set a deployments mysql container cpu limits to ""200m"" and memory to ""64Mi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=200m,memory=64Mi"
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=star-cluster
Restart a daemon set,kubectl rollout restart daemonset/namespace-1
"Update pod 'proxy' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy security-scan-status=pass
Start a ubuntu pod and let the container expose port 8088,kubectl run hazelcast --image=ubuntu --port=8088
Begin streaming the logs of the cyber-sleuth container in pod email-service-pod,kubectl logs -f -c cyber-sleuth email-service-pod
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8888 8088
"Start a nginx pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=nginx --overrides='{ ""apiVersion"": ""v2.0.0"", ""spec"": { ... } }'"
Set deployment analytics-platform-deployment's service account to tekton,kubectl set serviceaccount deployment analytics-platform-deployment tekton
"Update pod 'email' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods email expiration-date='2024-12-31'
Diff resources included in docker-registry.yaml,kubectl diff -f docker-registry.yaml
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/analytics-pod
"Listen on port 5000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 5000:8000"
"If the deployment named prod-app-rs's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/prod-app-rs
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""legacy-apps"" API group",kubectl get deployments.stable-2.0.0.legacy-apps -o json
Update deployment 'log-aggregator-deployment' with a new environment variable,kubectl set env deployment/log-aggregator-deployment MAX_CONNECTIONS=100
Add a taint with key 'special' on nodes having label component=proxy,kubectl taint node -l component=proxy  special=node-2:PreferNoSchedule
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp velero/auth-service-pod-11:~/.config/kube /tmp/bar_dir
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=sun-cluster
Set deployment gateway-deployment's service account to tiller,kubectl set serviceaccount deployment gateway-deployment tiller
Create a job with a command,kubectl create job certificate-renewal --image=jenkins -- jenkins-plugin-cli
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/properties/file2.txt
"If the deployment named frontend-rs's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/frontend-rs
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/monitoring-config deployment/api-server-deployment
Get output from running the 'elasticsearch' command in nebula-navigator from pod media-stream-pod,kubectl exec media-stream-pod -c nebula-navigator -- elasticsearch
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=kube-cluster-2
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=5432:8089
"If the deployment named baz's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/baz
Create a new LoadBalancer service named cdn-service-lb,kubectl create service loadbalancer cdn-service-lb --tcp=8181:6379
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""my-apps"" API group",kubectl get deployments.feature-branch-2.3.0.my-apps -o yaml
Get output from running the 'java -jar /usr/share/jenkins/jenkins.war' command in nebula-navigator from pod vpn-service-pod,kubectl exec vpn-service-pod -c nebula-navigator -- java -jar /usr/share/jenkins/jenkins.war
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""apps"" API group",kubectl get deployments.feature-branch-2.3.0.apps -o yaml
Return snapshot logs from container mydeployment-1 of a deployment named auth-service-pod,kubectl logs deployment/mydeployment -c auth-service-pod-1
Return snapshot logs from container email-server-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/email-server-deployment -c payment-gateway-pod-1
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/web-app-pod
"Get output from running the 'geth' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- geth
Add a taint with key 'disktype' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  disktype=testing-node-11:PreferNoSchedule
Set deployment proxy-service-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment proxy-service-deployment gitlab-runner
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/monitoring-config deployment/database-deployment
Display only the most recent 23 lines of output in pod web-app-pod,kubectl logs --tail=23 web-app-pod
Remove from node 'edge-node-10' all the taints with key 'app',kubectl taint nodes edge-node-10 app-
Set deployment search-engine-deployment's service account to istio,kubectl set serviceaccount deployment search-engine-deployment istio
"Listen on port 9090 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 9090:8088
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""api-v1"" API group",kubectl get deployments.alpha-2.0.api-v1 -o json
Set the labels and selector before creating a deployment/service pair,"kubectl create service clusterip my-svc --clusterip=""None"" -o yaml --dry-run=client | kubectl set selector --local -f - 'environment=qa' -o yaml | kubectl create -f -
kubectl create deployment my-dep -o yaml --dry-run=client | kubectl label --local -f - environment=qa -o yaml | kubectl create -f -"
Describe a pod,kubectl describe pods/image-resizer-pod-20
Return snapshot logs from pod auth-service-pod with only one container,kubectl logs auth-service-pod
"Get output from running 'go version' command from the first pod of the deployment search-engine-deployment, using the first container by default",kubectl exec deploy/search-engine-deployment -- go version
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=9092:8088
Begin streaming the logs of the astro-container container in pod chat-app-pod,kubectl logs -f -c astro-container chat-app-pod
Get output from running the 'bash' command in rocket-ranger from pod chat-app-pod,kubectl exec chat-app-pod -c rocket-ranger -- bash
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 5000 6379
Create a new config map named app-config-prod from an env file,kubectl create configmap app-config-prod --from-env-file=path/to/profiles.env
Return snapshot of previous terminated cyber-sleuth container logs from pod frontend-pod,kubectl logs -p -c cyber-sleuth frontend-pod
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/mypod 8080:3000
Set deployment monitoring-stack-deployment's service account to argocd,kubectl set serviceaccount deployment monitoring-stack-deployment argocd
Get output from running the 'dotnet' command in cosmic-container from pod auth-service-pod,kubectl exec auth-service-pod -c cosmic-container -- dotnet
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""api-v1"" API group",kubectl get deployments.feature-branch-2.3.0.api-v1 -o yaml
Create a deployment named gitlab that runs the centos image and expose port 3001,kubectl create deployment gitlab --image=centos --port=3001
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name illustration-shop.shop
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/proxy-server-pod 8080:8888
"Delete pods and services with same names ""web"" and ""foo""","kubectl delete pod,service web foo"
"Update pod 'proxy' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods proxy team='frontend-team'
Update image of all containers of daemonset development to 'redis:6.2.5',kubectl set image daemonset development *=redis:6.2.5
Add a taint with key 'zone' on nodes having label environment=production,kubectl taint node -l environment=production  zone=node-2:PreferNoSchedule
Create a new secret named private-key-secret from an env file,kubectl create secret generic private-key-secret --from-env-file=path/to/profiles.env
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8888 8080
"Listen on port 8000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8000:8000
"Listen on port 8888 locally, forwarding to 6379 in the pod",kubectl port-forward pod/log-aggregator-pod 8888:6379
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json description='Web server for marketing site'
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/cdn-service-pod 8088:8888
"Delete pods and services with same names ""monitoring"" and ""backend""","kubectl delete pod,service monitoring backend"
"Start a postgres pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=postgres --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=dev-cluster
Get output from running the 'redis-cli' command in cyber-sleuth from pod backend-pod,kubectl exec backend-pod -c cyber-sleuth -- redis-cli
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-settings deployment/cache-cluster-deployment
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=my-k8s-cluster
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/db-config deployment/scheduler-app-deployment
Show all logs from pod mypod written in the last hour,kubectl logs --since=1h mypod
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=cluster-beta
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/backend-pod
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.app-2-context.cluster moon-cluster
"If the deployment named payment-service-rs's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/payment-service-rs
Create a job with a command,"kubectl create job deployment-rollout-job --image=nginx -- nginx -g ""daemon off;"""
Get output from the first pod of a replica set named ubuntu,kubectl attach rs/ubuntu
Get output from the first pod of a replica set named elasticsearch,kubectl attach rs/elasticsearch
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/frontend-pod 9090 8080
Create a deployment named drupal that runs the alpine image with 2 replicas,kubectl create deployment drupal --image=alpine --replicas=2
"Delete pods and services with same names ""security"" and ""analytics""","kubectl delete pod,service security analytics"
Get output from nano-bot from pod database-pod,kubectl attach database-pod -c nano-bot
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.edge-context.cluster testing-cluster
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""prod-apps"" API group",kubectl get deployments.beta-1.0.prod-apps -o json
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node k8s-node-1 -p $'spec:\n replicas: 3'
Get output from running the 'mysql' command in time-machine from pod analytics-pod,kubectl exec analytics-pod -c time-machine -- mysql
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8080 3000
Update pod 'web' with the label 'role' and the value 'cache',kubectl label pods web role=cache
Return snapshot logs from container proxy-service-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/proxy-service-deployment -c cdn-service-pod-1
Create a job with a command,kubectl create job log-collection --image=node -- npm --version
Get output from running the 'dotnet --list-sdks' command in quantum-quark from pod proxy-server-pod,kubectl exec proxy-server-pod -c quantum-quark -- dotnet --list-sdks
"Update pod 'proxy-server' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server monitoring-tool=Prometheus
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/scheduler-service"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8081 6379
Create a job with a command,kubectl create job data-migration-job --image=centos -- bash
Update deployment 'search-engine-deployment' with a new environment variable,kubectl set env deployment/search-engine-deployment DB_HOST=localhost
Get output from running the 'mongod' command in code-explorer from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c code-explorer -- mongod
Set the user field on the dev-context context entry without touching other values,kubectl config set-context dev-context --user=cluster-admin
"Set a deployments elasticsearch container cpu limits to ""2"" and memory to ""256Mi""","kubectl set resources deployment elasticsearch -c=nginx --limits=cpu=2,memory=256Mi"
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-settings deployment/load-balancer-deployment
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp rook-ceph/web-app-pod-1:/tmp/foo_dir /tmp/bar_dir
"Listen on port 5432 locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod 5432:8000
Begin streaming the logs of the cyber-sleuth container in pod chat-app-pod,kubectl logs -f -c cyber-sleuth chat-app-pod
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/monitoring-stack-deployment -c proxy-service-pod-1
"Update pod 'chat-app' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods chat-app criticality='high'
Create a cron job with a command,"kubectl create cronjob database-maintenance --image=mongo --schedule=""*/1 * * * *"" -- mongod"
Create a copy of log-aggregator-pod changing all container images to mysql,kubectl debug log-aggregator-pod --copy-to=debug-image-api --set-image=*=mysql
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""external-apps"" API group",kubectl get deployments.feature-branch-2.3.0.external-apps -o yaml
"Listen on port 3000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 3000:8088
"Mark node ""kube-master-9"" as unschedulable",kubectl cordon kube-master-9
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/env-vars deployment/load-balancer-deployment
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8888 6379
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod auth-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach auth-service-pod -c code-explorer -i -t
Add a taint with key 'special' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  special=storage-node-13:PreferNoSchedule
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=cluster-gamma
Update pod 'media-stream' with the label 'component' and the value 'web',kubectl label pods media-stream component=web
Create a new secret named my-secret from an env file,kubectl create secret generic my-secret --from-env-file=path/to/properties.env
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=dev-cluster
"Listen on port 8888 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8888:8088
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/monitoring-config deployment/user-management-deployment
Remove from node 'monitoring-node-15' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes monitoring-node-15 dedicated:NoSchedule-
Create a deployment named gitlab that runs the jenkins image and expose port 8000,kubectl create deployment gitlab --image=jenkins --port=8000
"Listen on port 8000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8000:3000"
"Listen on port 8080 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8080:8000
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.client-1-context.cluster on-prem-cluster
Show metrics for the pods defined by label cluster=my-cluster,kubectl top pod -l cluster=my-cluster
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=properties=/path/to/settings/file1.txt --from-file=key1=/path/to/properties/file2.txt
Update pod 'web' only if the resource is unchanged from version 1,kubectl annotate pods web description='my frontend running nginx' --resource-version=1
Dump all namespaces to stdout,kubectl cluster-info dump --all-namespaces
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/frontend-pod
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/email-service-pod
Start a php pod and let the container expose port 9000,kubectl run hazelcast --image=php --port=9000
Create a job with a command,kubectl create job backup --image=mysql -- mysql
Create a new ClusterIP service named inventory-service-clusterip,kubectl create service clusterip inventory-service-clusterip --tcp=3001:8080
"Delete pods and services with same names ""frontend"" and ""auth""","kubectl delete pod,service frontend auth"
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/log-aggregator-deployment -c media-stream-pod-1
"Listen on port 5000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 5000:3000
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod email-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach email-service-pod -c code-explorer -i -t
Create a new LoadBalancer service named frontend-lb,kubectl create service loadbalancer frontend-lb --tcp=8083:8443
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 8010,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=8010
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/mypod 8000 8000
"Update pod 'media-stream' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream security-scan-status=pass
Create a new secret named gcp-service-account-secret from an env file,kubectl create secret generic gcp-service-account-secret --from-env-file=path/to/parameters.env
Create a deployment named grafana that runs the alpine image and expose port 9090,kubectl create deployment grafana --image=alpine --port=9090
Update pod 'log-aggregator' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods log-aggregator component-
Create a new config map named api-config from an env file,kubectl create configmap api-config --from-env-file=path/to/settings.env
Scale a replica set named 'db-migration-replicaset' to 3,kubectl scale --replicas=3 rs/db-migration-replicaset
"Listen on port 8000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/frontend-pod 8000:6379
"Listen on port 5432 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 5432:9090
Add a taint with key 'zone' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  zone=db-node-7:PreferNoSchedule
"Get output from running the 'geth version' command from pod payment-gateway-pod, using the first container by default",kubectl exec payment-gateway-pod -- geth version
Create a copy of database-pod changing all container images to mysql,kubectl debug database-pod --copy-to=debug-image-api --set-image=*=mysql
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=conf=/path/to/settings/file1.txt --from-file=data=/path/to/parameters/file2.txt
"If the deployment named webapp-replicaset's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/webapp-replicaset
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=settings=/path/to/configurations/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Return snapshot logs from first container of a job named image-processing-job,kubectl logs job/image-processing-job
Create a new secret named email-credentials-secret from an env file,kubectl create secret generic email-credentials-secret --from-env-file=path/to/preferences.env
"Listen on port 8081 locally, forwarding to 8888 in the pod",kubectl port-forward pod/cdn-service-pod 8081:8888
"Update pod 'log-aggregator' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods log-aggregator criticality='high'
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-config-dev deployment/payment-processor-deployment
Add a taint with key 'hardware' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  hardware=web-node-8:PreferNoSchedule
Update pod 'backend' with the label 'component' and the value 'web',kubectl label pods backend component=web
Switch to raw terminal mode; sends stdin to 'bash' in nebula-navigator from pod proxy-server-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-server-pod -c nebula-navigator -i -t
Create a new ClusterIP service named security-service-clusterip,kubectl create service clusterip security-service-clusterip --tcp=8443:9000
Set only the server field on the dev-cluster cluster entry without touching other values,kubectl config set-cluster dev-cluster --server=https://1.2.3.4
"Listen on port 5432 locally, forwarding to 8000 in the pod",kubectl port-forward pod/analytics-pod 5432:8000
Begin streaming the logs of the rocket-ranger container in pod payment-gateway-pod,kubectl logs -f -c rocket-ranger payment-gateway-pod
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""internal-apps"" API group",kubectl get deployments.v2.0.0.internal-apps -o json
List a single pod in JSON output format,kubectl get -o json pod chat-app-pod
"Start a mysql pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mysql --overrides='{ ""apiVersion"": ""legacy-1.0.0"", ""spec"": { ... } }'"
Create a deployment with a command,kubectl create deployment grafana --image=amazonlinux -- yum install -y aws-cli
Add a taint with key 'special' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  special=backup-node-14:PreferNoSchedule
Update deployment 'web-app-deployment' with a new environment variable,kubectl set env deployment/web-app-deployment API_KEY=your-api-key
Import environment from a secret,kubectl set env --from=secret/ssl-key-secret deployment/web-app-deployment
Get output from running the 'php --version' command in rocket-ranger from pod media-stream-pod,kubectl exec media-stream-pod -c rocket-ranger -- php --version
Create a new config map named log-config from an env file,kubectl create configmap log-config --from-env-file=path/to/profiles.env
"Listen on port 8081 locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod 8081:9090
"Listen on port 3000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 3000:8000"
Return snapshot of previous terminated cosmic-container container logs from pod vpn-service-pod,kubectl logs -p -c cosmic-container vpn-service-pod
Get output from running the 'pg_dump --version' command in rocket-ranger from pod auth-service-pod,kubectl exec auth-service-pod -c rocket-ranger -- pg_dump --version
Start a nginx pod,kubectl run nginx --image=nginx
"Check to see if I can get the job named ""image-processing-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/image-processing-job -n logging
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/log-aggregator-pod 8088:8088
Start a php pod and let the container expose port 8089,kubectl run hazelcast --image=php --port=8089
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""beta-apps"" API group",kubectl get deployments.v1.1.0.beta-apps -o yaml
Remove from node 'storage-node-13' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes storage-node-13 disktype:NoSchedule-
Update image of all containers of daemonset development to 'mysql:5.7.35',kubectl set image daemonset development *=mysql:5.7.35
"Auto scale a deployment ""frontend"", with the number of pods between 2 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=2 --max=14
Get output from running the 'mongo --version' command in lunar-launcher from pod auth-service-pod,kubectl exec auth-service-pod -c lunar-launcher -- mongo --version
Set deployment gateway-deployment's service account to metrics-server,kubectl set serviceaccount deployment gateway-deployment metrics-server
Display only the most recent 43 lines of output in pod gateway-pod,kubectl logs --tail=43 gateway-pod
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/scheduler-app-deployment -c web-app-pod-1
Diff file read from stdin,cat options.yaml | kubectl diff -f -
Get output from running the 'node --version' command in nano-bot from pod gateway-pod,kubectl exec gateway-pod -c nano-bot -- node --version
Set deployment payment-processor-deployment's service account to spinnaker,kubectl set serviceaccount deployment payment-processor-deployment spinnaker
View the last-applied-configuration annotations by file in JSON,kubectl apply view-last-applied -f options.yaml -o json
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 5000 9090
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=web-cluster
Embed certificate authority data for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --embed-certs --certificate-authority=~/.kube/sun-cluster/kubernetes.ca.crt
Create a copy of api-service-pod changing all container images to mcr.microsoft.com/dotnet/core/runtime,kubectl debug api-service-pod --copy-to=debug-image-memcached --set-image=*=mcr.microsoft.com/dotnet/core/runtime
"Delete pods and services with same names ""email"" and ""auth""","kubectl delete pod,service email auth"
Update image of all containers of daemonset test to 'postgres:13.4',kubectl set image daemonset test *=postgres:13.4
Create a new secret named my-secret with keys for each file in folder bar,kubectl create secret generic my-secret --from-file=path/to/configurations
"Create a single ingress called 'www-ingress' that directs requests to testing.com/bar to svc # svc1:8084 with a tls secret ""my-cert""","kubectl create ingress www-ingress --rule=""testing.com/bar=svc1:8084,tls=my-cert"""
Update image of all containers of daemonset nginx to 'amazonlinux:2',kubectl set image daemonset nginx *=amazonlinux:2
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n cert-manager
"Delete pods and services with same names ""web"" and ""gateway""","kubectl delete pod,service web gateway"
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.app-1-context.cluster kube-cluster-1
"Delete pods and services with same names ""auth"" and ""payment""","kubectl delete pod,service auth payment"
Add a taint with key 'disktype' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  disktype=k8s-node-1:PreferNoSchedule
Embed certificate authority data for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --embed-certs --certificate-authority=~/.kube/cloud-cluster/kubernetes.ca.crt
Create a new secret named aws-credentials-secret with specified keys instead of names on disk,kubectl create secret generic aws-credentials-secret --from-file=ssh-privatekey=path/to/id_rsa --from-file=ssh-publickey=path/to/id_rsa.pub
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
"Listen on port 6379 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 6379:9090"
"Listen on port 6379 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 6379:3000
Show metrics for a given pod and its containers,kubectl top pod cdn-service-pod --containers
"If the deployment named db-migration-replicaset's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/db-migration-replicaset
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/proxy-service-pod
Get output from running the 'jenkins --version' command in mycontainer from pod analytics-pod,kubectl exec analytics-pod -c mycontainer -- jenkins --version
Scale a replica set named 'frontend-rs' to 5,kubectl scale --replicas=5 rs/frontend-rs
Return snapshot logs from container database-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/database-deployment -c frontend-pod-1
Create a new ExternalName service named external-metrics-service,kubectl create service externalname external-metrics-service --external-name sample-domain.net
"Check to see if I can get the job named ""report-generation-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/report-generation-job -n kube-ingress
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node node-2 -p '{""data"":{""key"":""new-value""}'"
Return snapshot of previous terminated ruby container logs from pod payment-gateway-pod,kubectl logs -p -c ruby payment-gateway-pod
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod 8080:8088
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=data-cluster
Create a job with a command,kubectl create job deployment-rollout-job --image=docker.elastic.co/elasticsearch/elasticsearch -- elasticsearch-plugin --list
Edit the deployment 'frontend-deployment' in YAML and save the modified config in its annotation,kubectl edit deployment/frontend-deployment -o yaml --save-config
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=conf=/path/to/configurations/file1.txt --from-file=data=/path/to/parameters/file2.txt
Create a copy of mypod changing the command of lunar-launcher,kubectl debug mypod -it --copy-to=debug-image-memcached --container=lunar-launcher -- sh
Create a job with a command,kubectl create job indexing --image=centos -- yum install -y wget
Update pod 'foo' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods foo release-
"Listen on port 5432 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5432:5432
Watch the rollout status of a deployment,kubectl rollout status deployment/test
"Update pod 'security' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security criticality=high
Create a new config map named app-config-prod based on folder parameters,kubectl create configmap app-config-prod --from-file=path/to/parameters
Remove from node 'node-2' all the taints with key 'zone',kubectl taint nodes node-2 zone-
Get output from running the 'postgres' command in cyber-sleuth from pod email-service-pod,kubectl exec email-service-pod -c cyber-sleuth -- postgres
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=8443 --target-port=300000
Set deployment scheduler-app-deployment's service account to cert-manager,kubectl set serviceaccount deployment scheduler-app-deployment cert-manager
Remove from node 'node-1' all the taints with key 'dedicated',kubectl taint nodes node-1 dedicated-
Begin streaming the logs of the astro-container container in pod payment-gateway-pod,kubectl logs -f -c astro-container payment-gateway-pod
Create a new secret named gcp-service-account-secret from an env file,kubectl create secret generic gcp-service-account-secret --from-env-file=path/to/data.env
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=3001 --target-port=543200
Create a copy of cdn-service-pod changing all container images to php,kubectl debug cdn-service-pod --copy-to=debug-image-app --set-image=*=php
"Listen on port 8000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8000:8888
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/jenkins
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node db-node-7 -p $'spec:\n someField: newValue'
Start a alpine pod and let the container expose port 27017,kubectl run hazelcast --image=alpine --port=27017
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/api-service 8088:https
Build some shared configuration directory,kubectl kustomize /etc/kube/config/production
Return snapshot of previous terminated mycontainer container logs from pod security-service-pod,kubectl logs -p -c mycontainer security-service-pod
Return snapshot logs from container search-engine-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/search-engine-deployment -c email-service-pod-1
Delete the context for the admin-context cluster,kubectl config delete-context admin-context
"Delete pods and services with same names ""auth"" and ""vpn""","kubectl delete pod,service auth vpn"
Update pod 'api' with the label 'tier' and the value 'backend',kubectl label pods api tier=backend
Create a new secret named ssh-key-secret with keys for each file in folder bar,kubectl create secret generic ssh-key-secret --from-file=path/to/preferences
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/app-secrets deployment/mydeployment
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=on-prem-cluster
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod media-stream-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach media-stream-pod -c mycontainer -i -t
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=cloud-cluster
Create a deployment named grafana that runs the postgres image and expose port 8083,kubectl create deployment grafana --image=postgres --port=8083
"Auto scale a deployment ""security"", with the number of pods between 2 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=2 --max=13
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""api-v2"" API group",kubectl get deployments.v1.1.0.api-v2 -o json
Get output from running the 'jenkins --version' command in nano-bot from pod database-pod,kubectl exec database-pod -c nano-bot -- jenkins --version
"Listen on port 5000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5000:8000
List the users that kubectl knows about,kubectl config get-users
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/proxy-server-pod 8000:8081
Return snapshot logs from container proxy-service-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/proxy-service-deployment -c vpn-service-pod-1
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 5000:9090
Scale a replica set named 'staging-app-rs' to 3,kubectl scale --replicas=3 rs/staging-app-rs
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.cluster-1-context.cluster staging-cluster
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.team-beta-context.cluster cloud-cluster
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/order-service"
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/notification-service"
"Get output from running 'wp' command from the first pod of the service logging-service, using the first container by default",kubectl exec svc/logging-service -- wp
"Update pod 'web' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods web team='frontend-team'
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.team-alpha-context.cluster testing-cluster
List a single pod in JSON output format,kubectl get -o json pod media-stream-pod
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""prod-apps"" API group",kubectl get deployments.v1.1.1.prod-apps -o json
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8888 8000
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8000 8080
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""extensions"" API group",kubectl get deployments.v1.1.1.extensions -o json
Start a node pod and let the container expose port 3000,kubectl run hazelcast --image=node --port=3000
Delete the context for the service-account-context cluster,kubectl config delete-context service-account-context
Update pod 'vpn' with the label 'tier' and the value 'database',kubectl label pods vpn tier=database
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/db-service"
Get output from cosmic-container from pod web-app-pod,kubectl attach web-app-pod -c cosmic-container
"Create a role named ""reader"" with ResourceName specified",kubectl create role reader --verb=watch --resource=pods --resource-name=cdn-proxy --resource-name=message-queue
Create a new secret named docker-registry-secret with keys for each file in folder bar,kubectl create secret generic docker-registry-secret --from-file=path/to/profiles
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/analytics-pod
"Create a role named ""custom_role"" that allows user to perform ""list"", ""create"" and ""update"" on pods",kubectl create role custom_role --verb=list --verb=create --verb=update --resource=pods
Create a deployment named my-dep that runs the ruby image and expose port 6379,kubectl create deployment my-dep --image=ruby --port=6379
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=9091:5432
Create a new secret named aws-credentials-secret from an env file,kubectl create secret generic aws-credentials-secret --from-env-file=path/to/settings.env
Add a taint with key 'special' on nodes having label myLabel,kubectl taint node -l myLabel  special=monitoring-node-15:PreferNoSchedule
Display only the most recent 5 lines of output in pod security-service-pod,kubectl logs --tail=5 security-service-pod
"Update pod 'backend' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods backend last-deployment='2023-03-15'
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=conf=/path/to/configs/file1.txt --from-file=data=/path/to/parameters/file2.txt
Return snapshot logs from pod web-app-pod with only one container,kubectl logs web-app-pod
"Mark node ""node-1"" as schedulable",kubectl uncordon node-1
"Create a role binding for user1, user2, and group1 using the default_role cluster role",kubectl create rolebinding default_role --clusterrole=default_role --user=user1 --user=user2 --group=group1
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node gpu-node-12 -p '{""spec"":{""someField"":""newValue""}'"
"Check to see if I can get the job named ""data-migration-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/data-migration-job -n production
"Scale a resource identified by type and name specified in ""parameters.yaml"" to 7",kubectl scale --replicas=7 -f parameters.yaml
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.staging-context.cluster data-cluster
Add a taint with key 'datacenter' on nodes having label service=auth,kubectl taint node -l service=auth  datacenter=db-node-7:PreferNoSchedule
Create a deployment named registry that runs the redis image and expose port 5000,kubectl create deployment registry --image=redis --port=5000
Set deployment frontend-deployment's service account to spinnaker,kubectl set serviceaccount deployment frontend-deployment spinnaker
"Listen on port 9090 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 9090:8088
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/configurations/file2.txt
Create a cron job with a command,"kubectl create cronjob cron-task --image=mongo --schedule=""*/1 * * * *"" -- mongo --version"
Get output from cyber-sleuth from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c cyber-sleuth
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8000 8088
"Listen on port 8088 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8088:8080"
"Listen on port 3000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 3000:5000"
"If the deployment named foo's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/foo
"Listen on port 5432 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5432:6379
Create a new config map named db-config from an env file,kubectl create configmap db-config --from-env-file=path/to/preferences.env
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 3000 3000
Create a job with a command,kubectl create job report-generation-job --image=ethereum/client-go -- geth
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/parameters/file2.txt
Import environment from a config map with a prefix,kubectl set env --from=configmap/namespace-config --prefix=MYSQL_ deployment/frontend-deployment
Create a deployment named my-dep that runs the wordpress image with 3 replicas,kubectl create deployment my-dep --image=wordpress --replicas=3
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/proxy-server-pod :8088
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod 3000:5000
Return snapshot of previous terminated code-explorer container logs from pod monitoring-pod,kubectl logs -p -c code-explorer monitoring-pod
"Start the wordpress pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=wordpress -- <arg1> <arg2> ... <argN>
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8080 6379
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""experimental-apps"" API group",kubectl get deployments.legacy-1.0.0.experimental-apps -o json
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8080 3000
"Delete pods and services with same names ""web"" and ""proxy-server""","kubectl delete pod,service web proxy-server"
Return snapshot of previous terminated cosmic-container container logs from pod security-service-pod,kubectl logs -p -c cosmic-container security-service-pod
Start a ubuntu pod and let the container expose port 8443,kubectl run hazelcast --image=ubuntu --port=8443
"Delete pods and services with same names ""proxy-server"" and ""email""","kubectl delete pod,service proxy-server email"
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-config-dev --prefix=MYSQL_ deployment/frontend-deployment
Create a copy of log-aggregator-pod changing all container images to alpine,kubectl debug log-aggregator-pod --copy-to=my-debugger --set-image=*=alpine
Remove from node 'dev-node-4' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes dev-node-4 app:PreferNoSchedule-
"Get output from running the 'go run hello.go' command from pod media-stream-pod, using the first container by default",kubectl exec media-stream-pod -- go run hello.go
Get output from running the 'python' command in time-machine from pod analytics-pod,kubectl exec analytics-pod -c time-machine -- python
"Get output from running 'nginx -t' command from the first pod of the deployment frontend-deployment, using the first container by default",kubectl exec deploy/frontend-deployment -- nginx -t
Diff resources included in parameters.yaml,kubectl diff -f parameters.yaml
Remove from node 'k8s-node-1' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes k8s-node-1 workload:NoSchedule-
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8088 --target-port=300100
Get output from running the 'apk add curl' command in rocket-ranger from pod vpn-service-pod,kubectl exec vpn-service-pod -c rocket-ranger -- apk add curl
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-name-config deployment/web-app-deployment
"If the deployment named mysql's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/mysql
Display only the most recent 20 lines of output in pod web-app-pod,kubectl logs --tail=20 web-app-pod
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/monitoring-stack-deployment -c cdn-service-pod-1
Create a deployment named prometheus that runs the confluentinc/cp-kafka image with 5 replicas,kubectl create deployment prometheus --image=confluentinc/cp-kafka --replicas=5
Update pod 'cdn' with the label 'app' and the value 'myapp',kubectl label pods cdn app=myapp
Create a new secret named oauth-secret with keys for each file in folder bar,kubectl create secret generic oauth-secret --from-file=path/to/profiles
"Create a service for a replicated php, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc php --port=8181 --target-port=543200
"Start the redis pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=redis -- <arg1> <arg2> ... <argN>
Embed certificate authority data for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
Create a new config map named app-config-dev based on folder profiles,kubectl create configmap app-config-dev --from-file=path/to/profiles
Return snapshot of previous terminated cosmic-container container logs from pod monitoring-pod,kubectl logs -p -c cosmic-container monitoring-pod
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.app-2-context.cluster data-cluster
"Listen on port 5000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/frontend-pod 5000:3000
Create a copy of chat-app-pod changing all container images to hazelcast/hazelcast,kubectl debug chat-app-pod --copy-to=debug-image-memcached --set-image=*=hazelcast/hazelcast
"Update pod 'cdn' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn team='frontend team'
"Create a cluster role named ""reader"" with ResourceName specified",kubectl create clusterrole reader --verb=patch --resource=pods --resource-name=file-uploader --resource-name=app-worker-2
Add a taint with key 'app' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  app=backup-node-14:PreferNoSchedule
"Update pod 'backend' with the annotation 'description' and the value 'Web server for marketing site', overwriting any existing value",kubectl annotate --overwrite pods backend description='Web server for marketing site'
Update image of all containers of daemonset app-v2 to 'alpine:3.14',kubectl set image daemonset app-v2 *=alpine:3.14
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/backend-pod 8088:8088
Create a new ClusterIP service named billing-service-clusterip,kubectl create service clusterip billing-service-clusterip --tcp=5000:8443
"Set a deployments node container cpu limits to ""2"" and memory to ""1Gi""","kubectl set resources deployment node -c=nginx --limits=cpu=2,memory=1Gi"
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/notification-handler-deployment DB_HOST=localhost -o yaml
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-config deployment/mydeployment
Remove from node 'web-node-8' all the taints with key 'special',kubectl taint nodes web-node-8 special-
Create an ingress with a default backend,"kubectl create ingress ingdefault --class=default \
--default-backend=defaultsvc:http \
--rule=""testing.com/*=svc:8083,tls=secret1"""
Create a copy of payment-gateway-pod changing all container images to confluentinc/cp-kafka,kubectl debug payment-gateway-pod --copy-to=debug-image-1 --set-image=*=confluentinc/cp-kafka
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/backend-microservice-deployment -c email-service-pod-1
Create a copy of frontend-pod changing the command of mycontainer,kubectl debug frontend-pod -it --copy-to=debug-image-app --container=mycontainer -- sh
"Start the hazelcast pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=hazelcast/hazelcast -- <arg1> <arg2> ... <argN>
Set only the server field on the sun-cluster cluster entry without touching other values,kubectl config set-cluster sun-cluster --server=https://1.2.3.4
"Listen on port 8081 locally, forwarding to 8888 in the pod",kubectl port-forward pod/api-service-pod 8081:8888
Set the user field on the app-1-context context entry without touching other values,kubectl config set-context app-1-context --user=cluster-admin
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-secrets deployment/order-processing-deployment
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/mongo
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=settings=/path/to/configs/file1.txt --from-file=key2=/path/to/data/file2.txt
Add a taint with key 'dedicated' on nodes having label release=beta,kubectl taint node -l release=beta  dedicated=kube-master-9:PreferNoSchedule
Rename the context 'cluster-2-context' to 'client-1-context' in your kubeconfig file,kubectl config rename-context cluster-2-context client-1-context
Return snapshot of previous terminated nano-bot container logs from pod api-service-pod,kubectl logs -p -c nano-bot api-service-pod
Update deployment 'monitoring-stack-deployment' with a new environment variable,kubectl set env deployment/monitoring-stack-deployment SMTP_PASSWORD=your-password
Update a single-container pod's image version (tag) to v4,kubectl get pod vpn-service-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
Create a new ExternalName service named external-email-service,kubectl create service externalname external-email-service --external-name dummy-website.io
Create a new ExternalName service named external-caching-service,kubectl create service externalname external-caching-service --external-name document-company.com
Create a copy of monitoring-pod changing all container images to wordpress,kubectl debug monitoring-pod --copy-to=debug-image-web --set-image=*=wordpress
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/analytics-pod 8000:8088
Restart a daemon set,kubectl rollout restart daemonset/namespace-3
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/notification-sender-job -n testing
"Check to see if I can get the job named ""report-generation-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/report-generation-job -n namespace-1
Create a new secret named api-key-secret with keys for each file in folder bar,kubectl create secret generic api-key-secret --from-file=path/to/data
"Update pod 'email' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods email backup-strategy='daily-backups'
Roll back to the previous deployment with dry-run,kubectl rollout undo --dry-run=server deployment/nginx
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=sun-cluster
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json SLA='99.9% uptime'
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=staging-cluster
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/security-service-pod 3000 8080
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/cdn-service-pod 3000:5432
"Listen on port 9090 locally, forwarding to 6379 in the pod",kubectl port-forward pod/chat-app-pod 9090:6379
"Listen on port 5432 locally, forwarding to 5000 in the pod",kubectl port-forward pod/web-app-pod 5432:5000
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""custom-deployments"" API group",kubectl get deployments.rc-1.1.0.custom-deployments -o yaml
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/security-service-pod 8888:3000
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/backend-pod 3000:3000
Get output from running the 'dotnet' command in astro-container from pod analytics-pod,kubectl exec analytics-pod -c astro-container -- dotnet
Return snapshot of previous terminated code-explorer container logs from pod email-service-pod,kubectl logs -p -c code-explorer email-service-pod
Create a new secret named docker-registry-secret with keys for each file in folder bar,kubectl create secret generic docker-registry-secret --from-file=path/to/data
Add a taint with key 'disktype' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  disktype=testing-node-11:PreferNoSchedule
Set the client-key-data field in the cluster-admin user using --set-raw-bytes option,kubectl config set users.cluster-admin.client-key-data cert_data_here --set-raw-bytes=true
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod database-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach database-pod -c astro-container -i -t
Disable cert checking for the dev cluster entry,kubectl config set-cluster testing-cluster --insecure-skip-tls-verify=true
Set deployment user-management-deployment's service account to spinnaker,kubectl set serviceaccount deployment user-management-deployment spinnaker
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/proxy-server-pod
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=prod-cluster
"Update pod 'auth' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth release-notes='https://example.com/release-notes/v2.5.1'
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name education-edu.edu
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json app-version=2.5.1
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod 8081:8081
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 5000 8000
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-email-service
"List all allowed actions in namespace ""kube-ingress""",kubectl auth can-i --list --namespace=kube-ingress
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.app-2-context.cluster staging-cluster
Update deployment 'cache-cluster-deployment' with a new environment variable,kubectl set env deployment/cache-cluster-deployment SMTP_USERNAME=your-username
Create a new secret named tls-certificate-secret with keys for each file in folder bar,kubectl create secret generic tls-certificate-secret --from-file=path/to/data
Copy /tmp/foo local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo monitoring/task-processor-pod-17:/etc/kubernetes
"Listen on port 8088 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8088:8081"
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod log-aggregator-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach log-aggregator-pod -c astro-container -i -t
"Listen on port 5432 locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod 5432:8888
Start a ubuntu pod and let the container expose port 5000,kubectl run hazelcast --image=ubuntu --port=5000
Return snapshot of previous terminated mycontainer container logs from pod gateway-pod,kubectl logs -p -c mycontainer gateway-pod
Create a deployment named api that runs the golang image and expose port 9000,kubectl create deployment api --image=golang --port=9000
"Listen on port 8000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8000:3000
Add a taint with key 'zone' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  zone=node-1:PreferNoSchedule
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""custom-apps"" API group",kubectl get deployments.rc-1.1.0.custom-apps -o yaml
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=dev-cluster
Return snapshot of previous terminated nano-bot container logs from pod chat-app-pod,kubectl logs -p -c nano-bot chat-app-pod
Create a cron job with a command,"kubectl create cronjob monthly-audit --image=mysql --schedule=""*/1 * * * *"" -- mysqld"
Add a taint with key 'datacenter' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  datacenter=backup-node-14:PreferNoSchedule
Return snapshot logs from container load-balancer-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/load-balancer-deployment -c security-service-pod-1
Add a taint with key 'app' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  app=worker-node-3:PreferNoSchedule
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 5000 9090
"Create a service for a replicated ruby using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ruby --port=6379 --target-port=808900
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 9090 5000
"Get output from running the 'elasticsearch --version' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- elasticsearch --version
"Update pod 'web' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web release-notes='https://example.com/release-notes/v2.5.1'
"Listen on port 8000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8000:8000"
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=8084:9091
Create a deployment named nats that runs the python image and expose port 27017,kubectl create deployment nats --image=python --port=27017
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/frontend-service"
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/configs/file2.txt
Begin streaming the logs of the stardust-shuttle container in pod analytics-pod,kubectl logs -f -c stardust-shuttle analytics-pod
Copy /tmp/foo local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo kubeapps/cache-pod-5:/etc/kubernetes
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/db-config deployment/user-management-deployment
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/security-service-pod
Set deployment api-server-deployment's service account to dashboard,kubectl set serviceaccount deployment api-server-deployment dashboard
Create a copy of e-commerce-pod changing the command of cyber-sleuth,kubectl debug e-commerce-pod -it --copy-to=debug-image-1 --container=cyber-sleuth -- sh
Create a job with a command,kubectl create job data-migration-job --image=centos -- sleep 3600
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""testing-apps"" API group",kubectl get deployments.v2.0.0.testing-apps -o yaml
"Delete pods and services with same names ""monitoring"" and ""chat-app""","kubectl delete pod,service monitoring chat-app"
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/node
Update image of all containers of daemonset namespace-1 to 'java:11.0.12',kubectl set image daemonset namespace-1 *=java:11.0.12
Add a taint with key 'disktype' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  disktype=prod-node-5:PreferNoSchedule
"Listen on port 5432 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 5432:5432"
Create a job with a command,kubectl create job testing --image=amazonlinux -- bash
"Listen on port 3000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 3000:3000
Create a new secret named git-credentials-secret with key1=supersecret and key2=topsecret,kubectl create secret generic git-credentials-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""beta-apps"" API group",kubectl get deployments.hotfix-1.1.2.beta-apps -o json
Start a node pod and let the container expose port 6379,kubectl run hazelcast --image=node --port=6379
Create a copy of proxy-service-pod adding a debug container and attach to it,kubectl debug proxy-service-pod -it --image=busybox --copy-to=debug-image-1
Update pod 'log-aggregator' with the label 'env' and the value 'staging',kubectl label pods log-aggregator env=staging
Create a job with a command,kubectl create job cleanup --image=mysql -- mysql --version
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""api-v2"" API group",kubectl get deployments.rc-1.1.0.api-v2 -o yaml
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/virus-scan-job -n kube-ingress
Embed certificate authority data for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
Update pod 'database' with the label 'role' and the value 'cache',kubectl label pods database role=cache
"Update pod 'api' with the annotation 'git-repo' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods api git-repo='https://github.com/example/my-app'
Return snapshot of previous terminated ruby container logs from pod analytics-pod,kubectl logs -p -c ruby analytics-pod
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node k8s-node-1 -p '{""spec"":{""someField"":""newValue""}'"
Create a new secret named git-credentials-secret with keys for each file in folder bar,kubectl create secret generic git-credentials-secret --from-file=path/to/options
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/cdn-service-pod 8088:8081
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-settings deployment/monitoring-stack-deployment
Create a copy of api-service-pod adding a debug container and changing container images,"kubectl debug api-service-pod -it --copy-to=my-debugger --image=debian --set-image=app=app:debug,proxy=nginx:1.21"
Get output from running the 'bash' command in rocket-ranger from pod frontend-pod,kubectl exec frontend-pod -c rocket-ranger -- bash
Get output from the first pod of a replica set named go,kubectl attach rs/go
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-config-dev --prefix=MYSQL_ deployment/search-engine-deployment
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-config-prod deployment/database-deployment
Get output from running the 'go version' command in rocket-ranger from pod analytics-pod,kubectl exec analytics-pod -c rocket-ranger -- go version
Update pod 'gateway' with the label 'component' and the value 'worker',kubectl label pods gateway component=worker
"Listen on port 9090 locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod 9090:6379
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/scheduler-service"
Create a copy of monitoring-pod adding a debug container and changing container images,"kubectl debug monitoring-pod -it --copy-to=debug-image-web --image=debian --set-image=database=mysql:5.7,api=api:v2"
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/security-service-pod 3000 8088
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/proxy-server-pod
"Get output from running the 'go run hello.go' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- go run hello.go
Rename the context 'local-context' to 'user-a-context' in your kubeconfig file,kubectl config rename-context local-context user-a-context
Create a new secret named ssh-key-secret from an env file,kubectl create secret generic ssh-key-secret --from-env-file=path/to/options.env
Rename the context 'old-name' to 'team-alpha-context' in your kubeconfig file,kubectl config rename-context old-name team-alpha-context
Create a new secret named email-credentials-secret with keys for each file in folder bar,kubectl create secret generic email-credentials-secret --from-file=path/to/options
"Delete pods and services with same names ""gateway"" and ""chat-app""","kubectl delete pod,service gateway chat-app"
Get output from running the 'python' command in mycontainer from pod api-service-pod,kubectl exec api-service-pod -c mycontainer -- python
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=80 --target-port=330600
Start a postgres pod and let the container expose port 8083,kubectl run hazelcast --image=postgres --port=8083
Get output from running the 'elasticsearch --version' command in code-explorer from pod backend-pod,kubectl exec backend-pod -c code-explorer -- elasticsearch --version
"Delete pods and services with same names ""web"" and ""frontend""","kubectl delete pod,service web frontend"
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/virus-scan-job -n default
Return snapshot logs from first container of a job named report-generation-job,kubectl logs job/report-generation-job
"Describe a pod identified by type and name in ""config.json""",kubectl describe -f config.json
"Listen on port 8888 locally, forwarding to 6379 in the pod",kubectl port-forward pod/api-service-pod 8888:6379
"Create a service for an node deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment node --port=8000 --target-port=808300
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/frontend-pod
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp cert-manager/worker-pod-4:/tmp/foo /tmp/bar
Create a new ExternalName service named my-ns,kubectl create service externalname my-ns --external-name sample-domain.net
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""internal-apps"" API group",kubectl get deployments.v3.0.0.internal-apps -o yaml
Add a taint with key 'app' on nodes having label release=beta,kubectl taint node -l release=beta  app=storage-node-13:PreferNoSchedule
Import environment from a secret,kubectl set env --from=secret/encryption-key-secret deployment/authentication-service-deployment
Remove from node 'node-2' all the taints with key 'disktype',kubectl taint nodes node-2 disktype-
Create a deployment named ingress that runs the php image and expose port 9092,kubectl create deployment ingress --image=php --port=9092
Set deployment mydeployment's service account to dashboard,kubectl set serviceaccount deployment mydeployment dashboard
"Update pod 'email' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email criticality=high
"Listen on port 8088 locally, forwarding to 6379 in the pod",kubectl port-forward pod/web-app-pod 8088:6379
"Listen on port 8888 locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod 8888:8081
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kubeapps/message-broker-pod-15::/tmp/foo /tmp/bar
"Listen on port 5000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/chat-app-pod 5000:5432
"Update pod 'auth' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods auth status=unhealthy
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/global-config deployment/web-app-deployment
"Start a jenkins pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=jenkins --overrides='{ ""apiVersion"": ""hotfix-1.1.2"", ""spec"": { ... } }'"
Get output from running the 'python' command in cosmic-container from pod vpn-service-pod,kubectl exec vpn-service-pod -c cosmic-container -- python
"Update pod 'cdn' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn SLA='99.9% uptime'
"Update node 'k8s-node-1' with a taint with key 'hardware' and value 'gpu' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes k8s-node-1 hardware=gpu:NoExecute
Update a cluster role binding for fluentd,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:fluentd
Start a node pod and let the container expose port 5000,kubectl run hazelcast --image=node --port=5000
Return snapshot logs from pod media-stream-pod with multi containers,kubectl logs media-stream-pod --all-containers=true
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=5000 --target-port=500000
Disable cert checking for the dev cluster entry,kubectl config set-cluster web-cluster --insecure-skip-tls-verify=true
Update image of all containers of daemonset test to 'amazonlinux:2',kubectl set image daemonset test *=amazonlinux:2
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node storage-node-13 -p '{""spec"":{""containers"":[{""name"":""container-name"", ""resources"":{""limits"":{""cpu"":""200m""}}}]}'"
"Create a cluster role name ""view"" with NonResourceURL specified","kubectl create clusterrole ""view"" --verb=proxy --non-resource-url=/proxy/*"
"Delete pods and services with same names ""foo"" and ""api""","kubectl delete pod,service foo api"
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=storage.k8s.io
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/data-cluster/kubernetes.ca.crt
Add to node 'app-node-6' a taint with key 'dedicated' and no value,kubectl taint nodes app-node-6 dedicated:NoSchedule
"Start a alpine pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=alpine --overrides='{ ""apiVersion"": ""v1.0.0"", ""spec"": { ... } }'"
Begin streaming the logs of the warp-drive container in pod analytics-pod,kubectl logs -f -c warp-drive analytics-pod
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/monitoring-service"
Get output from running the 'go version' command in cyber-sleuth from pod email-service-pod,kubectl exec email-service-pod -c cyber-sleuth -- go version
Create a new ExternalName service named external-messaging-service,kubectl create service externalname external-messaging-service --external-name education-edu.edu
"Set a deployments golang container cpu limits to ""50m"" and memory to ""2Gi""","kubectl set resources deployment golang -c=nginx --limits=cpu=50m,memory=2Gi"
"Listen on port 8000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8000:8000"
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod 8888:8080
Delete the cluster-admin user,kubectl config delete-user cluster-admin
"Set basic auth for the ""saas-admin"" entry",kubectl config set-credentials saas-admin --username=admin --password=uXFGweU9l35qcif
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=testing-cluster
Create a job,kubectl create job audit-job --image=busybox
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8888 8088
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/proxy-server-pod 8081:8080
"Auto scale a replication controller ""media-stream"", with the number of pods between 1 and 8, target CPU utilization at 50%",kubectl autoscale rc media-stream --max=8 --cpu-percent=50
Scale a replica set named 'dev-environment-rs' to 7,kubectl scale --replicas=7 rs/dev-environment-rs
Embed certificate authority data for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --embed-certs --certificate-authority=~/.kube/e2e/kubernetes.ca.crt
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""mobile-apps"" API group",kubectl get deployments.feature-branch-2.3.0.mobile-apps -o json
Update pod 'foo' with the label 'env' and the value 'development',kubectl label pods foo env=development
"Check to see if I can get the job named ""content-import-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/content-import-job -n staging
Remove from node 'kube-master-9' all the taints with key 'dedicated',kubectl taint nodes kube-master-9 dedicated-
List all pods in ps output format with more information (such as node name),kubectl get pods -o wide
Update pod 'monitoring' with the label 'role' and the value 'frontend',kubectl label pods monitoring role=frontend
"Listen on port 8000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/web-service 8000:https
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json backup-strategy='daily backups'
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/log-aggregator-pod 3000:3000
Create a copy of auth-service-pod changing all container images to node,kubectl debug auth-service-pod --copy-to=dgb-img --set-image=*=node
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=app-cluster
"Listen on port 8080 locally, forwarding to 5432 in the pod",kubectl port-forward pod/chat-app-pod 8080:5432
"Listen on port 8000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/chat-app-pod 8000:8000
Add a taint with key 'disktype' on nodes having label service=auth,kubectl taint node -l service=auth  disktype=db-node-7:PreferNoSchedule
Create a cron job with a command,"kubectl create cronjob data-processing --image=mongo --schedule=""*/1 * * * *"" -- mongo --version"
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8000 6379
Return snapshot logs from first container of a job named data-migration-job,kubectl logs job/data-migration-job
Begin streaming the logs of the quantum-quark container in pod mypod,kubectl logs -f -c quantum-quark mypod
Update deployment 'authentication-service-deployment' with a new environment variable,kubectl set env deployment/authentication-service-deployment SMTP_HOST=smtp.example.com
Update deployment 'log-aggregator-deployment' with a new environment variable,kubectl set env deployment/log-aggregator-deployment DB_USER=username
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.team-alpha-context.cluster on-prem-cluster
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=web-cluster
Rename the context 'cluster-1-context' to 'service-account-context' in your kubeconfig file,kubectl config rename-context cluster-1-context service-account-context
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=80 --target-port=801000
"Create a service for a replicated hazelcast using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs hazelcast --port=8443 --target-port=8000
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 6379 6379
Create a new secret named docker-registry-secret with keys for each file in folder bar,kubectl create secret generic docker-registry-secret --from-file=path/to/preferences
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/api-config deployment/monitoring-stack-deployment
Copy ~/.config/kube local file to /tmp/bar_dir in a remote pod in a specific container,kubectl cp ~/.config/kube front-end-pod-12:/tmp/bar_dir -c front-end-container
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/analytics-platform-deployment ENV=prod -o yaml
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp monitoring/front-end-pod-12:/tmp/foo /tmp/bar_dir
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8000 5432
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""alpha-apps"" API group",kubectl get deployments.alpha-2.0.alpha-apps -o yaml
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-name-config deployment/email-server-deployment
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/monitoring-config deployment/scheduler-app-deployment
"Listen on port 6379 locally, forwarding to 9090 in the pod",kubectl port-forward pod/proxy-server-pod 6379:9090
Get output from mycontainer from pod auth-service-pod,kubectl attach auth-service-pod -c mycontainer
Add a taint with key 'datacenter' on nodes having label myLabel,kubectl taint node -l myLabel  datacenter=node-2:PreferNoSchedule
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/chat-app-pod :5000
Get output from running the 'pip --version' command in warp-drive from pod analytics-pod,kubectl exec analytics-pod -c warp-drive -- pip --version
"Listen on port 5000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/security-service-pod 5000:5432
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8000 9090
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/ui-config deployment/analytics-platform-deployment
Return snapshot of previous terminated warp-drive container logs from pod e-commerce-pod,kubectl logs -p -c warp-drive e-commerce-pod
List a single pod in YAML output format,kubectl get -o yaml pod email-service-pod
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-config-dev deployment/monitoring-stack-deployment
Get output from running the 'sleep 3600' command in cosmic-container from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c cosmic-container -- sleep 3600
"Delete pods and services with same names ""chat-app"" and ""email""","kubectl delete pod,service chat-app email"
Add a taint with key 'special' on nodes having label app=web-app,kubectl taint node -l app=web-app  special=monitoring-node-15:PreferNoSchedule
Add to node 'node-1' a taint with key 'special' and no value,kubectl taint nodes node-1 special:NoSchedule
"Create a cluster role named ""default_role"" with ResourceName specified",kubectl create clusterrole default_role --verb=list --resource=services --resource-name=report-generator --resource-name=file-processing
Copy :/tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp :/tmp/foo default/load-balancer-pod-9:/tmp/bar
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.on-prem-context.cluster kube-cluster-1
"Update pod 'vpn' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods vpn last-deployment='2023-03-15'
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/namespace-config deployment/notification-handler-deployment
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""web-apps"" API group",kubectl get deployments.feature-branch-2.3.0.web-apps -o json
Create a job with a command,"kubectl create job audit-job --image=nginx -- nginx -g ""daemon off;"""
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=galaxy-cluster
Start a mysql pod and let the container expose port 9000,kubectl run hazelcast --image=mysql --port=9000
Embed certificate authority data for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --embed-certs --certificate-authority=~/.kube/dev-cluster/kubernetes.ca.crt
"Create or update exec auth plugin environment variables for the ""app-service"" entry",kubectl config set-credentials app-service --exec-env=key1=val1 --exec-env=key2=val2
"Update pod 'chat-app' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods chat-app expiration-date='2024-12-31'
Update pod 'proxy-server' with the label 'env' and the value 'development',kubectl label pods proxy-server env=development
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/search-service"
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""alpha-apps"" API group",kubectl get deployments.legacy-1.0.0.alpha-apps -o yaml
"Listen on port 5432 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 5432:3000"
"If the deployment named foo's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/foo
Return snapshot logs from container frontend-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/frontend-deployment -c analytics-pod-1
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/vpn-service-pod
Create an interactive debugging session in pod mypod and immediately attach to it. # (requires the EphemeralContainers feature to be enabled in the cluster),kubectl debug mypod -it --image=busybox
"Listen on port 5000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5000:8000
Create a deployment named db that runs the jenkins image and expose port 8000,kubectl create deployment db --image=jenkins --port=8000
Set deployment frontend-deployment's service account to dashboard,kubectl set serviceaccount deployment frontend-deployment dashboard
"Delete pods and services with same names ""media-stream"" and ""gateway""","kubectl delete pod,service media-stream gateway"
Create a deployment named my-dep that runs the jenkins image and expose port 9092,kubectl create deployment my-dep --image=jenkins --port=9092
"Mark node ""testing-node-11"" as unschedulable",kubectl cordon testing-node-11
Create a new resource quota named object-quota,"kubectl create quota object-quota --hard=configmaps=5,secrets=10,persistentvolumeclaims=5"
Roll back to daemonset revision 1,kubectl rollout undo daemonset/app-v2 --to-revision=1
Create a job with a command,kubectl create job testing --image=python -- pip --version
Update pod 'web' with the label 'component' and the value 'api',kubectl label pods web component=api
Create a job with a command,kubectl create job report-generation-job --image=mysql -- mysqld
Start a ethereum/client-go pod and let the container expose port 8081,kubectl run hazelcast --image=ethereum/client-go --port=8081
"Listen on port 8000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8000:3000
Describe a node,kubectl describe nodes controller-node-10.controller-cluster.net
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-file-storage-service
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8000 5432
Add to node 'backup-node-14' a taint with key 'hardware' and no value,kubectl taint nodes backup-node-14 hardware:NoSchedule
Get output from running the 'node' command in warp-drive from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c warp-drive -- node
Add a taint with key 'environment' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  environment=k8s-node-1:PreferNoSchedule
Start the php pod using a different command and custom arguments,kubectl run nginx --image=php --command -- <cmd> <arg1> ... <argN>
Return snapshot logs from container mydeployment-1 of a deployment named chat-app-pod,kubectl logs deployment/mydeployment -c chat-app-pod-1
Update pod 'proxy' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy env-
Import environment from a secret,kubectl set env --from=secret/api-key-secret deployment/payment-processor-deployment
Add a taint with key 'environment' on nodes having label release=beta,kubectl taint node -l release=beta  environment=gpu-node-12:PreferNoSchedule
"Set a deployments wordpress container cpu limits to ""200m"" and memory to ""128Mi""","kubectl set resources deployment wordpress -c=nginx --limits=cpu=200m,memory=128Mi"
"Listen on port 8888 locally, forwarding to 8081 in the pod",kubectl port-forward pod/backend-pod 8888:8081
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 3000 5000
"Create a service for a replication controller identified by type and name specified in ""ruby-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f ruby-controller.yaml --port=3001 --target-port=800000
Create a new config map named app-secrets based on folder data,kubectl create configmap app-secrets --from-file=path/to/data
Add a taint with key 'app' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  app=prod-node-5:PreferNoSchedule
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=properties=/path/to/settings/file1.txt --from-file=key1=/path/to/profiles/file2.txt
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=9091 --target-port=300100
"Get output from running 'geth version' command from the first pod of the service gateway-service, using the first container by default",kubectl exec svc/gateway-service -- geth version
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/api-config deployment/frontend-deployment
Create a job with a command,kubectl create job image-build-job --image=ruby -- irb
Embed certificate authority data for the star-cluster cluster entry,kubectl config set-cluster star-cluster --embed-certs --certificate-authority=~/.kube/cluster-beta/kubernetes.ca.crt
"Listen on port 3000 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 3000:8080"
"Describe a pod identified by type and name in ""options.json""",kubectl describe -f options.json
Add a taint with key 'app' on nodes having label role=database,kubectl taint node -l role=database  app=app-node-6:PreferNoSchedule
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp cert-manager/api-server-pod-3:/tmp/foo_dir /tmp/bar_dir
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node dev-node-4 -p '{""stringData"":{""password"":""new-password""}'"
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp prometheus/image-resizer-pod-20:/tmp/foo_dir /tmp/bar_dir
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=web-cluster
"Create a cluster role name ""reader"" with NonResourceURL specified","kubectl create clusterrole ""reader"" --verb=update --non-resource-url=/logs/*"
Create a new ExternalName service named external-metrics-service,kubectl create service externalname external-metrics-service --external-name document-company.com
Return snapshot of previous terminated stardust-shuttle container logs from pod gateway-pod,kubectl logs -p -c stardust-shuttle gateway-pod
Remove from node 'app-node-6' all the taints with key 'zone',kubectl taint nodes app-node-6 zone-
Create a job with a command,kubectl create job batch-processing --image=postgres -- psql
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""testing-apps"" API group",kubectl get deployments.feature-branch-2.3.0.testing-apps -o json
Edit the service named 'backend-service',kubectl edit svc/backend-service
Start a nginx pod and let the container expose port 9090,kubectl run hazelcast --image=nginx --port=9090
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=testing-cluster
"Set a deployments jenkins container cpu limits to ""10"" and memory to ""256Mi""","kubectl set resources deployment jenkins -c=nginx --limits=cpu=10,memory=256Mi"
Show metrics for a given node,kubectl top node node-1
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/media-stream-pod
Add a taint with key 'hardware' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  hardware=k8s-node-1:PreferNoSchedule
"Update pod 'web' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web env=staging
Create an ingress with multiple hosts and the pathType as Prefix,"kubectl create ingress ingress1 --class=default \
--rule=""testing.com/path*=svc:9092"" \
--rule=""bar.com/admin*=svc2:http"""
Add a taint with key 'datacenter' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  datacenter=worker-node-3:PreferNoSchedule
Update pod 'analytics' with the label 'component' and the value 'web',kubectl label pods analytics component=web
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 5432 5432
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/settings/file2.txt
Describe one context in your kubeconfig file,kubectl config get-contexts cloud-context
Remove from node 'prod-node-5' all the taints with key 'datacenter',kubectl taint nodes prod-node-5 datacenter-
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""experimental-apps"" API group",kubectl get deployments.legacy-1.0.0.experimental-apps -o yaml
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/api-service-pod 8080:6379
"Listen on port 8888 locally, forwarding to 5432 in the pod",kubectl port-forward pod/web-app-pod 8888:5432
Display only the most recent 23 lines of output in pod vpn-service-pod,kubectl logs --tail=23 vpn-service-pod
"Delete pods and services with same names ""database"" and ""payment""","kubectl delete pod,service database payment"
Return snapshot of previous terminated lunar-launcher container logs from pod web-app-pod,kubectl logs -p -c lunar-launcher web-app-pod
"Auto scale a deployment ""email"", with the number of pods between 7 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment email --min=7 --max=15
"Get output from running 'go' command from the first pod of the service web-service, using the first container by default",kubectl exec svc/web-service -- go
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/proxy-server-pod
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.local-context.cluster moon-cluster
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/backend-pod 3000:8000
"Update pod 'analytics' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics custom-label=my-custom-value
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/log-aggregator-pod 5000:6379
"Listen on port 8088 locally, forwarding to 5000 in the pod",kubectl port-forward pod/e-commerce-pod 8088:5000
Add a taint with key 'app' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  app=k8s-node-1:PreferNoSchedule
Create a job with a command,kubectl create job certificate-renewal --image=docker.elastic.co/elasticsearch/elasticsearch -- elasticsearch
"Scale a resource identified by type and name specified in ""docker-registry.yaml"" to 7",kubectl scale --replicas=7 -f docker-registry.yaml
Begin streaming the logs of the time-machine container in pod log-aggregator-pod,kubectl logs -f -c time-machine log-aggregator-pod
"Listen on port 9090 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 9090:5432
Create a priority class named medium-priority,"kubectl create priorityclass medium-priority --value=50 --description=""Moderate, standard resource allocation"""
Set the last-applied-configuration of a resource to match the contents of a file,kubectl apply set-last-applied -f setup.yaml
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod analytics-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach analytics-pod -c quantum-quark -i -t
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config deployment/scheduler-app-deployment
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json owner='alice smith'
Rename the context 'on-prem-context' to 'user-a-context' in your kubeconfig file,kubectl config rename-context on-prem-context user-a-context
Import environment from a secret,kubectl set env --from=secret/ssl-key-secret deployment/backend-microservice-deployment
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=testing-cluster
"Listen on port 8088 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8088:8088"
Remove the resource requests for resources on containers in kafka,"kubectl set resources deployment kafka --limits=cpu=0,memory=0 --requests=cpu=0,memory=0"
Create a new config map named ui-config from an env file,kubectl create configmap ui-config --from-env-file=path/to/configurations.env
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/chat-app-pod 5000:6379
Create a cron job with a command,"kubectl create cronjob backup-job --image=wordpress --schedule=""*/1 * * * *"" -- mysql --version"
Add a taint with key 'app' on nodes having label team=devops,kubectl taint node -l team=devops  app=k8s-node-1:PreferNoSchedule
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""my-apps"" API group",kubectl get deployments.v2.0.0.my-apps -o json
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/global-config deployment/web-app-deployment
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=settings=/path/to/configurations/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Display only the most recent 5 lines of output in pod vpn-service-pod,kubectl logs --tail=5 vpn-service-pod
Return snapshot logs from container api-server-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/api-server-deployment -c monitoring-pod-1
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.team-alpha-context.cluster star-cluster
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/properties/file2.txt
Update pod 'email' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods email role-
Create a new secret named database-secret with keys for each file in folder bar,kubectl create secret generic database-secret --from-file=path/to/parameters
"Listen on port 5432 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5432:8088
Add to node 'storage-node-13' a taint with key 'cpu-type' and no value,kubectl taint nodes storage-node-13 cpu-type:NoSchedule
"Listen on port 8080 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8080:9090
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.cluster-2-context.cluster cloud-cluster
"Create a single ingress called 'web-ingress' that directs requests to foo.com/bar to svc # svc1:8082 with a tls secret ""my-cert""","kubectl create ingress web-ingress --rule=""foo.com/bar=svc1:8082,tls=my-cert"""
"Create a single ingress called 'myapp-ingress' that directs requests to testing.com/input to svc # svc1:7000 with a tls secret ""my-cert""","kubectl create ingress myapp-ingress --rule=""testing.com/input=svc1:7000,tls=my-cert"""
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/analytics-pod 8081:8080
Remove from node 'dev-node-4' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes dev-node-4 special:NoSchedule-
"Auto scale a deployment ""proxy"", with the number of pods between 6 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy --min=6 --max=8
"List deployments in YAML output format, in the ""custom-version"" version of the ""external-apps"" API group",kubectl get deployments.custom-version.external-apps -o yaml
Add a taint with key 'app' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  app=worker-node-3:PreferNoSchedule
"Auto scale a deployment ""chat-app"", with the number of pods between 2 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment chat-app --min=2 --max=14
Get output from running the 'bash' command in astro-container from pod gateway-pod,kubectl exec gateway-pod -c astro-container -- bash
Scale a replica set named 'api-service-rs' to 3,kubectl scale --replicas=3 rs/api-service-rs
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.team-beta-context.cluster cluster-alpha
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/ui-config deployment/database-deployment
Create a new secret named git-credentials-secret with keys for each file in folder bar,kubectl create secret generic git-credentials-secret --from-file=path/to/configs
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/frontend-pod 5000:8000
Update a cluster role binding for kube-scheduler,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:kube-scheduler
Get output from running the 'pip --version' command in lunar-launcher from pod security-service-pod,kubectl exec security-service-pod -c lunar-launcher -- pip --version
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""extensions"" API group",kubectl get deployments.v1.1.1.extensions -o yaml
"Delete pods and services with same names ""vpn"" and ""proxy-server""","kubectl delete pod,service vpn proxy-server"
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kube-node-lease/web-app-pod-1:/tmp/foo /tmp/bar_dir
Import environment from a secret,kubectl set env --from=secret/ssl-key-secret deployment/log-aggregator-deployment
Set deployment monitoring-stack-deployment's service account to tiller,kubectl set serviceaccount deployment monitoring-stack-deployment tiller
"Listen on port 8888 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8888:6379
Remove from node 'gpu-node-12' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes gpu-node-12 cpu-type:NoSchedule-
Create a deployment named sonarqube that runs the wordpress image and expose port 9092,kubectl create deployment sonarqube --image=wordpress --port=9092
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-config-dev deployment/gateway-deployment
"Listen on port 8080 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8080:3000
Create a deployment named registry that runs the nginx image,kubectl create deployment registry --image=nginx
"Update pod 'web' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods web compliance-level='PCI-DSS'
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/data-synchronization-job -n kube-node-lease
"Listen on port 8080 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8080:5432"
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/logging-service"
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod chat-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach chat-app-pod -c quantum-quark -i -t
Get output from cyber-sleuth from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c cyber-sleuth
"Get output from running the 'node' command from pod cdn-service-pod, using the first container by default",kubectl exec cdn-service-pod -- node
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=galaxy-cluster
"Remove exec auth plugin environment variables for the ""robot-user"" entry",kubectl config set-credentials robot-user --exec-env=var-to-remove-
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to /tmp/bar locally,kubectl cp istio-system/front-end-pod-12:/var/run/secrets/kubernetes.io/serviceaccount/ /tmp/bar
Describe one context in your kubeconfig file,kubectl config get-contexts app-1-context
Add a taint with key 'environment' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  environment=testing-node-11:PreferNoSchedule
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/data/file2.txt
"Auto scale a deployment ""monitoring"", with the number of pods between 1 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment monitoring --min=1 --max=9
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod 8080:8888
Start a jenkins pod and let the container expose port 8083,kubectl run hazelcast --image=jenkins --port=8083
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml criticality=high
Update image of all containers of daemonset staging to 'ruby:3.0.2',kubectl set image daemonset staging *=ruby:3.0.2
"Drain node ""k8s-node-1"", even if there are pods not managed by a replication controller, replica set, job, daemon set or stateful set on it",kubectl drain k8s-node-1 --force
Return snapshot logs from container web-app-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/web-app-deployment -c web-app-pod-1
Update pod 'web' only if the resource is unchanged from version 1,kubectl label pods web status=unhealthy --resource-version=1
"Auto scale a replication controller ""email"", with the number of pods between 1 and 4, target CPU utilization at 81%",kubectl autoscale rc email --max=4 --cpu-percent=81
Get output from running the 'psql' command in stardust-shuttle from pod backend-pod,kubectl exec backend-pod -c stardust-shuttle -- psql
"Start a jenkins pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=jenkins --overrides='{ ""apiVersion"": ""legacy-1.0.0"", ""spec"": { ... } }'"
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/backend-microservice-deployment -c proxy-service-pod-1
Create a new NodePort service named log-aggregator-nodeport,kubectl create service nodeport log-aggregator-nodeport --tcp=9092:8083
"Update pod 'backend' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods backend owner='alice-smith'
Create a new ExternalName service named external-authentication-service,kubectl create service externalname external-authentication-service --external-name demo-service.dev
Get output from running the 'geth version' command in code-explorer from pod api-service-pod,kubectl exec api-service-pod -c code-explorer -- geth version
Display only the most recent 53 lines of output in pod proxy-service-pod,kubectl logs --tail=53 proxy-service-pod
Get output from running the 'ash' command in mycontainer from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c mycontainer -- ash
Return snapshot logs from container order-processing-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/order-processing-deployment -c email-service-pod-1
List a single pod in JSON output format,kubectl get -o json pod api-service-pod
Start a wordpress pod and let the container expose port 9091,kubectl run hazelcast --image=wordpress --port=9091
"Listen on port 5432 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5432:9090
Set the resource request and limits for all containers in jenkins,"kubectl set resources deployment jenkins --limits=cpu=200m,memory=512Mi --requests=cpu=200m,memory=1Gi"
Create a new secret named jwt-secret with specified keys instead of names on disk,kubectl create secret generic jwt-secret --from-file=ssh-privatekey=path/to/id_rsa --from-file=ssh-publickey=path/to/id_rsa.pub
Import environment from a secret,kubectl set env --from=secret/encryption-key-secret deployment/backend-microservice-deployment
"Update node 'dev-node-4' with a taint with key 'environment' and value 'production' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes dev-node-4 environment=production:NoSchedule
Return snapshot of previous terminated astro-container container logs from pod vpn-service-pod,kubectl logs -p -c astro-container vpn-service-pod
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/payment-gateway-pod
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/log-aggregator-pod 5432:9090
Add a taint with key 'disktype' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  disktype=node-1:PreferNoSchedule
"Create a cluster role binding for admin, devops-user, and operations-team using the bar cluster role",kubectl create clusterrolebinding bar --clusterrole=bar --user=admin --user=devops-user --group=operations-team
Return snapshot of previous terminated cyber-sleuth container logs from pod api-service-pod,kubectl logs -p -c cyber-sleuth api-service-pod
Display only the most recent 43 lines of output in pod analytics-pod,kubectl logs --tail=43 analytics-pod
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=cluster-alpha
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=3001:6379
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/analytics-platform-deployment
Begin streaming the logs of the nano-bot container in pod proxy-server-pod,kubectl logs -f -c nano-bot proxy-server-pod
Begin streaming the logs of the ruby container in pod security-service-pod,kubectl logs -f -c ruby security-service-pod
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod 8088:8888
"List deployments in JSON output format, in the ""custom-version"" version of the ""extensions"" API group",kubectl get deployments.custom-version.extensions -o json
"Listen on port 8081 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8081:8000"
"Get output from running 'irb' command from the first pod of the service order-service, using the first container by default",kubectl exec svc/order-service -- irb
"Get output from running 'elasticsearch' command from the first pod of the deployment load-balancer-deployment, using the first container by default",kubectl exec deploy/load-balancer-deployment -- elasticsearch
Create a job with a command,kubectl create job data-migration-job --image=confluentinc/cp-kafka -- kafka-server-start /etc/kafka/server.properties
Update pod 'cdn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods cdn tier-
Display only the most recent 53 lines of output in pod database-pod,kubectl logs --tail=53 database-pod
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=cluster-gamma
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-settings --prefix=MYSQL_ deployment/analytics-platform-deployment
"If the deployment named bar's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/bar
Create a new namespace named testing,kubectl create namespace testing
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node edge-node-10 -p '{""spec"":{""replicas"":3}'"
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""extensions"" API group",kubectl get deployments.alpha-2.0.extensions -o json
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8000 8000
Add a taint with key 'datacenter' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  datacenter=kube-master-9:PreferNoSchedule
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/e-commerce-pod
Get output from running the 'postgres' command in rocket-ranger from pod email-service-pod,kubectl exec email-service-pod -c rocket-ranger -- postgres
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node node-1 -p '{""spec"":{""someField"":""newValue""}'"
Create a new secret named ssh-key-secret with keys for each file in folder bar,kubectl create secret generic ssh-key-secret --from-file=path/to/parameters
"Listen on port 5000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/chat-app-pod 5000:8080
List a single pod in YAML output format,kubectl get -o yaml pod frontend-pod
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.app-2-context.cluster star-cluster
"Auto scale a replication controller ""email"", with the number of pods between 1 and 2, target CPU utilization at 50%",kubectl autoscale rc email --max=2 --cpu-percent=50
"Describe a pod identified by type and name in ""settings.json""",kubectl describe -f settings.json
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""beta-apps"" API group",kubectl get deployments.rc-1.1.0.beta-apps -o yaml
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=3001 --target-port=808900
"Create a cluster role named ""default_role"" with ResourceName specified",kubectl create clusterrole default_role --verb=exec --resource=services --resource-name=monitoring-prometheus --resource-name=image-processor
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/chat-app-pod 8081:8081
Get output from astro-container from pod media-stream-pod,kubectl attach media-stream-pod -c astro-container
"Listen on port 5432 locally, forwarding to 8888 in the pod",kubectl port-forward pod/backend-pod 5432:8888
Get the password for the staging-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""staging-cluster"")].user.password}'"
Get output from running the 'php --version' command in nano-bot from pod proxy-service-pod,kubectl exec proxy-service-pod -c nano-bot -- php --version
Copy /tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp kube-proxy/worker-pod-4:/tmp/foo /etc/kubernetes
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node k8s-node-1 -p $'stringData:\n password: new-password'
Get output from running the 'python' command in warp-drive from pod chat-app-pod,kubectl exec chat-app-pod -c warp-drive -- python
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8888 8081
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/kube-system-config deployment/cache-cluster-deployment
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/preferences/file2.txt
"Delete pods and services with same names ""gateway"" and ""vpn""","kubectl delete pod,service gateway vpn"
"Listen on port 5000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 5000:8000"
Start a node pod and let the container expose port 7000,kubectl run hazelcast --image=node --port=7000
Create a new secret named tls-certificate-secret from an env file,kubectl create secret generic tls-certificate-secret --from-env-file=path/to/configurations.env
Embed certificate authority data for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --embed-certs --certificate-authority=~/.kube/app-cluster/kubernetes.ca.crt
"If the deployment named backend-service-replicaset's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/backend-service-replicaset
Describe one context in your kubeconfig file,kubectl config get-contexts admin-context
Create a job,kubectl create job deployment-rollout-job --image=busybox
Get output from running the 'php --version' command in nano-bot from pod analytics-pod,kubectl exec analytics-pod -c nano-bot -- php --version
Return snapshot of previous terminated cosmic-container container logs from pod web-app-pod,kubectl logs -p -c cosmic-container web-app-pod
"Drain node ""web-node-8"", even if there are pods not managed by a replication controller, replica set, job, daemon set or stateful set on it",kubectl drain web-node-8 --force
Remove from node 'worker-node-3' all the taints with key 'cpu-type',kubectl taint nodes worker-node-3 cpu-type-
Show all logs from pod proxy-server-pod written in the last hour,kubectl logs --since=1h proxy-server-pod
Set deployment scheduler-app-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment scheduler-app-deployment kube-controller-manager
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""internal-apps"" API group",kubectl get deployments.beta-1.0.internal-apps -o yaml
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8000 5000
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/analytics-pod 6379 8000
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod mypod # and sends stdout/stderr from 'bash' back to the client,kubectl attach mypod -c warp-drive -i -t
"Listen on port 8081 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8081:8081
"Create a cluster role name ""foo"" with NonResourceURL specified","kubectl create clusterrole ""foo"" --verb=update --non-resource-url=/debug/core"
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=star-cluster
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in a specific container,kubectl cp /tmp/foo_dir api-server-pod-3:/tmp/bar -c web-app-container
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 5000 8888
Get output from code-explorer from pod auth-service-pod,kubectl attach auth-service-pod -c code-explorer
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=web-cluster
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/mypod 8081 3000
Return snapshot of previous terminated rocket-ranger container logs from pod frontend-pod,kubectl logs -p -c rocket-ranger frontend-pod
Add a taint with key 'cpu-type' on nodes having label role=database,kubectl taint node -l role=database  cpu-type=kube-master-9:PreferNoSchedule
Set deployment frontend-deployment's service account to my-service-account,kubectl set serviceaccount deployment frontend-deployment my-service-account
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.v1.0.0.sandbox-apps -o yaml
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/cache-cluster-deployment -c proxy-service-pod-1
"Listen on port 3000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 3000:8888"
Create a copy of api-service-pod changing all container images to golang,kubectl debug api-service-pod --copy-to=my-custom-dbg --set-image=*=golang
Rename the context 'on-prem-context' to 'team-alpha-context' in your kubeconfig file,kubectl config rename-context on-prem-context team-alpha-context
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8000 8080
"Check to see if I can get the job named ""security-scan-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/security-scan-job -n default
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/monitoring-pod
Get output from lunar-launcher from pod api-service-pod,kubectl attach api-service-pod -c lunar-launcher
Add a taint with key 'cpu-type' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  cpu-type=gpu-node-12:PreferNoSchedule
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""testing-apps"" API group",kubectl get deployments.v2.1.0.testing-apps -o json
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp metallb-system/load-balancer-pod-9::/tmp/foo :/tmp/bar
Get output from running the 'ruby --version' command in time-machine from pod analytics-pod,kubectl exec analytics-pod -c time-machine -- ruby --version
"Update pod 'security' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods security security-scan-status='pass'
"Auto scale a deployment ""database"", with the number of pods between 6 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment database --min=6 --max=13
"Get output from running the 'geth attach' command from pod database-pod, using the first container by default",kubectl exec database-pod -- geth attach
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/log-aggregator-pod 6379:8888
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/security-service-pod 5432 8088
Update pod 'security' with the label 'tier' and the value 'database',kubectl label pods security tier=database
Rename the context 'prod-context' to 'user-a-context' in your kubeconfig file,kubectl config rename-context prod-context user-a-context
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/ui-config deployment/scheduler-app-deployment
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/user-service"
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=9000 --target-port=808400
"Create a single ingress called 'default-ingress' that directs requests to foo.com/module to svc # svc1:9000 with a tls secret ""my-cert""","kubectl create ingress default-ingress --rule=""foo.com/module=svc1:9000,tls=my-cert"""
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/e-commerce-pod 5000:9090
Display only the most recent 5 lines of output in pod frontend-pod,kubectl logs --tail=5 frontend-pod
Create a new secret named encryption-key-secret from an env file,kubectl create secret generic encryption-key-secret --from-env-file=path/to/data.env
Add a taint with key 'disktype' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  disktype=db-node-7:PreferNoSchedule
Get output from running the 'apache2ctl -D FOREGROUND' command in time-machine from pod proxy-server-pod,kubectl exec proxy-server-pod -c time-machine -- apache2ctl -D FOREGROUND
"Listen on port 8888 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8888:8088"
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 5432 6379
"List a pod identified by type and name specified in ""params.yaml"" in JSON output format",kubectl get -f params.yaml -o json
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/order-service"
Import environment from a secret,kubectl set env --from=secret/monitoring-credentials-secret deployment/email-server-deployment
"Update pod 'log-aggregator' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator expiration-date='2024-12-31'
"Auto scale a deployment ""backend"", with the number of pods between 4 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment backend --min=4 --max=12
Start a centos pod and let the container expose port 3000,kubectl run hazelcast --image=centos --port=3000
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json env=staging
"If the deployment named web's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/web
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/proxy-server-pod 8888:8000
"Listen on port 8888 locally, forwarding to 6379 in the pod",kubectl port-forward pod/mypod 8888:6379
"Listen on port 8081 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8081:9090
Create a cron job with a command,"kubectl create cronjob monthly-audit --image=mcr.microsoft.com/dotnet/core/runtime --schedule=""*/1 * * * *"" -- dotnet"
Rename the context 'prod-context' to 'client-1-context' in your kubeconfig file,kubectl config rename-context prod-context client-1-context
"Enable the OpenID Connect auth provider for the ""security-user"" entry with additional args",kubectl config set-credentials security-user --auth-provider=oidc --auth-provider-arg=client-id=foo --auth-provider-arg=client-secret=bar
Create a new resource quota named cpu-mem-quota,"kubectl create quota cpu-mem-quota --hard=cpu=2,memory=2G"
"Update node 'worker-node-3' with a taint with key 'hardware' and value 'gpu' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes worker-node-3 hardware=gpu:NoExecute
Create a job with a command,kubectl create job report-generation-job --image=redis -- redis-server
"Listen on port 5432 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5432:8888
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 6379 8080
Create a new NodePort service named payment-gateway-nodeport,kubectl create service nodeport payment-gateway-nodeport --tcp=5000:5432
"Create a single ingress called 'public-service-ingress' that directs requests to testing.com/example to svc # svc1:9092 with a tls secret ""my-cert""","kubectl create ingress public-service-ingress --rule=""testing.com/example=svc1:9092,tls=my-cert"""
Get the password for the star-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""star-cluster"")].user.password}'"
"Get output from running 'go version' command from the first pod of the service email-service, using the first container by default",kubectl exec svc/email-service -- go version
Add a taint with key 'hardware' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  hardware=k8s-node-1:PreferNoSchedule
Update pod 'media-stream' with the label 'role' and the value 'cache',kubectl label pods media-stream role=cache
Set deployment proxy-service-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment proxy-service-deployment kube-controller-manager
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.staging-context.cluster star-cluster
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.app-1-context.cluster galaxy-cluster
Disable cert checking for the dev cluster entry,kubectl config set-cluster galaxy-cluster --insecure-skip-tls-verify=true
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""web-apps"" API group",kubectl get deployments.v3.0.0.web-apps -o json
Get output from running the 'wp' command in astro-container from pod analytics-pod,kubectl exec analytics-pod -c astro-container -- wp
"Create a role named ""foo"" with ResourceName specified",kubectl create role foo --verb=connect --resource=pods --resource-name=app-worker-1 --resource-name=app-worker-1
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8010 --target-port=888800
Update image of all containers of daemonset app-v2 to 'node:14.17.3',kubectl set image daemonset app-v2 *=node:14.17.3
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/log-analysis-job -n development
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.client-1-context.cluster data-cluster
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/chat-app-pod 5000:9090
"Update pod 'vpn' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods vpn SLA='99.9% uptime'
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 6379 8081
"Get output from running 'mysqld' command from the first pod of the deployment order-processing-deployment, using the first container by default",kubectl exec deploy/order-processing-deployment -- mysqld
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod database-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
Start a php pod and let the container expose port 8083,kubectl run hazelcast --image=php --port=8083
"Delete pods and services with same names ""proxy"" and ""security""","kubectl delete pod,service proxy security"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 5000 8088
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
Update pod 'proxy' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy app-
Create a copy of email-service-pod changing the command of nebula-navigator,kubectl debug email-service-pod -it --copy-to=debug-image-web --container=nebula-navigator -- sh
Begin streaming the logs of the lunar-launcher container in pod payment-gateway-pod,kubectl logs -f -c lunar-launcher payment-gateway-pod
Create a new ExternalName service named external-git-service,kubectl create service externalname external-git-service --external-name blog-test.blog
Start a amazonlinux pod and let the container expose port 27017,kubectl run hazelcast --image=amazonlinux --port=27017
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/e-commerce-pod 8081:8080
Set deployment cache-cluster-deployment's service account to elasticsearch,kubectl set serviceaccount deployment cache-cluster-deployment elasticsearch
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=cloud-cluster
Update image of all containers of daemonset namespace-1 to 'python:3.9.7',kubectl set image daemonset namespace-1 *=python:3.9.7
Update pod 'chat-app' only if the resource is unchanged from version 1,kubectl label pods chat-app status=unhealthy --resource-version=1
Return snapshot logs from container mydeployment-1 of a deployment named mypod,kubectl logs deployment/mydeployment -c mypod-1
Add a taint with key 'special' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  special=edge-node-10:PreferNoSchedule
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=galaxy-cluster
"Embed client certificate data in the ""web-app"" entry",kubectl config set-credentials web-app --client-certificate=~/.kube/admin.crt --embed-certs=true
"Listen on port 5432 locally, forwarding to 5432 in the pod",kubectl port-forward pod/api-service-pod 5432:5432
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=cluster-gamma
"Check to see if I can get the job named ""security-scan-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/security-scan-job -n namespace-1
"Listen on port 8081 locally, forwarding to 5000 in the pod",kubectl port-forward pod/cdn-service-pod 8081:5000
"Listen on port 8080 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8080:8088"
Create a new ClusterIP service named backend-service-clusterip,kubectl create service clusterip backend-service-clusterip --tcp=9092:9091
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-secrets deployment/analytics-platform-deployment
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=cluster-alpha
Return snapshot logs from container mydeployment-1 of a deployment named web-app-pod,kubectl logs deployment/mydeployment -c web-app-pod-1
Update pod 'payment' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods payment description-
Remove from node 'edge-node-10' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes edge-node-10 datacenter:NoExecute-
Add a taint with key 'datacenter' on nodes having label release=beta,kubectl taint node -l release=beta  datacenter=dev-node-4:PreferNoSchedule
Update a cluster role binding for vault,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:vault
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=9000 --target-port=808300
"Delete pods and services with same names ""media-stream"" and ""auth""","kubectl delete pod,service media-stream auth"
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/env-vars deployment/web-app-deployment
"Auto scale a deployment ""media-stream"", with the number of pods between 3 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment media-stream --min=3 --max=11
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=8081 --target-port=808900
Add a taint with key 'datacenter' on nodes having label role=database,kubectl taint node -l role=database  datacenter=dev-node-4:PreferNoSchedule
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/analytics-pod
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node storage-node-13 -p $'spec:\n rules:\n- http:\n    paths:\n    - path: /\n      backend:\n        service:\n          name: new-service'
Get output from time-machine from pod chat-app-pod,kubectl attach chat-app-pod -c time-machine
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod 8088:5432
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/ui-config deployment/mydeployment
Add a taint with key 'datacenter' on nodes having label service=auth,kubectl taint node -l service=auth  datacenter=testing-node-11:PreferNoSchedule
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/log-aggregator-pod 3000:8000
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/log-rotation-job -n cert-manager
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 3000 3000
Roll back to daemonset revision 5,kubectl rollout undo daemonset/my-deployment --to-revision=5
Create a deployment named registry that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 8888,kubectl create deployment registry --image=docker.elastic.co/elasticsearch/elasticsearch --port=8888
Get output from running the 'geth attach' command in mycontainer from pod proxy-service-pod,kubectl exec proxy-service-pod -c mycontainer -- geth attach
"Listen on a random port locally, forwarding to 6379 in the pod",kubectl port-forward pod/security-service-pod :6379
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.admin-context.cluster moon-cluster
"If the deployment named backend-service-replicaset's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/backend-service-replicaset
Import environment from a secret,kubectl set env --from=secret/api-key-secret deployment/order-processing-deployment
"Delete pods and services with same names ""gateway"" and ""cdn""","kubectl delete pod,service gateway cdn"
"Listen on port 9090 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 9090:5000
Create a deployment named grafana that runs the postgres image and expose port 9090,kubectl create deployment grafana --image=postgres --port=9090
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/gateway-service"
Return snapshot logs from pod proxy-server-pod with multi containers,kubectl logs proxy-server-pod --all-containers=true
Apply resources from a directory containing kustomization.yaml - e.g. options/kustomization.yaml,kubectl apply -k options/
Get output from running the 'ash' command in astro-container from pod analytics-pod,kubectl exec analytics-pod -c astro-container -- ash
"Get output from running 'jenkins-plugin-cli' command from the first pod of the service analytics-service, using the first container by default",kubectl exec svc/analytics-service -- jenkins-plugin-cli
Get output from astro-container from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c astro-container
Get output from nano-bot from pod security-service-pod,kubectl attach security-service-pod -c nano-bot
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.cluster-2-context.cluster on-prem-cluster
Update pod 'proxy' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy tier-
Start a amazonlinux pod and let the container expose port 8083,kubectl run hazelcast --image=amazonlinux --port=8083
Create a new secret named tls-certificate-secret from an env file,kubectl create secret generic tls-certificate-secret --from-env-file=path/to/options.env
"Listen on port 8000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/e-commerce-pod 8000:9090
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/global-config deployment/order-processing-deployment
Create a job with a command,kubectl create job monitoring-job --image=ruby -- gem --version
Roll back to the previous deployment with dry-run,kubectl rollout undo --dry-run=server deployment/development
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8000 5432
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 6379,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=6379
Return snapshot of previous terminated time-machine container logs from pod chat-app-pod,kubectl logs -p -c time-machine chat-app-pod
Rename the context 'staging-context' to 'new-context' in your kubeconfig file,kubectl config rename-context staging-context new-context
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""custom-deployments"" API group",kubectl get deployments.beta-1.0.custom-deployments -o yaml
Return snapshot logs from pod database-pod with multi containers,kubectl logs database-pod --all-containers=true
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/frontend-pod 3000 3000
Create a new LoadBalancer service named media-stream-lb,kubectl create service loadbalancer media-stream-lb --tcp=3306:8888
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/settings/file2.txt
"Listen on port 5000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/backend-pod 5000:3000
Create a deployment named grafana that runs the mcr.microsoft.com/dotnet/core/runtime image and expose port 8084,kubectl create deployment grafana --image=mcr.microsoft.com/dotnet/core/runtime --port=8084
Create a deployment named loadbalancer that runs the confluentinc/cp-kafka image and expose port 7000,kubectl create deployment loadbalancer --image=confluentinc/cp-kafka --port=7000
Get output from running the 'pg_dump --version' command in cosmic-container from pod e-commerce-pod,kubectl exec e-commerce-pod -c cosmic-container -- pg_dump --version
"Listen on port 8081 locally, forwarding to 3000 in the pod",kubectl port-forward pod/api-service-pod 8081:3000
Set deployment cache-cluster-deployment's service account to vault,kubectl set serviceaccount deployment cache-cluster-deployment vault
Create a new ExternalName service named external-git-service,kubectl create service externalname external-git-service --external-name education-edu.edu
"Create a role named ""reader"" with ResourceName specified",kubectl create role reader --verb=update --resource=pods --resource-name=file-processing --resource-name=machine-learning
Update pod 'analytics' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods analytics app-
"Create a service for a replicated ubuntu, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ubuntu --port=8084 --target-port=909000
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""app-service"" entry",kubectl config set-credentials app-service --auth-provider=oidc --auth-provider-arg=client-secret-
"Listen on port 8888 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8888:9090"
"Update pod 'gateway' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway team='frontend team'
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 8000 6379
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/database-pod
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/ui-config deployment/mydeployment
Create a new secret named git-credentials-secret with keys for each file in folder bar,kubectl create secret generic git-credentials-secret --from-file=path/to/properties
Create a copy of chat-app-pod adding a debug container and changing container images,"kubectl debug chat-app-pod -it --copy-to=debug-image-1 --image=debian --set-image=mailer=mailer:latest,api=api:v2"
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.testing-context.cluster dev-cluster
Embed certificate authority data for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
Create a new secret named jwt-secret from an env file,kubectl create secret generic jwt-secret --from-env-file=path/to/options.env
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/api-service-pod
Copy /tmp/foo_dir from a remote pod to /etc/kubernetes locally,kubectl cp argocd/admin-dashboard-pod-16:/tmp/foo_dir /etc/kubernetes
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-name-config deployment/scheduler-app-deployment
Embed certificate authority data for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --embed-certs --certificate-authority=~/.kube/cloud-cluster/kubernetes.ca.crt
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8888 5000
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""experimental-apps"" API group",kubectl get deployments.rc-1.1.0.experimental-apps -o yaml
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/cache-cluster-deployment -c analytics-pod-1
"Listen on port 9090 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 9090:6379
Get output from running the 'psql' command in stardust-shuttle from pod cdn-service-pod,kubectl exec cdn-service-pod -c stardust-shuttle -- psql
Add a taint with key 'zone' on nodes having label team=devops,kubectl taint node -l team=devops  zone=dev-node-4:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/env-vars deployment/analytics-platform-deployment
Create a new secret named password-secret from an env file,kubectl create secret generic password-secret --from-env-file=path/to/configs.env
Begin streaming the logs of the rocket-ranger container in pod email-service-pod,kubectl logs -f -c rocket-ranger email-service-pod
"Listen on port 8081 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8081:3000
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/cache-warming-job -n namespace-1
Return snapshot of previous terminated time-machine container logs from pod payment-gateway-pod,kubectl logs -p -c time-machine payment-gateway-pod
Add a taint with key 'zone' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  zone=backup-node-14:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/app-settings deployment/order-processing-deployment
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.cluster-2-context.cluster kube-cluster-2
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/api-config deployment/log-aggregator-deployment
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=conf=/path/to/settings/file1.txt --from-file=data=/path/to/configs/file2.txt
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-config-prod deployment/gateway-deployment
"Delete pods and services with same names ""email"" and ""security""","kubectl delete pod,service email security"
Get output from running the 'node' command in cyber-sleuth from pod vpn-service-pod,kubectl exec vpn-service-pod -c cyber-sleuth -- node
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller log-aggregator-rc
"If the deployment named webapp-replicaset's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/webapp-replicaset
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/cdn-service-pod 8081:8080
Start a golang pod and let the container expose port 6379,kubectl run hazelcast --image=golang --port=6379
"Listen on port 8888 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8888:3000
"Delete pods and services with same names ""log-aggregator"" and ""payment""","kubectl delete pod,service log-aggregator payment"
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/proxy-server-pod
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.local-context.cluster web-cluster
Begin streaming the logs of the cosmic-container container in pod gateway-pod,kubectl logs -f -c cosmic-container gateway-pod
"Listen on port 5000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5000:8081
Create a new config map named db-config from the key=value pairs in the file,kubectl create configmap db-config --from-file=path/to/configurations
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=cluster-beta
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod auth-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach auth-service-pod -c warp-drive -i -t
"Update pod 'security' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods security owner='alice-smith'
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/analytics-platform-deployment -c log-aggregator-pod-1
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""api-v1"" API group",kubectl get deployments.v1.0.0.api-v1 -o yaml
Start a centos pod and let the container expose port 8082,kubectl run hazelcast --image=centos --port=8082
"Listen on port 6379 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 6379:9090
"Update pod 'security' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security team='frontend team'
Create a copy of gateway-pod adding a debug container and changing container images,"kubectl debug gateway-pod -it --copy-to=dgb-img --image=debian --set-image=logger=logging-app:debug,mailer=mailer:latest"
Begin streaming the logs of the mycontainer container in pod auth-service-pod,kubectl logs -f -c mycontainer auth-service-pod
Delete the star-cluster cluster,kubectl config delete-cluster star-cluster
Return snapshot of previous terminated warp-drive container logs from pod database-pod,kubectl logs -p -c warp-drive database-pod
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.app-2-context.cluster on-prem-cluster
"Set a deployments ruby container cpu limits to ""200m"" and memory to ""4Gi""","kubectl set resources deployment ruby -c=nginx --limits=cpu=200m,memory=4Gi"
"Delete pods and services with same names ""frontend"" and ""api""","kubectl delete pod,service frontend api"
Describe all pods,kubectl describe pods
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/log-aggregator-pod
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config-prod deployment/notification-handler-deployment
"Delete pods and services with same names ""backend"" and ""log-aggregator""","kubectl delete pod,service backend log-aggregator"
"Listen on a random port locally, forwarding to 8000 in the pod",kubectl port-forward pod/mypod :8000
Import environment from a secret,kubectl set env --from=secret/api-secret-key deployment/cache-cluster-deployment
Update pod 'auth' with the label 'env' and the value 'development',kubectl label pods auth env=development
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/analytics-platform-deployment -c e-commerce-pod-1
Return snapshot logs from container search-engine-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/search-engine-deployment -c frontend-pod-1
Import environment from a config map with a prefix,kubectl set env --from=configmap/kube-system-config --prefix=MYSQL_ deployment/user-management-deployment
"Update pod 'chat-app' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods chat-app compliance-level='PCI-DSS'
Add to node 'node-1' a taint with key 'app' and no value,kubectl taint nodes node-1 app:NoSchedule
"Embed client certificate data in the ""app-service"" entry",kubectl config set-credentials app-service --client-certificate=~/.kube/admin.crt --embed-certs=true
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=cluster-gamma
Create a job,kubectl create job cleanup --image=busybox
Update image of all containers of daemonset namespace- to 'mysql:5.7.35',kubectl set image daemonset namespace-3 *=mysql:5.7.35
"Listen on port 8000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8000:5432
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=5001 --target-port=808900
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/log-aggregator-pod 6379:8000
Create a new secret named password-secret from an env file,kubectl create secret generic password-secret --from-env-file=path/to/parameters.env
Edit the data in params.json in JSON then create the resource using the edited data,kubectl create -f params.json --edit -o json
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.team-beta-context.cluster star-cluster
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.client-1-context.cluster prod-cluster
Update image of all containers of daemonset test to 'mysql:5.7.35',kubectl set image daemonset test *=mysql:5.7.35
"Update pod 'cdn' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods cdn team='frontend-team'
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 8000 6379
Create a new secret named database-secret from an env file,kubectl create secret generic database-secret --from-env-file=path/to/properties.env
Update image of all containers of daemonset namespace-1 to 'php:7.4.22',kubectl set image daemonset namespace-1 *=php:7.4.22
"Set a deployments golang container cpu limits to ""50m"" and memory to ""4Gi""","kubectl set resources deployment golang -c=nginx --limits=cpu=50m,memory=4Gi"
"Listen on port 8080 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8080:8888"
Add to node 'node-1' a taint with key 'cpu-type' and no value,kubectl taint nodes node-1 cpu-type:NoSchedule
"Get output from running the 'dotnet' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- dotnet
"Listen on port 8088 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8088:8088"
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json backup-strategy='daily backups'
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/web-app-pod 6379 3000
"Check to see if I can get the job named ""cleanup-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/cleanup-job -n monitoring
"Get output from running the 'mongod' command from pod mypod, using the first container by default",kubectl exec mypod -- mongod
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/api-config deployment/database-deployment
Add to node 'backup-node-14' a taint with key 'zone' and no value,kubectl taint nodes backup-node-14 zone:NoSchedule
Import environment from a config map with a prefix,kubectl set env --from=configmap/api-config --prefix=MYSQL_ deployment/mydeployment
"Listen on port 8088 locally, forwarding to 5000 in the pod",kubectl port-forward pod/web-app-pod 8088:5000
"Auto scale a deployment ""cdn"", with the number of pods between 4 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment cdn --min=4 --max=8
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 8888 8080
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.client-1-context.cluster cluster-beta
"Create a service for a replicated ubuntu, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ubuntu --port=8888 --target-port=800000
Start a nginx pod and let the container expose port 8081,kubectl run hazelcast --image=nginx --port=8081
Return snapshot logs from container load-balancer-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/load-balancer-deployment -c e-commerce-pod-1
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=cluster-alpha
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/queue-processing-job -n testing
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 3000 3000
Create a new secret named tls-certificate-secret with keys for each file in folder bar,kubectl create secret generic tls-certificate-secret --from-file=path/to/profiles
Delete the context for the client-1-context cluster,kubectl config delete-context client-1-context
Create a deployment named auth that runs the golang image and expose port 8089,kubectl create deployment auth --image=golang --port=8089
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.cloud-context.cluster web-cluster
"Update pod 'cdn' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn criticality=high
Get output from stardust-shuttle from pod vpn-service-pod,kubectl attach vpn-service-pod -c stardust-shuttle
Return snapshot logs from container proxy-service-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/proxy-service-deployment -c email-service-pod-1
Create a new ClusterIP service named log-service-clusterip,kubectl create service clusterip log-service-clusterip --tcp=27017:27017
Update image of all containers of daemonset namespace-2 to 'php:7.4.22',kubectl set image daemonset namespace-2 *=php:7.4.22
Show metrics for a given pod and its containers,kubectl top pod proxy-server-pod --containers
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8080 9090
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""prod-apps"" API group",kubectl get deployments.rc-1.1.0.prod-apps -o yaml
Update pod 'web' with the label 'role' and the value 'frontend',kubectl label pods web role=frontend
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=8084 --target-port=637900
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/web-app-pod 6379:8081
"Delete pods and services with same names ""database"" and ""proxy-server""","kubectl delete pod,service database proxy-server"
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir logging/ingress-controller-pod-8:/tmp/bar
Embed certificate authority data for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --embed-certs --certificate-authority=~/.kube/kube-cluster-2/kubernetes.ca.crt
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kube-proxy/admin-dashboard-pod-16::/tmp/foo /tmp/bar_dir
Create a copy of analytics-pod changing all container images to postgres,kubectl debug analytics-pod --copy-to=debug-image-memcached --set-image=*=postgres
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.client-2-context.cluster kube-cluster-1
Import environment from a secret,kubectl set env --from=secret/azure-storage-secret deployment/analytics-platform-deployment
View the details of daemonset revision 3,kubectl rollout history daemonset/namespace-1 --revision=3
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""mobile-apps"" API group",kubectl get deployments.legacy-1.0.0.mobile-apps -o yaml
Set the resource request and limits for all containers in ruby,"kubectl set resources deployment ruby --limits=cpu=200m,memory=512Mi --requests=cpu=50m,memory=4Gi"
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n staging
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/kube-system-config deployment/scheduler-app-deployment
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/settings/file2.txt
"Listen on port 6379 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 6379:9090
"Listen on port 8088 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8088:5432"
Set deployment cache-cluster-deployment's service account to flux,kubectl set serviceaccount deployment cache-cluster-deployment flux
"Update pod 'vpn' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods vpn owner='alice-smith'
Create a new secret named app-config-secret with keys for each file in folder bar,kubectl create secret generic app-config-secret --from-file=path/to/properties
"Create a cluster role binding for app-operator, sysadmin, and security-auditors using the default_role cluster role",kubectl create clusterrolebinding default_role --clusterrole=default_role --user=app-operator --user=sysadmin --group=security-auditors
View the details of daemonset revision 3,kubectl rollout history daemonset/app-v2 --revision=3
Delete resources from a directory containing kustomization.yaml - e.g. params/kustomization.yaml,kubectl delete -k params/
Add a taint with key 'cpu-type' on nodes having label team=devops,kubectl taint node -l team=devops  cpu-type=gpu-node-12:PreferNoSchedule
Update pod 'api' with the label 'component' and the value 'worker',kubectl label pods api component=worker
"Listen on port 8081 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8081:3000
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 3000 3000
"Listen on port 6379 locally, forwarding to 8080 in the pod",kubectl port-forward pod/log-aggregator-pod 6379:8080
Get output from running the 'irb' command in astro-container from pod proxy-server-pod,kubectl exec proxy-server-pod -c astro-container -- irb
"Listen on port 8888 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8888:8080"
Get output from running the 'wp' command in cyber-sleuth from pod security-service-pod,kubectl exec security-service-pod -c cyber-sleuth -- wp
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8888 5432
Set the resource request and limits for all containers in runtime,"kubectl set resources deployment runtime --limits=cpu=200m,memory=512Mi --requests=cpu=1,memory=4Gi"
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/cache-cluster-deployment -c log-aggregator-pod-1
Get output from running the 'pip --version' command in quantum-quark from pod proxy-server-pod,kubectl exec proxy-server-pod -c quantum-quark -- pip --version
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=9091 --target-port=900000
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=moon-cluster
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=kube-cluster-2
Return snapshot logs from pod monitoring-pod with multi containers,kubectl logs monitoring-pod --all-containers=true
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=cluster-alpha
"Update pod 'database' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database SLA='99.9% uptime'
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 6379 8080
"Listen on port 8088 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8088:5432"
"Get output from running the 'mysqld' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- mysqld
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=app-cluster
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""prod-apps"" API group",kubectl get deployments.hotfix-1.1.2.prod-apps -o json
Set deployment web-app-deployment's service account to prometheus,kubectl set serviceaccount deployment web-app-deployment prometheus
Add a taint with key 'hardware' on nodes having label team=devops,kubectl taint node -l team=devops  hardware=app-node-6:PreferNoSchedule
"Set a deployments mongo container cpu limits to ""2"" and memory to ""128Mi""","kubectl set resources deployment mongo -c=nginx --limits=cpu=2,memory=128Mi"
Get output from running the 'mongo' command in time-machine from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c time-machine -- mongo
"Update pod 'frontend' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend custom-label=my-custom-value
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp openfaas/security-scanner-pod-18::/tmp/foo /tmp/bar_dir
"Update pod 'gateway' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods gateway backup-strategy='daily-backups'
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""custom-apps"" API group",kubectl get deployments.feature-branch-2.3.0.custom-apps -o json
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.on-prem-context.cluster my-k8s-cluster
"Update pod 'analytics' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics git-repo='https://github.com/example/my-app'
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""extensions"" API group",kubectl get deployments.v2.1.0.extensions -o yaml
"Update pod 'frontend' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend security-scan-status=pass
"Listen on port 8081 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8081:8081
"Get output from running the 'gem --version' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- gem --version
Return snapshot of previous terminated nano-bot container logs from pod monitoring-pod,kubectl logs -p -c nano-bot monitoring-pod
"Set a deployments python container cpu limits to ""500m"" and memory to ""2Gi""","kubectl set resources deployment python -c=nginx --limits=cpu=500m,memory=2Gi"
Set deployment load-balancer-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment load-balancer-deployment gitlab-runner
"Delete pods and services with same names ""analytics"" and ""api""","kubectl delete pod,service analytics api"
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=dev-cluster
Get output from running the 'geth' command in mycontainer from pod monitoring-pod,kubectl exec monitoring-pod -c mycontainer -- geth
"Listen on port 8080 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8080:8080
Return snapshot of previous terminated time-machine container logs from pod cdn-service-pod,kubectl logs -p -c time-machine cdn-service-pod
"Get output from running 'go run hello.go' command from the first pod of the deployment cache-cluster-deployment, using the first container by default",kubectl exec deploy/cache-cluster-deployment -- go run hello.go
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json last-deployment=2023-03-15
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/chat-app-pod 3000:5000
"Check to see if I can get the job named ""backup-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/backup-job -n kube-ingress
"Listen on port 5432 locally, forwarding to 8080 in the pod",kubectl port-forward pod/analytics-pod 5432:8080
"Start a python pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=python --overrides='{ ""apiVersion"": ""beta-1.0"", ""spec"": { ... } }'"
"Listen on port 3000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 3000:8088"
"If the deployment named frontend-rs's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/frontend-rs
"If the deployment named bar's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/bar
Create a new LoadBalancer service named media-stream-lb,kubectl create service loadbalancer media-stream-lb --tcp=9091:8088
Remove from node 'backup-node-14' all the taints with key 'app',kubectl taint nodes backup-node-14 app-
Create a copy of e-commerce-pod changing all container images to confluentinc/cp-kafka,kubectl debug e-commerce-pod --copy-to=dgb-img --set-image=*=confluentinc/cp-kafka
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/payment-gateway-pod
"Delete pods and services with same names ""analytics"" and ""web""","kubectl delete pod,service analytics web"
Display only the most recent 31 lines of output in pod cdn-service-pod,kubectl logs --tail=31 cdn-service-pod
"Set a deployments kafka container cpu limits to ""100m"" and memory to ""64Mi""","kubectl set resources deployment kafka -c=nginx --limits=cpu=100m,memory=64Mi"
Create a new secret named my-secret with keys for each file in folder bar,kubectl create secret generic my-secret --from-file=path/to/configs
"Listen on a random port locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod :6379
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node web-node-8 -p $'data:\n key: new-value'
Update image of all containers of daemonset development to 'nginx:1.21.3',kubectl set image daemonset development *=nginx:1.21.3
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/media-stream-pod
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod email-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach email-service-pod -c cosmic-container -i -t
Add a taint with key 'app' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  app=app-node-6:PreferNoSchedule
"Listen on port 8888 locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod 8888:8088
"Get output from running the 'geth version' command from pod gateway-pod, using the first container by default",kubectl exec gateway-pod -- geth version
"Listen on port 3000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 3000:8000"
Create a new secret named ssl-key-secret from an env file,kubectl create secret generic ssl-key-secret --from-env-file=path/to/parameters.env
"Get output from running the 'jenkins --version' command from pod media-stream-pod, using the first container by default",kubectl exec media-stream-pod -- jenkins --version
Begin streaming the logs of the lunar-launcher container in pod auth-service-pod,kubectl logs -f -c lunar-launcher auth-service-pod
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/log-config deployment/email-server-deployment
"Delete pods and services with same names ""vpn"" and ""database""","kubectl delete pod,service vpn database"
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/proxy-server-pod :8081
Begin streaming the logs of the ruby container in pod analytics-pod,kubectl logs -f -c ruby analytics-pod
Create a job with a command,kubectl create job image-build-job --image=redis -- redis-server --version
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""legacy-apps"" API group",kubectl get deployments.alpha-2.0.legacy-apps -o json
"Update pod 'proxy' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy app-version=2.5.1
"Listen on port 8000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod 8000:8888
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 6379 5000
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=8088:27017
"Create a single ingress called 'web-ingress' that directs requests to site.com/input to svc # svc1:5432 with a tls secret ""my-cert""","kubectl create ingress web-ingress --rule=""site.com/input=svc1:5432,tls=my-cert"""
"Embed client certificate data in the ""dev-user"" entry",kubectl config set-credentials dev-user --client-certificate=~/.kube/admin.crt --embed-certs=true
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=on-prem-cluster
Create a new ExternalName service named external-metrics-service,kubectl create service externalname external-metrics-service --external-name blog-test.blog
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller analytics-rc
Create a new ExternalName service named external-database-service,kubectl create service externalname external-database-service --external-name travel-sample.travel
"Listen on port 8088 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8088:9090
Show metrics for the pods defined by label project=project-alpha,kubectl top pod -l project=project-alpha
"Create a service for a replicated centos using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs centos --port=9000 --target-port=500100
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node edge-node-10 -p $'data:\n key: new-value'
Add a taint with key 'cpu-type' on nodes having label role=database,kubectl taint node -l role=database  cpu-type=node-1:PreferNoSchedule
Get output from time-machine from pod cdn-service-pod,kubectl attach cdn-service-pod -c time-machine
"Create a cluster role named ""default_role"" with API Group specified","kubectl create clusterrole default_role --verb=list,create,connect --resource=jobs.batch"
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/backend-pod 8000 8888
"Update pod 'payment' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment deployment-script='https://example.com/deploy.sh'
Create a new LoadBalancer service named analytics-lb,kubectl create service loadbalancer analytics-lb --tcp=5000:9090
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/monitoring-config deployment/monitoring-stack-deployment
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8081 8080
Describe pods by label release=beta,kubectl describe po -l release=beta
Add a taint with key 'cpu-type' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  cpu-type=gpu-node-12:PreferNoSchedule
Create a copy of e-commerce-pod changing all container images to golang,kubectl debug e-commerce-pod --copy-to=debug-image-web --set-image=*=golang
"Listen on port 8888 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/web-service 8888:https
Get output from running the 'sleep 3600' command in mycontainer from pod security-service-pod,kubectl exec security-service-pod -c mycontainer -- sleep 3600
Create a new LoadBalancer service named log-aggregator-lb,kubectl create service loadbalancer log-aggregator-lb --tcp=8000:8010
"Start a php pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=php --overrides='{ ""apiVersion"": ""stable-2.0.0"", ""spec"": { ... } }'"
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/cdn-service-pod 3000:3000
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/configurations/file1.txt --from-file=data=/path/to/preferences/file2.txt
"Update pod 'database' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database backup-strategy='daily backups'
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.edge-context.cluster edge-cluster
List a single pod in YAML output format,kubectl get -o yaml pod auth-service-pod
Scale a replica set named 'web' to 5,kubectl scale --replicas=5 rs/web
Start a php pod and let the container expose port 8010,kubectl run hazelcast --image=php --port=8010
"Auto scale a deployment ""log-aggregator"", with the number of pods between 7 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment log-aggregator --min=7 --max=13
Create a new secret named azure-storage-secret from an env file,kubectl create secret generic azure-storage-secret --from-env-file=path/to/preferences.env
"Update pod 'payment' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods payment alert-email='alerts@example.com'
"Listen on port 9090 locally, forwarding to 6379 in the pod",kubectl port-forward pod/api-service-pod 9090:6379
Get output from running the 'mysql --version' command in astro-container from pod chat-app-pod,kubectl exec chat-app-pod -c astro-container -- mysql --version
Begin streaming the logs of the astro-container container in pod security-service-pod,kubectl logs -f -c astro-container security-service-pod
Set deployment log-aggregator-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment log-aggregator-deployment kube-controller-manager
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=80 --target-port=844300
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-analytics-service
Get output from time-machine from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c time-machine
Update pod 'foo' with the label 'tier' and the value 'database',kubectl label pods foo tier=database
Create a new namespace named kube-system,kubectl create namespace kube-system
Update deployment 'proxy-service-deployment' with a new environment variable,kubectl set env deployment/proxy-service-deployment REDIS_HOST=redis-server
"Listen on port 8080 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/database-service 8080:https
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=staging-cluster
Create a new ClusterIP service named analytics-service-clusterip,kubectl create service clusterip analytics-service-clusterip --tcp=5432:6379
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json monitoring-tool=Prometheus
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config-dev deployment/api-server-deployment
Update pod 'backend' only if the resource is unchanged from version 1,kubectl label pods backend status=unhealthy --resource-version=1
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.staging-context.cluster edge-cluster
"Listen on port 5000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/security-service-pod 5000:3000
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n kube-ingress
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 9090 9090
Create a new secret named cert-manager-secret from an env file,kubectl create secret generic cert-manager-secret --from-env-file=path/to/options.env
Create a new LoadBalancer service named api-service-lb,kubectl create service loadbalancer api-service-lb --tcp=8084:8088
"Create a role named ""custom_role"" that allows user to perform ""proxy"", ""get"" and ""update"" on pods",kubectl create role custom_role --verb=proxy --verb=get --verb=update --resource=pods
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8000 9090
"Auto scale a replication controller ""api"", with the number of pods between 1 and 3, target CPU utilization at 90%",kubectl autoscale rc api --max=3 --cpu-percent=90
"Auto scale a deployment ""chat-app"", with the number of pods between 3 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment chat-app --min=3 --max=10
"If the deployment named foo's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/foo
Create a deployment named prometheus that runs the postgres image and expose port 3000,kubectl create deployment prometheus --image=postgres --port=3000
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/ui-config deployment/scheduler-app-deployment
"Listen on port 3000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 3000:8888
Start a ubuntu pod,kubectl run nginx --image=ubuntu
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named database-pod,kubectl logs deployment/log-aggregator-deployment -c database-pod-1
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kube-public/task-processor-pod-17::/tmp/foo /tmp/bar
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.dev-context.cluster edge-cluster
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/payment-gateway-pod
Add a taint with key 'cpu-type' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  cpu-type=gpu-node-12:PreferNoSchedule
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8088 --target-port=543200
Create a new namespace named kube-node-lease,kubectl create namespace kube-node-lease
Begin streaming the logs of the warp-drive container in pod frontend-pod,kubectl logs -f -c warp-drive frontend-pod
Rename the context 'staging-context' to 'team-beta-context' in your kubeconfig file,kubectl config rename-context staging-context team-beta-context
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=8082:3306
"Start a nginx pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=nginx --overrides='{ ""apiVersion"": ""legacy-1.0.0"", ""spec"": { ... } }'"
Create a copy of gateway-pod changing all container images to mongo,kubectl debug gateway-pod --copy-to=dgb-img --set-image=*=mongo
"Listen on port 5432 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 5432:5000"
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod proxy-server-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
Get output from warp-drive from pod api-service-pod,kubectl attach api-service-pod -c warp-drive
"Create a cluster role named ""admin_role"" with ResourceName specified",kubectl create clusterrole admin_role --verb=update --resource=pods --resource-name=billing-service --resource-name=api-server
"Create a cluster role named ""foo"" with ResourceName specified",kubectl create clusterrole foo --verb=delete --resource=services --resource-name=report-generator --resource-name=backup-service
Get output from astro-container from pod monitoring-pod,kubectl attach monitoring-pod -c astro-container
Create a deployment named loadbalancer that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 8088,kubectl create deployment loadbalancer --image=docker.elastic.co/elasticsearch/elasticsearch --port=8088
Add a taint with key 'cpu-type' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  cpu-type=app-node-6:PreferNoSchedule
Create a deployment named registry that runs the wordpress image and expose port 9091,kubectl create deployment registry --image=wordpress --port=9091
"Listen on port 8888 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8888:8888"
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/global-config deployment/api-server-deployment
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/mypod 5000:8000
Diff file read from stdin,cat setup.json | kubectl diff -f -
"Listen on port 5432 locally, forwarding to 5432 in the pod",kubectl port-forward pod/proxy-server-pod 5432:5432
"Listen on port 8080 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8080:6379
Update pod 'database' with the label 'env' and the value 'development',kubectl label pods database env=development
Create a new secret named ssh-key-secret from an env file,kubectl create secret generic ssh-key-secret --from-env-file=path/to/settings.env
Remove from node 'monitoring-node-15' all the taints with key 'disktype',kubectl taint nodes monitoring-node-15 disktype-
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""alpha-apps"" API group",kubectl get deployments.v2.0.0.alpha-apps -o json
Return snapshot logs from first container of a job named security-scan-job,kubectl logs job/security-scan-job
Return snapshot of previous terminated code-explorer container logs from pod api-service-pod,kubectl logs -p -c code-explorer api-service-pod
List a single pod in YAML output format,kubectl get -o yaml pod e-commerce-pod
Update pod 'log-aggregator' with the label 'role' and the value 'backend',kubectl label pods log-aggregator role=backend
"Update pod 'vpn' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn security-scan-status=pass
Set deployment mydeployment's service account to elasticsearch,kubectl set serviceaccount deployment mydeployment elasticsearch
Create a cron job with a command,"kubectl create cronjob cron-task --image=nginx --schedule=""*/1 * * * *"" -- nginx -g ""daemon off;"""
"Listen on port 5000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 5000:5432
Create a job with a command,kubectl create job report-generation-job --image=python -- python --version
Scale a replica set named 'webapp-replicaset' to 1,kubectl scale --replicas=1 rs/webapp-replicaset
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/proxy-service"
"Check to see if I can get the job named ""backup-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/backup-job -n kube-node-lease
"Start a hazelcast pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=hazelcast/hazelcast --overrides='{ ""apiVersion"": ""v2.0.0"", ""spec"": { ... } }'"
"Check to see if I can get the job named ""cron-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/cron-job -n development
Create a job with a command,kubectl create job monitoring-job --image=mongo -- mongo --version
Update deployment 'api-server-deployment' with a new environment variable,kubectl set env deployment/api-server-deployment GOOGLE_API_KEY=your-google-api-key
Roll back to daemonset revision 5,kubectl rollout undo daemonset/staging --to-revision=5
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod proxy-server-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-server-pod -c cosmic-container -i -t
Show metrics for a given node,kubectl top node storage-node-13
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/logging-service"
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.dev-context.cluster kube-cluster-1
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json release-notes='https://example.com/release-notes/v2.5.1'
"Listen on port 8000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8000:6379
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp argocd/worker-pod-4:~/.config/kube :/tmp/bar
Create a copy of gateway-pod changing all container images to busybox,kubectl debug gateway-pod --copy-to=my-debugger --set-image=*=busybox
Create a copy of analytics-pod changing all container images to alpine,kubectl debug analytics-pod --copy-to=my-custom-dbg --set-image=*=alpine
Add a taint with key 'disktype' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  disktype=gpu-node-12:PreferNoSchedule
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=sun-cluster
Update pod 'proxy' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy role-
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.user-a-context.cluster cloud-cluster
Create a new secret named api-secret-key with key1=supersecret and key2=topsecret,kubectl create secret generic api-secret-key --from-literal=key1=supersecret --from-literal=key2=topsecret
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8888 9090
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""experimental-apps"" API group",kubectl get deployments.dev-2.2.0.experimental-apps -o yaml
Rename the context 'cluster-2-context' to 'user-a-context' in your kubeconfig file,kubectl config rename-context cluster-2-context user-a-context
"Listen on port 3000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/e-commerce-pod 3000:8088
Get output from time-machine from pod monitoring-pod,kubectl attach monitoring-pod -c time-machine
"Update pod 'backend' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend app-version=2.5.1
Create a copy of auth-service-pod adding a debug container and changing container images,"kubectl debug auth-service-pod -it --copy-to=debug-image-memcached --image=debian --set-image=logger=logging-app:debug,scheduler=my-scheduler:1.0"
"Create a service for a pod backend-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod backend-pod --port=7000 --name=frontend
Create a new secret named azure-storage-secret from an env file,kubectl create secret generic azure-storage-secret --from-env-file=path/to/data.env
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""external-apps"" API group",kubectl get deployments.hotfix-1.1.2.external-apps -o json
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.user-b-context.cluster kube-cluster-2
"Delete pods and services with same names ""payment"" and ""web""","kubectl delete pod,service payment web"
"Listen on port 8080 locally, forwarding to 8080 in the pod",kubectl port-forward pod/analytics-pod 8080:8080
Add a taint with key 'app' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  app=web-node-8:PreferNoSchedule
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/api-service-pod 5000 8888
"Listen on port 3000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod 3000:8080
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""robot-user"" entry",kubectl config set-credentials robot-user --auth-provider=oidc --auth-provider-arg=client-secret-
Describe a pod,kubectl describe pods/file-server-pod-14
Embed certificate authority data for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --embed-certs --certificate-authority=~/.kube/cluster-beta/kubernetes.ca.crt
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.app-1-context.cluster dev-cluster
Create a copy of frontend-pod adding a debug container and changing container images,"kubectl debug frontend-pod -it --copy-to=my-debugger --image=debian --set-image=worker=my-custom-worker:1.2.3,worker=my-custom-worker:1.2.3"
Begin streaming the logs of the nano-bot container in pod payment-gateway-pod,kubectl logs -f -c nano-bot payment-gateway-pod
Create a new LoadBalancer service named vpn-service-lb,kubectl create service loadbalancer vpn-service-lb --tcp=8181:5001
Update pod 'vpn' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods vpn description-
"If the deployment named api-service-rs's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/api-service-rs
"Get output from running the 'nginx' command from pod web-app-pod, using the first container by default",kubectl exec web-app-pod -- nginx
Create a new ClusterIP service named inventory-service-clusterip,kubectl create service clusterip inventory-service-clusterip --tcp=8888:3001
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/analytics-pod 8088:8081
Remove from node 'app-node-6' all the taints with key 'app',kubectl taint nodes app-node-6 app-
"Listen on port 5432 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 5432:8080"
Describe pods by label app-type=microservice,kubectl describe po -l app-type=microservice
Set deployment notification-handler-deployment's service account to argocd,kubectl set serviceaccount deployment notification-handler-deployment argocd
Create a new LoadBalancer service named media-stream-lb,kubectl create service loadbalancer media-stream-lb --tcp=8084:8089
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to /etc/kubernetes locally,kubectl cp rook-ceph/monitoring-agent-pod-6:/var/run/secrets/kubernetes.io/serviceaccount/ /etc/kubernetes
"Listen on port 6379 locally, forwarding to 8088 in the pod",kubectl port-forward pod/frontend-pod 6379:8088
"Listen on port 5000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5000:6379
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""custom-apps"" API group",kubectl get deployments.beta-1.0.custom-apps -o json
"Update pod 'auth' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods auth SLA='99.9% uptime'
"Update pod 'foo' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods foo app-version='2.5.1'
"Auto scale a deployment ""vpn"", with the number of pods between 7 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment vpn --min=7 --max=10
Create a new secret named ssh-key-secret from an env file,kubectl create secret generic ssh-key-secret --from-env-file=path/to/data.env
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir prometheus/message-broker-pod-15:/tmp/bar
"Listen on port 8888 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8888:8888
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/kube-system-config deployment/backend-microservice-deployment
Create a copy of chat-app-pod changing all container images to ethereum/client-go,kubectl debug chat-app-pod --copy-to=my-debugger --set-image=*=ethereum/client-go
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 3000 9090
Delete the context for the cloud-context cluster,kubectl config delete-context cloud-context
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=on-prem-cluster
"Listen on port 8888 locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod 8888:6379
Delete the prod-cluster cluster,kubectl config delete-cluster prod-cluster
"Update pod 'log-aggregator' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods log-aggregator last-deployment='2023-03-15'
Create a deployment named prometheus that runs the wordpress image and expose port 8010,kubectl create deployment prometheus --image=wordpress --port=8010
"Mark node ""node-1"" as unschedulable",kubectl cordon node-1
Start a wordpress pod and let the container expose port 6379,kubectl run hazelcast --image=wordpress --port=6379
Create a job with a command,kubectl create job data-migration-job --image=php --
"Update pod 'payment' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods payment custom-label='my-custom-value'
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""extensions"" API group",kubectl get deployments.legacy-1.0.0.extensions -o json
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod 6379:8000
Show metrics for a given pod and its containers,kubectl top pod monitoring-pod --containers
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-git-service
"Auto scale a replication controller ""gateway"", with the number of pods between 1 and 3, target CPU utilization at 20%",kubectl autoscale rc gateway --max=3 --cpu-percent=20
"Update pod 'analytics' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics owner='alice smith'
Return snapshot of previous terminated cosmic-container container logs from pod email-service-pod,kubectl logs -p -c cosmic-container email-service-pod
Create a new config map named app-settings from the key=value pairs in the file,kubectl create configmap app-settings --from-file=path/to/properties
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=cluster-alpha
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 9090 9090
"Get output from running the 'elasticsearch --version' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- elasticsearch --version
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 3000 8000
Add a taint with key 'app' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  app=storage-node-13:PreferNoSchedule
"Set a deployments golang container cpu limits to ""5"" and memory to ""4Gi""","kubectl set resources deployment golang -c=nginx --limits=cpu=5,memory=4Gi"
Remove from node 'testing-node-11' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes testing-node-11 hardware:NoExecute-
Begin streaming the logs of the cyber-sleuth container in pod frontend-pod,kubectl logs -f -c cyber-sleuth frontend-pod
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/proxy-server-pod
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json git-repo='https://github.com/example/my-app'
Create a new NodePort service named monitoring-nodeport,kubectl create service nodeport monitoring-nodeport --tcp=3306:8081
Set the resource request and limits for all containers in ubuntu,"kubectl set resources deployment ubuntu --limits=cpu=200m,memory=512Mi --requests=cpu=2,memory=4Gi"
"Start a docker.elastic.co/elasticsearch/elasticsearch pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=docker.elastic.co/elasticsearch/elasticsearch --overrides='{ ""apiVersion"": ""hotfix-1.1.2"", ""spec"": { ... } }'"
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/chat-app-pod
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/database-indexing-job -n kube-system
Update deployment 'monitoring-stack-deployment' with a new environment variable,kubectl set env deployment/monitoring-stack-deployment S3_BUCKET=my-s3-bucket
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""internal-apps"" API group",kubectl get deployments.v1.1.0.internal-apps -o yaml
Create a job with a command,kubectl create job indexing --image=ethereum/client-go -- geth attach
Get output from running the 'postgres' command in code-explorer from pod vpn-service-pod,kubectl exec vpn-service-pod -c code-explorer -- postgres
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/security-service-pod 6379:8888
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8181 --target-port=808400
Create a deployment named cache that runs the ethereum/client-go image,kubectl create deployment cache --image=ethereum/client-go
"Delete pods and services with same names ""email"" and ""analytics""","kubectl delete pod,service email analytics"
Set only the server field on the cluster-alpha cluster entry without touching other values,kubectl config set-cluster cluster-alpha --server=https://1.2.3.4
Create a deployment named loadbalancer that runs the php image and expose port 8083,kubectl create deployment loadbalancer --image=php --port=8083
Update pod 'foo' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods foo role-
Create an ingress with TLS enabled using a specific secret and pathType as Prefix,"kubectl create ingress ingsecret --class=default \
--rule=""testing.com/*=svc:9092,tls=secret1"""
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""third-party-apps"" API group",kubectl get deployments.v1.1.0.third-party-apps -o json
"If the deployment named bar's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/bar
"List a pod identified by type and name specified in ""options.yaml"" in YAML output format",kubectl get -f options.yaml -o yaml
Get output from running the 'wp' command in nebula-navigator from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c nebula-navigator -- wp
Update all containers in all replication controllers in the project to have ENV=prod,kubectl set env rc --all ENV=prod
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 9091,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=9091
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/analytics-pod 8081:8081
Remove from node 'k8s-node-1' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes k8s-node-1 special:NoSchedule-
"If the deployment named mysql's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/mysql
"If the deployment named bar's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/bar
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/analytics-pod 8080:6379
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 6379 8080
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/monitoring-config deployment/order-processing-deployment
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8088 8000
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 9090,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=9090
"Listen on port 5432 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5432:3000
Create a job with a command,kubectl create job log-collection --image=wordpress -- apache2ctl -D FOREGROUND
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.v2.0.0.sandbox-apps -o json
Create a job with a command,kubectl create job data-migration-job --image=wordpress -- mysql --version
"Update pod 'security' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security compliance-level=PCI-DSS
Create a cron job with a command,"kubectl create cronjob report-generation --image=confluentinc/cp-kafka --schedule=""*/1 * * * *"" -- kafka-server-start /etc/kafka/server.properties"
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/email-service"
Start a centos pod and let the container expose port 8080,kubectl run hazelcast --image=centos --port=8080
"Set a deployments ruby container cpu limits to ""500m"" and memory to ""64Mi""","kubectl set resources deployment ruby -c=nginx --limits=cpu=500m,memory=64Mi"
"Listen on port 9090 locally, forwarding to 9090 in the pod",kubectl port-forward pod/backend-pod 9090:9090
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/frontend-pod
Roll back to daemonset revision 7,kubectl rollout undo daemonset/namespace-2 --to-revision=7
"Auto scale a deployment ""vpn"", with the number of pods between 6 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment vpn --min=6 --max=10
"Listen on port 6379 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 6379:8088
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod proxy-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-service-pod -c rocket-ranger -i -t
"Listen on port 5432 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 5432:8000
Embed certificate authority data for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --embed-certs --certificate-authority=~/.kube/web-cluster/kubernetes.ca.crt
"Create a cluster role named ""foo"" with ResourceName specified",kubectl create clusterrole foo --verb=watch --resource=services --resource-name=app-worker-1 --resource-name=backup-service
Describe a node,kubectl describe nodes backup-node-18.backup-farm.net
Create a job with a command,"kubectl create job deployment-rollout-job --image=ubuntu -- docker run ubuntu echo ""Hello"
Return snapshot logs from pod media-stream-pod with only one container,kubectl logs media-stream-pod
"If the deployment named staging-app-rs's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/staging-app-rs
Create a job with a command,kubectl create job data-migration-job --image=golang -- go run hello.go
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""testing-apps"" API group",kubectl get deployments.stable-2.0.0.testing-apps -o json
Set deployment api-server-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment api-server-deployment gitlab-runner
Create a job with a command,kubectl create job monitoring-job --image=redis -- redis-server
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/kube-cluster-1/kubernetes.ca.crt
Create a copy of cdn-service-pod changing all container images to amazonlinux,kubectl debug cdn-service-pod --copy-to=debug-image-web --set-image=*=amazonlinux
Remove from node 'testing-node-11' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes testing-node-11 disktype:NoSchedule-
Set the client-key-data field in the operator user using --set-raw-bytes option,kubectl config set users.operator.client-key-data cert_data_here --set-raw-bytes=true
Remove from node 'testing-node-11' all the taints with key 'datacenter',kubectl taint nodes testing-node-11 datacenter-
Get output from quantum-quark from pod gateway-pod,kubectl attach gateway-pod -c quantum-quark
"If the deployment named db-migration-replicaset's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/db-migration-replicaset
"Listen on port 3000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 3000:8000
Remove from node 'web-node-8' all the taints with key 'hardware',kubectl taint nodes web-node-8 hardware-
"If the deployment named prod-app-rs's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/prod-app-rs
Create a new ClusterIP service named security-service-clusterip,kubectl create service clusterip security-service-clusterip --tcp=8181:8888
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.local-context.cluster dev-cluster
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp logging/file-server-pod-14:/tmp/foo_dir /tmp/bar_dir
Get output from nano-bot from pod media-stream-pod,kubectl attach media-stream-pod -c nano-bot
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=properties=/path/to/preferences/file1.txt --from-file=key1=/path/to/data/file2.txt
"Listen on port 8081 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8081:8080
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 5432 3000
Start a alpine pod and let the container expose port 8443,kubectl run hazelcast --image=alpine --port=8443
Update all deployments' and rc's nginx container's image to 'mongo:5.0.2',"kubectl set image deployments,rc mongo=mongo:5.0.2 --all"
Switch to raw terminal mode; sends stdin to 'bash' in nebula-navigator from pod log-aggregator-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach log-aggregator-pod -c nebula-navigator -i -t
"Create a cluster role binding for app-operator, sysadmin, and security-auditors using the custom_role cluster role",kubectl create clusterrolebinding custom_role --clusterrole=custom_role --user=app-operator --user=sysadmin --group=security-auditors
"Scale a resource identified by type and name specified in ""preferences.yaml"" to 3",kubectl scale --replicas=3 -f preferences.yaml
"Delete pods and services with same names ""security"" and ""chat-app""","kubectl delete pod,service security chat-app"
Create a new config map named app-config-dev from an env file,kubectl create configmap app-config-dev --from-env-file=path/to/profiles.env
Update image of all containers of daemonset staging to 'httpd:2.4.48',kubectl set image daemonset staging *=httpd:2.4.48
Create a new secret named payment-gateway-secret from an env file,kubectl create secret generic payment-gateway-secret --from-env-file=path/to/parameters.env
Set deployment payment-processor-deployment's service account to cert-manager,kubectl set serviceaccount deployment payment-processor-deployment cert-manager
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.dev-2.2.0.sandbox-apps -o json
"Listen on port 6379 locally, forwarding to 6379 in the pod",kubectl port-forward pod/e-commerce-pod 6379:6379
List the environment variables defined on a deployments 'order-processing-deployment',kubectl set env deployment/order-processing-deployment --list
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.cluster-2-context.cluster moon-cluster
"If the deployment named baz's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/baz
Get output from running the 'irb' command in lunar-launcher from pod e-commerce-pod,kubectl exec e-commerce-pod -c lunar-launcher -- irb
"Create a service for a replicated php, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc php --port=5000 --target-port=330600
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=9091 --target-port=808800
"Listen on port 8080 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8080:8000
"If the deployment named mysql's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/mysql
Add a taint with key 'special' on nodes having label app=web-app,kubectl taint node -l app=web-app  special=prod-node-5:PreferNoSchedule
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=sun-cluster
Start a centos pod and let the container expose port 5000,kubectl run hazelcast --image=centos --port=5000
Return snapshot logs from container proxy-service-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/proxy-service-deployment -c payment-gateway-pod-1
Add a taint with key 'environment' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  environment=prod-node-5:PreferNoSchedule
Display only the most recent 23 lines of output in pod backend-pod,kubectl logs --tail=23 backend-pod
Create a job with a command,kubectl create job log-processing-job --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/notification-sender-job -n cert-manager
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node edge-node-10 -p '{""stringData"":{""password"":""new-password""}'"
Set deployment load-balancer-deployment's service account to kube-dns,kubectl set serviceaccount deployment load-balancer-deployment kube-dns
Create a job with a command,kubectl create job indexing --image=redis -- redis-server --version
Display only the most recent 53 lines of output in pod auth-service-pod,kubectl logs --tail=53 auth-service-pod
"Listen on port 5432 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 5432:9090"
Add a taint with key 'hardware' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  hardware=gpu-node-12:PreferNoSchedule
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.client-2-context.cluster testing-cluster
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""experimental-apps"" API group",kubectl get deployments.v1.0.0.experimental-apps -o json
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""internal-apps"" API group",kubectl get deployments.legacy-1.0.0.internal-apps -o yaml
Begin streaming the logs of the code-explorer container in pod backend-pod,kubectl logs -f -c code-explorer backend-pod
Create a cron job with a command,"kubectl create cronjob data-processing --image=python --schedule=""*/1 * * * *"" -- python --version"
Embed certificate authority data for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
Resume an already paused deployment,kubectl rollout resume deployment/app-v2
Return snapshot of previous terminated nano-bot container logs from pod database-pod,kubectl logs -p -c nano-bot database-pod
Update deployment 'order-processing-deployment' with a new environment variable,kubectl set env deployment/order-processing-deployment JWT_SECRET=your-jwt-secret
Return snapshot logs from container authentication-service-deployment-1 of a deployment named mypod,kubectl logs deployment/authentication-service-deployment -c mypod-1
Edit the data in setup.json in JSON then create the resource using the edited data,kubectl create -f setup.json --edit -o json
Set deployment search-engine-deployment's service account to default,kubectl set serviceaccount deployment search-engine-deployment default
Update deployment 'frontend-deployment' with a new environment variable,kubectl set env deployment/frontend-deployment SECRET_KEY=your-secret-key
"Listen on port 9090 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 9090:9090
"If the deployment named bar's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/bar
Return snapshot of previous terminated cosmic-container container logs from pod auth-service-pod,kubectl logs -p -c cosmic-container auth-service-pod
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""my-apps"" API group",kubectl get deployments.v2.0.0.my-apps -o yaml
Copy :/tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp prometheus/worker-pod-4::/tmp/foo /etc/kubernetes
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json expiration-date='2024-12-31'
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod backend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach backend-pod -c astro-container -i -t
Create a job with a command,kubectl create job deployment-rollout-job --image=postgres -- pg_dump --version
Get output from running the 'gem --version' command in warp-drive from pod mypod,kubectl exec mypod -c warp-drive -- gem --version
Create a new NodePort service named media-stream-nodeport,kubectl create service nodeport media-stream-nodeport --tcp=9090:27017
"Start a nginx pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=nginx --overrides='{ ""apiVersion"": ""v1.0.0"", ""spec"": { ... } }'"
Create a new secret named git-credentials-secret from an env file,kubectl create secret generic git-credentials-secret --from-env-file=path/to/configs.env
Deny CSR 'csr-node-2',kubectl certificate deny csr-node-2
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/db-config deployment/user-management-deployment
"Create or update exec auth plugin environment variables for the ""cloud-user"" entry",kubectl config set-credentials cloud-user --exec-env=key1=val1 --exec-env=key2=val2
"Update pod 'proxy-server' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server app-version=2.5.1
Remove from node 'storage-node-13' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes storage-node-13 environment:NoSchedule-
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8888 8088
Get the documentation of a specific field of a resource,kubectl explain resource=pods.metadata.annotations
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=prod-cluster
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json team='frontend team'
"Get output from running 'mysqld' command from the first pod of the service payment-service, using the first container by default",kubectl exec svc/payment-service -- mysqld
Create a job with a command,kubectl create job scaling-job --image=alpine -- ash
"Auto scale a deployment ""cdn"", with the number of pods between 5 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment cdn --min=5 --max=10
Start a mongo pod and let the container expose port 5000,kubectl run hazelcast --image=mongo --port=5000
"Listen on port 8888 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8888:8080
Show metrics for a given pod and its containers,kubectl top pod proxy-service-pod --containers
Create a new secret named api-secret-key from an env file,kubectl create secret generic api-secret-key --from-env-file=path/to/preferences.env
"Listen on port 5432 locally, forwarding to 8888 in the pod",kubectl port-forward pod/analytics-pod 5432:8888
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.staging-context.cluster cluster-alpha
Copy :/tmp/foo local file to /tmp/bar_dir in a remote pod in a specific container,kubectl cp :/tmp/foo ingress-controller-pod-8:/tmp/bar_dir -c logging-agent
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod monitoring-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Create a deployment named registry that runs the php image and expose port 5432,kubectl create deployment registry --image=php --port=5432
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/app-secrets deployment/mydeployment
Return snapshot of previous terminated nano-bot container logs from pod payment-gateway-pod,kubectl logs -p -c nano-bot payment-gateway-pod
Create a cron job with a command,"kubectl create cronjob cron-task --image=node --schedule=""*/1 * * * *"" -- node"
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/db-service"
Display only the most recent 23 lines of output in pod auth-service-pod,kubectl logs --tail=23 auth-service-pod
"Delete pods and services with same names ""api"" and ""proxy""","kubectl delete pod,service api proxy"
Diff file read from stdin,cat params.json | kubectl diff -f -
Build some shared configuration directory,kubectl kustomize /etc/kube/config/testing
"Listen on port 9090 locally, forwarding to 8888 in the pod",kubectl port-forward pod/backend-pod 9090:8888
Add a taint with key 'workload' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  workload=testing-node-11:PreferNoSchedule
Create a cron job with a command,"kubectl create cronjob daily-report --image=jenkins --schedule=""*/1 * * * *"" -- jenkins-plugin-cli"
Copy :/tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp :/tmp/foo prometheus/front-end-pod-12:/tmp/bar
Create a new config map named namespace-config based on folder preferences,kubectl create configmap namespace-config --from-file=path/to/preferences
Return snapshot of previous terminated stardust-shuttle container logs from pod frontend-pod,kubectl logs -p -c stardust-shuttle frontend-pod
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=e2e
Update all containers in all replication controllers in the project to have ENV=prod,kubectl set env rc --all SECRET_KEY=your-secret-key
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/chat-app-pod
Create a new ExternalName service named external-email-service,kubectl create service externalname external-email-service --external-name sandbox-site.co
"Listen on port 6379 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 6379:8888
"Create a single ingress called 'public-service-ingress' that directs requests to testing.com/module to svc # svc1:3000 with a tls secret ""my-cert""","kubectl create ingress public-service-ingress --rule=""testing.com/module=svc1:3000,tls=my-cert"""
Add a taint with key 'app' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  app=backup-node-14:PreferNoSchedule
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/notification-sender-job -n kube-dns
Create a new ExternalName service named external-cloud-storage-service,kubectl create service externalname external-cloud-storage-service --external-name museum-example.museum
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=moon-cluster
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/ui-config deployment/search-engine-deployment
"Get output from running 'geth' command from the first pod of the deployment gateway-deployment, using the first container by default",kubectl exec deploy/gateway-deployment -- geth
"Create a single ingress called 'app1-ingress' that directs requests to site.com/module to svc # svc1:9000 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""site.com/module=svc1:9000,tls=my-cert"""
"Create a single ingress called 'public-ingress' that directs requests to site.com/input to svc # svc1:5432 with a tls secret ""my-cert""","kubectl create ingress public-ingress --rule=""site.com/input=svc1:5432,tls=my-cert"""
"Delete pods and services with same names ""backend"" and ""analytics""","kubectl delete pod,service backend analytics"
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/backend-pod 6379 8081
Create a new ExternalName service named external-monitoring-service,kubectl create service externalname external-monitoring-service --external-name practice-online.site
Create a deployment named sonarqube that runs the hazelcast image and expose port 9092,kubectl create deployment sonarqube --image=hazelcast/hazelcast --port=9092
Copy /tmp/foo_dir local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo_dir metallb-system/ingress-controller-pod-8:/etc/kubernetes
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.prod-context.cluster staging-cluster
"Create a job from a cron job named ""daily-report""",kubectl create job test-job --from=cronjob/daily-report
"Delete pods and services with same names ""chat-app"" and ""payment""","kubectl delete pod,service chat-app payment"
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/log-aggregator-deployment -c payment-gateway-pod-1
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/log-aggregator-pod
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/gateway-deployment
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/chat-app-pod 3000:3000
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/gateway-service 8088:https
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f node-settings.json -p '{""stringData"":{""password"":""new-password""}'"
"Listen on port 5432 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 5432:9090
Return snapshot of previous terminated stardust-shuttle container logs from pod e-commerce-pod,kubectl logs -p -c stardust-shuttle e-commerce-pod
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8081 9090
Update pod 'analytics' with the label 'unhealthy' and the value 'true',kubectl label pods analytics unhealthy=true
Add to node 'testing-node-11' a taint with key 'dedicated' and no value,kubectl taint nodes testing-node-11 dedicated:NoSchedule
Create a new ClusterIP service named log-service-clusterip,kubectl create service clusterip log-service-clusterip --tcp=9000:6379
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/gateway-pod
Describe pods by label region=eu-west-2,kubectl describe po -l region=eu-west-2
"Listen on port 3000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/e-commerce-pod 3000:9090
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=settings=/path/to/settings/file1.txt --from-file=key2=/path/to/data/file2.txt
"Mark node ""dev-node-4"" as schedulable",kubectl uncordon dev-node-4
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/backend-pod
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/vpn-service-pod
Update pod 'web' with the label 'role' and the value 'backend',kubectl label pods web role=backend
Import environment from a secret,kubectl set env --from=secret/password-secret deployment/api-server-deployment
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name tutorial-ai.ai
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c time-machine -i -t
Create a new secret named monitoring-credentials-secret with keys for each file in folder bar,kubectl create secret generic monitoring-credentials-secret --from-file=path/to/data
"Set a deployments redis container cpu limits to ""1"" and memory to ""256Mi""","kubectl set resources deployment redis -c=nginx --limits=cpu=1,memory=256Mi"
"Listen on port 9090 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 9090:3000
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8088 8081
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""third-party-apps"" API group",kubectl get deployments.v1.0.0.third-party-apps -o yaml
Add a taint with key 'dedicated' on nodes having label service=auth,kubectl taint node -l service=auth  dedicated=app-node-6:PreferNoSchedule
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=8000:8088
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
Update pod 'proxy-server' with the label 'role' and the value 'cache',kubectl label pods proxy-server role=cache
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 9090 8888
Check the rollout status of a daemonset,kubectl rollout status daemonset/app-v2
View the details of daemonset revision 7,kubectl rollout history daemonset/test --revision=7
Get output from the first pod of a replica set named mongo,kubectl attach rs/mongo
Show metrics for a given node,kubectl top node backup-node-14
Update pod 'log-aggregator' with the label 'tier' and the value 'frontend',kubectl label pods log-aggregator tier=frontend
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=settings=/path/to/properties/file1.txt --from-file=key2=/path/to/configs/file2.txt
Create a copy of backend-pod adding a debug container and changing container images,"kubectl debug backend-pod -it --copy-to=dgb-img --image=debian --set-image=database=mysql:5.7,database=mysql:5.7"
"Update pod 'backend' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods backend team='frontend-team'
Return snapshot of previous terminated cyber-sleuth container logs from pod monitoring-pod,kubectl logs -p -c cyber-sleuth monitoring-pod
Copy :/tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp kube-flannel/metrics-exporter-pod-10::/tmp/foo /etc/kubernetes
Create a copy of analytics-pod changing all container images to wordpress,kubectl debug analytics-pod --copy-to=debug-image-1 --set-image=*=wordpress
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""john.doe"" entry",kubectl config set-credentials john.doe --auth-provider=oidc --auth-provider-arg=client-secret-
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=edge-cluster
Remove from node 'worker-node-3' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes worker-node-3 datacenter:NoExecute-
"Delete pods and services with same names ""cdn"" and ""auth""","kubectl delete pod,service cdn auth"
Return snapshot logs from container authentication-service-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/authentication-service-deployment -c api-service-pod-1
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/jenkins
Switch to raw terminal mode; sends stdin to 'bash' in cyber-sleuth from pod proxy-server-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-server-pod -c cyber-sleuth -i -t
"Auto scale a deployment ""database"", with the number of pods between 6 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment database --min=6 --max=10
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named mypod,kubectl logs deployment/cache-cluster-deployment -c mypod-1
Delete pods and services with label instance=app-instance-1,"kubectl delete pods,services -l instance=app-instance-1"
"Listen on port 8000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8000:5432
Add a taint with key 'zone' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  zone=db-node-7:PreferNoSchedule
Create a new ExternalName service named external-email-service,kubectl create service externalname external-email-service --external-name travel-sample.travel
"Update pod 'foo' with the annotation 'description' and the value 'Web server for marketing site', overwriting any existing value",kubectl annotate --overwrite pods foo description='Web server for marketing site'
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/mypod 9090 6379
Return snapshot of previous terminated stardust-shuttle container logs from pod chat-app-pod,kubectl logs -p -c stardust-shuttle chat-app-pod
Return snapshot of previous terminated stardust-shuttle container logs from pod payment-gateway-pod,kubectl logs -p -c stardust-shuttle payment-gateway-pod
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/log-config deployment/mydeployment
Import environment from a secret,kubectl set env --from=secret/ssh-key-secret deployment/mydeployment
Get output from running the 'python --version' command in stardust-shuttle from pod email-service-pod,kubectl exec email-service-pod -c stardust-shuttle -- python --version
Return snapshot of previous terminated warp-drive container logs from pod security-service-pod,kubectl logs -p -c warp-drive security-service-pod
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 6379 5000
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=staging-cluster
Update pod 'media-stream' with the label 'release' and the value 'v2.0',kubectl label pods media-stream release=v2.0
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/kube-system-config deployment/log-aggregator-deployment
Set deployment frontend-deployment's service account to jenkins,kubectl set serviceaccount deployment frontend-deployment jenkins
Begin streaming the logs of the time-machine container in pod proxy-server-pod,kubectl logs -f -c time-machine proxy-server-pod
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.user-a-context.cluster star-cluster
Delete pods and services with label app-type=microservice,"kubectl delete pods,services -l app-type=microservice"
Return snapshot logs from container mydeployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/mydeployment -c proxy-service-pod-1
Create a new ExternalName service named external-metrics-service,kubectl create service externalname external-metrics-service --external-name governmental-demo.gov
"Create a role named ""bar"" with ResourceName specified",kubectl create role bar --verb=create --resource=pods --resource-name=file-storage --resource-name=image-processor
Create a new config map named app-config from an env file,kubectl create configmap app-config --from-env-file=path/to/parameters.env
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/analytics-pod 6379:8000
"Update pod 'proxy-server' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server backup-strategy='daily backups'
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 8000 5000
Create a job with a command,kubectl create job deployment-rollout-job --image=mongo -- mongo
"Update pod 'gateway' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods gateway status=unhealthy
"Get output from running the 'redis-cli' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- redis-cli
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json owner='alice smith'
Get output from running the 'node' command in nano-bot from pod frontend-pod,kubectl exec frontend-pod -c nano-bot -- node
"Delete pods and services with same names ""security"" and ""frontend""","kubectl delete pod,service security frontend"
"Update pod 'proxy' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods proxy custom-label='my-custom-value'
Add a taint with key 'cpu-type' on nodes having label release=beta,kubectl taint node -l release=beta  cpu-type=edge-node-10:PreferNoSchedule
"Scale a resource identified by type and name specified in ""options.yaml"" to 1",kubectl scale --replicas=1 -f options.yaml
"Listen on port 5000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/analytics-pod 5000:3000
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=prod-cluster
Rename the context 'on-prem-context' to 'service-account-context' in your kubeconfig file,kubectl config rename-context on-prem-context service-account-context
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/cdn-service-pod 8088:9090
Return snapshot logs from container email-server-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/email-server-deployment -c vpn-service-pod-1
"Auto scale a deployment ""gateway"", with the number of pods between 4 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=4 --max=13
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/analytics-pod 9090 3000
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""testing-apps"" API group",kubectl get deployments.legacy-1.0.0.testing-apps -o yaml
Return snapshot of previous terminated ruby container logs from pod security-service-pod,kubectl logs -p -c ruby security-service-pod
"Set a deployments ruby container cpu limits to ""10"" and memory to ""2Gi""","kubectl set resources deployment ruby -c=nginx --limits=cpu=10,memory=2Gi"
"Update pod 'proxy-server' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods proxy-server last-deployment='2023-03-15'
Create a copy of e-commerce-pod changing all container images to jenkins,kubectl debug e-commerce-pod --copy-to=dgb-img --set-image=*=jenkins
Return snapshot of previous terminated time-machine container logs from pod proxy-service-pod,kubectl logs -p -c time-machine proxy-service-pod
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/api-service-pod 5432:9090
Create a deployment named mattermost that runs the wordpress image and expose port 5001,kubectl create deployment mattermost --image=wordpress --port=5001
"Update pod 'monitoring' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring compliance-level=PCI-DSS
Get output from running the 'go version' command in astro-container from pod backend-pod,kubectl exec backend-pod -c astro-container -- go version
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod email-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach email-service-pod -c quantum-quark -i -t
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=8181 --target-port=844300
Get output from running the 'geth' command in nano-bot from pod chat-app-pod,kubectl exec chat-app-pod -c nano-bot -- geth
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.on-prem-context.cluster cluster-gamma
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 5432 6379
"Check to see if I can get the job named ""image-processing-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/image-processing-job -n development
Create a copy of backend-pod adding a debug container and attach to it,kubectl debug backend-pod -it --image=busybox --copy-to=my-debugger
Get output from rocket-ranger from pod gateway-pod,kubectl attach gateway-pod -c rocket-ranger
"Listen on port 5000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod 5000:8888
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/data-synchronization-job -n monitoring
"Set a deployments nginx container cpu limits to ""50m"" and memory to ""256Mi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=50m,memory=256Mi"
Edit the job 'backup-job' in JSON using the v1 API format,kubectl edit job.v1.batch/backup-job -o json
Update pod 'web' with the label 'env' and the value 'development',kubectl label pods web env=development
Start a confluentinc/cp-kafka pod and let the container expose port 8080,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8080
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/frontend-pod 8080:8088
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod frontend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach frontend-pod -c code-explorer -i -t
Add a taint with key 'datacenter' on nodes having label environment=production,kubectl taint node -l environment=production  datacenter=monitoring-node-15:PreferNoSchedule
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach gateway-pod -c cosmic-container -i -t
Create a cron job with a command,"kubectl create cronjob data-sync --image=alpine --schedule=""*/1 * * * *"" -- ash"
"If the deployment named payment-service-rs's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/payment-service-rs
Add a taint with key 'hardware' on nodes having label service=auth,kubectl taint node -l service=auth  hardware=dev-node-4:PreferNoSchedule
View the rollout history of a deployment,kubectl rollout history deployment/staging
"Update pod 'monitoring' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring release-notes='https://example.com/release-notes/v2.5.1'
"Listen on port 8000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8000:8081"
Create a new ExternalName service named external-messaging-service,kubectl create service externalname external-messaging-service --external-name test-site.org
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/frontend-pod 6379 8080
Replace a pod based on the JSON passed into stdin,cat conf.json | kubectl replace -f -
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/db-config deployment/scheduler-app-deployment
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/frontend-pod
Return snapshot logs from container web-app-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/web-app-deployment -c auth-service-pod-1
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 9090 9090
Start a confluentinc/cp-kafka pod and let the container expose port 8888,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8888
"Mark node ""web-node-8"" as schedulable",kubectl uncordon web-node-8
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/scheduler-app-deployment -c gateway-pod-1
Copy ~/.config/kube from a remote pod to /etc/kubernetes locally,kubectl cp kube-proxy/api-server-pod-3:~/.config/kube /etc/kubernetes
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/global-config deployment/authentication-service-deployment
Start a wordpress pod and let the container expose port 3001,kubectl run hazelcast --image=wordpress --port=3001
"Listen on port 5432 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5432:5432
Create a new NodePort service named log-aggregator-nodeport,kubectl create service nodeport log-aggregator-nodeport --tcp=9090:6379
Set some of the local shell environment into a deployment config on the server,env | grep RAILS_ | kubectl set env -e - deployment/order-processing-deployment
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/batch-processing-job -n kube-public
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.team-beta-context.cluster galaxy-cluster
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/mypod 8088:5432
"Listen on port 8888 locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod 8888:9090
Get output from running the 'yum install -y wget' command in astro-container from pod mypod,kubectl exec mypod -c astro-container -- yum install -y wget
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8000 5432
Set the user field on the admin-context context entry without touching other values,kubectl config set-context admin-context --user=cluster-admin
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.cloud-context.cluster star-cluster
"Create a single ingress called 'app-ingress' that directs requests to foo.com/module to svc # svc1:3001 with a tls secret ""my-cert""","kubectl create ingress app-ingress --rule=""foo.com/module=svc1:3001,tls=my-cert"""
"Update pod 'auth' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth team='frontend team'
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/scheduler-service"
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/frontend-pod
Create a job with a command,kubectl create job data-migration-job --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet --list-runtimes
"Listen on port 8888 locally, forwarding to 8088 in the pod",kubectl port-forward pod/proxy-server-pod 8888:8088
Get output from running the 'ash' command in code-explorer from pod frontend-pod,kubectl exec frontend-pod -c code-explorer -- ash
"Start a redis pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=redis --overrides='{ ""apiVersion"": ""v1.1.0"", ""spec"": { ... } }'"
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=dev-cluster
Start a ethereum/client-go pod and let the container expose port 8080,kubectl run hazelcast --image=ethereum/client-go --port=8080
Delete the prod-user user,kubectl config delete-user prod-user
Create a copy of vpn-service-pod changing all container images to ubuntu,kubectl debug vpn-service-pod --copy-to=debug-image-1 --set-image=*=ubuntu
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=star-cluster
"Update pod 'email' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email description='Web server for marketing site'
"Create a single ingress called 'app1-ingress' that directs requests to testing.com/example to svc # svc1:9000 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""testing.com/example=svc1:9000,tls=my-cert"""
Update pod 'analytics' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods analytics role-
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.cluster-1-context.cluster web-cluster
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.staging-context.cluster cloud-cluster
Get output from running the 'composer --version' command in warp-drive from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c warp-drive -- composer --version
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/monitoring-pod
"Get output from running 'yum install -y aws-cli' command from the first pod of the service database-service, using the first container by default",kubectl exec svc/database-service -- yum install -y aws-cli
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=testing-cluster
"Create a single ingress called 'rontend-ingress' that directs requests to site.com/module to svc # svc1:8088 with a tls secret ""my-cert""","kubectl create ingress rontend-ingress --rule=""site.com/module=svc1:8088,tls=my-cert"""
Create a new NodePort service named monitoring-nodeport,kubectl create service nodeport monitoring-nodeport --tcp=9091:9091
Start a wordpress pod and let the container expose port 8083,kubectl run hazelcast --image=wordpress --port=8083
Set deployment order-processing-deployment's service account to cert-manager,kubectl set serviceaccount deployment order-processing-deployment cert-manager
"Listen on port 8080 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/api-service 8080:https
Start a mcr.microsoft.com/dotnet/core/runtime pod,kubectl run nginx --image=mcr.microsoft.com/dotnet/core/runtime
"Listen on port 8000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8000:8088"
"Create a single ingress called 'app-loadbalancer-ingress' that directs requests to testing.com/bar to svc # svc1:3306 with a tls secret ""my-cert""","kubectl create ingress app-loadbalancer-ingress --rule=""testing.com/bar=svc1:3306,tls=my-cert"""
"Listen on port 9090 locally, forwarding to 5000 in the pod",kubectl port-forward pod/chat-app-pod 9090:5000
Create a new service account named kube-proxy,kubectl create serviceaccount kube-proxy
"Update pod 'proxy-server' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server last-deployment=2023-03-15
Update image of all containers of daemonset test to 'java:11.0.12',kubectl set image daemonset test *=java:11.0.12
"If the deployment named baz's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/baz
"Scale a resource identified by type and name specified in ""preferences.yaml"" to 7",kubectl scale --replicas=7 -f preferences.yaml
Set deployment payment-processor-deployment's service account to tekton,kubectl set serviceaccount deployment payment-processor-deployment tekton
Create a deployment named web that runs the mongo image and expose port 27017,kubectl create deployment web --image=mongo --port=27017
"Create a cluster role binding for jane.doe, bob.smith, and developers using the custom_role cluster role",kubectl create clusterrolebinding custom_role --clusterrole=custom_role --user=jane.doe --user=bob.smith --group=developers
Create a deployment named ingress that runs the mcr.microsoft.com/dotnet/core/runtime image and expose port 8081,kubectl create deployment ingress --image=mcr.microsoft.com/dotnet/core/runtime --port=8081
"Listen on port 5000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5000:6379
Return snapshot logs from container payment-processor-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/payment-processor-deployment -c web-app-pod-1
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/settings/file2.txt
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 5432 8088
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp prometheus/metrics-exporter-pod-10:/tmp/foo_dir :/tmp/bar
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8888 3000
Note: --prune is still in Alpha # Apply the configuration in manifest.yaml that matches label tier=frontend and delete all other resources that are not in the file and match label app=nginx,kubectl apply --prune -f manifest.yaml -l tier=frontend
"Listen on port 8081 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/payment-service 8081:https
"Listen on port 5000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/frontend-pod 5000:8080
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/cache-service"
Start a wordpress pod and let the container expose port 5000,kubectl run hazelcast --image=wordpress --port=5000
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/log-aggregator-deployment -c api-service-pod-1
Get output from running the 'ruby --version' command in astro-container from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c astro-container -- ruby --version
"Start a python pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=python --overrides='{ ""apiVersion"": ""custom-version"", ""spec"": { ... } }'"
Add a taint with key 'zone' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  zone=k8s-node-1:PreferNoSchedule
Return snapshot logs from first container of a job named batch-processing-job,kubectl logs job/batch-processing-job
Embed certificate authority data for the e2e cluster entry,kubectl config set-cluster e2e --embed-certs --certificate-authority=~/.kube/web-cluster/kubernetes.ca.crt
"Start a wordpress pod and set labels ""app=wordpress"" and ""env=prod"" in the container","kubectl run hazelcast --image=wordpress --labels=""app=wordpress,env=prod"""
"Update pod 'proxy' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods proxy security-scan-status='pass'
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod 8088:8000
Create a job with a command,kubectl create job deployment-rollout-job --image=mongo -- mongod
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.dev-context.cluster galaxy-cluster
Return snapshot logs from pod vpn-service-pod with multi containers,kubectl logs vpn-service-pod --all-containers=true
Create a new secret named docker-registry-secret from an env file,kubectl create secret generic docker-registry-secret --from-env-file=path/to/configurations.env
Get output from stardust-shuttle from pod frontend-pod,kubectl attach frontend-pod -c stardust-shuttle
"Listen on port 5432 locally, forwarding to 5000 in the pod",kubectl port-forward pod/chat-app-pod 5432:5000
Return snapshot logs from pod api-service-pod with only one container,kubectl logs api-service-pod
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/profiles/file2.txt
Add a taint with key 'hardware' on nodes having label myLabel,kubectl taint node -l myLabel  hardware=web-node-8:PreferNoSchedule
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""alpha-apps"" API group",kubectl get deployments.dev-2.2.0.alpha-apps -o json
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json scaling-policy=auto-horizontal-scaling
"Update pod 'database' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods database expiration-date='2024-12-31'
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/namespace-config deployment/cache-cluster-deployment
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod email-service-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Add a taint with key 'disktype' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  disktype=dev-node-4:PreferNoSchedule
Get output from running the 'nginx -t' command in nano-bot from pod media-stream-pod,kubectl exec media-stream-pod -c nano-bot -- nginx -t
Update image of all containers of daemonset namespace-1 to 'debian:11.0',kubectl set image daemonset namespace-1 *=debian:11.0
Create a job with a command,kubectl create job image-build-job --image=php -- php --version
"Listen on port 8000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8000:3000"
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.team-beta-context.cluster data-cluster
"Get output from running the 'node' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- node
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""experimental-apps"" API group",kubectl get deployments.v3.0.0.experimental-apps -o json
"Listen on port 8081 locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod 8081:5000
Get output from rocket-ranger from pod proxy-server-pod,kubectl attach proxy-server-pod -c rocket-ranger
"If the deployment named bar's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/bar
Copy ~/.config/kube from a remote pod to /tmp/bar locally,kubectl cp rook-ceph/worker-pod-4:~/.config/kube /tmp/bar
"Listen on port 5432 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5432:8000
Create a job with a command,kubectl create job deployment-rollout-job --image=node -- node --version
Create a job with a command,kubectl create job security-scan-job --image=confluentinc/cp-kafka -- kafka-topics --list
Start a ruby pod and let the container expose port 8181,kubectl run hazelcast --image=ruby --port=8181
"Create a service for a replicated ubuntu, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ubuntu --port=8088 --target-port=300000
Rename the context 'cluster-1-context' to 'app-1-context' in your kubeconfig file,kubectl config rename-context cluster-1-context app-1-context
Return snapshot logs from container gateway-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/gateway-deployment -c api-service-pod-1
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8081 8081
"Listen on port 9090 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 9090:8081
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=staging-cluster
Get output from astro-container from pod security-service-pod,kubectl attach security-service-pod -c astro-container
"Delete pods and services with same names ""analytics"" and ""payment""","kubectl delete pod,service analytics payment"
"If the deployment named staging-app-rs's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/staging-app-rs
"Delete pods and services with same names ""payment"" and ""database""","kubectl delete pod,service payment database"
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/api-service-pod
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.app-2-context.cluster edge-cluster
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.edge-context.cluster dev-cluster
"Create a service for a replicated nginx using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs nginx --port=8080 --target-port=500000
Add a taint with key 'workload' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  workload=k8s-node-1:PreferNoSchedule
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.client-1-context.cluster dev-cluster
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.service-account-context.cluster testing-cluster
"Update pod 'email' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email SLA='99.9% uptime'
"Auto scale a deployment ""foo"", with the number of pods between 1 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment foo --min=1 --max=13
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=kube-cluster-2
Set deployment user-management-deployment's service account to istio,kubectl set serviceaccount deployment user-management-deployment istio
Create a deployment named db that runs the mcr.microsoft.com/dotnet/core/runtime image with 3 replicas,kubectl create deployment db --image=mcr.microsoft.com/dotnet/core/runtime --replicas=3
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=galaxy-cluster
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""apps"" API group",kubectl get deployments.v1.1.0.apps -o json
Create a deployment named db that runs the mcr.microsoft.com/dotnet/core/runtime image with 6 replicas,kubectl create deployment db --image=mcr.microsoft.com/dotnet/core/runtime --replicas=6
Return snapshot logs from container database-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/database-deployment -c e-commerce-pod-1
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=cloud-cluster
Diff resources included in pod.json,kubectl diff -f pod.json
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/app-secrets deployment/log-aggregator-deployment
Create a job with a command,kubectl create job log-collection --image=redis -- redis-server
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/frontend-pod 6379:8000
"Delete pods and services with same names ""log-aggregator"" and ""security""","kubectl delete pod,service log-aggregator security"
"Update pod 'database' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling', overwriting any existing value",kubectl annotate --overwrite pods database scaling-policy='auto-horizontal-scaling'
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=sun-cluster
Create a new ExternalName service named external-file-storage-service,kubectl create service externalname external-file-storage-service --external-name governmental-demo.gov
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-secrets deployment/proxy-service-deployment
"If the deployment named web's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/web
Create a new secret named tls-certificate-secret with specified keys instead of names on disk,kubectl create secret generic tls-certificate-secret --from-file=ssh-privatekey=path/to/id_rsa --from-file=ssh-publickey=path/to/id_rsa.pub
"Start a golang pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=golang --overrides='{ ""apiVersion"": ""custom-version"", ""spec"": { ... } }'"
"Delete pods and services with same names ""monitoring"" and ""proxy-server""","kubectl delete pod,service monitoring proxy-server"
Create a new namespace named cert-manager,kubectl create namespace cert-manager
Get output from stardust-shuttle from pod media-stream-pod,kubectl attach media-stream-pod -c stardust-shuttle
Set deployment proxy-service-deployment's service account to my-service-account,kubectl set serviceaccount deployment proxy-service-deployment my-service-account
"Listen on a random port locally, forwarding to 8888 in the pod",kubectl port-forward pod/proxy-server-pod :8888
"Create a single ingress called 'app-loadbalancer-ingress' that directs requests to website.com/bar to svc # svc1:6379 with a tls secret ""my-cert""","kubectl create ingress app-loadbalancer-ingress --rule=""website.com/bar=svc1:6379,tls=my-cert"""
"Listen on port 6379 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 6379:5000
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=edge-cluster
"Auto scale a deployment ""proxy-server"", with the number of pods between 1 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy-server --min=1 --max=9
Add a taint with key 'dedicated' on nodes having label component=proxy,kubectl taint node -l component=proxy  dedicated=db-node-7:PreferNoSchedule
Update pod 'auth' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods auth tier-
View the details of daemonset revision 7,kubectl rollout history daemonset/app-v2 --revision=7
"Update pod 'media-stream' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods media-stream owner='alice-smith'
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=conf=/path/to/configurations/file1.txt --from-file=data=/path/to/configs/file2.txt
"Listen on port 6379 locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod 6379:9090
Create a job with a command,kubectl create job deployment-rollout-job --image=jenkins -- jenkins --version
Set the resource request and limits for all containers in golang,"kubectl set resources deployment golang --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=256Mi"
Begin streaming the logs of the nebula-navigator container in pod payment-gateway-pod,kubectl logs -f -c nebula-navigator payment-gateway-pod
"Listen on port 8081 locally, forwarding to 8000 in the pod",kubectl port-forward pod/frontend-pod 8081:8000
Copy /tmp/foo_dir from a remote pod to /etc/kubernetes locally,kubectl cp velero/front-end-pod-12:/tmp/foo_dir /etc/kubernetes
Add a taint with key 'workload' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  workload=prod-node-5:PreferNoSchedule
Begin streaming the logs of the nano-bot container in pod cdn-service-pod,kubectl logs -f -c nano-bot cdn-service-pod
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=3001 --target-port=700000
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""apps"" API group",kubectl get deployments.hotfix-1.1.2.apps -o json
Add to node 'node-2' a taint with key 'workload' and no value,kubectl taint nodes node-2 workload:NoSchedule
"Listen on port 6379 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 6379:9090
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 9090 5000
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=settings=/path/to/settings/file1.txt --from-file=key2=/path/to/parameters/file2.txt
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=3306 --target-port=888800
Return snapshot of previous terminated rocket-ranger container logs from pod analytics-pod,kubectl logs -p -c rocket-ranger analytics-pod
Update pod 'proxy-server' with the label 'role' and the value 'backend',kubectl label pods proxy-server role=backend
Add a taint with key 'zone' on nodes having label role=database,kubectl taint node -l role=database  zone=storage-node-13:PreferNoSchedule
"Listen on port 8888 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8888:8081"
"Update pod 'web' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web security-scan-status=pass
Begin streaming the logs of the lunar-launcher container in pod security-service-pod,kubectl logs -f -c lunar-launcher security-service-pod
Display only the most recent 31 lines of output in pod e-commerce-pod,kubectl logs --tail=31 e-commerce-pod
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/web-app-pod :5432
"If the deployment named backend-service-replicaset's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/backend-service-replicaset
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name dummy-website.io
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8888 8080
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/cache-warming-job -n cert-manager
"Get output from running the 'node' command from pod security-service-pod, using the first container by default",kubectl exec security-service-pod -- node
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/api-config deployment/mydeployment
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/backend-pod 6379 8080
Update pod 'analytics' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods analytics tier-
Create a new ExternalName service named external-email-service,kubectl create service externalname external-email-service --external-name bar.com
Remove from node 'dev-node-4' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes dev-node-4 cpu-type:NoSchedule-
"Listen on port 8000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8000:8888
Create a priority class named background-priority,"kubectl create priorityclass background-priority --value=1 --description=""Low priority, minimal impact"""
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/env-vars deployment/frontend-deployment
Create a copy of chat-app-pod changing all container images to golang,kubectl debug chat-app-pod --copy-to=debug-image-web --set-image=*=golang
"Listen on port 8080 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8080:8081"
Update deployment 'search-engine-deployment' with a new environment variable,kubectl set env deployment/search-engine-deployment QUEUE_NAME=task-queue
Create a deployment named loadbalancer that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 5000,kubectl create deployment loadbalancer --image=docker.elastic.co/elasticsearch/elasticsearch --port=5000
"Listen on port 5000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 5000:3000"
"Listen on port 5432 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5432:8888
"Listen on port 8088 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8088:8080
"Get output from running the 'go' command from pod proxy-server-pod, using the first container by default",kubectl exec proxy-server-pod -- go
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""web-apps"" API group",kubectl get deployments.v1.0.0.web-apps -o yaml
Create a copy of e-commerce-pod changing all container images to mongo,kubectl debug e-commerce-pod --copy-to=my-custom-dbg --set-image=*=mongo
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""apps"" API group",kubectl get deployments.v1.1.1.apps -o json
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json criticality=high
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8081 8081
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8000 8000
Watch the rollout status of a deployment,kubectl rollout status deployment/development
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json release-notes='https://example.com/release-notes/v2.5.1'
"Start a php pod and set labels ""app=php"" and ""env=prod"" in the container","kubectl run hazelcast --image=php --labels=""app=php,env=prod"""
Start a alpine pod and let the container expose port 9091,kubectl run hazelcast --image=alpine --port=9091
"Get output from running 'npm --version' command from the first pod of the service gateway-service, using the first container by default",kubectl exec svc/gateway-service -- npm --version
Remove from node 'dev-node-4' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes dev-node-4 workload:NoSchedule-
"Remove exec auth plugin environment variables for the ""deploy-bot"" entry",kubectl config set-credentials deploy-bot --exec-env=var-to-remove-
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/db-service"
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=3000 --target-port=801000
Embed certificate authority data for the e2e cluster entry,kubectl config set-cluster e2e --embed-certs --certificate-authority=~/.kube/moon-cluster/kubernetes.ca.crt
"Listen on port 9090 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 9090:3000"
Set deployment cache-cluster-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment cache-cluster-deployment gitlab-runner
"Update pod 'frontend' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods frontend owner='alice-smith'
Copy /tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp argocd/image-resizer-pod-20:/tmp/foo /etc/kubernetes
Create a deployment named logging that runs the postgres image and expose port 8082,kubectl create deployment logging --image=postgres --port=8082
Start a centos pod and let the container expose port 9090,kubectl run hazelcast --image=centos --port=9090
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=sun-cluster
Set deployment api-server-deployment's service account to flux,kubectl set serviceaccount deployment api-server-deployment flux
"Update node 'app-node-6' with a taint with key 'zone' and value 'us-west-1a' and effect 'PreferNoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes app-node-6 zone=us-west-1a:PreferNoSchedule
Update pod 'log-aggregator' with the label 'component' and the value 'worker',kubectl label pods log-aggregator component=worker
Start a hazelcast pod and let the container expose port 6379,kubectl run hazelcast --image=hazelcast/hazelcast --port=6379
Rename the context 'dev-context' to 'app-2-context' in your kubeconfig file,kubectl config rename-context dev-context app-2-context
Return snapshot of previous terminated nebula-navigator container logs from pod frontend-pod,kubectl logs -p -c nebula-navigator frontend-pod
Get output from running the 'nginx' command in nebula-navigator from pod gateway-pod,kubectl exec gateway-pod -c nebula-navigator -- nginx
"Check to see if I can get the job named ""data-migration-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/data-migration-job -n cert-manager
Get output from lunar-launcher from pod proxy-server-pod,kubectl attach proxy-server-pod -c lunar-launcher
Create a new secret named api-key-secret from an env file,kubectl create secret generic api-key-secret --from-env-file=path/to/options.env
Get output from astro-container from pod cdn-service-pod,kubectl attach cdn-service-pod -c astro-container
"Listen on port 6379 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 6379:8888
Set deployment log-aggregator-deployment's service account to flux,kubectl set serviceaccount deployment log-aggregator-deployment flux
Update deployment 'gateway-deployment' with a new environment variable,kubectl set env deployment/gateway-deployment JWT_SECRET=your-jwt-secret
"Create a service for a replication controller identified by type and name specified in ""centos-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f centos-controller.yaml --port=8888 --target-port=700000
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json compliance-level=PCI-DSS
"Update pod 'log-aggregator' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator git-repo='https://github.com/example/my-app'
Import environment from a secret,kubectl set env --from=secret/oauth-secret deployment/mydeployment
Update deployment 'mydeployment' with a new environment variable,kubectl set env deployment/mydeployment MONGO_URI=mongodb://localhost:27017/mydb
Remove from node 'web-node-8' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes web-node-8 datacenter:NoExecute-
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/global-config deployment/authentication-service-deployment
"Listen on port 3000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 3000:8080
Set deployment email-server-deployment's service account to prometheus,kubectl set serviceaccount deployment email-server-deployment prometheus
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir default/cache-pod-5:/tmp/bar
Create a job with a command,kubectl create job security-scan-job --image=alpine -- apk add curl
"Get output from running 'docker run -it ubuntu' command from the first pod of the service cache-service, using the first container by default",kubectl exec svc/cache-service -- docker run -it ubuntu
Create a cron job with a command,"kubectl create cronjob system-health-check --image=jenkins --schedule=""*/1 * * * *"" -- jenkins-plugin-cli"
"Get output from running the 'go run hello.go' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- go run hello.go
Set deployment user-management-deployment's service account to tekton,kubectl set serviceaccount deployment user-management-deployment tekton
"Update pod 'database' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database alert-email=alerts@example.com
Create a new secret named ssl-key-secret from an env file,kubectl create secret generic ssl-key-secret --from-env-file=path/to/configs.env
Remove from node 'web-node-8' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes web-node-8 app:PreferNoSchedule-
Set the resource request and limits for all containers in python,"kubectl set resources deployment python --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=2Gi"
List resource information in custom columns,"kubectl get pod log-aggregator-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Add to node 'db-node-7' a taint with key 'datacenter' and no value,kubectl taint nodes db-node-7 datacenter:NoSchedule
Start a node pod and let the container expose port 8084,kubectl run hazelcast --image=node --port=8084
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=properties=/path/to/preferences/file1.txt --from-file=key1=/path/to/configurations/file2.txt
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/scheduler-app-deployment -c email-service-pod-1
"Listen on port 5432 locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod 5432:5432
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/user-service 5432:https
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/frontend-service"
Get output from running the 'node' command in rocket-ranger from pod api-service-pod,kubectl exec api-service-pod -c rocket-ranger -- node
Create a job with a command,kubectl create job backup --image=node -- node
"Set a deployments kafka container cpu limits to ""10"" and memory to ""1Gi""","kubectl set resources deployment kafka -c=nginx --limits=cpu=10,memory=1Gi"
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8080 8088
Create a job with a command,kubectl create job audit-job --image=ruby -- gem --version
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/media-stream-pod
Copy :/tmp/foo local file to /etc/kubernetes in a remote pod in namespace,kubectl cp :/tmp/foo kube-public/payment-gateway-pod-19:/etc/kubernetes
Update a cluster role binding for spinnaker,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:spinnaker
"Listen on port 8081 locally, forwarding to 8088 in the pod",kubectl port-forward pod/web-app-pod 8081:8088
"Listen on port 5432 locally, forwarding to 8888 in the pod",kubectl port-forward pod/proxy-server-pod 5432:8888
Return snapshot logs from all containers in pods defined by label team=devops,kubectl logs -l team=devops --all-containers=true
Create a copy of analytics-pod adding a debug container and changing container images,"kubectl debug analytics-pod -it --copy-to=debug-image-api --image=debian --set-image=mailer=mailer:latest,api=api:v2"
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/backend-pod 8000:8088
Get output from running the 'jenkins-plugin-cli' command in astro-container from pod analytics-pod,kubectl exec analytics-pod -c astro-container -- jenkins-plugin-cli
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=7000 --target-port=500000
"Listen on port 6379 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 6379:3000"
"Update pod 'log-aggregator' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods log-aggregator custom-label='my-custom-value'
Create a new secret named ssh-key-secret with keys for each file in folder bar,kubectl create secret generic ssh-key-secret --from-file=path/to/settings
"Listen on port 5432 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5432:6379
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.testing-context.cluster galaxy-cluster
"Auto scale a deployment ""analytics"", with the number of pods between 4 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment analytics --min=4 --max=14
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/db-config deployment/api-server-deployment
"Delete pods and services with same names ""proxy-server"" and ""proxy-server""","kubectl delete pod,service proxy-server proxy-server"
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp prometheus/worker-pod-4:/tmp/foo :/tmp/bar
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl exec -n kube-dns backend-pod-13 -- tar cf - /tmp/foo | tar xf - -C :/tmp/bar
Create a new secret named ssh-key-secret with keys for each file in folder bar,kubectl create secret generic ssh-key-secret --from-file=path/to/configs
Return snapshot of previous terminated time-machine container logs from pod frontend-pod,kubectl logs -p -c time-machine frontend-pod
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/kube-system-config deployment/user-management-deployment
"Listen on port 8081 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8081:8888"
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/security-service-pod
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=on-prem-cluster
Update deployment 'web-app-deployment' with a new environment variable,kubectl set env deployment/web-app-deployment JWT_SECRET=your-jwt-secret
Describe one context in your kubeconfig file,kubectl config get-contexts on-prem-context
"Get output from running 'elasticsearch --version' command from the first pod of the service analytics-service, using the first container by default",kubectl exec svc/analytics-service -- elasticsearch --version
Create a copy of email-service-pod changing all container images to postgres,kubectl debug email-service-pod --copy-to=debug-image-app --set-image=*=postgres
Embed certificate authority data for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
Display only the most recent 31 lines of output in pod vpn-service-pod,kubectl logs --tail=31 vpn-service-pod
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/env-vars deployment/scheduler-app-deployment
Update pod 'chat-app' with the label 'component' and the value 'web',kubectl label pods chat-app component=web
"Update pod 'gateway' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods gateway app-version='2.5.1'
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-config-prod deployment/gateway-deployment
Update image of all containers of daemonset namespace-2 to 'nginx:1.21.3',kubectl set image daemonset namespace-2 *=nginx:1.21.3
Create a new secret named my-secret with keys for each file in folder bar,kubectl create secret generic my-secret --from-file=path/to/preferences
Create a new secret named database-secret from an env file,kubectl create secret generic database-secret --from-env-file=path/to/settings.env
"Delete pods and services with same names ""vpn"" and ""foo""","kubectl delete pod,service vpn foo"
Create a new secret named ssh-key-secret with key1=supersecret and key2=topsecret,kubectl create secret generic ssh-key-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
Get output from running the 'php --version' command in cosmic-container from pod auth-service-pod,kubectl exec auth-service-pod -c cosmic-container -- php --version
"Listen on port 3000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 3000:8081
"Listen on port 8888 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8888:8888
"Listen on port 5000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 5000:6379
"Set a deployments redis container cpu limits to ""100m"" and memory to ""128Mi""","kubectl set resources deployment redis -c=nginx --limits=cpu=100m,memory=128Mi"
"Listen on port 8081 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8081:5000"
Create a job with a command,kubectl create job report-generation-job --image=golang -- go
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/logging-service 9090:https
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-secrets --prefix=MYSQL_ deployment/user-management-deployment
Remove from node 'kube-master-9' all the taints with key 'special',kubectl taint nodes kube-master-9 special-
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/ui-config deployment/load-balancer-deployment
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 5432 5000
"Update pod 'email' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email alert-email=alerts@example.com
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/frontend-pod 3000 8081
Start a mysql pod and let the container expose port 8181,kubectl run hazelcast --image=mysql --port=8181
Create a deployment with a command,kubectl create deployment web --image=mysql -- mysqld
Update image of all containers of daemonset services to 'redis:6.2.5',kubectl set image daemonset services *=redis:6.2.5
Get output from running the 'elasticsearch' command in quantum-quark from pod web-app-pod,kubectl exec web-app-pod -c quantum-quark -- elasticsearch
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/cache-cluster-deployment CACHE_SIZE=64MB -o yaml
Show metrics for a given node,kubectl top node db-node-7
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/monitoring-config deployment/payment-processor-deployment
"Listen on port 6379 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 6379:8080
Describe pods by label tier=frontend,kubectl describe po -l tier=frontend
Update a single-container pod's image version (tag) to v4,kubectl get pod e-commerce-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/app-secrets deployment/scheduler-app-deployment
"Run a proxy to the Kubernetes API server on port 8000, serving static content from ./local/www/",kubectl proxy --port=8000 --www=./local/www/
Create a new ExternalName service named external-analytics-service,kubectl create service externalname external-analytics-service --external-name demo-service.dev
Begin streaming the logs of the cosmic-container container in pod email-service-pod,kubectl logs -f -c cosmic-container email-service-pod
"Listen on port 9090 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 9090:6379
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/analytics-service"
Start a php pod and let the container expose port 8082,kubectl run hazelcast --image=php --port=8082
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/monitoring-service"
Edit the service named 'user-service',kubectl edit svc/user-service
Remove from node 'backup-node-14' all the taints with key 'special',kubectl taint nodes backup-node-14 special-
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-config-dev deployment/web-app-deployment
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""api-v1"" API group",kubectl get deployments.legacy-1.0.0.api-v1 -o yaml
Embed certificate authority data for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --embed-certs --certificate-authority=~/.kube/data-cluster/kubernetes.ca.crt
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""api-v1"" API group",kubectl get deployments.dev-2.2.0.api-v1 -o json
Return snapshot of previous terminated nebula-navigator container logs from pod email-service-pod,kubectl logs -p -c nebula-navigator email-service-pod
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=star-cluster
Build some shared configuration directory,kubectl kustomize /usr/share/kubernetes/config/testing
Get output from cosmic-container from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c cosmic-container
"Create a second service based on the above service, exposing the container port 8443 as port 443 with the name ""php-https""",kubectl expose service php --port=443 --target-port=3000 --name=nginx-https
Add a taint with key 'workload' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  workload=monitoring-node-15:PreferNoSchedule
Get output from running the 'redis-server' command in nano-bot from pod gateway-pod,kubectl exec gateway-pod -c nano-bot -- redis-server
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""legacy-apps"" API group",kubectl get deployments.dev-2.2.0.legacy-apps -o yaml
Create a job with a command,kubectl create job monitoring-job --image=python -- python
Add a taint with key 'app' on nodes having label app=web-app,kubectl taint node -l app=web-app  app=db-node-7:PreferNoSchedule
"Listen on port 6379 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 6379:8080"
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod proxy-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-service-pod -c lunar-launcher -i -t
Get output from running the 'nginx -t' command in time-machine from pod e-commerce-pod,kubectl exec e-commerce-pod -c time-machine -- nginx -t
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""my-apps"" API group",kubectl get deployments.alpha-2.0.my-apps -o json
Create a cron job with a command,"kubectl create cronjob data-processing --image=docker.elastic.co/elasticsearch/elasticsearch --schedule=""*/1 * * * *"" -- elasticsearch"
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/cache-warming-job -n kube-ingress
"Listen on port 3000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 3000:8081
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/security-service-pod 8088:8888
Start a golang pod and let the container expose port 5000,kubectl run hazelcast --image=golang --port=5000
"Listen on port 8088 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8088:8088"
"Listen on port 3000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 3000:5432
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/db-config deployment/web-app-deployment
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/backend-pod 8000 8088
Return snapshot logs from container database-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/database-deployment -c analytics-pod-1
Create a job with a command,kubectl create job image-build-job --image=jenkins -- jenkins-plugin-cli
Update pod 'monitoring' only if the resource is unchanged from version 1,kubectl label pods monitoring status=unhealthy --resource-version=1
Create a job with a command,kubectl create job report-generation-job --image=python -- pip --version
Create a new config map named global-config with key1=config1 and key2=config2,kubectl create configmap global-config --from-literal=properties=config1 --from-literal=key1=config2
"Listen on port 8000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8000:8081
Create a deployment named db that runs the mysql image,kubectl create deployment db --image=mysql
Get output from cyber-sleuth from pod frontend-pod,kubectl attach frontend-pod -c cyber-sleuth
Delete the cluster-beta cluster,kubectl config delete-cluster cluster-beta
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-settings deployment/mydeployment
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-config-prod deployment/log-aggregator-deployment
"Update pod 'chat-app' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app env=staging
"Listen on port 3000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/database-service 3000:https
Set deployment backend-microservice-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment backend-microservice-deployment kube-scheduler
Copy /tmp/foo local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo cert-manager/metrics-exporter-pod-10::/tmp/bar
Add to node 'kube-master-9' a taint with key 'environment' and no value,kubectl taint nodes kube-master-9 environment:NoSchedule
Create a deployment named logging that runs the jenkins image and expose port 8443,kubectl create deployment logging --image=jenkins --port=8443
Create a cron job with a command,"kubectl create cronjob data-processing --image=jenkins --schedule=""*/1 * * * *"" -- java -jar /usr/share/jenkins/jenkins.war"
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/api-config deployment/proxy-service-deployment
"Set basic auth for the ""admin"" entry",kubectl config set-credentials admin --username=admin --password=uXFGweU9l35qcif
Add a taint with key 'workload' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  workload=node-1:PreferNoSchedule
Create a copy of mypod changing all container images to python,kubectl debug mypod --copy-to=my-debugger --set-image=*=python
Update pod 'vpn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods vpn component-
"Create a role binding for developer3, k8s-admin, and qa-engineers using the bar cluster role",kubectl create rolebinding bar --clusterrole=bar --user=developer3 --user=k8s-admin --group=qa-engineers
Return only the phase value of the specified pod,kubectl get -o template pod/proxy-server-pod --template={{.status.phase}}
Create a copy of vpn-service-pod adding a debug container and changing container images,"kubectl debug vpn-service-pod -it --copy-to=debug-image-web --image=debian --set-image=api=api:v2,mailer=mailer:latest"
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""api-v2"" API group",kubectl get deployments.v2.0.0.api-v2 -o yaml
Add to node 'kube-master-9' a taint with key 'disktype' and no value,kubectl taint nodes kube-master-9 disktype:NoSchedule
Create a new ClusterIP service named backend-service-clusterip,kubectl create service clusterip backend-service-clusterip --tcp=8083:8088
Import environment from a secret,kubectl set env --from=secret/password-secret deployment/email-server-deployment
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp prometheus/load-balancer-pod-9:~/.config/kube /tmp/bar_dir
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/log-analysis-job -n monitoring
Create a new secret named password-secret from an env file,kubectl create secret generic password-secret --from-env-file=path/to/settings.env
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/data-synchronization-job -n testing
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/preferences/file2.txt
"Auto scale a deployment ""security"", with the number of pods between 2 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=2 --max=10
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8088 3000
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/analytics-pod 9090 6379
Add a taint with key 'dedicated' on nodes having label app=web-app,kubectl taint node -l app=web-app  dedicated=web-node-8:PreferNoSchedule
"Listen on port 8081 locally, forwarding to 9090 in the pod",kubectl port-forward pod/proxy-server-pod 8081:9090
Begin streaming the logs of the cyber-sleuth container in pod analytics-pod,kubectl logs -f -c cyber-sleuth analytics-pod
"Get output from running the 'bash' command from pod gateway-pod, using the first container by default",kubectl exec gateway-pod -- bash
Create a deployment named scheduler that runs the mysql image and expose port 3000,kubectl create deployment scheduler --image=mysql --port=3000
"Create a cluster role name ""reader"" with NonResourceURL specified","kubectl create clusterrole ""reader"" --verb=exec --non-resource-url=/debug/core"
Create a copy of analytics-pod changing all container images to mongo,kubectl debug analytics-pod --copy-to=debug-image-api --set-image=*=mongo
"Update pod 'analytics' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods analytics custom-label='my-custom-value'
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.prod-context.cluster prod-cluster
"Delete pods and services with same names ""media-stream"" and ""monitoring""","kubectl delete pod,service media-stream monitoring"
Create a job with a command,kubectl create job report-generation-job --image=node -- node
Set the resource request and limits for all containers in postgres,"kubectl set resources deployment postgres --limits=cpu=200m,memory=512Mi --requests=cpu=50m,memory=512Mi"
Get output from running the 'dotnet' command in astro-container from pod email-service-pod,kubectl exec email-service-pod -c astro-container -- dotnet
Update pod 'auth' only if the resource is unchanged from version 1,kubectl label pods auth status=unhealthy --resource-version=1
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/api-service 9090:https
Create a copy of payment-gateway-pod changing all container images to ruby,kubectl debug payment-gateway-pod --copy-to=my-custom-dbg --set-image=*=ruby
Return snapshot logs from container mydeployment-1 of a deployment named analytics-pod,kubectl logs deployment/mydeployment -c analytics-pod-1
Get output from running the 'postgres' command in cyber-sleuth from pod backend-pod,kubectl exec backend-pod -c cyber-sleuth -- postgres
Create a new secret named private-key-secret from an env file,kubectl create secret generic private-key-secret --from-env-file=path/to/settings.env
"Listen on port 8081 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8081:5432
Start a mongo pod and let the container expose port 6379,kubectl run hazelcast --image=mongo --port=6379
Create a new config map named app-name-config from an env file,kubectl create configmap app-name-config --from-env-file=path/to/configs.env
Create a new ExternalName service named external-analytics-service,kubectl create service externalname external-analytics-service --external-name bar.com
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.team-alpha-context.cluster prod-cluster
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/namespace-config deployment/search-engine-deployment
Show metrics for a given pod and its containers,kubectl top pod email-service-pod --containers
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/cdn-service-pod 8081:5432
Start a alpine pod and let the container expose port 9090,kubectl run hazelcast --image=alpine --port=9090
Create a job with a command,kubectl create job batch-processing --image=alpine -- ash
"Delete pods and services with same names ""web"" and ""backend""","kubectl delete pod,service web backend"
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8000 6379
Create a cron job with a command,"kubectl create cronjob report-generation --image=ethereum/client-go --schedule=""*/1 * * * *"" -- geth"
Get output from rocket-ranger from pod auth-service-pod,kubectl attach auth-service-pod -c rocket-ranger
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8888 8088
Execute set-last-applied against each configuration file in a directory,kubectl apply set-last-applied -f dir/
"Listen on port 3000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 3000:8080
Update pod 'log-aggregator' with the label 'role' and the value 'cache',kubectl label pods log-aggregator role=cache
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 5000 5432
"Listen on port 9090 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 9090:5000
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/kube-system-config deployment/frontend-deployment
"Listen on port 3000 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 3000:6379"
Set deployment notification-handler-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment notification-handler-deployment kube-controller-manager
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/user-management-deployment MONGO_URI=mongodb://localhost:27017/mydb -o yaml
"Delete pods and services with same names ""frontend"" and ""web""","kubectl delete pod,service frontend web"
"Update pod 'email' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email team='frontend team'
"List a pod identified by type and name specified in ""pod.yaml"" in YAML output format",kubectl get -f pod.yaml -o yaml
"Listen on port 8080 locally, forwarding to 5000 in the pod",kubectl port-forward pod/e-commerce-pod 8080:5000
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.user-b-context.cluster moon-cluster
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/payment-gateway-pod
"Listen on port 8081 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8081:8000"
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json deployment-script='https://example.com/deploy.sh'
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=cloud-cluster
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod proxy-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-service-pod -c mycontainer -i -t
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/log-config deployment/cache-cluster-deployment
Create a job with a command,kubectl create job scaling-job --image=mongo -- mongod
Get output from running the 'go version' command in quantum-quark from pod backend-pod,kubectl exec backend-pod -c quantum-quark -- go version
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=9091 --target-port=8000
"Auto scale a deployment ""frontend"", with the number of pods between 7 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=7 --max=12
"Create a role named ""admin_role"" with ResourceName specified",kubectl create role admin_role --verb=connect --resource=pods --resource-name=web-frontend --resource-name=order-fulfillment
"Start a mysql pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mysql --overrides='{ ""apiVersion"": ""hotfix-1.1.2"", ""spec"": { ... } }'"
Add a taint with key 'zone' on nodes having label environment=production,kubectl taint node -l environment=production  zone=node-1:PreferNoSchedule
"Mark node ""gpu-node-12"" as unschedulable",kubectl cordon gpu-node-12
Roll back to daemonset revision 1,kubectl rollout undo daemonset/staging --to-revision=1
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=edge-cluster
"Set a deployments go container cpu limits to ""10"" and memory to ""256Mi""","kubectl set resources deployment go -c=nginx --limits=cpu=10,memory=256Mi"
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json app-version=2.5.1
Switch to raw terminal mode; sends stdin to 'bash' in nebula-navigator from pod analytics-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach analytics-pod -c nebula-navigator -i -t
"If the deployment named baz's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/baz
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=9090:5432
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8000 5000
Get output from running the 'elasticsearch' command in rocket-ranger from pod mypod,kubectl exec mypod -c rocket-ranger -- elasticsearch
Update deployment 'cache-cluster-deployment' with a new environment variable,kubectl set env deployment/cache-cluster-deployment LOG_LEVEL=info
Set deployment analytics-platform-deployment's service account to istio,kubectl set serviceaccount deployment analytics-platform-deployment istio
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/security-service-pod 3000:3000
Describe a pod,kubectl describe pods/web-app-pod-1
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""legacy-apps"" API group",kubectl get deployments.hotfix-1.1.2.legacy-apps -o json
Start a alpine pod and let the container expose port 8089,kubectl run hazelcast --image=alpine --port=8089
"Set only the ""client-key"" field on the ""security-user"" # entry, without touching other values",kubectl config set-credentials security-user --client-key=~/.kube/admin.key
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/mcr.microsoft.com/dotnet/core/runtime
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml contact-email=support@example.com
Set deployment authentication-service-deployment's service account to cert-manager,kubectl set serviceaccount deployment authentication-service-deployment cert-manager
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""api-v1"" API group",kubectl get deployments.hotfix-1.1.2.api-v1 -o json
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-config-prod deployment/analytics-platform-deployment
"Listen on port 3000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 3000:8081
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/parameters/file2.txt
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json app-version=2.5.1
"Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment nginx --port=8081 --target-port=543200
Add a taint with key 'environment' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  environment=testing-node-11:PreferNoSchedule
Update all containers in all replication controllers in the project to have ENV=prod,kubectl set env rc --all DEBUG=true
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/global-config deployment/email-server-deployment
Create a cron job with a command,"kubectl create cronjob data-sync --image=redis --schedule=""*/1 * * * *"" -- redis-server --version"
Update image of all containers of daemonset services to 'php:7.4.22',kubectl set image daemonset services *=php:7.4.22
"Update pod 'database' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database custom-label=my-custom-value
Update pod 'gateway' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods gateway app-
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8000 9090
"Create a cluster role named ""default_role"" with ResourceName specified",kubectl create clusterrole default_role --verb=patch --resource=services --resource-name=app-analytics --resource-name=app-worker-2
"Listen on port 3000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/backend-service 3000:https
Update pod 'media-stream' with the label 'role' and the value 'frontend',kubectl label pods media-stream role=frontend
Embed certificate authority data for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5000:9090
Apply the configuration in parameters.json to a pod,kubectl apply -f ./parameters.json
Create a copy of cdn-service-pod changing all container images to confluentinc/cp-kafka,kubectl debug cdn-service-pod --copy-to=my-custom-dbg --set-image=*=confluentinc/cp-kafka
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""legacy-apps"" API group",kubectl get deployments.alpha-2.0.legacy-apps -o yaml
Create a new LoadBalancer service named database-lb,kubectl create service loadbalancer database-lb --tcp=9090:8083
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=app-cluster
Start a hazelcast pod and let the container expose port 5432,kubectl run hazelcast --image=hazelcast/hazelcast --port=5432
Scale a replica set named 'dev-environment-rs' to 5,kubectl scale --replicas=5 rs/dev-environment-rs
Set deployment search-engine-deployment's service account to elasticsearch,kubectl set serviceaccount deployment search-engine-deployment elasticsearch
Create a new NodePort service named analytics-nodeport,kubectl create service nodeport analytics-nodeport --tcp=8080:5001
Import environment from a secret,kubectl set env --from=secret/ssl-key-secret deployment/notification-handler-deployment
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/frontend-pod 8888:8080
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""third-party-apps"" API group",kubectl get deployments.rc-1.1.0.third-party-apps -o yaml
"Set a deployments ruby container cpu limits to ""1"" and memory to ""512Mi""","kubectl set resources deployment ruby -c=nginx --limits=cpu=1,memory=512Mi"
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""prod-apps"" API group",kubectl get deployments.v2.0.0.prod-apps -o yaml
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/db-config deployment/notification-handler-deployment
"As above, but abort if there are pods not managed by a replication controller, replica set, job, daemon set or stateful set, and use a grace period of 20 minutes",kubectl drain foo --grace-period=1200
Start a amazonlinux pod and let the container expose port 9091,kubectl run hazelcast --image=amazonlinux --port=9091
"Create a role named ""default_role"" with ResourceName specified",kubectl create role default_role --verb=list --resource=pods --resource-name=load-balancer --resource-name=message-queue
Create a new secret named app-config-secret with keys for each file in folder bar,kubectl create secret generic app-config-secret --from-file=path/to/preferences
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""internal-apps"" API group",kubectl get deployments.v3.0.0.internal-apps -o json
Add a taint with key 'zone' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  zone=node-1:PreferNoSchedule
"Create a cluster role named ""custom_role"" with ResourceName specified",kubectl create clusterrole custom_role --verb=get --resource=pods --resource-name=machine-learning --resource-name=image-processor
Add a taint with key 'cpu-type' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  cpu-type=kube-master-9:PreferNoSchedule
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml git-repo='https://github.com/example/my-app'
Create a deployment named db that runs the alpine image with 2 replicas,kubectl create deployment db --image=alpine --replicas=2
"Delete pods and services with same names ""frontend"" and ""proxy""","kubectl delete pod,service frontend proxy"
Rename the context 'old-name' to 'user-a-context' in your kubeconfig file,kubectl config rename-context old-name user-a-context
Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo rook-ceph/api-server-pod-3:/tmp/bar
Remove from node 'kube-master-9' all the taints with key 'workload',kubectl taint nodes kube-master-9 workload-
Create a job with a command,kubectl create job scaling-job --image=php --
"Update pod 'gateway' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway owner='alice smith'
Get output from stardust-shuttle from pod chat-app-pod,kubectl attach chat-app-pod -c stardust-shuttle
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/api-config deployment/email-server-deployment
"If the deployment named baz's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/baz
Set deployment load-balancer-deployment's service account to istio,kubectl set serviceaccount deployment load-balancer-deployment istio
"Create a service for a replicated centos using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs centos --port=5000 --target-port=909100
List a single pod in YAML output format,kubectl get -o yaml pod analytics-pod
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""alpha-2.0"", ""spec"": { ... } }'"
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/log-aggregator-deployment -c security-service-pod-1
Create a new ExternalName service named external-notification-service,kubectl create service externalname external-notification-service --external-name test-site.org
Return snapshot logs from pod e-commerce-pod with only one container,kubectl logs e-commerce-pod
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/batch-processing-job -n monitoring
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/kube-system-config deployment/database-deployment
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod log-aggregator-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach log-aggregator-pod -c quantum-quark -i -t
Embed certificate authority data for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --embed-certs --certificate-authority=~/.kube/web-cluster/kubernetes.ca.crt
Get output from running the 'jenkins --version' command in quantum-quark from pod email-service-pod,kubectl exec email-service-pod -c quantum-quark -- jenkins --version
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8088 5432
Remove from node 'storage-node-13' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes storage-node-13 zone:PreferNoSchedule-
"Listen on a random port locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod :8000
Update image of all containers of daemonset staging to 'mongo:5.0.2',kubectl set image daemonset staging *=mongo:5.0.2
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 5000 8000
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=8081:9090
Update image of all containers of daemonset test to 'centos:8.4.2105',kubectl set image daemonset test *=centos:8.4.2105
Create a new LoadBalancer service named security-service-lb,kubectl create service loadbalancer security-service-lb --tcp=3001:3001
Create a job with a command,kubectl create job database-seeding-job --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
"Listen on port 8080 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8080:9090
Update pod 'gateway' with the label 'env' and the value 'production',kubectl label pods gateway env=production
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=5000:9091
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/security-service-pod
Begin streaming the logs of the astro-container container in pod cdn-service-pod,kubectl logs -f -c astro-container cdn-service-pod
Remove from node 'prod-node-5' all the taints with key 'special',kubectl taint nodes prod-node-5 special-
"Listen on port 8088 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8088:8080
"Listen on port 5432 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 5432:6379
Get output from running the 'ash' command in astro-container from pod vpn-service-pod,kubectl exec vpn-service-pod -c astro-container -- ash
Rename the context 'local-context' to 'admin-context' in your kubeconfig file,kubectl config rename-context local-context admin-context
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.app-2-context.cluster kube-cluster-1
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/options/file2.txt
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/web-app-pod 8888:5000
Embed certificate authority data for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --embed-certs --certificate-authority=~/.kube/kube-cluster-2/kubernetes.ca.crt
Get output from running the 'jenkins-plugin-cli' command in cosmic-container from pod email-service-pod,kubectl exec email-service-pod -c cosmic-container -- jenkins-plugin-cli
"Update pod 'analytics' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics alert-email=alerts@example.com
Update pod 'api' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods api role-
Create a new ExternalName service named external-payment-gateway-service,kubectl create service externalname external-payment-gateway-service --external-name document-company.com
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json contact-email=support@example.com
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8088 5432
"Delete pods and services with same names ""monitoring"" and ""web""","kubectl delete pod,service monitoring web"
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8000 9090
Create a new config map named app-config-prod from an env file,kubectl create configmap app-config-prod --from-env-file=path/to/parameters.env
"Listen on port 3000 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 3000:5432"
Add a taint with key 'cpu-type' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  cpu-type=app-node-6:PreferNoSchedule
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8080 8080
"Create a single ingress called 'default-ingress' that directs requests to foo.com/input to svc # svc1:8000 with a tls secret ""my-cert""","kubectl create ingress default-ingress --rule=""foo.com/input=svc1:8000,tls=my-cert"""
"Get output from running the 'geth' command from pod gateway-pod, using the first container by default",kubectl exec gateway-pod -- geth
Create a new secret named encryption-key-secret from an env file,kubectl create secret generic encryption-key-secret --from-env-file=path/to/properties.env
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/app-config deployment/order-processing-deployment
"Listen on port 5432 locally, forwarding to 8081 in the pod",kubectl port-forward pod/cdn-service-pod 5432:8081
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""prod-apps"" API group",kubectl get deployments.v3.0.0.prod-apps -o json
Create a new ExternalName service named external-identity-provider-service,kubectl create service externalname external-identity-provider-service --external-name documentation-tech.tech
Update pod 'gateway' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods gateway component-
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8081 8080
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/kube-system-config deployment/proxy-service-deployment
Get output from astro-container from pod mypod,kubectl attach mypod -c astro-container
Return snapshot of previous terminated quantum-quark container logs from pod chat-app-pod,kubectl logs -p -c quantum-quark chat-app-pod
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8088 9090
"Define new exec auth plugin args for the ""service-account"" entry",kubectl config set-credentials service-account --exec-arg=arg1 --exec-arg=arg2
Get output from nebula-navigator from pod vpn-service-pod,kubectl attach vpn-service-pod -c nebula-navigator
Start a php pod and let the container expose port 5000,kubectl run hazelcast --image=php --port=5000
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/backend-pod 8888 8080
List a single pod in YAML output format,kubectl get -o yaml pod monitoring-pod
"Check to see if I can get the job named ""load-testing-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/load-testing-job -n production
Begin streaming the logs of the rocket-ranger container in pod database-pod,kubectl logs -f -c rocket-ranger database-pod
"Create a job from a cron job named ""system-health-check""",kubectl create job test-job --from=cronjob/system-health-check
Create a new config map named env-vars based on folder profiles,kubectl create configmap env-vars --from-file=path/to/profiles
Display only the most recent 12 lines of output in pod proxy-service-pod,kubectl logs --tail=12 proxy-service-pod
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/loadbalancer-service"
"Create a role named ""admin_role"" with SubResource specified","kubectl create role admin_role --verb=use,delete,connect --resource=secrets,secrets/status"
Get output from the first pod of a replica set named amazonlinux,kubectl attach rs/amazonlinux
Copy ~/.config/kube local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp ~/.config/kube kube-server/database-pod-2:/tmp/bar_dir
Create a job with a command,kubectl create job certificate-renewal --image=mysql -- mysql
"Update node 'worker-node-3' with a taint with key 'special' and value 'backup' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes worker-node-3 special=backup:NoSchedule
Return snapshot logs from container gateway-deployment-1 of a deployment named mypod,kubectl logs deployment/gateway-deployment -c mypod-1
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""jane.smith"" entry",kubectl config set-credentials jane.smith --auth-provider=oidc --auth-provider-arg=client-secret-
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/payment-gateway-pod
Add a taint with key 'cpu-type' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  cpu-type=k8s-node-1:PreferNoSchedule
Add a taint with key 'cpu-type' on nodes having label myLabel,kubectl taint node -l myLabel  cpu-type=web-node-8:PreferNoSchedule
"Listen on port 8080 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8080:8080
Update pod 'monitoring' with the label 'release' and the value 'v1.0',kubectl label pods monitoring release=v1.0
Restart a deployment,kubectl rollout restart deployment/namespace-1
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/user-service"
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/web-app-pod 9090:8088
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.testing-context.cluster cluster-gamma
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/gateway-deployment MONGO_URI=mongodb://localhost:27017/mydb -o yaml
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/backend-pod 8080:6379
Create a deployment with a command,kubectl create deployment monitoring --image=mongo -- mongo
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/properties/file2.txt
"Update pod 'security' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security security-scan-status=pass
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/env-vars deployment/log-aggregator-deployment
Create a deployment with a command,kubectl create deployment registry --image=postgres -- psql
Create a new ClusterIP service named billing-service-clusterip,kubectl create service clusterip billing-service-clusterip --tcp=5000:5432
Start a alpine pod and let the container expose port 8088,kubectl run hazelcast --image=alpine --port=8088
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/web-app-pod 8080:8081
Create a copy of proxy-service-pod changing the command of nebula-navigator,kubectl debug proxy-service-pod -it --copy-to=debug-image-api --container=nebula-navigator -- sh
"Start a nginx pod and set labels ""app=nginx"" and ""env=prod"" in the container","kubectl run hazelcast --image=nginx --labels=""app=nginx,env=prod"""
"Auto scale a deployment ""backend"", with the number of pods between 6 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment backend --min=6 --max=14
List a single pod in YAML output format,kubectl get -o yaml pod media-stream-pod
Create a deployment named registry that runs the php image and expose port 5000,kubectl create deployment registry --image=php --port=5000
"Update pod 'frontend' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend alert-email=alerts@example.com
Add a taint with key 'workload' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  workload=node-2:PreferNoSchedule
Rollback to the previous deployment,kubectl rollout undo deployment/services
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""experimental-apps"" API group",kubectl get deployments.v1.1.0.experimental-apps -o yaml
Get output from stardust-shuttle from pod e-commerce-pod,kubectl attach e-commerce-pod -c stardust-shuttle
Display only the most recent 12 lines of output in pod log-aggregator-pod,kubectl logs --tail=12 log-aggregator-pod
Embed certificate authority data for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --embed-certs --certificate-authority=~/.kube/kube-cluster-2/kubernetes.ca.crt
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.admin-context.cluster staging-cluster
Get output from running the 'php --version' command in cyber-sleuth from pod security-service-pod,kubectl exec security-service-pod -c cyber-sleuth -- php --version
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-config-dev deployment/web-app-deployment
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/configurations/file2.txt
"Wait for the pod ""backend-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/backend-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod 3000:8081
Create a deployment named scheduler that runs the ethereum/client-go image and expose port 6379,kubectl create deployment scheduler --image=ethereum/client-go --port=6379
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/api-service-pod
Begin streaming the logs from all containers in pods defined by label app-type=microservice,kubectl logs -f -l app-type=microservice --all-containers=true
"Delete pods and services with same names ""cdn"" and ""security""","kubectl delete pod,service cdn security"
Copy /tmp/foo_dir local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp /tmp/foo_dir velero/api-server-pod-3:/tmp/bar_dir
"Auto scale a deployment ""api"", with the number of pods between 5 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment api --min=5 --max=9
"Start a nginx pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=nginx --overrides='{ ""apiVersion"": ""custom-version"", ""spec"": { ... } }'"
"Listen on port 3000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/analytics-pod 3000:8088
Set deployment email-server-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment email-server-deployment gitlab-runner
"Start a wordpress pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=wordpress --overrides='{ ""apiVersion"": ""v1.0.0"", ""spec"": { ... } }'"
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-settings deployment/cache-cluster-deployment
Begin streaming the logs of the cyber-sleuth container in pod mypod,kubectl logs -f -c cyber-sleuth mypod
"Listen on port 9090 locally, forwarding to 5432 in the pod",kubectl port-forward pod/log-aggregator-pod 9090:5432
"List a pod identified by type and name specified in ""params.yaml"" in YAML output format",kubectl get -f params.yaml -o yaml
"Update pod 'web' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web contact-email=support@example.com
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node dev-node-4 -p '{""spec"":{""replicas"":3}'"
Update pod 'chat-app' with the label 'role' and the value 'backend',kubectl label pods chat-app role=backend
Return snapshot of previous terminated astro-container container logs from pod e-commerce-pod,kubectl logs -p -c astro-container e-commerce-pod
Update pod 'gateway' with the label 'release' and the value 'v2.0',kubectl label pods gateway release=v2.0
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/authentication-service"
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.cloud-context.cluster data-cluster
Set only the server field on the e2e cluster entry without touching other values,kubectl config set-cluster e2e --server=https://1.2.3.4
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml scaling-policy=auto-horizontal-scaling
Edit the job 'certificates-renewal-job' in JSON using the v1 API format,kubectl edit job.v1.batch/certificates-renewal-job -o json
Set deployment monitoring-stack-deployment's service account to tekton,kubectl set serviceaccount deployment monitoring-stack-deployment tekton
"Update pod 'security' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods security custom-label='my-custom-value'
Add to node 'testing-node-11' a taint with key 'hardware' and no value,kubectl taint nodes testing-node-11 hardware:NoSchedule
Update pod 'foo' with the label 'component' and the value 'api',kubectl label pods foo component=api
"Create a role named ""view"" with SubResource specified","kubectl create role view --verb=list,use,connect --resource=pods,pods/exec"
Create a new secret named email-credentials-secret with keys for each file in folder bar,kubectl create secret generic email-credentials-secret --from-file=path/to/preferences
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/global-config deployment/api-server-deployment
Add a taint with key 'zone' on nodes having label release=beta,kubectl taint node -l release=beta  zone=monitoring-node-15:PreferNoSchedule
"Create a single ingress called 'default-ingress' that directs requests to website.com/input to svc # svc1:9090 with a tls secret ""my-cert""","kubectl create ingress default-ingress --rule=""website.com/input=svc1:9090,tls=my-cert"""
Delete a pod using the type and name specified in parameters.json,kubectl delete -f ./parameters.json
"Get output from running the 'elasticsearch' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- elasticsearch
"Get output from running the 'irb' command from pod security-service-pod, using the first container by default",kubectl exec security-service-pod -- irb
Set deployment cache-cluster-deployment's service account to tekton,kubectl set serviceaccount deployment cache-cluster-deployment tekton
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 3000 8000
"Listen on port 8000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/security-service-pod 8000:9090
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json SLA='99.9% uptime'
Set deployment mydeployment's service account to argocd,kubectl set serviceaccount deployment mydeployment argocd
Switch to raw terminal mode; sends stdin to 'bash' in cyber-sleuth from pod vpn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach vpn-service-pod -c cyber-sleuth -i -t
Start a ethereum/client-go pod and let the container expose port 8084,kubectl run hazelcast --image=ethereum/client-go --port=8084
Print the supported namespaced resources,kubectl api-resources --namespaced=true
Embed certificate authority data for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""third-party-apps"" API group",kubectl get deployments.alpha-2.0.third-party-apps -o json
Copy :/tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp monitoring/file-server-pod-14::/tmp/foo /etc/kubernetes
Update pod 'auth' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods auth description-
"Get output from running 'dotnet' command from the first pod of the service api-service, using the first container by default",kubectl exec svc/api-service -- dotnet
Add a taint with key 'app' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  app=testing-node-11:PreferNoSchedule
Unset namespace in team-alpha-context context,kubectl config unset contexts.team-alpha-context.namespace
"Listen on port 8080 locally, forwarding to 9090 in the pod",kubectl port-forward pod/api-service-pod 8080:9090
"If the deployment named web's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/web
Set deployment email-server-deployment's service account to fluentd,kubectl set serviceaccount deployment email-server-deployment fluentd
Remove from node 'edge-node-10' all the taints with key 'datacenter',kubectl taint nodes edge-node-10 datacenter-
Start a ruby pod and let the container expose port 5432,kubectl run hazelcast --image=ruby --port=5432
Create a copy of proxy-server-pod changing the command of warp-drive,kubectl debug proxy-server-pod -it --copy-to=debug-image-api --container=warp-drive -- sh
Start a python pod and let the container expose port 8888,kubectl run hazelcast --image=python --port=8888
"Listen on port 5432 locally, forwarding to 8080 in the pod",kubectl port-forward pod/chat-app-pod 5432:8080
"Create a cluster role name ""view"" with NonResourceURL specified","kubectl create clusterrole ""view"" --verb=patch --non-resource-url=/metrics"
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/configs/file2.txt
Create a new secret named git-credentials-secret from an env file,kubectl create secret generic git-credentials-secret --from-env-file=path/to/parameters.env
Remove from node 'kube-master-9' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes kube-master-9 environment:NoSchedule-
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.spec.template
Update image of all containers of daemonset app-v2 to 'mysql:5.7.35',kubectl set image daemonset app-v2 *=mysql:5.7.35
Create a copy of proxy-service-pod changing all container images to mysql,kubectl debug proxy-service-pod --copy-to=debug-image-1 --set-image=*=mysql
"Delete pods and services with same names ""email"" and ""monitoring""","kubectl delete pod,service email monitoring"
Return snapshot logs from container order-processing-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/order-processing-deployment -c e-commerce-pod-1
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8088 8000
"Listen on port 8080 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8080:9090
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/namespace-config deployment/api-server-deployment
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-settings deployment/search-engine-deployment
Create a job with a command,kubectl create job log-collection --image=golang -- go version
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 5000 8000
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod 5000:8000
"Listen on port 6379 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 6379:8080"
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.team-beta-context.cluster my-k8s-cluster
Get output from running the 'sleep 3600' command in rocket-ranger from pod vpn-service-pod,kubectl exec vpn-service-pod -c rocket-ranger -- sleep 3600
Return snapshot logs from first container of a job named notification-sender-job,kubectl logs job/notification-sender-job
Add to node 'edge-node-10' a taint with key 'special' and no value,kubectl taint nodes edge-node-10 special:NoSchedule
Add a taint with key 'workload' on nodes having label myLabel,kubectl taint node -l myLabel  workload=backup-node-14:PreferNoSchedule
Import environment from a secret,kubectl set env --from=secret/encryption-key-secret deployment/analytics-platform-deployment
Embed certificate authority data for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
"Update pod 'analytics' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods analytics monitoring-tool='Prometheus'
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.on-prem-context.cluster kube-cluster-2
"Listen on port 5000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5000:8080
Update image of all containers of daemonset staging to 'wordpress:5.8.1',kubectl set image daemonset staging *=wordpress:5.8.1
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.service-account-context.cluster prod-cluster
Update pod 'api' with the label 'tier' and the value 'database',kubectl label pods api tier=database
"Listen on port 8088 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8088:8088
Start a confluentinc/cp-kafka pod and let the container expose port 9092,kubectl run hazelcast --image=confluentinc/cp-kafka --port=9092
Import environment from a secret,kubectl set env --from=secret/aws-credentials-secret deployment/order-processing-deployment
"Listen on port 8888 locally, forwarding to 5432 in the pod",kubectl port-forward pod/proxy-server-pod 8888:5432
View the details of daemonset revision 3,kubectl rollout history daemonset/development --revision=3
"Create a cluster role name ""admin_role"" with NonResourceURL specified","kubectl create clusterrole ""admin_role"" --verb=use --non-resource-url=/watch/*"
Get output from running the 'bash' command in warp-drive from pod gateway-pod,kubectl exec gateway-pod -c warp-drive -- bash
"Create a role named ""bar"" with ResourceName specified",kubectl create role bar --verb=use --resource=pods --resource-name=nginx-proxy --resource-name=image-processor
Start a centos pod and let the container expose port 5001,kubectl run hazelcast --image=centos --port=5001
Create a copy of mypod changing the command of quantum-quark,kubectl debug mypod -it --copy-to=debug-image-1 --container=quantum-quark -- sh
Add a taint with key 'zone' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  zone=edge-node-10:PreferNoSchedule
"Create a service for a pod gateway-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod gateway-pod --port=8888 --name=frontend
Show metrics for the pods defined by label role=database,kubectl top pod -l role=database
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""custom-apps"" API group",kubectl get deployments.feature-branch-2.3.0.custom-apps -o yaml
Update pod 'monitoring' with the label 'tier' and the value 'backend',kubectl label pods monitoring tier=backend
"Listen on port 6379 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/email-service 6379:https
"Remove exec auth plugin environment variables for the ""dev-user"" entry",kubectl config set-credentials dev-user --exec-env=var-to-remove-
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 6379 3000
Start a python pod and let the container expose port 8081,kubectl run hazelcast --image=python --port=8081
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=8089 --target-port=801000
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 5432 5000
"Start the centos pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=centos -- <arg1> <arg2> ... <argN>
Update image of all containers of daemonset nginx to 'golang:1.17',kubectl set image daemonset nginx *=golang:1.17
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=edge-cluster
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp ingress-nginx/payment-gateway-pod-19:/tmp/foo /tmp/bar_dir
Create a copy of chat-app-pod changing all container images to ubuntu,kubectl debug chat-app-pod --copy-to=my-custom-dbg --set-image=*=ubuntu
Return snapshot logs from container notification-handler-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/notification-handler-deployment -c monitoring-pod-1
Add a taint with key 'special' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  special=prod-node-5:PreferNoSchedule
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 3000 8088
"Listen on port 8088 locally, forwarding to 5000 in the pod",kubectl port-forward pod/proxy-server-pod 8088:5000
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/backend-service"
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=web-cluster
"Delete pods and services with same names ""proxy-server"" and ""cdn""","kubectl delete pod,service proxy-server cdn"
"Get output from running the 'go run hello.go' command from pod web-app-pod, using the first container by default",kubectl exec web-app-pod -- go run hello.go
Create a deployment named gateway that runs the node image,kubectl create deployment gateway --image=node
Add a taint with key 'hardware' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  hardware=app-node-6:PreferNoSchedule
"Update pod 'chat-app' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app monitoring-tool=Prometheus
"Create a service for a replication controller identified by type and name specified in ""php-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f php-controller.yaml --port=5000 --target-port=808400
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/security-service-pod 9090:8088
"Listen on port 8081 locally, forwarding to 8088 in the pod",kubectl port-forward pod/backend-pod 8081:8088
"List all allowed actions in namespace ""production""",kubectl auth can-i --list --namespace=production
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/e-commerce-pod :5000
Create a copy of e-commerce-pod changing the command of code-explorer,kubectl debug e-commerce-pod -it --copy-to=debug-image-api --container=code-explorer -- sh
Set deployment load-balancer-deployment's service account to tiller,kubectl set serviceaccount deployment load-balancer-deployment tiller
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8080 8080
Get output from running the 'dotnet --list-sdks' command in cyber-sleuth from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c cyber-sleuth -- dotnet --list-sdks
Update image of all containers of daemonset prod to 'httpd:2.4.48',kubectl set image daemonset prod *=httpd:2.4.48
Start a php pod and let the container expose port 3000,kubectl run hazelcast --image=php --port=3000
"Delete pods and services with same names ""gateway"" and ""web""","kubectl delete pod,service gateway web"
Use the context for the app-cluster cluster,kubectl config use-context app-cluster
Set the user field on the app-2-context context entry without touching other values,kubectl config set-context app-2-context --user=cluster-admin
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/app-config deployment/backend-microservice-deployment
"Create a cluster role named ""reader"" with ResourceName specified",kubectl create clusterrole reader --verb=update --resource=pods --resource-name=identity-provider --resource-name=error-logger
Rename the context 'prod-context' to 'team-beta-context' in your kubeconfig file,kubectl config rename-context prod-context team-beta-context
Get output from running the 'mongo --version' command in stardust-shuttle from pod database-pod,kubectl exec database-pod -c stardust-shuttle -- mongo --version
Remove from node 'node-2' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes node-2 app:PreferNoSchedule-
"Get output from running the 'mongod' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- mongod
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 5000 6379
Create a priority class named external-priority,"kubectl create priorityclass external-priority --value=5 --description=""Priority for external-facing services"""
"Start a docker.elastic.co/elasticsearch/elasticsearch pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=docker.elastic.co/elasticsearch/elasticsearch --overrides='{ ""apiVersion"": ""rc-1.1.0"", ""spec"": { ... } }'"
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=7000 --target-port=500100
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=edge-cluster
"Create a cluster role name ""default_role"" with NonResourceURL specified","kubectl create clusterrole ""default_role"" --verb=update --non-resource-url=/watch/*"
Set deployment backend-microservice-deployment's service account to flux,kubectl set serviceaccount deployment backend-microservice-deployment flux
Create a new secret named email-credentials-secret from an env file,kubectl create secret generic email-credentials-secret --from-env-file=path/to/configs.env
"Update pod 'proxy-server' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server env=staging
Get output from warp-drive from pod proxy-service-pod,kubectl attach proxy-service-pod -c warp-drive
Remove from node 'dev-node-4' all the taints with key 'workload',kubectl taint nodes dev-node-4 workload-
Start a node pod and let the container expose port 8000,kubectl run hazelcast --image=node --port=8000
"Delete pods and services with same names ""frontend"" and ""monitoring""","kubectl delete pod,service frontend monitoring"
"Update pod 'foo' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods foo owner='alice-smith'
"Get output from running the 'geth version' command from pod proxy-service-pod, using the first container by default",kubectl exec proxy-service-pod -- geth version
Create a new secret named encryption-key-secret from an env file,kubectl create secret generic encryption-key-secret --from-env-file=path/to/configs.env
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=8181 --target-port=500100
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/database-pod
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=e2e
Start a hazelcast pod and let the container expose port 5000,kubectl run hazelcast --image=hazelcast/hazelcast --port=5000
"Get output from running the 'redis-cli' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- redis-cli
Create a new secret named api-secret-key with keys for each file in folder bar,kubectl create secret generic api-secret-key --from-file=path/to/configurations
Create a job with a command,"kubectl create job log-processing-job --image=nginx -- nginx -g ""daemon off;"""
Add to node 'node-1' a taint with key 'hardware' and no value,kubectl taint nodes node-1 hardware:NoSchedule
"Listen on port 9090 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 9090:8080
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kube-proxy/admin-dashboard-pod-16::/tmp/foo :/tmp/bar
"Mark node ""testing-node-11"" as schedulable",kubectl uncordon testing-node-11
Return snapshot of previous terminated lunar-launcher container logs from pod chat-app-pod,kubectl logs -p -c lunar-launcher chat-app-pod
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.client-2-context.cluster cloud-cluster
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8000 9090
Create a job with a command,kubectl create job indexing --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet --list-runtimes
Embed certificate authority data for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
Set the certificate-authority-data field on the staging-cluster cluster,"kubectl config set clusters.staging-cluster.certificate-authority-data $(echo ""cert_data_here"" | base64 -i -)"
Describe pods by label owner=john-doe,kubectl describe po -l owner=john-doe
Get output from running the 'bash' command in warp-drive from pod auth-service-pod,kubectl exec auth-service-pod -c warp-drive -- bash
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=edge-cluster
Switch to raw terminal mode; sends stdin to 'bash' in nebula-navigator from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c nebula-navigator -i -t
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/mypod 8888 9090
Begin streaming the logs of the mycontainer container in pod mypod,kubectl logs -f -c mycontainer mypod
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""custom-deployments"" API group",kubectl get deployments.v2.1.0.custom-deployments -o json
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=9090 --target-port=500000
"Get output from running 'pip --version' command from the first pod of the deployment user-management-deployment, using the first container by default",kubectl exec deploy/user-management-deployment -- pip --version
"Listen on port 5432 locally, forwarding to 8000 in the pod",kubectl port-forward pod/backend-pod 5432:8000
"Start a jenkins pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=jenkins --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
Update image of all containers of daemonset staging to 'java:11.0.12',kubectl set image daemonset staging *=java:11.0.12
Update pod 'chat-app' with the label 'role' and the value 'cache',kubectl label pods chat-app role=cache
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n namespace-1
Create a copy of proxy-service-pod changing all container images to ethereum/client-go,kubectl debug proxy-service-pod --copy-to=my-debugger --set-image=*=ethereum/client-go
Begin streaming the logs of the code-explorer container in pod cdn-service-pod,kubectl logs -f -c code-explorer cdn-service-pod
Create a deployment named gateway that runs the nginx image and expose port 7000,kubectl create deployment gateway --image=nginx --port=7000
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/kube-system-config deployment/backend-microservice-deployment
Embed certificate authority data for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
"Create a cluster role name ""admin_role"" with NonResourceURL specified","kubectl create clusterrole ""admin_role"" --verb=proxy --non-resource-url=/oapi/*"
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=properties=/path/to/preferences/file1.txt --from-file=key1=/path/to/settings/file2.txt
Roll back to the previous deployment,kubectl rollout undo deployment/namespace-3
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8000 8081
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube kube-public/worker-pod-4:/tmp/bar
Create a deployment named mattermost that runs the golang image with 5 replicas,kubectl create deployment mattermost --image=golang --replicas=5
Begin streaming the logs of the time-machine container in pod api-service-pod,kubectl logs -f -c time-machine api-service-pod
Describe all services,kubectl describe services
"Update pod 'frontend' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend last-deployment=2023-03-15
"Start a nginx pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=nginx --overrides='{ ""apiVersion"": ""v2.1.0"", ""spec"": { ... } }'"
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/mydeployment CACHE_SIZE=64MB -o yaml
Add a taint with key 'hardware' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  hardware=testing-node-11:PreferNoSchedule
"Update pod 'foo' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo env=staging
Rename the context 'testing-context' to 'edge-context' in your kubeconfig file,kubectl config rename-context testing-context edge-context
Display only the most recent 12 lines of output in pod proxy-server-pod,kubectl logs --tail=12 proxy-server-pod
Create a new secret named git-credentials-secret from an env file,kubectl create secret generic git-credentials-secret --from-env-file=path/to/data.env
Update a single-container pod's image version (tag) to v4,kubectl get pod security-service-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
Delete the service-account user,kubectl config delete-user service-account
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/security-service-pod 6379:8000
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/vpn-service-pod
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=9091 --target-port=900000
Get output from running the 'mongo' command in mycontainer from pod auth-service-pod,kubectl exec auth-service-pod -c mycontainer -- mongo
Begin streaming the logs of the nebula-navigator container in pod proxy-server-pod,kubectl logs -f -c nebula-navigator proxy-server-pod
Create a copy of email-service-pod changing all container images to nginx,kubectl debug email-service-pod --copy-to=debug-image-api --set-image=*=nginx
"List deployments in YAML output format, in the ""custom-version"" version of the ""backup-apps"" API group",kubectl get deployments.custom-version.backup-apps -o yaml
"Update node 'db-node-7' with a taint with key 'hardware' and value 'gpu' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes db-node-7 hardware=gpu:NoExecute
Begin streaming the logs of the ruby container in pod monitoring-pod,kubectl logs -f -c ruby monitoring-pod
Delete the kube-cluster-1 cluster,kubectl config delete-cluster kube-cluster-1
"Delete pods and services with same names ""database"" and ""proxy""","kubectl delete pod,service database proxy"
Set deployment scheduler-app-deployment's service account to spinnaker,kubectl set serviceaccount deployment scheduler-app-deployment spinnaker
"Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment nginx --port=8089 --target-port=808000
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/backend-pod 5432 6379
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.team-alpha-context.cluster kube-cluster-2
Create a new ClusterIP service named backend-service-clusterip,kubectl create service clusterip backend-service-clusterip --tcp=6379:7000
Update pod 'security' with the label 'env' and the value 'development',kubectl label pods security env=development
Start a centos pod and let the container expose port 8088,kubectl run hazelcast --image=centos --port=8088
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=edge-cluster
Add a taint with key 'disktype' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  disktype=dev-node-4:PreferNoSchedule
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod proxy-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-service-pod -c cosmic-container -i -t
"Update pod 'proxy' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy criticality=high
Get the password for the kube-cluster-1 user,"kubectl config view -o jsonpath='{.users[?(@.name == ""kube-cluster-1"")].user.password}'"
Embed certificate authority data for the star-cluster cluster entry,kubectl config set-cluster star-cluster --embed-certs --certificate-authority=~/.kube/web-cluster/kubernetes.ca.crt
Import environment from a secret,kubectl set env --from=secret/azure-storage-secret deployment/frontend-deployment
Create a new config map named app-name-config from an env file,kubectl create configmap app-name-config --from-env-file=path/to/options.env
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kube-public/api-server-pod-3:/tmp/foo /tmp/bar
Start a hazelcast pod and let the container expose port 8080,kubectl run hazelcast --image=hazelcast/hazelcast --port=8080
"Update pod 'proxy' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy expiration-date='2024-12-31'
"Listen on port 8081 locally, forwarding to 8888 in the pod",kubectl port-forward pod/proxy-server-pod 8081:8888
Import environment from a config map with a prefix,kubectl set env --from=configmap/namespace-config --prefix=MYSQL_ deployment/backend-microservice-deployment
"Create a service for a replicated ubuntu using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ubuntu --port=8088 --target-port=818100
Update image of all containers of daemonset namespace-2 to 'java:11.0.12',kubectl set image daemonset namespace-2 *=java:11.0.12
Get output from the first pod of a replica set named nginx,kubectl attach rs/nginx
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/db-config deployment/load-balancer-deployment
Create a cron job with a command,"kubectl create cronjob data-sync --image=golang --schedule=""*/1 * * * *"" -- go version"
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/web-app-pod 9090 9090
"Listen on port 8080 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8080:8088
Create a deployment named ingress that runs the confluentinc/cp-kafka image with 5 replicas,kubectl create deployment ingress --image=confluentinc/cp-kafka --replicas=5
Set deployment cache-cluster-deployment's service account to metrics-server,kubectl set serviceaccount deployment cache-cluster-deployment metrics-server
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/payment-gateway-pod
Remove from node 'web-node-8' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes web-node-8 workload:NoSchedule-
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.prod-context.cluster data-cluster
"Update pod 'monitoring' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring owner='alice smith'
Set the user field on the staging-context context entry without touching other values,kubectl config set-context staging-context --user=cluster-admin
Begin streaming the logs of the nano-bot container in pod vpn-service-pod,kubectl logs -f -c nano-bot vpn-service-pod
Start a postgres pod and let the container expose port 8000,kubectl run hazelcast --image=postgres --port=8000
"Set basic auth for the ""web-app"" entry",kubectl config set-credentials web-app --username=admin --password=uXFGweU9l35qcif
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=e2e
"List deployments in JSON output format, in the ""custom-version"" version of the ""external-apps"" API group",kubectl get deployments.custom-version.external-apps -o json
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod database-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Show metrics for a given pod and its containers,kubectl top pod chat-app-pod --containers
"Listen on port 5432 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5432:8088
Create a new ClusterIP service named security-service-clusterip,kubectl create service clusterip security-service-clusterip --tcp=3000:8088
Create a new ExternalName service named external-database-service,kubectl create service externalname external-database-service --external-name example-domain.com
"Listen on port 8888 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8888:6379
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod gateway-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
"If the deployment named staging-app-rs's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/staging-app-rs
"Delete pods and services with same names ""web"" and ""api""","kubectl delete pod,service web api"
"Get output from running 'dotnet --list-runtimes' command from the first pod of the service gateway-service, using the first container by default",kubectl exec svc/gateway-service -- dotnet --list-runtimes
Create a job with a command,kubectl create job deployment-rollout-job --image=postgres -- psql
Begin streaming the logs of the warp-drive container in pod auth-service-pod,kubectl logs -f -c warp-drive auth-service-pod
Update image of all containers of daemonset services to 'node:14.17.3',kubectl set image daemonset services *=node:14.17.3
Create a new NodePort service named my-ns,kubectl create service nodeport my-ns --tcp=8088:7000
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/log-aggregator-deployment -c analytics-pod-1
Add a taint with key 'workload' on nodes having label component=proxy,kubectl taint node -l component=proxy  workload=edge-node-10:PreferNoSchedule
List all pods in ps output format,kubectl get pods
"Listen on port 8080 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8080:8081
Begin streaming the logs of the mycontainer container in pod vpn-service-pod,kubectl logs -f -c mycontainer vpn-service-pod
"Listen on port 5432 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5432:5432
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/e-commerce-pod
Get output from lunar-launcher from pod web-app-pod,kubectl attach web-app-pod -c lunar-launcher
"Check to see if I can get the job named ""report-generation-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/report-generation-job -n default
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.status.podIP
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=data-cluster
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/analytics-pod 3000 8088
Start a confluentinc/cp-kafka pod and let the container expose port 3306,kubectl run hazelcast --image=confluentinc/cp-kafka --port=3306
Create a copy of api-service-pod changing the command of cyber-sleuth,kubectl debug api-service-pod -it --copy-to=my-custom-dbg --container=cyber-sleuth -- sh
"Update pod 'chat-app' with the annotation 'deployment-script' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods chat-app deployment-script='https://example.com/deploy.sh'
"Create a single ingress called 'web-ingress' that directs requests to foo.com/bar to svc # svc1:3306 with a tls secret ""my-cert""","kubectl create ingress web-ingress --rule=""foo.com/bar=svc1:3306,tls=my-cert"""
"Update pod 'vpn' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods vpn custom-label='my-custom-value'
"Update a pod identified by the type and name in ""settings.json""",kubectl label -f settings.json status=unhealthy
Update image of all containers of daemonset development to 'postgres:13.4',kubectl set image daemonset development *=postgres:13.4
Delete a pod using the type and name specified in pod.json,kubectl delete -f ./pod.json
Print the supported API resources sorted by a column,kubectl api-resources --sort-by=version
Disable cert checking for the dev cluster entry,kubectl config set-cluster cluster-beta --insecure-skip-tls-verify=true
"Create a single ingress called 'public-ingress' that directs requests to site.com/example to svc # svc1:8089 with a tls secret ""my-cert""","kubectl create ingress public-ingress --rule=""site.com/example=svc1:8089,tls=my-cert"""
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod 3000:5000
Get the documentation of a specific field of a resource,kubectl explain resource=services.spec.template
Return snapshot logs from all containers in pods defined by label app=nginx,kubectl logs -l app=nginx --all-containers=true
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/env-vars deployment/authentication-service-deployment
"Listen on port 9090 locally, forwarding to 6379 in the pod",kubectl port-forward pod/e-commerce-pod 9090:6379
"List deployments in YAML output format, in the ""custom-version"" version of the ""experimental-apps"" API group",kubectl get deployments.custom-version.experimental-apps -o yaml
Create a new secret named ssl-key-secret from an env file,kubectl create secret generic ssl-key-secret --from-env-file=path/to/profiles.env
"Update a role binding for app-operator, sysadmin, and security-auditors",kubectl set subject rolebinding admin --user=app-operator --user=sysadmin --group=security-auditors
"Listen on port 8000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8000:8000
Return snapshot logs from first container of a job named log-rotation-job,kubectl logs job/log-rotation-job
"Start a ubuntu pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ubuntu --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
"Get output from running 'go version' command from the first pod of the deployment email-server-deployment, using the first container by default",kubectl exec deploy/email-server-deployment -- go version
"Auto scale a deployment ""database"", with the number of pods between 7 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment database --min=7 --max=10
"Remove exec auth plugin environment variables for the ""cluster-admin"" entry",kubectl config set-credentials cluster-admin --exec-env=var-to-remove-
Create a new secret named gcp-service-account-secret with keys for each file in folder bar,kubectl create secret generic gcp-service-account-secret --from-file=path/to/properties
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.edge-context.cluster on-prem-cluster
Create a new LoadBalancer service named ingress-controller-lb,kubectl create service loadbalancer ingress-controller-lb --tcp=9092:8083
Set deployment analytics-platform-deployment's service account to spinnaker,kubectl set serviceaccount deployment analytics-platform-deployment spinnaker
Create a copy of mypod adding a debug container and changing container images,"kubectl debug mypod -it --copy-to=my-debugger --image=debian --set-image=proxy=nginx:1.21,proxy=nginx:1.21"
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""beta-apps"" API group",kubectl get deployments.v2.0.0.beta-apps -o yaml
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=3001 --target-port=808100
Update image of all containers of daemonset namespace- to 'golang:1.17',kubectl set image daemonset namespace-3 *=golang:1.17
Create a new service account named my-service-account,kubectl create serviceaccount my-service-account
"Listen on port 8088 locally, forwarding to 5000 in the pod",kubectl port-forward pod/chat-app-pod 8088:5000
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod email-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach email-service-pod -c astro-container -i -t
"Delete pods and services with same names ""media-stream"" and ""chat-app""","kubectl delete pod,service media-stream chat-app"
"Remove exec auth plugin environment variables for the ""app-service"" entry",kubectl config set-credentials app-service --exec-env=var-to-remove-
"If the deployment named payment-service-rs's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/payment-service-rs
Get output from stardust-shuttle from pod cdn-service-pod,kubectl attach cdn-service-pod -c stardust-shuttle
Start a python pod and let the container expose port 5000,kubectl run hazelcast --image=python --port=5000
"Auto scale a deployment ""foo"", with the number of pods between 4 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment foo --min=4 --max=9
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/virus-scan-job -n production
"Listen on port 9090 locally, forwarding to 3000 in the pod",kubectl port-forward pod/log-aggregator-pod 9090:3000
"Update pod 'auth' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth git-repo='https://github.com/example/my-app'
"Listen on port 9090 locally, forwarding to 5432 in the pod",kubectl port-forward pod/mypod 9090:5432
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8888 8088
Update image of all containers of daemonset namespace-2 to 'openjdk:16.0.2',kubectl set image daemonset namespace-2 *=openjdk:16.0.2
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/proxy-service-pod
Get output from running the 'geth' command in code-explorer from pod monitoring-pod,kubectl exec monitoring-pod -c code-explorer -- geth
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/e-commerce-pod :8088
Begin streaming the logs of the quantum-quark container in pod monitoring-pod,kubectl logs -f -c quantum-quark monitoring-pod
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp logging/api-server-pod-3:/tmp/foo :/tmp/bar
"Update pod 'log-aggregator' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods log-aggregator SLA='99.9% uptime'
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/configurations/file1.txt --from-file=data=/path/to/configurations/file2.txt
Create a copy of mypod changing all container images to node,kubectl debug mypod --copy-to=debug-image-web --set-image=*=node
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8088 --target-port=300000
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.cluster-1-context.cluster kube-cluster-1
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=my-k8s-cluster
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=on-prem-cluster
Update pod 'vpn' with the label 'component' and the value 'api',kubectl label pods vpn component=api
Create a new config map named monitoring-config from the key=value pairs in the file,kubectl create configmap monitoring-config --from-file=path/to/options
Scale a replica set named 'bar' to 5,kubectl scale --replicas=5 rs/bar
"Listen on port 8000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/backend-pod 8000:8888
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 8000 8000
"Delete pods and services with same names ""proxy-server"" and ""media-stream""","kubectl delete pod,service proxy-server media-stream"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 5000 5000
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/web-app-pod 9090 8080
Get output from running the 'elasticsearch' command in astro-container from pod media-stream-pod,kubectl exec media-stream-pod -c astro-container -- elasticsearch
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 3000 3000
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8000 3000
Add a taint with key 'zone' on nodes having label myLabel,kubectl taint node -l myLabel  zone=db-node-7:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/app-name-config deployment/log-aggregator-deployment
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=my-k8s-cluster
Set deployment notification-handler-deployment's service account to vault,kubectl set serviceaccount deployment notification-handler-deployment vault
Create a new LoadBalancer service named log-aggregator-lb,kubectl create service loadbalancer log-aggregator-lb --tcp=5001:8089
Get output from running the 'sleep 3600' command in time-machine from pod web-app-pod,kubectl exec web-app-pod -c time-machine -- sleep 3600
"Update pod 'web' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web monitoring-tool=Prometheus
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/chat-app-pod 8000:8081
"Delete pods and services with same names ""proxy-server"" and ""analytics""","kubectl delete pod,service proxy-server analytics"
"Listen on port 8080 locally, forwarding to 8000 in the pod",kubectl port-forward pod/log-aggregator-pod 8080:8000
"Listen on port 6379 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 6379:6379
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=testing-cluster
"Get output from running 'irb' command from the first pod of the deployment payment-processor-deployment, using the first container by default",kubectl exec deploy/payment-processor-deployment -- irb
Create an ingress with a default backend,"kubectl create ingress ingdefault --class=default \
--default-backend=defaultsvc:http \
--rule=""site.com/*=svc:7000,tls=secret1"""
Set deployment gateway-deployment's service account to vault,kubectl set serviceaccount deployment gateway-deployment vault
Update deployment 'cache-cluster-deployment' with a new environment variable,kubectl set env deployment/cache-cluster-deployment SMTP_HOST=smtp.example.com
"Check to see if I can get the job named ""image-processing-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/image-processing-job -n default
Get output from running the 'npm --version' command in cyber-sleuth from pod frontend-pod,kubectl exec frontend-pod -c cyber-sleuth -- npm --version
"Update pod 'log-aggregator' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator security-scan-status=pass
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/mypod 8081 8888
Get output from code-explorer from pod frontend-pod,kubectl attach frontend-pod -c code-explorer
Create a pod using the data in docker-registry.yaml,kubectl create -f ./docker-registry.yaml
"Create a cluster role named ""foo"" that allows user to perform ""patch"", ""watch"" and ""exec"" on configmaps","kubectl create clusterrole foo --verb=patch,watch,exec --resource=configmaps"
Add a taint with key 'cpu-type' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  cpu-type=k8s-node-1:PreferNoSchedule
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=9000:9090
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8080 8888
"Listen on port 8888 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8888:8080
"Update pod 'database' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database env=staging
Update pod 'email' with the label 'component' and the value 'web',kubectl label pods email component=web
"Auto scale a deployment ""media-stream"", with the number of pods between 1 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment media-stream --min=1 --max=11
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=sun-cluster
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=properties=/path/to/properties/file1.txt --from-file=key1=/path/to/properties/file2.txt
"Listen on port 6379 locally, forwarding to 5000 in the pod",kubectl port-forward pod/log-aggregator-pod 6379:5000
Update pod 'vpn' with the label 'app' and the value 'myapp',kubectl label pods vpn app=myapp
Add a taint with key 'special' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  special=gpu-node-12:PreferNoSchedule
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/chat-app-pod 8088:8081
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/web-app-pod :8081
Get output from running the 'irb' command in quantum-quark from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c quantum-quark -- irb
Get output from running the 'go version' command in stardust-shuttle from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c stardust-shuttle -- go version
"Delete pods and services with same names ""payment"" and ""auth""","kubectl delete pod,service payment auth"
"Listen on port 8081 locally, forwarding to 3000 in the pod",kubectl port-forward pod/analytics-pod 8081:3000
Return snapshot of previous terminated cosmic-container container logs from pod backend-pod,kubectl logs -p -c cosmic-container backend-pod
Add a taint with key 'app' on nodes having label myLabel,kubectl taint node -l myLabel  app=dev-node-4:PreferNoSchedule
Remove from node 'edge-node-10' all the taints with key 'hardware',kubectl taint nodes edge-node-10 hardware-
"Listen on port 3000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 3000:8000"
Add a taint with key 'environment' on nodes having label service=auth,kubectl taint node -l service=auth  environment=prod-node-5:PreferNoSchedule
Create a new secret named ldap-credentials-secret from an env file,kubectl create secret generic ldap-credentials-secret --from-env-file=path/to/configurations.env
"Delete pods and services with same names ""chat-app"" and ""proxy""","kubectl delete pod,service chat-app proxy"
Start a ubuntu pod and let the container expose port 5432,kubectl run hazelcast --image=ubuntu --port=5432
Begin streaming the logs of the cyber-sleuth container in pod backend-pod,kubectl logs -f -c cyber-sleuth backend-pod
Start a hazelcast pod and let the container expose port 3306,kubectl run hazelcast --image=hazelcast/hazelcast --port=3306
Get output from running the 'go version' command in lunar-launcher from pod gateway-pod,kubectl exec gateway-pod -c lunar-launcher -- go version
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=cluster-alpha
Copy /tmp/foo local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp /tmp/foo rook-ceph/cache-pod-5:/tmp/bar_dir
Rename the context 'prod-context' to 'new-context' in your kubeconfig file,kubectl config rename-context prod-context new-context
Create a deployment named nats that runs the hazelcast image and expose port 6379,kubectl create deployment nats --image=hazelcast/hazelcast --port=6379
"Listen on port 8080 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8080:8081
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""extensions"" API group",kubectl get deployments.v3.0.0.extensions -o json
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp argocd/load-balancer-pod-9:/tmp/foo :/tmp/bar
"Auto scale a deployment ""gateway"", with the number of pods between 1 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=1 --max=12
"Listen on port 8088 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8088:6379
Create a cron job with a command,"kubectl create cronjob system-health-check --image=redis --schedule=""*/1 * * * *"" -- redis-server"
Embed certificate authority data for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --embed-certs --certificate-authority=~/.kube/e2e/kubernetes.ca.crt
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=kube-cluster-2
Start a php pod and let the container expose port 3001,kubectl run hazelcast --image=php --port=3001
Get output from running the 'elasticsearch --version' command in cyber-sleuth from pod database-pod,kubectl exec database-pod -c cyber-sleuth -- elasticsearch --version
"Listen on port 8081 locally, forwarding to 8088 in the pod",kubectl port-forward pod/log-aggregator-pod 8081:8088
Return snapshot logs from container user-management-deployment-1 of a deployment named database-pod,kubectl logs deployment/user-management-deployment -c database-pod-1
"If the deployment named api-service-rs's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/api-service-rs
"Enable new exec auth plugin for the ""prod-user"" entry",kubectl config set-credentials prod-user --exec-command=/path/to/the/executable --exec-api-version=client.authentication.k8s.io/v1beta1
Update a cluster role binding for flux,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:flux
"Set basic auth for the ""cluster-admin"" entry",kubectl config set-credentials cluster-admin --username=admin --password=uXFGweU9l35qcif
Get output from running the 'pip --version' command in rocket-ranger from pod cdn-service-pod,kubectl exec cdn-service-pod -c rocket-ranger -- pip --version
Start a ubuntu pod and let the container expose port 8888,kubectl run hazelcast --image=ubuntu --port=8888
"Get output from running the 'python --version' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- python --version
Return snapshot logs from all containers in pods defined by label region=eu-west-2,kubectl logs -l region=eu-west-2 --all-containers=true
Remove from node 'dev-node-4' all the taints with key 'special',kubectl taint nodes dev-node-4 special-
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 6379,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=6379
Remove from node 'prod-node-5' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes prod-node-5 environment:NoSchedule-
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod frontend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach frontend-pod -c nano-bot -i -t
Start a python pod and let the container expose port 8010,kubectl run hazelcast --image=python --port=8010
"Set a deployments ruby container cpu limits to ""1"" and memory to ""128Mi""","kubectl set resources deployment ruby -c=nginx --limits=cpu=1,memory=128Mi"
"Start the postgres pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=postgres -- <arg1> <arg2> ... <argN>
Start a ruby pod and let the container expose port 8089,kubectl run hazelcast --image=ruby --port=8089
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/monitoring-config deployment/email-server-deployment
"Update pod 'proxy-server' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods proxy-server security-scan-status='pass'
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-cloud-storage-service
Create a deployment named drupal that runs the centos image with 6 replicas,kubectl create deployment drupal --image=centos --replicas=6
"Enable the OpenID Connect auth provider for the ""saas-admin"" entry with additional args",kubectl config set-credentials saas-admin --auth-provider=oidc --auth-provider-arg=client-id=foo --auth-provider-arg=client-secret=bar
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 5000 5432
"Listen on port 6379 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 6379:8000
Return snapshot of previous terminated lunar-launcher container logs from pod frontend-pod,kubectl logs -p -c lunar-launcher frontend-pod
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=kube-cluster-1
"Get output from running the 'jenkins-plugin-cli' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- jenkins-plugin-cli
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=properties=/path/to/properties/file1.txt --from-file=key1=/path/to/properties/file2.txt
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 3000 5000
Describe a pod,kubectl describe pods/api-server-pod
Create a deployment named registry that runs the mysql image and expose port 8000,kubectl create deployment registry --image=mysql --port=8000
Get output from running the 'gem --version' command in quantum-quark from pod email-service-pod,kubectl exec email-service-pod -c quantum-quark -- gem --version
Get output from running the 'geth' command in stardust-shuttle from pod web-app-pod,kubectl exec web-app-pod -c stardust-shuttle -- geth
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/backend-microservice-deployment -c e-commerce-pod-1
Update pod 'api' with the label 'component' and the value 'api',kubectl label pods api component=api
"Listen on port 8081 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8081:8088
Remove the environment variable ENV from container 'lunar-launcher' in all deployment configs,"kubectl set env deployments --all --containers=""lunar-launcher"" ENV-"
Update pod 'cdn' with the label 'component' and the value 'web',kubectl label pods cdn component=web
"Check to see if I can get the job named ""load-testing-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/load-testing-job -n monitoring
Update pod 'backend' with the label 'release' and the value 'v1.0',kubectl label pods backend release=v1.0
"Check to see if I can get the job named ""cron-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/cron-job -n staging
"Get output from running the 'elasticsearch-plugin --list' command from pod gateway-pod, using the first container by default",kubectl exec gateway-pod -- elasticsearch-plugin --list
"Create a service for a replicated php, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc php --port=9000 --target-port=637900
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.app-2-context.cluster kube-cluster-2
Unset namespace in local-context context,kubectl config unset contexts.local-context.namespace
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8888 8088
Remove from node 'web-node-8' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes web-node-8 cpu-type:NoSchedule-
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=kube-cluster-2
Remove from node 'backup-node-14' all the taints with key 'cpu-type',kubectl taint nodes backup-node-14 cpu-type-
"Get output from running 'mysql' command from the first pod of the service web-service, using the first container by default",kubectl exec svc/web-service -- mysql
Add a taint with key 'datacenter' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  datacenter=worker-node-3:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/api-config deployment/user-management-deployment
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.team-alpha-context.cluster edge-cluster
"If the deployment named web's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/web
Begin streaming the logs of the nano-bot container in pod e-commerce-pod,kubectl logs -f -c nano-bot e-commerce-pod
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-settings deployment/payment-processor-deployment
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-config-dev deployment/load-balancer-deployment
"Listen on port 3000 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 3000:5432"
Create a job with a command,kubectl create job deployment-rollout-job --image=redis -- redis-cli
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/api-config deployment/scheduler-app-deployment
Create a job with a command,kubectl create job certificate-renewal --image=mongo -- mongo --version
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/web-service 8088:https
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 6379 6379
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8080 9090
Create a copy of backend-pod changing all container images to mysql,kubectl debug backend-pod --copy-to=debug-image-1 --set-image=*=mysql
Get output from running the 'node --version' command in rocket-ranger from pod chat-app-pod,kubectl exec chat-app-pod -c rocket-ranger -- node --version
Add a taint with key 'workload' on nodes having label myLabel,kubectl taint node -l myLabel  workload=edge-node-10:PreferNoSchedule
View the details of daemonset revision 1,kubectl rollout history daemonset/prod --revision=1
Update pod 'media-stream' with the label 'release' and the value 'v1.0',kubectl label pods media-stream release=v1.0
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod database-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach database-pod -c stardust-shuttle -i -t
Remove from node 'storage-node-13' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes storage-node-13 datacenter:NoExecute-
Get output from running the 'geth' command in cosmic-container from pod vpn-service-pod,kubectl exec vpn-service-pod -c cosmic-container -- geth
"Listen on port 8081 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8081:8888"
"Listen on port 8000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod 8000:3000
Update deployment 'gateway-deployment' with a new environment variable,kubectl set env deployment/gateway-deployment GOOGLE_API_KEY=your-google-api-key
Set deployment user-management-deployment's service account to vault,kubectl set serviceaccount deployment user-management-deployment vault
"Listen on port 9090 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 9090:8080
"Create a service for a pod vpn-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod vpn-service-pod --port=3306 --name=frontend
Get output from astro-container from pod database-pod,kubectl attach database-pod -c astro-container
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/backend-pod 8081:8081
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp kubeapps/front-end-pod-12:~/.config/kube :/tmp/bar
Set deployment monitoring-stack-deployment's service account to jenkins,kubectl set serviceaccount deployment monitoring-stack-deployment jenkins
"Listen on port 8000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8000:3000
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp logging/web-app-pod-1::/tmp/foo :/tmp/bar
"Get output from running 'node' command from the first pod of the service loadbalancer-service, using the first container by default",kubectl exec svc/loadbalancer-service -- node
"Listen on port 6379 locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod 6379:8080
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/backend-microservice-deployment -c analytics-pod-1
"Listen on port 8080 locally, forwarding to 5000 in the pod",kubectl port-forward pod/cdn-service-pod 8080:5000
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/analytics-service"
Update image of all containers of daemonset namespace-2 to 'redis:6.2.5',kubectl set image daemonset namespace-2 *=redis:6.2.5
Add a taint with key 'app' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  app=db-node-7:PreferNoSchedule
Create a deployment named logging that runs the ubuntu image,kubectl create deployment logging --image=ubuntu
Embed certificate authority data for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/cdn-service-pod 8888:8888
Update deployment 'proxy-service-deployment' with a new environment variable,kubectl set env deployment/proxy-service-deployment S3_BUCKET=my-s3-bucket
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""third-party-apps"" API group",kubectl get deployments.v2.1.0.third-party-apps -o yaml
Create a new service account named flux,kubectl create serviceaccount flux
Create a new secret named tls-certificate-secret from an env file,kubectl create secret generic tls-certificate-secret --from-env-file=path/to/parameters.env
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/analytics-pod 8888:8000
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/log-config deployment/scheduler-app-deployment
Remove from node 'node-2' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes node-2 special:NoSchedule-
Display only the most recent 31 lines of output in pod web-app-pod,kubectl logs --tail=31 web-app-pod
Return snapshot logs from container order-processing-deployment-1 of a deployment named mypod,kubectl logs deployment/order-processing-deployment -c mypod-1
Create a new LoadBalancer service named frontend-lb,kubectl create service loadbalancer frontend-lb --tcp=8082:8888
Return snapshot of previous terminated cosmic-container container logs from pod api-service-pod,kubectl logs -p -c cosmic-container api-service-pod
Set deployment notification-handler-deployment's service account to spinnaker,kubectl set serviceaccount deployment notification-handler-deployment spinnaker
"Listen on port 8000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/proxy-server-pod 8000:8000
Add a taint with key 'app' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  app=app-node-6:PreferNoSchedule
Update deployment 'mydeployment' with a new environment variable,kubectl set env deployment/mydeployment DEBUG=true
"Listen on port 8081 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8081:6379"
Return snapshot logs from container mydeployment-1 of a deployment named database-pod,kubectl logs deployment/mydeployment -c database-pod-1
"Listen on port 8888 locally, forwarding to 6379 in the pod",kubectl port-forward pod/backend-pod 8888:6379
"Listen on port 8000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8000:6379
Create a copy of api-service-pod adding a debug container and changing container images,"kubectl debug api-service-pod -it --copy-to=debug-image-1 --image=debian --set-image=cache=redis:alpine,api=api:v2"
"Update pod 'api' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods api security-scan-status='pass'
Remove from node 'node-1' all the taints with key 'disktype',kubectl taint nodes node-1 disktype-
"Update pod 'frontend' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend backup-strategy='daily backups'
"Delete pods and services with same names ""payment"" and ""log-aggregator""","kubectl delete pod,service payment log-aggregator"
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=prod-cluster
"Create a single ingress called 'myapp-ingress' that directs requests to website.com/bar to svc # svc1:8089 with a tls secret ""my-cert""","kubectl create ingress myapp-ingress --rule=""website.com/bar=svc1:8089,tls=my-cert"""
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/mypod 5000:9090
"Get output from running the 'mongod' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- mongod
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/search-service"
"Listen on port 9090 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 9090:3000
Create a new ClusterIP service named analytics-service-clusterip,kubectl create service clusterip analytics-service-clusterip --tcp=9092:3000
"Get output from running the 'dotnet' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- dotnet
Return snapshot logs from container authentication-service-deployment-1 of a deployment named backend-pod,kubectl logs deployment/authentication-service-deployment -c backend-pod-1
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""internal-apps"" API group",kubectl get deployments.v1.0.0.internal-apps -o json
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/backend-pod 8888:8888
Create a copy of auth-service-pod adding a debug container and changing container images,"kubectl debug auth-service-pod -it --copy-to=dgb-img --image=debian --set-image=web=nginx:latest,proxy=nginx:1.21"
"Create a service for a replicated hazelcast, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc hazelcast --port=8088 --target-port=700000
Begin streaming the logs of the cyber-sleuth container in pod payment-gateway-pod,kubectl logs -f -c cyber-sleuth payment-gateway-pod
"Update pod 'analytics' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods analytics owner='alice-smith'
"Listen on port 8081 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8081:8888
Add a taint with key 'workload' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  workload=edge-node-10:PreferNoSchedule
Show metrics for a given pod and its containers,kubectl top pod mypod --containers
"Listen on port 5432 locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod 5432:8080
"Listen on port 6379 locally, forwarding to 5432 in the pod",kubectl port-forward pod/backend-pod 6379:5432
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=settings=/path/to/configs/file1.txt --from-file=key2=/path/to/properties/file2.txt
Create a deployment named registry that runs the redis image with 6 replicas,kubectl create deployment registry --image=redis --replicas=6
Get output from rocket-ranger from pod email-service-pod,kubectl attach email-service-pod -c rocket-ranger
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.cluster-2-context.cluster star-cluster
Remove from node 'web-node-8' all the taints with key 'datacenter',kubectl taint nodes web-node-8 datacenter-
"Check to see if I can get the job named ""cleanup-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/cleanup-job -n staging
Return snapshot of previous terminated ruby container logs from pod vpn-service-pod,kubectl logs -p -c ruby vpn-service-pod
"Delete pods and services with same names ""auth"" and ""chat-app""","kubectl delete pod,service auth chat-app"
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod monitoring-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach monitoring-pod -c mycontainer -i -t
Scale a replica set named 'bar' to 7,kubectl scale --replicas=7 rs/bar
"Create a cluster role named ""reader"" with ResourceName specified",kubectl create clusterrole reader --verb=create --resource=services --resource-name=error-logger --resource-name=nginx-proxy
"Set a deployments redis container cpu limits to ""500m"" and memory to ""4Gi""","kubectl set resources deployment redis -c=nginx --limits=cpu=500m,memory=4Gi"
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/analytics-pod
Add to node 'monitoring-node-15' a taint with key 'hardware' and no value,kubectl taint nodes monitoring-node-15 hardware:NoSchedule
Return snapshot logs from container email-server-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/email-server-deployment -c monitoring-pod-1
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/monitoring-service 5432:https
Add a taint with key 'workload' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  workload=worker-node-3:PreferNoSchedule
Add a taint with key 'cpu-type' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  cpu-type=worker-node-3:PreferNoSchedule
Begin streaming the logs of the stardust-shuttle container in pod monitoring-pod,kubectl logs -f -c stardust-shuttle monitoring-pod
"List a pod identified by type and name specified in ""setup.yaml"" in JSON output format",kubectl get -f setup.yaml -o json
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.team-alpha-context.cluster cluster-alpha
"Listen on a random port locally, forwarding to 8000 in the pod",kubectl port-forward pod/api-service-pod :8000
"Update node 'dev-node-4' with a taint with key 'special' and value 'backup' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes dev-node-4 special=backup:NoSchedule
"If the deployment named baz's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/baz
"Create a single ingress called 'rontend-ingress' that directs requests to site.com/example to svc # svc1:8888 with a tls secret ""my-cert""","kubectl create ingress rontend-ingress --rule=""site.com/example=svc1:8888,tls=my-cert"""
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8088 5432
Create a job with a command,kubectl create job scaling-job --image=golang -- go version
Update deployment 'mydeployment' with a new environment variable,kubectl set env deployment/mydeployment GOOGLE_API_KEY=your-google-api-key
List a single pod in YAML output format,kubectl get -o yaml pod backend-pod
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json security-scan-status=pass
Return snapshot of previous terminated stardust-shuttle container logs from pod backend-pod,kubectl logs -p -c stardust-shuttle backend-pod
Edit the service named 'db-service',kubectl edit svc/db-service
"Scale a resource identified by type and name specified in ""settings.json"" to 3",kubectl scale --replicas=3 -f settings.json
"Listen on port 9090 locally, forwarding to 8081 in the pod",kubectl port-forward pod/frontend-pod 9090:8081
"Delete pods and services with same names ""frontend"" and ""log-aggregator""","kubectl delete pod,service frontend log-aggregator"
Get output from nebula-navigator from pod gateway-pod,kubectl attach gateway-pod -c nebula-navigator
Get output from running the 'kafka-topics --list' command in warp-drive from pod vpn-service-pod,kubectl exec vpn-service-pod -c warp-drive -- kafka-topics --list
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 5432 5432
Remove from node 'kube-master-9' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes kube-master-9 workload:NoSchedule-
"Listen on port 5432 locally, forwarding to 5432 in the pod",kubectl port-forward pod/chat-app-pod 5432:5432
Return snapshot of previous terminated nano-bot container logs from pod e-commerce-pod,kubectl logs -p -c nano-bot e-commerce-pod
Rename the context 'prod-context' to 'admin-context' in your kubeconfig file,kubectl config rename-context prod-context admin-context
"Create a single ingress called 'default-ingress' that directs requests to foo.com/module to svc # svc1:8083 with a tls secret ""my-cert""","kubectl create ingress default-ingress --rule=""foo.com/module=svc1:8083,tls=my-cert"""
"Update pod 'proxy-server' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server compliance-level=PCI-DSS
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/web-service"
"Wait for the pod ""analytics-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/analytics-pod
"Update node 'k8s-node-1' with a taint with key 'disktype' and value 'ssd' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes k8s-node-1 disktype=ssd:NoSchedule
"Listen on port 3000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 3000:8888
"If the deployment named frontend-rs's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/frontend-rs
Begin streaming the logs of the nano-bot container in pod media-stream-pod,kubectl logs -f -c nano-bot media-stream-pod
Create a new secret named app-config-secret from an env file,kubectl create secret generic app-config-secret --from-env-file=path/to/parameters.env
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-settings deployment/monitoring-stack-deployment
Diff resources included in params.json,kubectl diff -f params.json
"Update pod 'cdn' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods cdn expiration-date='2024-12-31'
"Set a deployments wordpress container cpu limits to ""50m"" and memory to ""64Mi""","kubectl set resources deployment wordpress -c=nginx --limits=cpu=50m,memory=64Mi"
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/chat-app-pod
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.spec.volumes
"Listen on port 3000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 3000:8080
"Update pod 'backend' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods backend SLA='99.9% uptime'
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""mobile-apps"" API group",kubectl get deployments.v1.0.0.mobile-apps -o json
Return snapshot logs from first container of a job named data-synchronization-job,kubectl logs job/data-synchronization-job
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/web-service"
"Check to see if I can get the job named ""image-processing-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/image-processing-job -n kube-ingress
Add to node 'web-node-8' a taint with key 'dedicated' and no value,kubectl taint nodes web-node-8 dedicated:NoSchedule
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/proxy-service"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node k8s-node-1 -p '{""spec"":{""containers"":[{""name"":""container-name"", ""resources"":{""limits"":{""cpu"":""200m""}}}]}'"
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 9090 3000
"Delete pods and services with same names ""vpn"" and ""proxy""","kubectl delete pod,service vpn proxy"
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/proxy-server-pod 5000:8081
"Listen on port 9090 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 9090:9090
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-settings deployment/proxy-service-deployment
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/monitoring-pod
Create a new secret named app-config-secret with keys for each file in folder bar,kubectl create secret generic app-config-secret --from-file=path/to/parameters
Get output from running the 'elasticsearch' command in warp-drive from pod gateway-pod,kubectl exec gateway-pod -c warp-drive -- elasticsearch
Display only the most recent 3 lines of output in pod media-stream-pod,kubectl logs --tail=3 media-stream-pod
Create a copy of backend-pod adding a debug container and changing container images,"kubectl debug backend-pod -it --copy-to=debug-image-1 --image=debian --set-image=worker=my-custom-worker:1.2.3,proxy=nginx:1.21"
Create a new config map named namespace-config from the key=value pairs in the file,kubectl create configmap namespace-config --from-file=path/to/configurations
"Mark node ""prod-node-5"" as schedulable",kubectl uncordon prod-node-5
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/backend-pod 5432 5432
Describe pods by label service=auth,kubectl describe po -l service=auth
Create a new LoadBalancer service named api-service-lb,kubectl create service loadbalancer api-service-lb --tcp=7000:8181
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-settings deployment/payment-processor-deployment
Create a new secret named tls-certificate-secret from an env file,kubectl create secret generic tls-certificate-secret --from-env-file=path/to/configs.env
Create a new secret named api-key-secret with keys for each file in folder bar,kubectl create secret generic api-key-secret --from-file=path/to/preferences
Delete the cloud-cluster cluster,kubectl config delete-cluster cloud-cluster
"Update pod 'gateway' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods gateway compliance-level='PCI-DSS'
Copy ~/.config/kube local file to /tmp/bar in a remote pod in a specific container,kubectl cp ~/.config/kube message-broker-pod-15:/tmp/bar -c task-processor
Set deployment cache-cluster-deployment's service account to dashboard,kubectl set serviceaccount deployment cache-cluster-deployment dashboard
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""alpha-apps"" API group",kubectl get deployments.hotfix-1.1.2.alpha-apps -o yaml
Create a deployment named mattermost that runs the amazonlinux image with 7 replicas,kubectl create deployment mattermost --image=amazonlinux --replicas=7
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in a specific container,kubectl cp /tmp/foo_dir file-server-pod-14:/tmp/bar -c security-scanner
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""internal-apps"" API group",kubectl get deployments.v1.0.0.internal-apps -o yaml
Get output from running the 'nginx' command in cyber-sleuth from pod e-commerce-pod,kubectl exec e-commerce-pod -c cyber-sleuth -- nginx
"Create a cluster role binding for jane.doe, bob.smith, and developers using the cluster-admin cluster role",kubectl create clusterrolebinding cluster-admin --clusterrole=cluster-admin --user=jane.doe --user=bob.smith --group=developers
Add a taint with key 'hardware' on nodes having label release=beta,kubectl taint node -l release=beta  hardware=db-node-7:PreferNoSchedule
"Start the confluentinc/cp-kafka pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=confluentinc/cp-kafka -- <arg1> <arg2> ... <argN>
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.user-a-context.cluster on-prem-cluster
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""web-apps"" API group",kubectl get deployments.v1.1.1.web-apps -o json
Return snapshot of previous terminated stardust-shuttle container logs from pod mypod,kubectl logs -p -c stardust-shuttle mypod
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8888 9090
Get output from running the 'go version' command in nano-bot from pod mypod,kubectl exec mypod -c nano-bot -- go version
Create a new service account named metrics-server,kubectl create serviceaccount metrics-server
Create an ingress with TLS enabled using the default ingress certificate and different path types,"kubectl create ingress ingtls --class=default \
--rule=""testing.com/=svc:https,tls"" \
--rule=""testing.com/path/subpath*=othersvc:5432"""
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8888 6379
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/web-service"
"Delete pods and services with same names ""email"" and ""backend""","kubectl delete pod,service email backend"
"Update pod 'web' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web compliance-level=PCI-DSS
Delete pods and services with label project=project-alpha,"kubectl delete pods,services -l project=project-alpha"
Return snapshot of previous terminated lunar-launcher container logs from pod database-pod,kubectl logs -p -c lunar-launcher database-pod
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod :8080
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=prod-cluster
Update pod 'payment' with the label 'release' and the value 'v2.0',kubectl label pods payment release=v2.0
"If you don't already have a .dockercfg file, you can create a dockercfg secret directly by using:",kubectl create secret docker-registry my-secret --docker-server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL
Create a job with a command,kubectl create job certificate-renewal --image=ruby -- gem --version
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp openfaas/message-broker-pod-15:/tmp/foo /tmp/bar
"Update pod 'frontend' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend env=staging
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod :5432
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 9090 8081
Begin streaming the logs of the ruby container in pod backend-pod,kubectl logs -f -c ruby backend-pod
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/namespace-config deployment/api-server-deployment
Update a cluster role binding for jenkins,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:jenkins
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/global-config deployment/frontend-deployment
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-secrets deployment/analytics-platform-deployment
Begin streaming the logs of the code-explorer container in pod media-stream-pod,kubectl logs -f -c code-explorer media-stream-pod
"Create a cluster role named ""bar"" that allows user to perform ""list"", ""create"" and ""connect"" on pods","kubectl create clusterrole bar --verb=list,create,connect --resource=pods"
"Create a single ingress called 'rontend-ingress' that directs requests to website.com/input to svc # svc1:8443 with a tls secret ""my-cert""","kubectl create ingress rontend-ingress --rule=""website.com/input=svc1:8443,tls=my-cert"""
"Create a cluster role name ""admin_role"" with NonResourceURL specified","kubectl create clusterrole ""admin_role"" --verb=create --non-resource-url=/swagger-ui/*"
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/mydeployment S3_BUCKET=my-s3-bucket -o yaml
Update pod 'analytics' with the label 'env' and the value 'development',kubectl label pods analytics env=development
Begin streaming the logs of the astro-container container in pod backend-pod,kubectl logs -f -c astro-container backend-pod
"Update pod 'gateway' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway scaling-policy=auto-horizontal-scaling
Import environment from a secret,kubectl set env --from=secret/api-secret-key deployment/payment-processor-deployment
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n cert-manager
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8083 --target-port=800000
Show metrics for the pods defined by label instance=app-instance-1,kubectl top pod -l instance=app-instance-1
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n production
"Listen on port 8888 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8888:8888
Kubectl shell completion,"source '$HOME/.kube/completion.bash.inc'
"" >> $HOME/.bash_profile
source $HOME/.bash_profile"
List a single pod in JSON output format,kubectl get -o json pod backend-pod
Create a new LoadBalancer service named vpn-service-lb,kubectl create service loadbalancer vpn-service-lb --tcp=5000:3306
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""api-v1"" API group",kubectl get deployments.rc-1.1.0.api-v1 -o json
"If the deployment named payment-service-rs's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/payment-service-rs
Get output from running the 'dotnet --list-sdks' command in time-machine from pod e-commerce-pod,kubectl exec e-commerce-pod -c time-machine -- dotnet --list-sdks
Create a job with a command,kubectl create job data-migration-job --image=ethereum/client-go -- geth version
Create an ingress with two annotations: ingress.annotation1 and ingress.annotations2,"kubectl create ingress annotated --class=default --rule=""foo.com/input=svc:port"" \
--annotation ingress.annotation1=foo \
--annotation ingress.annotation2=bla"
"Set a deployments mysql container cpu limits to ""200m"" and memory to ""4Gi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=200m,memory=4Gi"
"Delete pods and services with same names ""proxy-server"" and ""gateway""","kubectl delete pod,service proxy-server gateway"
Create a deployment named my-dep that runs the mysql image with 6 replicas,kubectl create deployment my-dep --image=mysql --replicas=6
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/web-app-pod 8080:8088
Add a taint with key 'special' on nodes having label component=proxy,kubectl taint node -l component=proxy  special=web-node-8:PreferNoSchedule
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=e2e
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/cdn-service-pod 8000:5432
"Listen on port 8080 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8080:6379
Begin streaming the logs of the ruby container in pod chat-app-pod,kubectl logs -f -c ruby chat-app-pod
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.edge-context.cluster kube-cluster-1
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8081 3000
Import environment from a secret,kubectl set env --from=secret/gcp-service-account-secret deployment/cache-cluster-deployment
Return snapshot of previous terminated quantum-quark container logs from pod auth-service-pod,kubectl logs -p -c quantum-quark auth-service-pod
Update image of all containers of daemonset development to 'httpd:2.4.48',kubectl set image daemonset development *=httpd:2.4.48
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""custom-apps"" API group",kubectl get deployments.stable-2.0.0.custom-apps -o yaml
Create a new NodePort service named auth-service-nodeport,kubectl create service nodeport auth-service-nodeport --tcp=7000:5432
Get output from running the 'elasticsearch' command in mycontainer from pod e-commerce-pod,kubectl exec e-commerce-pod -c mycontainer -- elasticsearch
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=5432:3000
Start a postgres pod and let the container expose port 5000,kubectl run hazelcast --image=postgres --port=5000
Return snapshot of previous terminated rocket-ranger container logs from pod payment-gateway-pod,kubectl logs -p -c rocket-ranger payment-gateway-pod
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/preferences/file2.txt
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-settings deployment/database-deployment
Return snapshot of previous terminated mycontainer container logs from pod backend-pod,kubectl logs -p -c mycontainer backend-pod
"Get output from running 'python --version' command from the first pod of the service monitoring-service, using the first container by default",kubectl exec svc/monitoring-service -- python --version
Import environment from a secret,kubectl set env --from=secret/ssh-key-secret deployment/payment-processor-deployment
"Mark node ""prod-node-5"" as unschedulable",kubectl cordon prod-node-5
Create a deployment with a command,kubectl create deployment loadbalancer --image=python -- python
Roll back to the previous deployment,kubectl rollout undo deployment/services
"Update pod 'api' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api expiration-date='2024-12-31'
"Delete pods and services with same names ""payment"" and ""analytics""","kubectl delete pod,service payment analytics"
"Set a deployments alpine container cpu limits to ""1"" and memory to ""2Gi""","kubectl set resources deployment alpine -c=nginx --limits=cpu=1,memory=2Gi"
Add a taint with key 'environment' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  environment=k8s-node-1:PreferNoSchedule
Add a taint with key 'environment' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  environment=edge-node-10:PreferNoSchedule
"Update pod 'cdn' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling', overwriting any existing value",kubectl annotate --overwrite pods cdn scaling-policy='auto-horizontal-scaling'
Start a hazelcast pod and let the container expose port 8084,kubectl run hazelcast --image=hazelcast/hazelcast --port=8084
Create a copy of chat-app-pod changing all container images to mongo,kubectl debug chat-app-pod --copy-to=my-custom-dbg --set-image=*=mongo
Create a new LoadBalancer service named web-app-lb,kubectl create service loadbalancer web-app-lb --tcp=8443:7000
"Listen on port 5432 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 5432:5000"
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/log-aggregator-deployment -c web-app-pod-1
Set deployment notification-handler-deployment's service account to flux,kubectl set serviceaccount deployment notification-handler-deployment flux
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.on-prem-context.cluster dev-cluster
Set deployment analytics-platform-deployment's service account to kube-dns,kubectl set serviceaccount deployment analytics-platform-deployment kube-dns
Print the supported non-namespaced resources,kubectl api-resources --scopespaced=false
"Delete pods and services with same names ""web"" and ""chat-app""","kubectl delete pod,service web chat-app"
Set deployment search-engine-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment search-engine-deployment gitlab-runner
"Update pod 'database' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database git-repo='https://github.com/example/my-app'
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/hazelcast/hazelcast
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/log-aggregator-pod
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/virus-scan-job -n monitoring
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/gateway-pod
"Update pod 'backend' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend env=staging
"Check to see if I can get the job named ""report-generation-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/report-generation-job -n kube-node-lease
Get output from running the 'nginx -t' command in code-explorer from pod monitoring-pod,kubectl exec monitoring-pod -c code-explorer -- nginx -t
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-config-prod deployment/scheduler-app-deployment
"Get output from running 'nginx' command from the first pod of the deployment backend-microservice-deployment, using the first container by default",kubectl exec deploy/backend-microservice-deployment -- nginx
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 5432 8081
"Get output from running 'wp' command from the first pod of the deployment email-server-deployment, using the first container by default",kubectl exec deploy/email-server-deployment -- wp
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json alert-email=alerts@example.com
Return snapshot logs from pod monitoring-pod with only one container,kubectl logs monitoring-pod
Update image of all containers of daemonset services to 'nginx:1.21.3',kubectl set image daemonset services *=nginx:1.21.3
Return only the phase value of the specified pod,kubectl get -o template pod/database-pod --template={{.status.phase}}
Begin streaming the logs of the quantum-quark container in pod frontend-pod,kubectl logs -f -c quantum-quark frontend-pod
Create a new ClusterIP service named git-service-clusterip,kubectl create service clusterip git-service-clusterip --tcp=8089:8181
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/backend-pod 5000:9090
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/backend-pod
Return snapshot logs from first container of a job named cache-warming-job,kubectl logs job/cache-warming-job
Set deployment frontend-deployment's service account to elasticsearch,kubectl set serviceaccount deployment frontend-deployment elasticsearch
"Listen on port 8000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8000:5000
"Update pod 'web' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web custom-label=my-custom-value
"Listen on port 8000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8000:9090
Update pod 'database' with the label 'component' and the value 'api',kubectl label pods database component=api
"Listen on port 8081 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8081:8081
Add a taint with key 'workload' on nodes having label release=beta,kubectl taint node -l release=beta  workload=node-2:PreferNoSchedule
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""extensions"" API group",kubectl get deployments.feature-branch-2.3.0.extensions -o json
"Auto scale a deployment ""vpn"", with the number of pods between 3 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment vpn --min=3 --max=14
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/analytics-service"
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.admin-context.cluster prod-cluster
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-secrets deployment/analytics-platform-deployment
Remove from node 'db-node-7' all the taints with key 'workload',kubectl taint nodes db-node-7 workload-
Add to node 'node-2' a taint with key 'zone' and no value,kubectl taint nodes node-2 zone:NoSchedule
Add a taint with key 'hardware' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  hardware=node-1:PreferNoSchedule
Set deployment authentication-service-deployment's service account to jenkins,kubectl set serviceaccount deployment authentication-service-deployment jenkins
"Auto scale a deployment ""vpn"", with the number of pods between 2 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment vpn --min=2 --max=11
"Listen on port 8000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8000:9090
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/database-indexing-job -n production
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node monitoring-node-15 -p $'spec:\n containers:\n- name: container-name\n  resources:\n    limits:\n      cpu: 200m'
Create a job with a command,kubectl create job certificate-renewal --image=python -- python --version
Update pod 'api' with the label 'role' and the value 'backend',kubectl label pods api role=backend
"If the deployment named prod-app-rs's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/prod-app-rs
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/cache-service"
Return snapshot logs from first container of a job named cleanup-job,kubectl logs job/cleanup-job
Create a copy of payment-gateway-pod changing the command of time-machine,kubectl debug payment-gateway-pod -it --copy-to=dgb-img --container=time-machine -- sh
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=data-cluster
"Set a deployment's golang:1.17 container image to 'golang', and its busybox container image to 'busybox'",kubectl set image deployment/golang busybox=busybox golang=golang:1.17
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""legacy-apps"" API group",kubectl get deployments.v3.0.0.legacy-apps -o yaml
"Start a node pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=node --overrides='{ ""apiVersion"": ""stable-2.0.0"", ""spec"": { ... } }'"
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/monitoring-config deployment/cache-cluster-deployment
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kube-public/admin-dashboard-pod-16::/tmp/foo /tmp/bar
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""api-v1"" API group",kubectl get deployments.v2.1.0.api-v1 -o yaml
Add a taint with key 'hardware' on nodes having label role=database,kubectl taint node -l role=database  hardware=node-2:PreferNoSchedule
"Update pod 'database' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database deployment-script='https://example.com/deploy.sh'
"Delete pods and services with same names ""cdn"" and ""media-stream""","kubectl delete pod,service cdn media-stream"
"Update pod 'payment' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment description='Web server for marketing site'
Set the user field on the cloud-context context entry without touching other values,kubectl config set-context cloud-context --user=cluster-admin
Start a ethereum/client-go pod and let the container expose port 3000,kubectl run hazelcast --image=ethereum/client-go --port=3000
Create a pod using the data in preferences.json,kubectl create -f ./preferences.json
Scale a replica set named 'frontend-rs' to 1,kubectl scale --replicas=1 rs/frontend-rs
Return snapshot logs from container api-server-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/api-server-deployment -c analytics-pod-1
"Delete pods and services with same names ""email"" and ""api""","kubectl delete pod,service email api"
Create a deployment named monitoring that runs the alpine image with 5 replicas,kubectl create deployment monitoring --image=alpine --replicas=5
Get output from cyber-sleuth from pod backend-pod,kubectl attach backend-pod -c cyber-sleuth
"Set a deployments go container cpu limits to ""100m"" and memory to ""64Mi""","kubectl set resources deployment go -c=nginx --limits=cpu=100m,memory=64Mi"
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/namespace-config deployment/api-server-deployment
Set some of the local shell environment into a deployment config on the server,env | grep RAILS_ | kubectl set env -e - deployment/email-server-deployment
Create a deployment named sonarqube that runs the redis image with 2 replicas,kubectl create deployment sonarqube --image=redis --replicas=2
Update pod 'backend' with the label 'tier' and the value 'backend',kubectl label pods backend tier=backend
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.user-a-context.cluster web-cluster
Get output from rocket-ranger from pod vpn-service-pod,kubectl attach vpn-service-pod -c rocket-ranger
Create a new ExternalName service named external-metrics-service,kubectl create service externalname external-metrics-service --external-name mockup-cloud.cloud
Add to node 'prod-node-5' a taint with key 'workload' and no value,kubectl taint nodes prod-node-5 workload:NoSchedule
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=properties=/path/to/parameters/file1.txt --from-file=key1=/path/to/profiles/file2.txt
"Listen on port 8000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8000:5000"
"Delete pods and services with same names ""api"" and ""gateway""","kubectl delete pod,service api gateway"
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/cache-cluster-deployment -c email-service-pod-1
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8080 6379
"Auto scale a deployment ""cdn"", with the number of pods between 4 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment cdn --min=4 --max=14
"Update pod 'email' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods email owner='alice-smith'
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/namespace-config deployment/backend-microservice-deployment
Create a job with a command,kubectl create job audit-job --image=nginx -- nginx -t
"Update pod 'cdn' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn git-repo='https://github.com/example/my-app'
"Delete pods and services with same names ""auth"" and ""proxy""","kubectl delete pod,service auth proxy"
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 8000 8000
"Update pod 'foo' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo owner='alice smith'
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8000 8088
"If the deployment named bar's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/bar
Set deployment scheduler-app-deployment's service account to tekton,kubectl set serviceaccount deployment scheduler-app-deployment tekton
Set only the server field on the galaxy-cluster cluster entry without touching other values,kubectl config set-cluster galaxy-cluster --server=https://1.2.3.4
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/scheduler-service 9090:https
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/proxy-service-pod
Create a copy of analytics-pod changing all container images to node,kubectl debug analytics-pod --copy-to=debug-image-api --set-image=*=node
"Update pod 'proxy' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy alert-email=alerts@example.com
Get output from running the 'ruby --version' command in stardust-shuttle from pod chat-app-pod,kubectl exec chat-app-pod -c stardust-shuttle -- ruby --version
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 6379 8888
"Start a alpine pod and set environment variables ""DNS_DOMAIN=cluster"" and ""POD_NAMESPACE=default"" in the container","kubectl run hazelcast --image=alpine --env=""DNS_DOMAIN=cluster"" --env=""POD_NAMESPACE=default"""
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/monitoring-config deployment/api-server-deployment
List a single pod in YAML output format,kubectl get -o yaml pod log-aggregator-pod
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/app-config deployment/database-deployment
"Delete pods and services with same names ""log-aggregator"" and ""backend""","kubectl delete pod,service log-aggregator backend"
Switch to raw terminal mode; sends stdin to 'bash' in nebula-navigator from pod security-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach security-service-pod -c nebula-navigator -i -t
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod email-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach email-service-pod -c nano-bot -i -t
Get output from running the 'node --version' command in warp-drive from pod chat-app-pod,kubectl exec chat-app-pod -c warp-drive -- node --version
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.on-prem-context.cluster data-cluster
"Listen on port 6379 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 6379:5000
Remove from node 'gpu-node-12' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes gpu-node-12 dedicated:NoSchedule-
"Listen on port 8000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8000:8080
"Listen on port 8081 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8081:8080"
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8000 3000
Add a taint with key 'cpu-type' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  cpu-type=dev-node-4:PreferNoSchedule
"Check to see if I can get the job named ""report-generation-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/report-generation-job -n monitoring
Embed certificate authority data for the e2e cluster entry,kubectl config set-cluster e2e --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
Update image of all containers of daemonset app-v2 to 'amazonlinux:2',kubectl set image daemonset app-v2 *=amazonlinux:2
"Remove exec auth plugin environment variables for the ""app-operator"" entry",kubectl config set-credentials app-operator --exec-env=var-to-remove-
Create a new ClusterIP service named analytics-service-clusterip,kubectl create service clusterip analytics-service-clusterip --tcp=8081:5000
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=9091:8084
"Create a cluster role named ""reader"" with API Group specified","kubectl create clusterrole reader --verb=proxy,get,update --resource=rolebindings.rbac.authorization.k8s.io"
"Listen on port 8081 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8081:8088"
Import environment from a secret,kubectl set env --from=secret/database-secret deployment/notification-handler-deployment
Get output from time-machine from pod vpn-service-pod,kubectl attach vpn-service-pod -c time-machine
Create a job with a command,kubectl create job log-collection --image=alpine -- sleep 3600
Edit the service named 'web-service',kubectl edit svc/web-service
"Get output from running 'bash' command from the first pod of the deployment load-balancer-deployment, using the first container by default",kubectl exec deploy/load-balancer-deployment -- bash
Rename the context 'cloud-context' to 'admin-context' in your kubeconfig file,kubectl config rename-context cloud-context admin-context
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json scaling-policy=auto-horizontal-scaling
"Listen on port 8080 locally, forwarding to 8000 in the pod",kubectl port-forward pod/security-service-pod 8080:8000
"Set a deployments elasticsearch container cpu limits to ""3"" and memory to ""128Mi""","kubectl set resources deployment elasticsearch -c=nginx --limits=cpu=3,memory=128Mi"
Return snapshot of previous terminated ruby container logs from pod email-service-pod,kubectl logs -p -c ruby email-service-pod
Create a deployment named sonarqube that runs the redis image and expose port 8080,kubectl create deployment sonarqube --image=redis --port=8080
"Wait for the pod ""e-commerce-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/e-commerce-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/kube-system-config deployment/mydeployment
"Remove exec auth plugin environment variables for the ""operator"" entry",kubectl config set-credentials operator --exec-env=var-to-remove-
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""mobile-apps"" API group",kubectl get deployments.v3.0.0.mobile-apps -o json
Create a deployment named mattermost that runs the golang image and expose port 5432,kubectl create deployment mattermost --image=golang --port=5432
Describe a node,kubectl describe nodes monitoring-node-16.monitoring-center.net
View the details of daemonset revision 1,kubectl rollout history daemonset/test --revision=1
Set deployment order-processing-deployment's service account to tiller,kubectl set serviceaccount deployment order-processing-deployment tiller
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8080 --target-port=818100
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/e-commerce-pod 9090:8088
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node app-node-6 -p $'stringData:\n password: new-password'
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/payment-service"
Create a job with a command,kubectl create job report-generation-job --image=php -- php --version
Return snapshot logs from pod email-service-pod with only one container,kubectl logs email-service-pod
Get output from running the 'irb' command in time-machine from pod proxy-server-pod,kubectl exec proxy-server-pod -c time-machine -- irb
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod 8888:8080
"Create a service for a replicated php, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc php --port=8082 --target-port=637900
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""extensions"" API group",kubectl get deployments.dev-2.2.0.extensions -o yaml
"Scale a resource identified by type and name specified in ""conf.json"" to 5",kubectl scale --replicas=5 -f conf.json
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod cdn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach cdn-service-pod -c mycontainer -i -t
Update deployment 'user-management-deployment' with a new environment variable,kubectl set env deployment/user-management-deployment S3_BUCKET=my-s3-bucket
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/log-aggregator-pod 3000:5432
Create a deployment named grafana that runs the confluentinc/cp-kafka image with 6 replicas,kubectl create deployment grafana --image=confluentinc/cp-kafka --replicas=6
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=8080 --target-port=800000
Create a cron job with a command,"kubectl create cronjob alerts-cleanup --image=centos --schedule=""*/1 * * * *"" -- sleep 3600"
Get output from running the 'mysql' command in cyber-sleuth from pod vpn-service-pod,kubectl exec vpn-service-pod -c cyber-sleuth -- mysql
"Listen on port 9090 locally, forwarding to 8888 in the pod",kubectl port-forward pod/proxy-server-pod 9090:8888
Get output from rocket-ranger from pod api-service-pod,kubectl attach api-service-pod -c rocket-ranger
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-secrets deployment/proxy-service-deployment
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name museum-example.museum
Get output from running the 'go version' command in nebula-navigator from pod cdn-service-pod,kubectl exec cdn-service-pod -c nebula-navigator -- go version
List the environment variables defined on a deployments 'web-app-deployment',kubectl set env deployment/web-app-deployment --list
"Check to see if I can get the job named ""backup-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/backup-job -n namespace-1
Set deployment authentication-service-deployment's service account to my-service-account,kubectl set serviceaccount deployment authentication-service-deployment my-service-account
Use the context for the staging-cluster cluster,kubectl config use-context staging-cluster
Add a taint with key 'special' on nodes having label role=database,kubectl taint node -l role=database  special=backup-node-14:PreferNoSchedule
Show all logs from pod database-pod written in the last hour,kubectl logs --since=1h database-pod
Update pod 'gateway' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods gateway unhealthy-
Get output from running the 'sleep 3600' command in cosmic-container from pod chat-app-pod,kubectl exec chat-app-pod -c cosmic-container -- sleep 3600
Create a job with a command,kubectl create job data-migration-job --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
Create a cron job with a command,"kubectl create cronjob database-maintenance --image=node --schedule=""*/1 * * * *"" -- node --version"
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/api-service-pod :5000
"List deployments in JSON output format, in the ""custom-version"" version of the ""custom-apps"" API group",kubectl get deployments.custom-version.custom-apps -o json
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.on-prem-context.cluster testing-cluster
Set deployment notification-handler-deployment's service account to default,kubectl set serviceaccount deployment notification-handler-deployment default
Get output from running the 'dotnet --list-sdks' command in cyber-sleuth from pod cdn-service-pod,kubectl exec cdn-service-pod -c cyber-sleuth -- dotnet --list-sdks
Scale a replica set named 'web' to 1,kubectl scale --replicas=1 rs/web
"Create a single ingress called 'website-ingress' that directs requests to foo.com/example to svc # svc1:9090 with a tls secret ""my-cert""","kubectl create ingress website-ingress --rule=""foo.com/example=svc1:9090,tls=my-cert"""
Set deployment load-balancer-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment load-balancer-deployment kube-controller-manager
Update image of all containers of daemonset development to 'openjdk:16.0.2',kubectl set image daemonset development *=openjdk:16.0.2
Create a deployment named jenkins-x that runs the nginx image and expose port 3306,kubectl create deployment jenkins-x --image=nginx --port=3306
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-name-config deployment/gateway-deployment
"Auto scale a deployment ""cdn"", with the number of pods between 2 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment cdn --min=2 --max=11
"Auto scale a deployment ""email"", with the number of pods between 1 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment email --min=1 --max=9
"Listen on a random port locally, forwarding to 8888 in the pod",kubectl port-forward pod/log-aggregator-pod :8888
"Update pod 'payment' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment criticality=high
Remove from node 'node-1' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes node-1 special:NoSchedule-
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach gateway-pod -c rocket-ranger -i -t
Create a deployment named auth that runs the golang image,kubectl create deployment auth --image=golang
Create a new secret named password-secret from an env file,kubectl create secret generic password-secret --from-env-file=path/to/profiles.env
"List all allowed actions in namespace ""cert-manager""",kubectl auth can-i --list --namespace=cert-manager
Update image of all containers of daemonset staging to 'ubuntu:20.04',kubectl set image daemonset staging *=ubuntu:20.04
Create a job with a command,kubectl create job data-migration-job --image=wordpress -- wp
Copy ~/.config/kube from a remote pod to /tmp/bar locally,kubectl cp default/admin-dashboard-pod-16:~/.config/kube /tmp/bar
"Set a deployments ubuntu container cpu limits to ""2"" and memory to ""512Mi""","kubectl set resources deployment ubuntu -c=nginx --limits=cpu=2,memory=512Mi"
Display only the most recent 12 lines of output in pod e-commerce-pod,kubectl logs --tail=12 e-commerce-pod
"Update pod 'email' with the annotation 'description' and the value 'Web server for marketing site', overwriting any existing value",kubectl annotate --overwrite pods email description='Web server for marketing site'
List a single pod in JSON output format,kubectl get -o json pod auth-service-pod
"Update pod 'chat-app' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app expiration-date='2024-12-31'
"Listen on port 8081 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8081:5432
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp istio-system/cache-pod-5::/tmp/foo :/tmp/bar
Get output from nano-bot from pod analytics-pod,kubectl attach analytics-pod -c nano-bot
"Update pod 'security' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security release-notes='https://example.com/release-notes/v2.5.1'
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-name-config deployment/monitoring-stack-deployment
Return snapshot logs from container user-management-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/user-management-deployment -c proxy-service-pod-1
Create a job,kubectl create job security-scan-job --image=busybox
Return snapshot logs from first container of a job named queue-processing-job,kubectl logs job/queue-processing-job
Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo kube-public/load-balancer-pod-9:/tmp/bar
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 6379 9090
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/db-config deployment/authentication-service-deployment
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/global-config deployment/database-deployment
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 8088,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=8088
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=6379 --target-port=808200
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named database-pod,kubectl logs deployment/cache-cluster-deployment -c database-pod-1
"Create a role named ""admin_role"" with ResourceName specified",kubectl create role admin_role --verb=use --resource=pods --resource-name=cdn-proxy --resource-name=queue-consumer
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/security-service-pod 5432 5432
"Start a confluentinc/cp-kafka pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=confluentinc/cp-kafka --restart=Never
Create a new config map named app-name-config from the key=value pairs in the file,kubectl create configmap app-name-config --from-file=path/to/properties
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/data-synchronization-job -n staging
Create a new secret named docker-registry-secret from an env file,kubectl create secret generic docker-registry-secret --from-env-file=path/to/properties.env
Create a new NodePort service named api-service-nodeport,kubectl create service nodeport api-service-nodeport --tcp=7000:8081
"Listen on port 8080 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8080:9090"
Create a job with a command,kubectl create job scaling-job --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/analytics-service"
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir velero/monitoring-agent-pod-6::/tmp/bar
Get output from running the 'mongo' command in code-explorer from pod gateway-pod,kubectl exec gateway-pod -c code-explorer -- mongo
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/analytics-pod 3000:3000
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/namespace-config deployment/mydeployment
Update image of all containers of daemonset test to 'ubuntu:20.04',kubectl set image daemonset test *=ubuntu:20.04
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8888 8888
Add a taint with key 'hardware' on nodes having label release=beta,kubectl taint node -l release=beta  hardware=k8s-node-1:PreferNoSchedule
Create a job with a command,kubectl create job indexing --image=mysql -- mysql --version
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kube-dns/message-broker-pod-15:/tmp/foo :/tmp/bar
Copy /tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp metallb-system/load-balancer-pod-9:/tmp/foo /etc/kubernetes
"Listen on port 8080 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8080:8081
Update pod 'web' with the label 'tier' and the value 'backend',kubectl label pods web tier=backend
Start a redis pod and let the container expose port 9090,kubectl run hazelcast --image=redis --port=9090
Create a deployment named ingress that runs the postgres image,kubectl create deployment ingress --image=postgres
Reconcile RBAC resources from a file,kubectl auth reconcile -f rbac.yaml
Return snapshot of previous terminated mycontainer container logs from pod analytics-pod,kubectl logs -p -c mycontainer analytics-pod
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/proxy-service-pod
"Listen on port 9090 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 9090:6379"
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod cdn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach cdn-service-pod -c cosmic-container -i -t
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir cert-manager/logging-agent-pod-7::/tmp/bar
Remove from node 'k8s-node-1' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes k8s-node-1 environment:NoSchedule-
Set the user field on the cluster-2-context context entry without touching other values,kubectl config set-context cluster-2-context --user=cluster-admin
Create a deployment named wordpress that runs the ethereum/client-go image and expose port 8010,kubectl create deployment wordpress --image=ethereum/client-go --port=8010
Create a copy of mypod changing all container images to amazonlinux,kubectl debug mypod --copy-to=debug-image-1 --set-image=*=amazonlinux
"Check to see if I can get the job named ""cron-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/cron-job -n kube-node-lease
Update pod 'chat-app' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods chat-app component-
"Get output from running 'ruby --version' command from the first pod of the deployment gateway-deployment, using the first container by default",kubectl exec deploy/gateway-deployment -- ruby --version
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 8888,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=8888
Create a new secret named my-secret with keys for each file in folder bar,kubectl create secret generic my-secret --from-file=path/to/options
Copy /tmp/foo local file to /etc/kubernetes in a remote pod in a specific container,kubectl cp /tmp/foo web-app-pod-1:/etc/kubernetes -c ingress-controller
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/global-config deployment/log-aggregator-deployment
Get the documentation of the resource and its fields,kubectl explain resource=configmaps
Update pod 'backend' with the label 'role' and the value 'cache',kubectl label pods backend role=cache
Return only the phase value of the specified pod,kubectl get -o template pod/analytics-pod --template={{.status.phase}}
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.team-beta-context.cluster cluster-gamma
Edit the service named 'order-service',kubectl edit svc/order-service
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-config-prod deployment/payment-processor-deployment
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 8888 5000
"If the deployment named frontend-rs's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/frontend-rs
Create a job with a command,kubectl create job testing --image=python -- python
Remove from node 'db-node-7' all the taints with key 'hardware',kubectl taint nodes db-node-7 hardware-
"Enable new exec auth plugin for the ""web-app"" entry",kubectl config set-credentials web-app --exec-command=/path/to/the/executable --exec-api-version=client.authentication.k8s.io/v1beta1
"Delete pods and services with same names ""foo"" and ""chat-app""","kubectl delete pod,service foo chat-app"
Get output from running the 'nginx -t' command in quantum-quark from pod mypod,kubectl exec mypod -c quantum-quark -- nginx -t
Create a copy of cdn-service-pod changing the command of cosmic-container,kubectl debug cdn-service-pod -it --copy-to=debug-image-memcached --container=cosmic-container -- sh
Add a taint with key 'special' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  special=node-2:PreferNoSchedule
Return only the phase value of the specified pod,kubectl get -o template pod/api-service-pod --template={{.status.phase}}
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/log-analysis-job -n kube-node-lease
"Get output from running 'nginx -t' command from the first pod of the deployment api-server-deployment, using the first container by default",kubectl exec deploy/api-server-deployment -- nginx -t
"Scale a resource identified by type and name specified in ""setup.json"" to 1",kubectl scale --replicas=1 -f setup.json
"List all allowed actions in namespace ""staging""",kubectl auth can-i --list --namespace=staging
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=conf=/path/to/settings/file1.txt --from-file=data=/path/to/options/file2.txt
"Update pod 'analytics' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods analytics app-version='2.5.1'
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.app-2-context.cluster testing-cluster
Set the resource request and limits for all containers in centos,"kubectl set resources deployment centos --limits=cpu=200m,memory=512Mi --requests=cpu=1,memory=256Mi"
Begin streaming the logs of the rocket-ranger container in pod monitoring-pod,kubectl logs -f -c rocket-ranger monitoring-pod
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json criticality=high
Create a new service account named fluentd,kubectl create serviceaccount fluentd
"Update pod 'api' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api security-scan-status=pass
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/kube-system-config deployment/monitoring-stack-deployment
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=moon-cluster
Set deployment backend-microservice-deployment's service account to my-service-account,kubectl set serviceaccount deployment backend-microservice-deployment my-service-account
Start a ruby pod and let the container expose port 9091,kubectl run hazelcast --image=ruby --port=9091
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""external-apps"" API group",kubectl get deployments.stable-2.0.0.external-apps -o json
"Update pod 'media-stream' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream team='frontend team'
Create a job with a command,kubectl create job batch-processing --image=wordpress -- apache2ctl -D FOREGROUND
"Update pod 'proxy' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy custom-label=my-custom-value
"Check to see if I can get the job named ""report-generation-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/report-generation-job -n kube-public
Get output from running the 'dotnet' command in nebula-navigator from pod mypod,kubectl exec mypod -c nebula-navigator -- dotnet
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller payment-gateway-rc
"Start a ubuntu pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ubuntu --overrides='{ ""apiVersion"": ""feature-branch-2.3.0"", ""spec"": { ... } }'"
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-settings deployment/email-server-deployment
Copy ~/.config/kube local file to /etc/kubernetes in a remote pod in a specific container,kubectl cp ~/.config/kube monitoring-agent-pod-6:/etc/kubernetes -c monitoring-agent
"Set only the ""client-key"" field on the ""prod-user"" # entry, without touching other values",kubectl config set-credentials prod-user --client-key=~/.kube/admin.key
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.dev-context.cluster moon-cluster
"Delete pods and services with same names ""monitoring"" and ""api""","kubectl delete pod,service monitoring api"
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=9000:8080
"Force replace, delete and then re-create the resource",kubectl replace --force -f ./setup.json
"Update pod 'foo' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo alert-email=alerts@example.com
Add a taint with key 'environment' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  environment=edge-node-10:PreferNoSchedule
Set deployment gateway-deployment's service account to kube-dns,kubectl set serviceaccount deployment gateway-deployment kube-dns
"Embed client certificate data in the ""k8s-admin"" entry",kubectl config set-credentials k8s-admin --client-certificate=~/.kube/admin.crt --embed-certs=true
"Delete pods and services with same names ""vpn"" and ""chat-app""","kubectl delete pod,service vpn chat-app"
Add a taint with key 'workload' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  workload=node-2:PreferNoSchedule
"Listen on port 8088 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8088:8081
Update pod 'log-aggregator' with the label 'app' and the value 'myapp',kubectl label pods log-aggregator app=myapp
"Create a service for a replicated hazelcast using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs hazelcast --port=6379 --target-port=330600
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod 5432:9090
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""backup-apps"" API group",kubectl get deployments.hotfix-1.1.2.backup-apps -o json
Update pod 'monitoring' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods monitoring release-
Deny CSR 'csr-sqgzp',kubectl certificate deny csr-sqgzp
"Listen on port 6379 locally, forwarding to 5000 in the pod",kubectl port-forward pod/chat-app-pod 6379:5000
"Define new exec auth plugin args for the ""deploy-bot"" entry",kubectl config set-credentials deploy-bot --exec-arg=arg1 --exec-arg=arg2
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""v2.1.0"", ""spec"": { ... } }'"
"Enable new exec auth plugin for the ""k8s-admin"" entry",kubectl config set-credentials k8s-admin --exec-command=/path/to/the/executable --exec-api-version=client.authentication.k8s.io/v1beta1
Start a php pod and let the container expose port 8080,kubectl run hazelcast --image=php --port=8080
"Listen on port 6379 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 6379:3000"
Start a confluentinc/cp-kafka pod and let the container expose port 9000,kubectl run hazelcast --image=confluentinc/cp-kafka --port=9000
"Listen on port 5432 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 5432:8081
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=properties=/path/to/settings/file1.txt --from-file=key1=/path/to/profiles/file2.txt
Create a new LoadBalancer service named log-aggregator-lb,kubectl create service loadbalancer log-aggregator-lb --tcp=8088:5001
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-config-prod deployment/payment-processor-deployment
"Delete pods and services with same names ""email"" and ""proxy-server""","kubectl delete pod,service email proxy-server"
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/parameters/file2.txt
"Update pod 'analytics' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics deployment-script='https://example.com/deploy.sh'
"Check to see if I can get the job named ""cleanup-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/cleanup-job -n kube-public
"Listen on port 8088 locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod 8088:5000
Create a job with a command,kubectl create job testing --image=mysql -- mysql --version
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml deployment-script='https://example.com/deploy.sh'
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/user-service"
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/gateway-pod
"Enable the Google Compute Platform auth provider for the ""jane.smith"" entry",kubectl config set-credentials jane.smith --auth-provider=gcp
Start a hazelcast pod and let the container expose port 8010,kubectl run hazelcast --image=hazelcast/hazelcast --port=8010
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/loadbalancer-service"
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n development
Copy /tmp/foo local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo kube-node-lease/security-scanner-pod-18::/tmp/bar
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/notification-sender-job -n production
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=5001 --target-port=844300
"Delete pods and services with same names ""web"" and ""media-stream""","kubectl delete pod,service web media-stream"
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/order-processing-deployment
Set deployment gateway-deployment's service account to jenkins,kubectl set serviceaccount deployment gateway-deployment jenkins
Create a copy of frontend-pod adding a debug container and changing container images,"kubectl debug frontend-pod -it --copy-to=debug-image-web --image=debian --set-image=cache=redis:alpine,mailer=mailer:latest"
Get output from running the 'kafka-topics --list' command in warp-drive from pod proxy-server-pod,kubectl exec proxy-server-pod -c warp-drive -- kafka-topics --list
Remove from node 'k8s-node-1' all the taints with key 'special',kubectl taint nodes k8s-node-1 special-
Create a new ExternalName service named external-monitoring-service,kubectl create service externalname external-monitoring-service --external-name education-edu.edu
"If the deployment named payment-service-rs's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/payment-service-rs
Create a new ExternalName service named external-caching-service,kubectl create service externalname external-caching-service --external-name museum-example.museum
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""testing-apps"" API group",kubectl get deployments.v1.0.0.testing-apps -o yaml
Create a new ClusterIP service named git-service-clusterip,kubectl create service clusterip git-service-clusterip --tcp=8083:8010
Add a taint with key 'app' on nodes having label app=web-app,kubectl taint node -l app=web-app  app=k8s-node-1:PreferNoSchedule
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=cluster-alpha
"Listen on port 8888 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8888:6379
View the details of daemonset revision 3,kubectl rollout history daemonset/services --revision=3
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""api-v1"" API group",kubectl get deployments.v2.0.0.api-v1 -o json
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/security-service-pod 8888:8000
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/mypod 8000 8888
Return snapshot of previous terminated code-explorer container logs from pod payment-gateway-pod,kubectl logs -p -c code-explorer payment-gateway-pod
Return snapshot of previous terminated quantum-quark container logs from pod mypod,kubectl logs -p -c quantum-quark mypod
"Listen on port 9090 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 9090:8081"
Create a job with a command,kubectl create job indexing --image=nginx -- nginx
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node gpu-node-12 -p $'spec:\n type: LoadBalancer'
"Create a single ingress called 'api-v1-ingress' that directs requests to testing.com/module to svc # svc1:8010 with a tls secret ""my-cert""","kubectl create ingress api-v1-ingress --rule=""testing.com/module=svc1:8010,tls=my-cert"""
"Define new exec auth plugin args for the ""admin"" entry",kubectl config set-credentials admin --exec-arg=arg1 --exec-arg=arg2
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8088 5000
Set the client-key-data field in the deploy-bot user using --set-raw-bytes option,kubectl config set users.deploy-bot.client-key-data cert_data_here --set-raw-bytes=true
Create a deployment named auth that runs the confluentinc/cp-kafka image and expose port 8010,kubectl create deployment auth --image=confluentinc/cp-kafka --port=8010
Start a postgres pod and let the container expose port 3000,kubectl run hazelcast --image=postgres --port=3000
"Update pod 'proxy-server' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server custom-label=my-custom-value
Add a taint with key 'dedicated' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  dedicated=node-1:PreferNoSchedule
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/payment-gateway-pod
Get output from running the 'python' command in lunar-launcher from pod web-app-pod,kubectl exec web-app-pod -c lunar-launcher -- python
Create a new ClusterIP service named backend-service-clusterip,kubectl create service clusterip backend-service-clusterip --tcp=3001:8083
Set the resource request and limits for all containers in hazelcast,"kubectl set resources deployment hazelcast --limits=cpu=200m,memory=512Mi --requests=cpu=1,memory=1Gi"
"Listen on port 5000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5000:8081
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.app-1-context.cluster star-cluster
Create a new secret named git-credentials-secret from an env file,kubectl create secret generic git-credentials-secret --from-env-file=path/to/configurations.env
Update pod 'database' with the label 'release' and the value 'v1.0',kubectl label pods database release=v1.0
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir kube-dns/api-server-pod-3::/tmp/bar
Show metrics for the pods defined by label owner=john-doe,kubectl top pod -l owner=john-doe
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=7000 --target-port=888800
Create a new config map named app-name-config from the key=value pairs in the file,kubectl create configmap app-name-config --from-file=path/to/profiles
"Listen on port 8080 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8080:3000"
Create a copy of payment-gateway-pod adding a debug container and changing container images,"kubectl debug payment-gateway-pod -it --copy-to=dgb-img --image=debian --set-image=app=app:debug,api=api:v2"
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod monitoring-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach monitoring-pod -c warp-drive -i -t
"Listen on a random port locally, forwarding to 6379 in the pod",kubectl port-forward pod/chat-app-pod :6379
Return snapshot logs from container database-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/database-deployment -c proxy-service-pod-1
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/log-aggregator-pod 5000:8081
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 5432 8088
Add a taint with key 'workload' on nodes having label environment=production,kubectl taint node -l environment=production  workload=worker-node-3:PreferNoSchedule
Create a new secret named azure-storage-secret from an env file,kubectl create secret generic azure-storage-secret --from-env-file=path/to/options.env
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-config-dev deployment/analytics-platform-deployment
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/security-service-pod 9090:8000
Display only the most recent 31 lines of output in pod proxy-server-pod,kubectl logs --tail=31 proxy-server-pod
Use the context for the testing-cluster cluster,kubectl config use-context testing-cluster
"Check to see if I can get the job named ""report-generation-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/report-generation-job -n production
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f kubeadm-config.yaml -p '{""spec"":{""replicas"":3}'"
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=9000 --target-port=801000
"Delete pods and services with same names ""payment"" and ""gateway""","kubectl delete pod,service payment gateway"
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/auth-service-pod
"Update pod 'auth' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth backup-strategy='daily backups'
Create a new secret named database-secret with keys for each file in folder bar,kubectl create secret generic database-secret --from-file=path/to/data
"Delete pods and services with same names ""proxy"" and ""analytics""","kubectl delete pod,service proxy analytics"
"Listen on port 6379 locally, forwarding to 8080 in the pod",kubectl port-forward pod/analytics-pod 6379:8080
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""alpha-apps"" API group",kubectl get deployments.alpha-2.0.alpha-apps -o json
"If the deployment named web's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/web
Start a alpine pod and let the container expose port 5432,kubectl run hazelcast --image=alpine --port=5432
Remove from node 'backup-node-14' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes backup-node-14 workload:NoSchedule-
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/media-stream-pod
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/docker-registry"
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/ui-config deployment/proxy-service-deployment
Display only the most recent 12 lines of output in pod monitoring-pod,kubectl logs --tail=12 monitoring-pod
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/mypod 8000 5432
Create a copy of chat-app-pod adding a debug container and changing container images,"kubectl debug chat-app-pod -it --copy-to=debug-image-memcached --image=debian --set-image=mailer=mailer:latest,cache=redis:alpine"
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 3000 8000
Import environment from a secret,kubectl set env --from=secret/jwt-secret deployment/cache-cluster-deployment
Scale a replica set named 'staging-app-rs' to 5,kubectl scale --replicas=5 rs/staging-app-rs
Set deployment payment-processor-deployment's service account to tiller,kubectl set serviceaccount deployment payment-processor-deployment tiller
Scale a replica set named 'app-v2-replicaset' to 7,kubectl scale --replicas=7 rs/app-v2-replicaset
"Listen on port 6379 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 6379:8088"
Get output from running the 'go' command in astro-container from pod proxy-service-pod,kubectl exec proxy-service-pod -c astro-container -- go
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""external-apps"" API group",kubectl get deployments.v1.0.0.external-apps -o json
Get output from running the 'wp' command in cyber-sleuth from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c cyber-sleuth -- wp
Create a new secret named database-secret from an env file,kubectl create secret generic database-secret --from-env-file=path/to/configurations.env
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-name-config deployment/cache-cluster-deployment
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/vpn-service-pod
Return snapshot of previous terminated nebula-navigator container logs from pod auth-service-pod,kubectl logs -p -c nebula-navigator auth-service-pod
"Listen on port 8080 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8080:9090
Get output from running the 'python --version' command in warp-drive from pod frontend-pod,kubectl exec frontend-pod -c warp-drive -- python --version
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/e-commerce-pod 8888:8080
"If the deployment named payment-service-rs's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/payment-service-rs
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json release-notes='https://example.com/release-notes/v2.5.1'
Remove from node 'edge-node-10' all the taints with key 'special',kubectl taint nodes edge-node-10 special-
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/security-service-pod 8081:5432
"Listen on port 9090 locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod 9090:8888
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/order-service"
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""apps"" API group",kubectl get deployments.dev-2.2.0.apps -o yaml
Create a job with a command,kubectl create job deployment-rollout-job --image=ethereum/client-go -- geth attach
Update a single-container pod's image version (tag) to v4,kubectl get pod monitoring-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
Create a new secret named api-key-secret from an env file,kubectl create secret generic api-key-secret --from-env-file=path/to/profiles.env
"Listen on port 3000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/frontend-pod 3000:8088
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/monitoring-pod
Create a deployment named ingress that runs the amazonlinux image and expose port 8084,kubectl create deployment ingress --image=amazonlinux --port=8084
Remove from node 'gpu-node-12' all the taints with key 'special',kubectl taint nodes gpu-node-12 special-
Start a jenkins pod and let the container expose port 8443,kubectl run hazelcast --image=jenkins --port=8443
Start the hazelcast pod using a different command and custom arguments,kubectl run nginx --image=hazelcast/hazelcast --command -- <cmd> <arg1> ... <argN>
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/mypod 6379 5000
"Update pod 'email' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email scaling-policy=auto-horizontal-scaling
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8000 8081
Start a php pod and let the container expose port 8000,kubectl run hazelcast --image=php --port=8000
Describe all pods managed by the 'frontend' replication controller (rc-created pods # get the name of the rc as a prefix in the pod the name),kubectl describe pods frontend
"Create a service for an node deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment node --port=9091 --target-port=808400
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=moon-cluster
Display only the most recent 20 lines of output in pod proxy-service-pod,kubectl logs --tail=20 proxy-service-pod
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/backend-pod 8080:8088
"Create a service for a replicated hazelcast, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc hazelcast --port=5001 --target-port=900000
"Get output from running 'go' command from the first pod of the deployment database-deployment, using the first container by default",kubectl exec deploy/database-deployment -- go
Print the supported non-namespaced resources,kubectl api-resources --groupspaced=false
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp logging/auth-service-pod-11:~/.config/kube :/tmp/bar
Return snapshot logs from container frontend-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/frontend-deployment -c frontend-pod-1
Copy /tmp/foo_dir from a remote pod to /tmp/bar locally,kubectl cp metallb-system/metrics-exporter-pod-10:/tmp/foo_dir /tmp/bar
Update image of all containers of daemonset app-v2 to 'debian:11.0',kubectl set image daemonset app-v2 *=debian:11.0
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.local-context.cluster cloud-cluster
Create a new config map named app-secrets from an env file,kubectl create configmap app-secrets --from-env-file=path/to/profiles.env
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=8088 --target-port=844300
Start a redis pod,kubectl run nginx --image=redis
Create a new secret named cert-manager-secret from an env file,kubectl create secret generic cert-manager-secret --from-env-file=path/to/data.env
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/chat-app-pod 9090:8000
"Listen on port 8080 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/order-service 8080:https
"Set a deployments runtime container cpu limits to ""5"" and memory to ""256Mi""","kubectl set resources deployment runtime -c=nginx --limits=cpu=5,memory=256Mi"
Begin streaming the logs of the nano-bot container in pod email-service-pod,kubectl logs -f -c nano-bot email-service-pod
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node web-node-8 -p '{""spec"":{""unschedulable"":true}}'"
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.edge-context.cluster galaxy-cluster
Describe a pod,kubectl describe pods/cache-pod-5
"Set a deployments wordpress container cpu limits to ""3"" and memory to ""1Gi""","kubectl set resources deployment wordpress -c=nginx --limits=cpu=3,memory=1Gi"
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller auth-service-rc
"Delete pods and services with same names ""backend"" and ""security""","kubectl delete pod,service backend security"
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json monitoring-tool=Prometheus
"Drain node ""prod-node-5"", even if there are pods not managed by a replication controller, replica set, job, daemon set or stateful set on it",kubectl drain prod-node-5 --force
"Listen on port 5432 locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod 5432:5000
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod 8000:8081
Get output from running the 'psql' command in cosmic-container from pod cdn-service-pod,kubectl exec cdn-service-pod -c cosmic-container -- psql
"Auto scale a replication controller ""security"", with the number of pods between 1 and 2, target CPU utilization at 60%",kubectl autoscale rc security --max=2 --cpu-percent=60
Set only the server field on the testing-cluster cluster entry without touching other values,kubectl config set-cluster testing-cluster --server=https://1.2.3.4
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/api-service-pod 3000:5432
Update image of all containers of daemonset nginx to 'nginx:1.21.3',kubectl set image daemonset nginx *=nginx:1.21.3
"List all allowed actions in namespace ""kube-public""",kubectl auth can-i --list --namespace=kube-public
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml expiration-date='2024-12-31'
Create a copy of web-app-pod adding a debug container and changing container images,"kubectl debug web-app-pod -it --copy-to=debug-image-api --image=debian --set-image=mailer=mailer:latest,mailer=mailer:latest"
"Create a service for a replicated centos, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc centos --port=8089 --target-port=700000
Return snapshot logs from container web-app-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/web-app-deployment -c e-commerce-pod-1
Set deployment frontend-deployment's service account to fluentd,kubectl set serviceaccount deployment frontend-deployment fluentd
Get output from stardust-shuttle from pod backend-pod,kubectl attach backend-pod -c stardust-shuttle
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=staging-cluster
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=settings=/path/to/options/file1.txt --from-file=key2=/path/to/data/file2.txt
Create a deployment named wordpress that runs the wordpress image,kubectl create deployment wordpress --image=wordpress
Create a new config map named app-settings from the key=value pairs in the file,kubectl create configmap app-settings --from-file=path/to/options
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.prod-context.cluster moon-cluster
Set deployment api-server-deployment's service account to argocd,kubectl set serviceaccount deployment api-server-deployment argocd
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-config-dev deployment/mydeployment
"Listen on port 8081 locally, forwarding to 9090 in the pod",kubectl port-forward pod/chat-app-pod 8081:9090
Return snapshot logs from container mydeployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/mydeployment -c proxy-server-pod-1
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/log-aggregator-pod
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=5000 --target-port=818100
Create a deployment named web that runs the golang image and expose port 9000,kubectl create deployment web --image=golang --port=9000
"Listen on port 6379 locally, forwarding to 5432 in the pod",kubectl port-forward pod/api-service-pod 6379:5432
Update pod 'proxy' with the label 'unhealthy' and the value 'true',kubectl label pods proxy unhealthy=true
Get output from running the 'dotnet --list-sdks' command in rocket-ranger from pod web-app-pod,kubectl exec web-app-pod -c rocket-ranger -- dotnet --list-sdks
Rename the context 'testing-context' to 'app-1-context' in your kubeconfig file,kubectl config rename-context testing-context app-1-context
Add a taint with key 'hardware' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  hardware=testing-node-11:PreferNoSchedule
Add a taint with key 'disktype' on nodes having label component=proxy,kubectl taint node -l component=proxy  disktype=edge-node-10:PreferNoSchedule
"Scale a resource identified by type and name specified in ""parameters.yaml"" to 1",kubectl scale --replicas=1 -f parameters.yaml
"Listen on port 8000 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8000:6379"
"Update a pod identified by the type and name in ""setup.json""",kubectl label -f setup.json status=unhealthy
Create a deployment named wordpress that runs the mcr.microsoft.com/dotnet/core/runtime image and expose port 8081,kubectl create deployment wordpress --image=mcr.microsoft.com/dotnet/core/runtime --port=8081
"Create a role named ""default_role"" with ResourceName specified",kubectl create role default_role --verb=delete --resource=pods --resource-name=cache-redis --resource-name=app-worker-2
Get output from cosmic-container from pod media-stream-pod,kubectl attach media-stream-pod -c cosmic-container
"Listen on port 5432 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 5432:8080"
"Delete pods and services with same names ""foo"" and ""web""","kubectl delete pod,service foo web"
"Listen on port 5000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 5000:9090"
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""mobile-apps"" API group",kubectl get deployments.hotfix-1.1.2.mobile-apps -o yaml
Create a deployment named logging that runs the node image and expose port 8083,kubectl create deployment logging --image=node --port=8083
Watch the rollout status of a deployment,kubectl rollout status deployment/namespace-3
Create a new config map named ui-config based on folder preferences,kubectl create configmap ui-config --from-file=path/to/preferences
Get the documentation of a specific field of a resource,kubectl explain resource=services.spec.containers
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""internal-apps"" API group",kubectl get deployments.dev-2.2.0.internal-apps -o yaml
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8888 8081
Add a taint with key 'dedicated' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  dedicated=dev-node-4:PreferNoSchedule
Update pod 'log-aggregator' with the label 'env' and the value 'development',kubectl label pods log-aggregator env=development
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=my-k8s-cluster
"Check to see if I can get the job named ""cleanup-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/cleanup-job -n development
Create a job with a command,kubectl create job scaling-job --image=mongo -- mongo --version
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-config deployment/load-balancer-deployment
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-messaging-service
Add a taint with key 'disktype' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  disktype=storage-node-13:PreferNoSchedule
"Get output from running the 'mongo' command from pod proxy-service-pod, using the first container by default",kubectl exec proxy-service-pod -- mongo
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 5000:9090
Copy /tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp ingress-nginx/worker-pod-4:/tmp/foo /etc/kubernetes
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-name-config deployment/search-engine-deployment
"Create a single ingress called 'myapp-ingress' that directs requests to site.com/example to svc # svc1:8081 with a tls secret ""my-cert""","kubectl create ingress myapp-ingress --rule=""site.com/example=svc1:8081,tls=my-cert"""
Get output from running the 'geth' command in nano-bot from pod proxy-server-pod,kubectl exec proxy-server-pod -c nano-bot -- geth
"Update pod 'database' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database release-notes='https://example.com/release-notes/v2.5.1'
Approve CSR 'csr-proxy-15',kubectl certificate approve csr-proxy-15
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""mobile-apps"" API group",kubectl get deployments.v1.1.1.mobile-apps -o yaml
Rename the context 'cluster-2-context' to 'service-account-context' in your kubeconfig file,kubectl config rename-context cluster-2-context service-account-context
Create a cron job,"kubectl create cronjob alerts-cleanup --image=busybox --schedule=""*/1 * * * *"""
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/backend-service"
"Listen on a random port locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod :8888
"Listen on a random port locally, forwarding to 9090 in the pod",kubectl port-forward pod/cdn-service-pod :9090
Update all services in the namespace,kubectl annotate services --all description='my frontend running nginx'
Create a deployment named wordpress that runs the golang image with 7 replicas,kubectl create deployment wordpress --image=golang --replicas=7
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/search-engine-deployment API_KEY=your-api-key -o yaml
Start a php pod and let the container expose port 6379,kubectl run hazelcast --image=php --port=6379
"If the deployment named payment-service-rs's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/payment-service-rs
Display only the most recent 23 lines of output in pod payment-gateway-pod,kubectl logs --tail=23 payment-gateway-pod
Embed certificate authority data for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
Get output from running the 'dotnet' command in nano-bot from pod proxy-server-pod,kubectl exec proxy-server-pod -c nano-bot -- dotnet
Get output from time-machine from pod security-service-pod,kubectl attach security-service-pod -c time-machine
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.app-2-context.cluster web-cluster
"Update pod 'auth' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods auth monitoring-tool='Prometheus'
"Listen on port 5000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 5000:8888"
Add a taint with key 'dedicated' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  dedicated=node-2:PreferNoSchedule
"Update pod 'log-aggregator' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator alert-email=alerts@example.com
"Create a role named ""admin_role"" with SubResource specified","kubectl create role admin_role --verb=list,create,update --resource=pods,pods/exec"
Return snapshot logs from container load-balancer-deployment-1 of a deployment named database-pod,kubectl logs deployment/load-balancer-deployment -c database-pod-1
Import environment from a config map with a prefix,kubectl set env --from=configmap/ui-config --prefix=MYSQL_ deployment/analytics-platform-deployment
Add a taint with key 'zone' on nodes having label app=web-app,kubectl taint node -l app=web-app  zone=storage-node-13:PreferNoSchedule
Remove from node 'gpu-node-12' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes gpu-node-12 zone:PreferNoSchedule-
"Create a single ingress called 'web-ingress' that directs requests to site.com/input to svc # svc1:8443 with a tls secret ""my-cert""","kubectl create ingress web-ingress --rule=""site.com/input=svc1:8443,tls=my-cert"""
"Listen on port 8000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8000:5000
Get output from nano-bot from pod gateway-pod,kubectl attach gateway-pod -c nano-bot
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8080 8080
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/web-app-pod 5432 8080
Create a job with a command,kubectl create job monitoring-job --image=confluentinc/cp-kafka -- kafka-topics --list
"Listen on port 8000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/e-commerce-pod 8000:6379
"Listen on port 5000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5000:8888
Create a deployment named db that runs the ruby image and expose port 8081,kubectl create deployment db --image=ruby --port=8081
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=star-cluster
Create a job with a command,kubectl create job certificate-renewal --image=postgres -- postgres
"Create a role binding for developer3, k8s-admin, and qa-engineers using the foo cluster role",kubectl create rolebinding foo --clusterrole=foo --user=developer3 --user=k8s-admin --group=qa-engineers
Create a new config map named db-config from the key=value pairs in the file,kubectl create configmap db-config --from-file=path/to/settings
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.prod-context.cluster cloud-cluster
"Start a mongo pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mongo --overrides='{ ""apiVersion"": ""hotfix-1.1.2"", ""spec"": { ... } }'"
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json SLA='99.9% uptime'
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml custom-label=my-custom-value
Create a job with a command,kubectl create job indexing --image=python -- python
Update deployment 'load-balancer-deployment' with a new environment variable,kubectl set env deployment/load-balancer-deployment REDIS_HOST=redis-server
Rename the context 'old-name' to 'edge-context' in your kubeconfig file,kubectl config rename-context old-name edge-context
Remove from node 'monitoring-node-15' all the taints with key 'special',kubectl taint nodes monitoring-node-15 special-
Create a deployment with a command,kubectl create deployment mattermost --image=postgres -- psql
"Set a deployments node container cpu limits to ""1"" and memory to ""128Mi""","kubectl set resources deployment node -c=nginx --limits=cpu=1,memory=128Mi"
Import environment from a config map with a prefix,kubectl set env --from=configmap/kube-system-config --prefix=MYSQL_ deployment/monitoring-stack-deployment
Set deployment payment-processor-deployment's service account to fluentd,kubectl set serviceaccount deployment payment-processor-deployment fluentd
Add a taint with key 'disktype' on nodes having label myLabel,kubectl taint node -l myLabel  disktype=node-1:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/monitoring-config deployment/email-server-deployment
Get output from running the 'bash' command in lunar-launcher from pod media-stream-pod,kubectl exec media-stream-pod -c lunar-launcher -- bash
Update deployment 'frontend-deployment' with a new environment variable,kubectl set env deployment/frontend-deployment MAX_CONNECTIONS=100
Start a ruby pod and let the container expose port 8084,kubectl run hazelcast --image=ruby --port=8084
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=5001 --target-port=818100
"Set a deployments nginx container cpu limits to ""200m"" and memory to ""4Gi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=200m,memory=4Gi"
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node testing-node-11 -p $'spec:\n replicas: 3'
"Auto scale a deployment ""foo"", with the number of pods between 6 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment foo --min=6 --max=9
Create a new LoadBalancer service named media-stream-lb,kubectl create service loadbalancer media-stream-lb --tcp=9000:8888
"Listen on port 6379 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 6379:5432"
"Listen on port 6379 locally, forwarding to 5432 in the pod",kubectl port-forward pod/mypod 6379:5432
"Listen on port 8080 locally, forwarding to 5000 in the pod",kubectl port-forward pod/security-service-pod 8080:5000
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8080 8088
"Listen on port 9090 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 9090:9090"
Create a new secret named gcp-service-account-secret with keys for each file in folder bar,kubectl create secret generic gcp-service-account-secret --from-file=path/to/parameters
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=cloud-cluster
"Enable the OpenID Connect auth provider for the ""app-service"" entry with additional args",kubectl config set-credentials app-service --auth-provider=oidc --auth-provider-arg=client-id=foo --auth-provider-arg=client-secret=bar
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config deployment/log-aggregator-deployment
Return snapshot of previous terminated code-explorer container logs from pod chat-app-pod,kubectl logs -p -c code-explorer chat-app-pod
Scale a replica set named 'prod-app-rs' to 5,kubectl scale --replicas=5 rs/prod-app-rs
View the details of daemonset revision 7,kubectl rollout history daemonset/my-deployment --revision=7
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=app-cluster
"Listen on port 8000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8000:8081
Embed certificate authority data for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --embed-certs --certificate-authority=~/.kube/dev-cluster/kubernetes.ca.crt
"Listen on port 5000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod 5000:5000
Set deployment scheduler-app-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment scheduler-app-deployment gitlab-runner
Get output from running the 'yum install -y aws-cli' command in cyber-sleuth from pod database-pod,kubectl exec database-pod -c cyber-sleuth -- yum install -y aws-cli
Approve CSR 'csr-abc123',kubectl certificate approve csr-abc123
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""custom-apps"" API group",kubectl get deployments.v1.0.0.custom-apps -o json
Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo kube-flannel/logging-agent-pod-7:/tmp/bar
Create a job with a command,kubectl create job batch-processing --image=wordpress -- mysql --version
Create a deployment named web that runs the hazelcast image and expose port 3306,kubectl create deployment web --image=hazelcast/hazelcast --port=3306
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/backend-pod
"Update pod 'analytics' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics expiration-date='2024-12-31'
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp argocd/metrics-exporter-pod-10::/tmp/foo :/tmp/bar
"Update pod 'foo' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods foo alert-email='alerts@example.com'
Update pod 'payment' with the label 'release' and the value 'v1.0',kubectl label pods payment release=v1.0
Add a taint with key 'zone' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  zone=web-node-8:PreferNoSchedule
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=data-cluster
Begin streaming the logs of the code-explorer container in pod email-service-pod,kubectl logs -f -c code-explorer email-service-pod
"Listen on port 5432 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 5432:8888"
Start a mysql pod and let the container expose port 3001,kubectl run hazelcast --image=mysql --port=3001
"Update pod 'foo' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo last-deployment=2023-03-15
Add a taint with key 'hardware' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  hardware=db-node-7:PreferNoSchedule
Add a taint with key 'hardware' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  hardware=worker-node-3:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/log-config deployment/backend-microservice-deployment
Create a copy of auth-service-pod changing all container images to python,kubectl debug auth-service-pod --copy-to=my-debugger --set-image=*=python
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/monitoring-pod
Begin streaming the logs of the rocket-ranger container in pod frontend-pod,kubectl logs -f -c rocket-ranger frontend-pod
Update pod 'proxy' with the label 'app' and the value 'myapp',kubectl label pods proxy app=myapp
Display only the most recent 43 lines of output in pod proxy-service-pod,kubectl logs --tail=43 proxy-service-pod
"Listen on port 8888 locally, forwarding to 8088 in the pod",kubectl port-forward pod/frontend-pod 8888:8088
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=moon-cluster
"Listen on port 8888 locally, forwarding to 5432 in the pod",kubectl port-forward pod/api-service-pod 8888:5432
"Update pod 'web' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods web last-deployment='2023-03-15'
"Create a single ingress called 'app-loadbalancer-ingress' that directs requests to site.com/bar to svc # svc1:8089 with a tls secret ""my-cert""","kubectl create ingress app-loadbalancer-ingress --rule=""site.com/bar=svc1:8089,tls=my-cert"""
Display only the most recent 5 lines of output in pod proxy-service-pod,kubectl logs --tail=5 proxy-service-pod
Rename the context 'old-name' to 'new-context' in your kubeconfig file,kubectl config rename-context old-name new-context
Roll back to the previous deployment,kubectl rollout undo deployment/namespace-1
Add to node 'prod-node-5' a taint with key 'zone' and no value,kubectl taint nodes prod-node-5 zone:NoSchedule
"Listen on port 8081 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8081:3000"
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8088 8080
"Delete pods and services with same names ""cdn"" and ""cdn""","kubectl delete pod,service cdn cdn"
Create a deployment with a command,kubectl create deployment worker --image=centos -- bash
Create a job with a command,kubectl create job testing --image=postgres -- psql
Create a cron job with a command,"kubectl create cronjob cron-task --image=alpine --schedule=""*/1 * * * *"" -- ash"
Get output from running the 'pg_dump --version' command in lunar-launcher from pod auth-service-pod,kubectl exec auth-service-pod -c lunar-launcher -- pg_dump --version
"Listen on port 8088 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8088:8088
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/backend-pod
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/security-service-pod 3000:8000
"Get output from running the 'ash' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- ash
Create a job with a command,kubectl create job report-generation-job --image=ruby -- gem --version
Create a new NodePort service named media-stream-nodeport,kubectl create service nodeport media-stream-nodeport --tcp=8080:8089
Get output from warp-drive from pod frontend-pod,kubectl attach frontend-pod -c warp-drive
"Create a cluster role name ""custom_role"" with NonResourceURL specified","kubectl create clusterrole ""custom_role"" --verb=connect --non-resource-url=/port-forward"
"Delete pods and services with same names ""proxy"" and ""auth""","kubectl delete pod,service proxy auth"
Import environment from a secret,kubectl set env --from=secret/api-key-secret deployment/web-app-deployment
Add a taint with key 'dedicated' on nodes having label myLabel,kubectl taint node -l myLabel  dedicated=backup-node-14:PreferNoSchedule
Set the server field on the edge-cluster cluster to https://1.2.3.4,kubectl config set clusters.edge-cluster.server https://1.2.3.4
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/backend-pod 5432 8080
"Listen on port 5432 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5432:8080
Embed certificate authority data for the app-cluster cluster entry,kubectl config set-cluster app-cluster --embed-certs --certificate-authority=~/.kube/moon-cluster/kubernetes.ca.crt
Start a confluentinc/cp-kafka pod and let the container expose port 5001,kubectl run hazelcast --image=confluentinc/cp-kafka --port=5001
Diff resources included in options.yaml,kubectl diff -f options.yaml
"Update pod 'frontend' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend scaling-policy=auto-horizontal-scaling
"If the deployment named dev-environment-rs's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/dev-environment-rs
"Run a proxy to the Kubernetes API server on port 27017, serving static content from ./local/www/",kubectl proxy --port=27017 --www=./local/www/
"Update pod 'payment' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment env=staging
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.client-1-context.cluster edge-cluster
"Delete pods and services with same names ""monitoring"" and ""analytics""","kubectl delete pod,service monitoring analytics"
Return snapshot of previous terminated cosmic-container container logs from pod e-commerce-pod,kubectl logs -p -c cosmic-container e-commerce-pod
Import environment from a config map with a prefix,kubectl set env --from=configmap/log-config --prefix=MYSQL_ deployment/email-server-deployment
Remove from node 'kube-master-9' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes kube-master-9 disktype:NoSchedule-
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8081 8000
"Delete pods and services with same names ""security"" and ""proxy-server""","kubectl delete pod,service security proxy-server"
Begin streaming the logs of the mycontainer container in pod api-service-pod,kubectl logs -f -c mycontainer api-service-pod
Remove from node 'gpu-node-12' all the taints with key 'dedicated',kubectl taint nodes gpu-node-12 dedicated-
Update image of all containers of daemonset staging to 'mysql:5.7.35',kubectl set image daemonset staging *=mysql:5.7.35
"Create a single ingress called 'app2-ingress' that directs requests to testing.com/input to svc # svc1:3306 with a tls secret ""my-cert""","kubectl create ingress app2-ingress --rule=""testing.com/input=svc1:3306,tls=my-cert"""
Add a taint with key 'special' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  special=k8s-node-1:PreferNoSchedule
Get output from running the 'geth attach' command in nebula-navigator from pod gateway-pod,kubectl exec gateway-pod -c nebula-navigator -- geth attach
Remove from node 'node-2' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes node-2 datacenter:NoExecute-
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.local-context.cluster my-k8s-cluster
"Get output from running 'ash' command from the first pod of the deployment order-processing-deployment, using the first container by default",kubectl exec deploy/order-processing-deployment -- ash
"Get output from running 'mysql' command from the first pod of the service api-service, using the first container by default",kubectl exec svc/api-service -- mysql
Add a taint with key 'environment' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  environment=backup-node-14:PreferNoSchedule
Get output from warp-drive from pod monitoring-pod,kubectl attach monitoring-pod -c warp-drive
Create a deployment named db that runs the ruby image,kubectl create deployment db --image=ruby
Create a new resource quota named network-policy-quota,kubectl create quota network-policy-quota --hard=networkpolicies=3
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/frontend-pod 3000:6379
Return snapshot of previous terminated cosmic-container container logs from pod analytics-pod,kubectl logs -p -c cosmic-container analytics-pod
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=8083 --target-port=909000
Display only the most recent 53 lines of output in pod email-service-pod,kubectl logs --tail=53 email-service-pod
"Check to see if I can get the job named ""data-migration-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/data-migration-job -n testing
Update pod 'vpn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods vpn release-
Show metrics for a given pod and its containers,kubectl top pod log-aggregator-pod --containers
Print the supported non-namespaced resources,kubectl api-resources --kindspaced=false
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/web-app-pod 3000:5432
"Update a pod identified by the type and name in ""params.json""",kubectl label -f params.json status=unhealthy
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/api-service"
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=cloud-cluster
Return snapshot logs from container database-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/database-deployment -c log-aggregator-pod-1
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=testing-cluster
Restart a daemon set,kubectl rollout restart daemonset/prod
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/ui-config deployment/order-processing-deployment
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""mobile-apps"" API group",kubectl get deployments.dev-2.2.0.mobile-apps -o json
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=properties=/path/to/configurations/file1.txt --from-file=key1=/path/to/properties/file2.txt
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""extensions"" API group",kubectl get deployments.stable-2.0.0.extensions -o json
Create a deployment with a command,kubectl create deployment monitoring --image=postgres -- postgres
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.testing-context.cluster my-k8s-cluster
"Get output from running 'ash' command from the first pod of the service payment-service, using the first container by default",kubectl exec svc/payment-service -- ash
"Listen on port 8000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/api-service-pod 8000:6379
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/payment-service 5432:https
Embed certificate authority data for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --embed-certs --certificate-authority=~/.kube/app-cluster/kubernetes.ca.crt
Display only the most recent 31 lines of output in pod monitoring-pod,kubectl logs --tail=31 monitoring-pod
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=properties=/path/to/properties/file1.txt --from-file=key1=/path/to/configurations/file2.txt
"Delete pods and services with same names ""foo"" and ""foo""","kubectl delete pod,service foo foo"
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/analytics-platform-deployment -c auth-service-pod-1
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod 8081:8081
Return snapshot logs from pod gateway-pod with only one container,kubectl logs gateway-pod
Scale a replica set named 'app-v2-replicaset' to 3,kubectl scale --replicas=3 rs/app-v2-replicaset
Return snapshot logs from container api-server-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/api-server-deployment -c auth-service-pod-1
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=conf=/path/to/options/file1.txt --from-file=data=/path/to/settings/file2.txt
Create a copy of backend-pod adding a debug container and changing container images,"kubectl debug backend-pod -it --copy-to=my-custom-dbg --image=debian --set-image=proxy=nginx:1.21,proxy=nginx:1.21"
Delete the developer user,kubectl config delete-user developer
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""api-v2"" API group",kubectl get deployments.beta-1.0.api-v2 -o json
"Start a ubuntu pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ubuntu --overrides='{ ""apiVersion"": ""hotfix-1.1.2"", ""spec"": { ... } }'"
Create a job with a command,kubectl create job image-build-job --image=amazonlinux -- bash
Start a redis pod and let the container expose port 8082,kubectl run hazelcast --image=redis --port=8082
Rename the context 'cloud-context' to 'team-beta-context' in your kubeconfig file,kubectl config rename-context cloud-context team-beta-context
Remove from node 'backup-node-14' all the taints with key 'environment',kubectl taint nodes backup-node-14 environment-
Return snapshot logs from container database-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/database-deployment -c media-stream-pod-1
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/env-vars deployment/web-app-deployment
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.legacy-1.0.0.sandbox-apps -o yaml
Add a taint with key 'special' on nodes having label release=beta,kubectl taint node -l release=beta  special=node-1:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/log-config deployment/web-app-deployment
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name education-edu.edu
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/web-app-pod 9090 8081
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=8181:8083
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/database-pod
"Delete pods and services with same names ""analytics"" and ""email""","kubectl delete pod,service analytics email"
Update pod 'api' with the label 'release' and the value 'v2.0',kubectl label pods api release=v2.0
"Get output from running the 'mongod' command from pod cdn-service-pod, using the first container by default",kubectl exec cdn-service-pod -- mongod
List the environment variables defined on a deployments 'scheduler-app-deployment',kubectl set env deployment/scheduler-app-deployment --list
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 3306,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=3306
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/ui-config deployment/payment-processor-deployment
"Get output from running 'mysql' command from the first pod of the deployment web-app-deployment, using the first container by default",kubectl exec deploy/web-app-deployment -- mysql
"Auto scale a deployment ""proxy-server"", with the number of pods between 3 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy-server --min=3 --max=13
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.user-a-context.cluster edge-cluster
"Delete pods and services with same names ""analytics"" and ""monitoring""","kubectl delete pod,service analytics monitoring"
Disable cert checking for the dev cluster entry,kubectl config set-cluster dev-cluster --insecure-skip-tls-verify=true
Get output from running the 'python --version' command in astro-container from pod monitoring-pod,kubectl exec monitoring-pod -c astro-container -- python --version
"Create a cluster role named ""bar"" with API Group specified","kubectl create clusterrole bar --verb=list,create,connect --resource=replicasets.apps"
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/database-indexing-job -n development
Set deployment authentication-service-deployment's service account to kube-proxy,kubectl set serviceaccount deployment authentication-service-deployment kube-proxy
Get output from running the 'python --version' command in cyber-sleuth from pod auth-service-pod,kubectl exec auth-service-pod -c cyber-sleuth -- python --version
Start a nginx pod and let the container expose port 8888,kubectl run hazelcast --image=nginx --port=8888
"Listen on port 5432 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5432:9090
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""experimental-apps"" API group",kubectl get deployments.feature-branch-2.3.0.experimental-apps -o yaml
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json alert-email=alerts@example.com
Set deployment email-server-deployment's service account to vault,kubectl set serviceaccount deployment email-server-deployment vault
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f machine-configuration.yaml -p '{""stringData"":{""password"":""new-password""}'"
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/analytics-pod 8088:8888
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/web-app-pod 5432:9090
Return snapshot logs from container notification-handler-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/notification-handler-deployment -c vpn-service-pod-1
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller vpn-service-rc
"If the deployment named db-migration-replicaset's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/db-migration-replicaset
Scale a replica set named 'mysql' to 7,kubectl scale --replicas=7 rs/mysql
Add a taint with key 'zone' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  zone=node-2:PreferNoSchedule
Begin streaming the logs of the stardust-shuttle container in pod security-service-pod,kubectl logs -f -c stardust-shuttle security-service-pod
Create a job with a command,kubectl create job backup --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""beta-apps"" API group",kubectl get deployments.legacy-1.0.0.beta-apps -o yaml
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""feature-branch-2.3.0"", ""spec"": { ... } }'"
Update pod 'monitoring' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods monitoring description-
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/database-service 5432:https
"Listen on port 6379 locally, forwarding to 8088 in the pod",kubectl port-forward pod/cdn-service-pod 6379:8088
Create a priority class named maintenance-priority that cannot preempt pods with lower priority,"kubectl create priorityclass maintenance-priority --value=30 --description=""Priority for maintenance tasks"" --preemption-policy=""Never"""
Delete the context for the user-b-context cluster,kubectl config delete-context user-b-context
Copy :/tmp/foo local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp :/tmp/foo logging/file-server-pod-14:/tmp/bar_dir
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f node-specific.yaml -p '{""stringData"":{""password"":""new-password""}'"
Return snapshot of previous terminated rocket-ranger container logs from pod api-service-pod,kubectl logs -p -c rocket-ranger api-service-pod
"Update pod 'cdn' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods cdn last-deployment='2023-03-15'
Add a taint with key 'cpu-type' on nodes having label app=web-app,kubectl taint node -l app=web-app  cpu-type=k8s-node-1:PreferNoSchedule
Return snapshot of previous terminated warp-drive container logs from pod proxy-server-pod,kubectl logs -p -c warp-drive proxy-server-pod
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp openfaas/ingress-controller-pod-8:/tmp/foo_dir :/tmp/bar
Add a taint with key 'app' on nodes having label myLabel,kubectl taint node -l myLabel  app=backup-node-14:PreferNoSchedule
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=3306 --target-port=801000
Start a wordpress pod and let the container expose port 8080,kubectl run hazelcast --image=wordpress --port=8080
Add a taint with key 'app' on nodes having label environment=production,kubectl taint node -l environment=production  app=monitoring-node-15:PreferNoSchedule
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8088 8088
"Listen on port 8000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8000:8000"
Create a new secret named docker-registry-secret using a combination of a file and a literal,kubectl create secret generic docker-registry-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
Create a deployment with a command,"kubectl create deployment app --image=nginx -- nginx -g ""daemon off;"""
Begin streaming the logs of the astro-container container in pod frontend-pod,kubectl logs -f -c astro-container frontend-pod
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/web-app-pod 5000:9090
"Wait for the pod ""monitoring-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/monitoring-pod
Begin streaming the logs of the astro-container container in pod gateway-pod,kubectl logs -f -c astro-container gateway-pod
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp argocd/auth-service-pod-11:/tmp/foo_dir /tmp/bar_dir
"Force replace, delete and then re-create the resource",kubectl replace --force -f ./params.json
Create a new ClusterIP service named log-service-clusterip,kubectl create service clusterip log-service-clusterip --tcp=8088:9091
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod frontend-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Return snapshot of previous terminated nano-bot container logs from pod web-app-pod,kubectl logs -p -c nano-bot web-app-pod
"Listen on port 3000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 3000:8000
Remove from node 'gpu-node-12' all the taints with key 'environment',kubectl taint nodes gpu-node-12 environment-
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/frontend-pod 5000 8888
"Listen on port 5000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5000:5432
Create a deployment named my-dep that runs the centos image and expose port 8000,kubectl create deployment my-dep --image=centos --port=8000
Create a copy of cdn-service-pod changing all container images to redis,kubectl debug cdn-service-pod --copy-to=dgb-img --set-image=*=redis
Create a new ClusterIP service named payment-service-clusterip,kubectl create service clusterip payment-service-clusterip --tcp=8088:5000
Return snapshot logs from container load-balancer-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/load-balancer-deployment -c gateway-pod-1
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""apps"" API group",kubectl get deployments.v3.0.0.apps -o yaml
Add a taint with key 'hardware' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  hardware=db-node-7:PreferNoSchedule
Add a taint with key 'hardware' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  hardware=k8s-node-1:PreferNoSchedule
Create a deployment named logging that runs the python image and expose port 8010,kubectl create deployment logging --image=python --port=8010
"Update pod 'backend' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend scaling-policy=auto-horizontal-scaling
"Get output from running the 'psql' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- psql
Set the user field on the team-beta-context context entry without touching other values,kubectl config set-context team-beta-context --user=cluster-admin
Create a copy of chat-app-pod changing all container images to python,kubectl debug chat-app-pod --copy-to=my-debugger --set-image=*=python
Set deployment analytics-platform-deployment's service account to my-service-account,kubectl set serviceaccount deployment analytics-platform-deployment my-service-account
"Listen on port 9090 locally, forwarding to 5432 in the pod",kubectl port-forward pod/analytics-pod 9090:5432
Create a deployment with a command,kubectl create deployment jenkins --image=amazonlinux -- bash
Show all logs from pod payment-gateway-pod written in the last hour,kubectl logs --since=1h payment-gateway-pod
Display only the most recent 53 lines of output in pod e-commerce-pod,kubectl logs --tail=53 e-commerce-pod
Start the node pod using a different command and custom arguments,kubectl run nginx --image=node --command -- <cmd> <arg1> ... <argN>
"Auto scale a deployment ""auth"", with the number of pods between 1 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment auth --min=1 --max=8
"Start a ethereum/client-go pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=ethereum/client-go --restart=Never
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/ui-config deployment/backend-microservice-deployment
"Get output from running the 'geth' command from pod proxy-service-pod, using the first container by default",kubectl exec proxy-service-pod -- geth
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=galaxy-cluster
Copy /tmp/foo_dir_dir local directory to /etc/kubernetes_dir in a remote pod in the default namespace,kubectl cp /tmp/foo_dir_dir backend-pod-13:/etc/kubernetes_dir
"Listen on port 6379 locally, forwarding to 8088 in the pod",kubectl port-forward pod/web-app-pod 6379:8088
"Get output from running 'php --version' command from the first pod of the service api-service, using the first container by default",kubectl exec svc/api-service -- php --version
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/cdn-service-pod
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""experimental-apps"" API group",kubectl get deployments.v3.0.0.experimental-apps -o yaml
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp logging/logging-agent-pod-7:~/.config/kube :/tmp/bar
Remove from node 'monitoring-node-15' all the taints with key 'hardware',kubectl taint nodes monitoring-node-15 hardware-
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=prod-cluster
"Delete pods and services with same names ""payment"" and ""payment""","kubectl delete pod,service payment payment"
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name illustration-shop.shop
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8888 8088
Create a deployment named db that runs the centos image and expose port 8084,kubectl create deployment db --image=centos --port=8084
"Create a service for a pod vpn-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod vpn-service-pod --port=3000 --name=frontend
Set deployment mydeployment's service account to tiller,kubectl set serviceaccount deployment mydeployment tiller
Create a copy of email-service-pod adding a debug container and changing container images,"kubectl debug email-service-pod -it --copy-to=my-debugger --image=debian --set-image=scheduler=my-scheduler:1.0,scheduler=my-scheduler:1.0"
"Remove exec auth plugin environment variables for the ""api-user"" entry",kubectl config set-credentials api-user --exec-env=var-to-remove-
Return snapshot of previous terminated lunar-launcher container logs from pod auth-service-pod,kubectl logs -p -c lunar-launcher auth-service-pod
"Listen on port 8081 locally, forwarding to 9090 in the pod",kubectl port-forward pod/backend-pod 8081:9090
Copy ~/.config/kube from a remote pod to /etc/kubernetes locally,kubectl cp logging/front-end-pod-12:~/.config/kube /etc/kubernetes
Get output from running the 'python --version' command in astro-container from pod frontend-pod,kubectl exec frontend-pod -c astro-container -- python --version
View the details of daemonset revision 1,kubectl rollout history daemonset/namespace-3 --revision=1
Roll back to daemonset revision 3,kubectl rollout undo daemonset/my-deployment --to-revision=3
Begin streaming the logs of the nano-bot container in pod backend-pod,kubectl logs -f -c nano-bot backend-pod
Start a php pod and let the container expose port 8181,kubectl run hazelcast --image=php --port=8181
"Listen on port 9090 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 9090:3000
Execute set-last-applied against each configuration file in a directory,kubectl apply set-last-applied -f setup/
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/data/file2.txt
List resource information in custom columns,"kubectl get pod media-stream-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Describe pods by label stack=tech-stack,kubectl describe po -l stack=tech-stack
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/web-app-pod 5000 8081
"Set a deployments python container cpu limits to ""500m"" and memory to ""512Mi""","kubectl set resources deployment python -c=nginx --limits=cpu=500m,memory=512Mi"
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=9092 --target-port=808300
Update image of all containers of daemonset services to 'amazonlinux:2',kubectl set image daemonset services *=amazonlinux:2
"Get output from running the 'nginx -g ""daemon off;""' command in nano-bot from pod backend-pod","kubectl exec backend-pod -c nano-bot -- nginx -g ""daemon off;"""
"Set a deployments runtime container cpu limits to ""100m"" and memory to ""1Gi""","kubectl set resources deployment runtime -c=nginx --limits=cpu=100m,memory=1Gi"
Import environment from a secret,kubectl set env --from=secret/database-secret deployment/log-aggregator-deployment
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod 8081:8080
Create a cron job with a command,"kubectl create cronjob database-maintenance --image=jenkins --schedule=""*/1 * * * *"" -- jenkins-plugin-cli"
"Create a cluster role named ""reader"" with API Group specified","kubectl create clusterrole reader --verb=create,list,delete --resource=certificatesigningrequests.certificates.k8s.io"
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""prod-apps"" API group",kubectl get deployments.hotfix-1.1.2.prod-apps -o yaml
Set deployment backend-microservice-deployment's service account to dashboard,kubectl set serviceaccount deployment backend-microservice-deployment dashboard
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.client-2-context.cluster dev-cluster
Rename the context 'old-name' to 'service-account-context' in your kubeconfig file,kubectl config rename-context old-name service-account-context
Embed certificate authority data for the app-cluster cluster entry,kubectl config set-cluster app-cluster --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
"Listen on port 9090 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 9090:8888"
"List a pod identified by type and name specified in ""config.yaml"" in JSON output format",kubectl get -f config.yaml -o json
Return snapshot of previous terminated stardust-shuttle container logs from pod database-pod,kubectl logs -p -c stardust-shuttle database-pod
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json compliance-level=PCI-DSS
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/backend-pod 8888:8000
"Get output from running the 'npm --version' command from pod payment-gateway-pod, using the first container by default",kubectl exec payment-gateway-pod -- npm --version
Add a taint with key 'special' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  special=node-1:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-config-prod deployment/api-server-deployment
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/alpine
Create a deployment named auth that runs the postgres image,kubectl create deployment auth --image=postgres
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/env-vars deployment/monitoring-stack-deployment
Return snapshot of previous terminated warp-drive container logs from pod chat-app-pod,kubectl logs -p -c warp-drive chat-app-pod
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/mypod 8000 8081
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""third-party-apps"" API group",kubectl get deployments.hotfix-1.1.2.third-party-apps -o yaml
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=cluster-beta
"Listen on port 5432 locally, forwarding to 8080 in the pod",kubectl port-forward pod/log-aggregator-pod 5432:8080
Describe one context in your kubeconfig file,kubectl config get-contexts cluster-2-context
Update image of all containers of daemonset test to 'golang:1.17',kubectl set image daemonset test *=golang:1.17
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/e-commerce-pod
Update pod 'security' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods security env-
Update deployment 'search-engine-deployment' with a new environment variable,kubectl set env deployment/search-engine-deployment SECRET_KEY=your-secret-key
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/ui-config deployment/notification-handler-deployment
Get output from running the 'mysql' command in rocket-ranger from pod database-pod,kubectl exec database-pod -c rocket-ranger -- mysql
"Listen on port 9090 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 9090:8000
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/api-service-pod
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/data-synchronization-job -n production
"Update pod 'database' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database scaling-policy=auto-horizontal-scaling
Remove from node 'worker-node-3' all the taints with key 'disktype',kubectl taint nodes worker-node-3 disktype-
Create a copy of payment-gateway-pod changing all container images to node,kubectl debug payment-gateway-pod --copy-to=debug-image-web --set-image=*=node
Create a new resource quota named service-quota,kubectl create quota service-quota --hard=services=5
Return snapshot logs from container frontend-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/frontend-deployment -c chat-app-pod-1
Return snapshot of previous terminated astro-container container logs from pod gateway-pod,kubectl logs -p -c astro-container gateway-pod
Get output from rocket-ranger from pod media-stream-pod,kubectl attach media-stream-pod -c rocket-ranger
"Update pod 'backend' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend git-repo='https://github.com/example/my-app'
Create a deployment named auth that runs the ruby image and expose port 8080,kubectl create deployment auth --image=ruby --port=8080
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/payment-service"
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8080 8080
"Listen on a random port locally, forwarding to 9090 in the pod",kubectl port-forward pod/backend-pod :9090
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=9092 --target-port=800000
"Create a service for a replicated hazelcast using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs hazelcast --port=9000 --target-port=808000
"Check to see if I can get the job named ""content-import-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/content-import-job -n namespace-1
"Listen on port 5000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 5000:6379
Import environment from a secret,kubectl set env --from=secret/jwt-secret deployment/order-processing-deployment
"Get output from running 'geth' command from the first pod of the service email-service, using the first container by default",kubectl exec svc/email-service -- geth
Create a new secret named gcp-service-account-secret with keys for each file in folder bar,kubectl create secret generic gcp-service-account-secret --from-file=path/to/profiles
Delete the cluster-alpha cluster,kubectl config delete-cluster cluster-alpha
Add a taint with key 'disktype' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  disktype=app-node-6:PreferNoSchedule
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=cloud-cluster
Update pod 'analytics' with the label 'release' and the value 'v1.0',kubectl label pods analytics release=v1.0
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/scheduler-app-deployment -c security-service-pod-1
Create a cron job with a command,"kubectl create cronjob monthly-audit --image=wordpress --schedule=""*/1 * * * *"" -- mysql --version"
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/parameters/file2.txt
"Auto scale a deployment ""payment"", with the number of pods between 6 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment payment --min=6 --max=10
Show metrics for all pods in the given namespace,kubectl top pod --namespace=my-ns
Create a job with a command,kubectl create job audit-job --image=mysql -- mysql
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/proxy-server-pod 6379:8888
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/chat-app-pod
Start a mongo pod and let the container expose port 5432,kubectl run hazelcast --image=mongo --port=5432
Create a job with a command,kubectl create job report-generation-job --image=mysql -- mysql
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/cache-service"
Create a copy of email-service-pod changing all container images to alpine,kubectl debug email-service-pod --copy-to=debug-image-1 --set-image=*=alpine
Return snapshot logs from container notification-handler-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/notification-handler-deployment -c proxy-service-pod-1
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""api-v2"" API group",kubectl get deployments.feature-branch-2.3.0.api-v2 -o json
Create a job with a command,"kubectl create job image-build-job --image=amazonlinux -- /bin/bash -c ""echo 'Hello"
Create a new config map named env-vars from the key=value pairs in the file,kubectl create configmap env-vars --from-file=path/to/data
Unset the current-context,kubectl config unset current-context
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/namespace-config deployment/backend-microservice-deployment
"Listen on port 5000 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 5000:5432"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node storage-node-13 -p '{""spec"":{""replicas"":3}'"
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/ui-config deployment/user-management-deployment
Create a new secret named payment-gateway-secret with keys for each file in folder bar,kubectl create secret generic payment-gateway-secret --from-file=path/to/properties
Deny CSR 'csr-postgres-12',kubectl certificate deny csr-postgres-12
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/chat-app-pod 8888:8080
"Listen on port 3000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 3000:3000"
"Listen on port 3000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/order-service 3000:https
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=kube-cluster-2
Create a new secret named aws-credentials-secret with keys for each file in folder bar,kubectl create secret generic aws-credentials-secret --from-file=path/to/configurations
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/chat-app-pod 6379:8888
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=kube-cluster-2
Get output from running the 'irb' command in nebula-navigator from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c nebula-navigator -- irb
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=my-k8s-cluster
"Start a python pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=python --restart=Never
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller chat-app-rc
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/backend-pod 8088 8888
Set deployment gateway-deployment's service account to kube-proxy,kubectl set serviceaccount deployment gateway-deployment kube-proxy
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/global-config deployment/web-app-deployment
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=8080 --target-port=637900
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod mypod # and sends stdout/stderr from 'bash' back to the client,kubectl attach mypod -c astro-container -i -t
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-settings deployment/web-app-deployment
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=galaxy-cluster
Add a taint with key 'hardware' on nodes having label myLabel,kubectl taint node -l myLabel  hardware=app-node-6:PreferNoSchedule
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/media-stream-pod
Show metrics for a given pod and its containers,kubectl top pod e-commerce-pod --containers
"Wait for the pod ""log-aggregator-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/log-aggregator-pod
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.team-beta-context.cluster on-prem-cluster
Get output from running the 'mysql' command in cosmic-container from pod auth-service-pod,kubectl exec auth-service-pod -c cosmic-container -- mysql
"Listen on port 8081 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8081:8000
Create a new secret named azure-storage-secret from an env file,kubectl create secret generic azure-storage-secret --from-env-file=path/to/properties.env
"Delete pods and services with same names ""foo"" and ""payment""","kubectl delete pod,service foo payment"
Create a new LoadBalancer service named frontend-lb,kubectl create service loadbalancer frontend-lb --tcp=6379:9092
Embed certificate authority data for the app-cluster cluster entry,kubectl config set-cluster app-cluster --embed-certs --certificate-authority=~/.kube/data-cluster/kubernetes.ca.crt
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""prod-apps"" API group",kubectl get deployments.alpha-2.0.prod-apps -o yaml
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/cache-warming-job -n development
Add a taint with key 'datacenter' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  datacenter=monitoring-node-15:PreferNoSchedule
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/web-app-pod 9090:8000
Remove from node 'backup-node-14' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes backup-node-14 dedicated:NoSchedule-
Remove from node 'storage-node-13' all the taints with key 'zone',kubectl taint nodes storage-node-13 zone-
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 3000 8088
"Listen on port 8088 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8088:3000
Create a new secret named cert-manager-secret with key1=supersecret and key2=topsecret,kubectl create secret generic cert-manager-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
"Listen on port 5000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/chat-app-pod 5000:8888
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-config deployment/proxy-service-deployment
Create a copy of api-service-pod adding a debug container and changing container images,"kubectl debug api-service-pod -it --copy-to=debug-image-memcached --image=debian --set-image=database=mysql:5.7,cache=redis:alpine"
"Scale a resource identified by type and name specified in ""setup.json"" to 7",kubectl scale --replicas=7 -f setup.json
Resume an already paused deployment,kubectl rollout resume deployment/staging
"Delete pods and services with same names ""cdn"" and ""frontend""","kubectl delete pod,service cdn frontend"
Create a new config map named app-config-prod from the key=value pairs in the file,kubectl create configmap app-config-prod --from-file=path/to/parameters
Create a deployment named mattermost that runs the mysql image,kubectl create deployment mattermost --image=mysql
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/db-config deployment/load-balancer-deployment
"Set basic auth for the ""developer"" entry",kubectl config set-credentials developer --username=admin --password=uXFGweU9l35qcif
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=5000 --target-port=808100
Display only the most recent 20 lines of output in pod gateway-pod,kubectl logs --tail=20 gateway-pod
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod 8088:8088
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod security-service-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/backend-microservice-deployment -c web-app-pod-1
"Start a golang pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=golang --overrides='{ ""apiVersion"": ""dev-2.2.0"", ""spec"": { ... } }'"
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named mypod,kubectl logs deployment/monitoring-stack-deployment -c mypod-1
Create a deployment named mattermost that runs the alpine image and expose port 8010,kubectl create deployment mattermost --image=alpine --port=8010
"Listen on port 5432 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 5432:8088"
"Listen on port 8088 locally, forwarding to 8080 in the pod",kubectl port-forward pod/mypod 8088:8080
Start the alpine pod using a different command and custom arguments,kubectl run nginx --image=alpine --command -- <cmd> <arg1> ... <argN>
"Listen on port 8088 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8088:8080
Return snapshot logs from container database-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/database-deployment -c chat-app-pod-1
"Get output from running 'go version' command from the first pod of the deployment analytics-platform-deployment, using the first container by default",kubectl exec deploy/analytics-platform-deployment -- go version
Apply resources from a directory containing kustomization.yaml - e.g. config/kustomization.yaml,kubectl apply -k config/
"Listen on port 5432 locally, forwarding to 5432 in the pod",kubectl port-forward pod/mypod 5432:5432
Begin streaming the logs of the stardust-shuttle container in pod chat-app-pod,kubectl logs -f -c stardust-shuttle chat-app-pod
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp istio-system/security-scanner-pod-18:~/.config/kube /tmp/bar_dir
Add a taint with key 'workload' on nodes having label role=database,kubectl taint node -l role=database  workload=edge-node-10:PreferNoSchedule
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""mobile-apps"" API group",kubectl get deployments.beta-1.0.mobile-apps -o yaml
"Listen on port 5432 locally, forwarding to 8000 in the pod",kubectl port-forward pod/chat-app-pod 5432:8000
Create a new config map named kube-system-config from the key=value pairs in the file,kubectl create configmap kube-system-config --from-file=path/to/profiles
Create a cron job,"kubectl create cronjob cleanup-task --image=busybox --schedule=""*/1 * * * *"""
Create a deployment with a command,kubectl create deployment gateway --image=nginx -- nginx
Delete the on-prem-cluster cluster,kubectl config delete-cluster on-prem-cluster
Create a job with a command,kubectl create job backup --image=postgres -- psql
"Listen on port 8000 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8000:8080"
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/backend-pod 8088:8888
Import environment from a secret,kubectl set env --from=secret/gcp-service-account-secret deployment/mydeployment
Return snapshot logs from container load-balancer-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/load-balancer-deployment -c payment-gateway-pod-1
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/mypod 8000:5432
Remove from node 'prod-node-5' all the taints with key 'cpu-type',kubectl taint nodes prod-node-5 cpu-type-
Update pod 'payment' with the label 'env' and the value 'development',kubectl label pods payment env=development
"Create a single ingress called 'default-ingress' that directs requests to foo.com/module to svc # svc1:8181 with a tls secret ""my-cert""","kubectl create ingress default-ingress --rule=""foo.com/module=svc1:8181,tls=my-cert"""
"Create a service for a replicated centos using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs centos --port=80 --target-port=808800
"Auto scale a deployment ""database"", with the number of pods between 4 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment database --min=4 --max=15
Delete pods and services with label release=beta,"kubectl delete pods,services -l release=beta"
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""beta-apps"" API group",kubectl get deployments.beta-1.0.beta-apps -o yaml
"Create a cluster role named ""admin_role"" with SubResource specified","kubectl create clusterrole admin_role --verb=patch,watch,exec --resource=secrets,secrets/status"
"Delete pods and services with same names ""analytics"" and ""backend""","kubectl delete pod,service analytics backend"
Create a new NodePort service named my-ns,kubectl create service nodeport my-ns --tcp=8081:8088
Create a cron job with a command,"kubectl create cronjob cleanup-task --image=wordpress --schedule=""*/1 * * * *"" -- wp"
Create a job with a command,kubectl create job database-seeding-job --image=jenkins -- java -jar /usr/share/jenkins/jenkins.war
Update pod 'cdn' with the label 'tier' and the value 'database',kubectl label pods cdn tier=database
Begin streaming the logs of the nano-bot container in pod auth-service-pod,kubectl logs -f -c nano-bot auth-service-pod
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""prod-user"" entry",kubectl config set-credentials prod-user --auth-provider=oidc --auth-provider-arg=client-secret-
Return snapshot logs from container payment-processor-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/payment-processor-deployment -c api-service-pod-1
"Delete pods and services with same names ""security"" and ""gateway""","kubectl delete pod,service security gateway"
Set deployment api-server-deployment's service account to tekton,kubectl set serviceaccount deployment api-server-deployment tekton
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config-prod deployment/order-processing-deployment
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.stable-2.0.0.sandbox-apps -o json
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json app-version=2.5.1
Create a new secret named encryption-key-secret with keys for each file in folder bar,kubectl create secret generic encryption-key-secret --from-file=path/to/settings
Create a deployment named web that runs the amazonlinux image with 6 replicas,kubectl create deployment web --image=amazonlinux --replicas=6
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/virus-scan-job -n logging
"Get output from running 'mysql --version' command from the first pod of the service notification-service, using the first container by default",kubectl exec svc/notification-service -- mysql --version
Embed certificate authority data for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --embed-certs --certificate-authority=~/.kube/cluster-beta/kubernetes.ca.crt
View the last-applied-configuration annotations by file in JSON,kubectl apply view-last-applied -f parameters.yaml -o json
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-secrets deployment/load-balancer-deployment
"Listen on port 8000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8000:8888"
Update image of all containers of daemonset nginx to 'httpd:2.4.48',kubectl set image daemonset nginx *=httpd:2.4.48
"If the deployment named frontend-rs's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/frontend-rs
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/db-config deployment/search-engine-deployment
"Delete pods and services with same names ""chat-app"" and ""api""","kubectl delete pod,service chat-app api"
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/cdn-service-pod 8080:8888
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod log-aggregator-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach log-aggregator-pod -c time-machine -i -t
Create a deployment named jenkins that runs the mysql image and expose port 9092,kubectl create deployment jenkins --image=mysql --port=9092
"Delete pods and services with same names ""proxy-server"" and ""chat-app""","kubectl delete pod,service proxy-server chat-app"
Update image of all containers of daemonset app-v2 to 'mongo:5.0.2',kubectl set image daemonset app-v2 *=mongo:5.0.2
Set deployment database-deployment's service account to prometheus,kubectl set serviceaccount deployment database-deployment prometheus
Update deployment 'search-engine-deployment' with a new environment variable,kubectl set env deployment/search-engine-deployment MAX_CONNECTIONS=100
"Force replace, delete and then re-create the resource",kubectl replace --force -f ./config.json
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node backup-node-14 -p '{""spec"":{""replicas"":3}'"
Get output from running the 'geth' command in astro-container from pod chat-app-pod,kubectl exec chat-app-pod -c astro-container -- geth
Update a single-container pod's image version (tag) to v4,kubectl get pod database-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
"Listen on port 6379 locally, forwarding to 9090 in the pod",kubectl port-forward pod/backend-pod 6379:9090
Update pod 'auth' with the label 'component' and the value 'api',kubectl label pods auth component=api
"Wait for the pod ""analytics-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/analytics-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
Add a taint with key 'datacenter' on nodes having label app=web-app,kubectl taint node -l app=web-app  datacenter=gpu-node-12:PreferNoSchedule
Get output from running the 'ruby --version' command in nebula-navigator from pod security-service-pod,kubectl exec security-service-pod -c nebula-navigator -- ruby --version
"Delete pods and services with same names ""chat-app"" and ""security""","kubectl delete pod,service chat-app security"
"Get output from running 'elasticsearch' command from the first pod of the service email-service, using the first container by default",kubectl exec svc/email-service -- elasticsearch
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/global-config deployment/scheduler-app-deployment
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/proxy-service"
Return snapshot logs from container api-server-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/api-server-deployment -c proxy-server-pod-1
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8000 8888
Edit the service named 'notification-service',kubectl edit svc/notification-service
"Update pod 'vpn' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn custom-label=my-custom-value
Create a new config map named app-name-config from an env file,kubectl create configmap app-name-config --from-env-file=path/to/preferences.env
"Create a job from a cron job named ""database-maintenance""",kubectl create job test-job --from=cronjob/database-maintenance
"Wait for the pod ""proxy-service-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/proxy-service-pod
"Listen on port 8080 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8080:8888"
"Update pod 'web' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods web SLA='99.9% uptime'
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node node-2 -p $'spec:\n unschedulable: true'
"Get output from running the 'wp' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- wp
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=prod-cluster
Update pod 'foo' with the label 'release' and the value 'v2.0',kubectl label pods foo release=v2.0
Update deployment 'proxy-service-deployment' with a new environment variable,kubectl set env deployment/proxy-service-deployment CACHE_SIZE=64MB
Remove from node 'edge-node-10' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes edge-node-10 hardware:NoExecute-
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8080 8888
Get output from lunar-launcher from pod proxy-service-pod,kubectl attach proxy-service-pod -c lunar-launcher
Start a amazonlinux pod,kubectl run nginx --image=amazonlinux
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/web-app-pod
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/cdn-service-pod
Add to node 'prod-node-5' a taint with key 'datacenter' and no value,kubectl taint nodes prod-node-5 datacenter:NoSchedule
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod web-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach web-app-pod -c lunar-launcher -i -t
"Get output from running the 'psql' command from pod log-aggregator-pod, using the first container by default",kubectl exec log-aggregator-pod -- psql
Roll back to daemonset revision 7,kubectl rollout undo daemonset/app-v2 --to-revision=7
"Create a service for an node deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment node --port=5432 --target-port=700000
"Create a service for a replication controller identified by type and name specified in ""alpine-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f alpine-controller.yaml --port=8089 --target-port=801000
"Create a single ingress called 'app1-ingress' that directs requests to testing.com/module to svc # svc1:8089 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""testing.com/module=svc1:8089,tls=my-cert"""
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/database-indexing-job -n staging
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/cdn-service-pod 8081:8081
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/chat-app-pod 8000:8080
"Delete pods and services with same names ""frontend"" and ""analytics""","kubectl delete pod,service frontend analytics"
Create a new secret named api-key-secret with keys for each file in folder bar,kubectl create secret generic api-key-secret --from-file=path/to/properties
Create a new config map named namespace-config from the key=value pairs in the file,kubectl create configmap namespace-config --from-file=path/to/properties
"Listen on port 8081 locally, forwarding to 8000 in the pod",kubectl port-forward pod/security-service-pod 8081:8000
Display only the most recent 20 lines of output in pod vpn-service-pod,kubectl logs --tail=20 vpn-service-pod
Create a job with a command,kubectl create job data-migration-job --image=python -- python
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=on-prem-cluster
Update image of all containers of daemonset prod to 'nginx:1.21.3',kubectl set image daemonset prod *=nginx:1.21.3
Create a cron job with a command,"kubectl create cronjob alerts-cleanup --image=golang --schedule=""*/1 * * * *"" -- go version"
Create a new config map named app-config-dev from an env file,kubectl create configmap app-config-dev --from-env-file=path/to/data.env
"Listen on port 8888 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8888:5000
Get output from running the 'composer --version' command in nano-bot from pod api-service-pod,kubectl exec api-service-pod -c nano-bot -- composer --version
Create a copy of media-stream-pod adding a debug container and changing container images,"kubectl debug media-stream-pod -it --copy-to=debug-image-web --image=debian --set-image=scheduler=my-scheduler:1.0,database=mysql:5.7"
Remove from node 'monitoring-node-15' all the taints with key 'app',kubectl taint nodes monitoring-node-15 app-
Set deployment log-aggregator-deployment's service account to my-service-account,kubectl set serviceaccount deployment log-aggregator-deployment my-service-account
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""internal-apps"" API group",kubectl get deployments.v1.1.0.internal-apps -o json
Begin streaming the logs of the nebula-navigator container in pod analytics-pod,kubectl logs -f -c nebula-navigator analytics-pod
Start a hazelcast pod and let the container expose port 9090,kubectl run hazelcast --image=hazelcast/hazelcast --port=9090
Remove from node 'storage-node-13' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes storage-node-13 hardware:NoExecute-
Add a taint with key 'datacenter' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  datacenter=node-1:PreferNoSchedule
Return snapshot of previous terminated warp-drive container logs from pod web-app-pod,kubectl logs -p -c warp-drive web-app-pod
"Update pod 'monitoring' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods monitoring compliance-level='PCI-DSS'
"Listen on port 8080 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8080:8088
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=6379 --target-port=909100
Describe pods by label feature=feature-xyz,kubectl describe po -l feature=feature-xyz
Return snapshot of previous terminated time-machine container logs from pod security-service-pod,kubectl logs -p -c time-machine security-service-pod
Rename the context 'dev-context' to 'admin-context' in your kubeconfig file,kubectl config rename-context dev-context admin-context
Return snapshot logs from container user-management-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/user-management-deployment -c chat-app-pod-1
Copy /tmp/foo local file to /tmp/bar in a remote pod in a specific container,kubectl cp /tmp/foo backend-pod-13:/tmp/bar -c admin-dashboard
Update pod 'cdn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods cdn component-
Import environment from a secret,kubectl set env --from=secret/cert-manager-secret deployment/backend-microservice-deployment
Start a ubuntu pod and let the container expose port 3001,kubectl run hazelcast --image=ubuntu --port=3001
Return snapshot of previous terminated warp-drive container logs from pod media-stream-pod,kubectl logs -p -c warp-drive media-stream-pod
"Delete pods and services with same names ""frontend"" and ""frontend""","kubectl delete pod,service frontend frontend"
Remove from node 'monitoring-node-15' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes monitoring-node-15 datacenter:NoExecute-
Start a wordpress pod and let the container expose port 3306,kubectl run hazelcast --image=wordpress --port=3306
"Listen on port 3000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 3000:6379
Create a job with a command,kubectl create job monitoring-job --image=golang -- go run hello.go
"Listen on port 8000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/security-service-pod 8000:8000
Add a taint with key 'datacenter' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  datacenter=web-node-8:PreferNoSchedule
Set deployment mydeployment's service account to fluentd,kubectl set serviceaccount deployment mydeployment fluentd
Set the resource request and limits for all containers in redis,"kubectl set resources deployment redis --limits=cpu=200m,memory=512Mi --requests=cpu=500m,memory=256Mi"
Embed certificate authority data for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --embed-certs --certificate-authority=~/.kube/moon-cluster/kubernetes.ca.crt
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""beta-apps"" API group",kubectl get deployments.legacy-1.0.0.beta-apps -o json
Set deployment notification-handler-deployment's service account to metrics-server,kubectl set serviceaccount deployment notification-handler-deployment metrics-server
"Update pod 'cdn' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn description='Web server for marketing site'
"Auto scale a deployment ""payment"", with the number of pods between 7 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment payment --min=7 --max=13
Create a new config map named namespace-config from the key=value pairs in the file,kubectl create configmap namespace-config --from-file=path/to/parameters
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp logging/cache-pod-5:/tmp/foo /tmp/bar
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp monitoring/load-balancer-pod-9:/tmp/foo_dir /tmp/bar_dir
View the last-applied-configuration annotations by file in JSON,kubectl apply view-last-applied -f config.yaml -o json
Create a job with a command,kubectl create job security-scan-job --image=mysql -- mysql
Remove from node 'app-node-6' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes app-node-6 disktype:NoSchedule-
Return snapshot logs from container web-app-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/web-app-deployment -c log-aggregator-pod-1
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod media-stream-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach media-stream-pod -c warp-drive -i -t
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/database-pod
"Listen on port 8088 locally, forwarding to 8080 in the pod",kubectl port-forward pod/cdn-service-pod 8088:8080
Update pod 'auth' only if the resource is unchanged from version 1,kubectl annotate pods auth description='my frontend running nginx' --resource-version=1
Create a new LoadBalancer service named payment-gateway-lb,kubectl create service loadbalancer payment-gateway-lb --tcp=8089:8000
Display only the most recent 5 lines of output in pod database-pod,kubectl logs --tail=5 database-pod
Set deployment authentication-service-deployment's service account to elasticsearch,kubectl set serviceaccount deployment authentication-service-deployment elasticsearch
Create a deployment named logging that runs the confluentinc/cp-kafka image with 5 replicas,kubectl create deployment logging --image=confluentinc/cp-kafka --replicas=5
"Listen on port 9090 locally, forwarding to 6379 in the pod",kubectl port-forward pod/frontend-pod 9090:6379
Embed certificate authority data for the star-cluster cluster entry,kubectl config set-cluster star-cluster --embed-certs --certificate-authority=~/.kube/cluster-alpha/kubernetes.ca.crt
Set deployment gateway-deployment's service account to istio,kubectl set serviceaccount deployment gateway-deployment istio
Print the supported API resources,kubectl api-resources
Return snapshot logs from container payment-processor-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/payment-processor-deployment -c cdn-service-pod-1
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""extensions"" API group",kubectl get deployments.v1.1.0.extensions -o yaml
Set deployment search-engine-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment search-engine-deployment kube-scheduler
Create a deployment named my-dep that runs the centos image with 3 replicas,kubectl create deployment my-dep --image=centos --replicas=3
"If the deployment named frontend-rs's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/frontend-rs
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/payment-service"
List a single pod in JSON output format,kubectl get -o json pod gateway-pod
Start the redis pod using a different command and custom arguments,kubectl run nginx --image=redis --command -- <cmd> <arg1> ... <argN>
Update pod 'proxy' with the label 'env' and the value 'production',kubectl label pods proxy env=production
"Get output from running 'dotnet --list-runtimes' command from the first pod of the service database-service, using the first container by default",kubectl exec svc/database-service -- dotnet --list-runtimes
Display only the most recent 53 lines of output in pod mypod,kubectl logs --tail=53 mypod
"Update pod 'cdn' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods cdn SLA='99.9% uptime'
"Set a deployments elasticsearch container cpu limits to ""500m"" and memory to ""2Gi""","kubectl set resources deployment elasticsearch -c=nginx --limits=cpu=500m,memory=2Gi"
Create a new ExternalName service named external-analytics-service,kubectl create service externalname external-analytics-service --external-name travel-sample.travel
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod 8000:8080
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/configurations/file2.txt
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/monitoring-config deployment/monitoring-stack-deployment
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.client-2-context.cluster web-cluster
Begin streaming the logs of the warp-drive container in pod proxy-service-pod,kubectl logs -f -c warp-drive proxy-service-pod
"Update pod 'foo' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling', overwriting any existing value",kubectl annotate --overwrite pods foo scaling-policy='auto-horizontal-scaling'
Get output from running the 'go run hello.go' command in stardust-shuttle from pod cdn-service-pod,kubectl exec cdn-service-pod -c stardust-shuttle -- go run hello.go
Create a new ClusterIP service named payment-service-clusterip,kubectl create service clusterip payment-service-clusterip --tcp=8181:9091
Update all deployments' and rc's nginx container's image to 'mysql:5.7.35',"kubectl set image deployments,rc mysql=mysql:5.7.35 --all"
"Listen on port 5432 locally, forwarding to 8088 in the pod",kubectl port-forward pod/frontend-pod 5432:8088
"Auto scale a deployment ""gateway"", with the number of pods between 2 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=2 --max=10
Describe a node,kubectl describe nodes legacy-node-20.legacy-datacenter.local
"Check to see if I can get the job named ""cron-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/cron-job -n production
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod email-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach email-service-pod -c time-machine -i -t
Set deployment analytics-platform-deployment's service account to flux,kubectl set serviceaccount deployment analytics-platform-deployment flux
Get output from nebula-navigator from pod proxy-service-pod,kubectl attach proxy-service-pod -c nebula-navigator
Create a new config map named namespace-config based on folder options,kubectl create configmap namespace-config --from-file=path/to/options
Set deployment order-processing-deployment's service account to kube-dns,kubectl set serviceaccount deployment order-processing-deployment kube-dns
"Listen on port 3000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 3000:5000
"Get output from running the 'java -jar /usr/share/jenkins/jenkins.war' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- java -jar /usr/share/jenkins/jenkins.war
"Create a single ingress called 'internal-ingress' that directs requests to foo.com/example to svc # svc1:8000 with a tls secret ""my-cert""","kubectl create ingress internal-ingress --rule=""foo.com/example=svc1:8000,tls=my-cert"""
Create a new secret named ssh-key-secret from an env file,kubectl create secret generic ssh-key-secret --from-env-file=path/to/configurations.env
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/backend-pod 3000 6379
Remove from node 'k8s-node-1' all the taints with key 'app',kubectl taint nodes k8s-node-1 app-
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node edge-node-10 -p '{""spec"":{""type"":""LoadBalancer""}'"
"If the deployment named baz's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/baz
Create a new config map named db-config with key1=config1 and key2=config2,kubectl create configmap db-config --from-literal=settings=config1 --from-literal=key2=config2
"Get output from running the 'jenkins-plugin-cli' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- jenkins-plugin-cli
Create a new ClusterIP service named catalog-service-clusterip,kubectl create service clusterip catalog-service-clusterip --tcp=8082:3306
"If the deployment named baz's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/baz
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/analytics-pod 8088:8088
Begin streaming the logs of the nebula-navigator container in pod media-stream-pod,kubectl logs -f -c nebula-navigator media-stream-pod
Create a copy of database-pod changing all container images to php,kubectl debug database-pod --copy-to=debug-image-web --set-image=*=php
"Drain node ""testing-node-11"", even if there are pods not managed by a replication controller, replica set, job, daemon set or stateful set on it",kubectl drain testing-node-11 --force
Create a new secret named api-secret-key from an env file,kubectl create secret generic api-secret-key --from-env-file=path/to/configs.env
Add a taint with key 'workload' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  workload=prod-node-5:PreferNoSchedule
Roll back to the previous deployment with dry-run,kubectl rollout undo --dry-run=server deployment/prod
"Remove exec auth plugin environment variables for the ""john.doe"" entry",kubectl config set-credentials john.doe --exec-env=var-to-remove-
Create a job with a command,kubectl create job data-migration-job --image=python -- pip --version
Add a taint with key 'special' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  special=kube-master-9:PreferNoSchedule
Create a job with a command,kubectl create job log-processing-job --image=redis -- redis-server
Copy :/tmp/foo local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp :/tmp/foo rook-ceph/backend-pod-13:/tmp/bar_dir
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/security-service-pod 5432 8081
Create a deployment named drupal that runs the jenkins image and expose port 8089,kubectl create deployment drupal --image=jenkins --port=8089
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""external-apps"" API group",kubectl get deployments.v1.1.1.external-apps -o yaml
Get output from running the 'jenkins-plugin-cli' command in warp-drive from pod analytics-pod,kubectl exec analytics-pod -c warp-drive -- jenkins-plugin-cli
"If the deployment named prod-app-rs's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/prod-app-rs
Create a new secret named email-credentials-secret from an env file,kubectl create secret generic email-credentials-secret --from-env-file=path/to/options.env
Create a job with a command,kubectl create job audit-job --image=jenkins -- jenkins --version
"Get output from running the 'geth' command from pod api-service-pod, using the first container by default",kubectl exec api-service-pod -- geth
"Listen on port 5000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/mypod 5000:8080
Get output from running the 'apache2ctl -D FOREGROUND' command in lunar-launcher from pod proxy-server-pod,kubectl exec proxy-server-pod -c lunar-launcher -- apache2ctl -D FOREGROUND
"Listen on port 8080 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8080:9090"
Set deployment scheduler-app-deployment's service account to vault,kubectl set serviceaccount deployment scheduler-app-deployment vault
Get output from time-machine from pod analytics-pod,kubectl attach analytics-pod -c time-machine
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=8089:9000
"Set a deployments mysql container cpu limits to ""1"" and memory to ""2Gi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=1,memory=2Gi"
Update pod 'log-aggregator' with the label 'component' and the value 'api',kubectl label pods log-aggregator component=api
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/ui-config deployment/backend-microservice-deployment
Get output from the first pod of a replica set named node,kubectl attach rs/node
Display only the most recent 31 lines of output in pod frontend-pod,kubectl logs --tail=31 frontend-pod
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=sun-cluster
Show all logs from pod vpn-service-pod written in the last hour,kubectl logs --since=1h vpn-service-pod
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube kube-system/api-server-pod-3:/tmp/bar
Add a taint with key 'environment' on nodes having label app=web-app,kubectl taint node -l app=web-app  environment=app-node-6:PreferNoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node monitoring-node-15 -p $'spec:\n someField: newValue'
Get output from running the 'postgres' command in stardust-shuttle from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c stardust-shuttle -- postgres
Add a taint with key 'cpu-type' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  cpu-type=node-1:PreferNoSchedule
Add a taint with key 'dedicated' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  dedicated=backup-node-14:PreferNoSchedule
Import environment from a secret,kubectl set env --from=secret/gcp-service-account-secret deployment/authentication-service-deployment
Update pod 'cdn' only if the resource is unchanged from version 1,kubectl label pods cdn status=unhealthy --resource-version=1
Add a taint with key 'dedicated' on nodes having label service=auth,kubectl taint node -l service=auth  dedicated=db-node-7:PreferNoSchedule
Return snapshot logs from container order-processing-deployment-1 of a deployment named database-pod,kubectl logs deployment/order-processing-deployment -c database-pod-1
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp velero/backend-pod-13:~/.config/kube :/tmp/bar
Get output from time-machine from pod database-pod,kubectl attach database-pod -c time-machine
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/kube-system-config deployment/search-engine-deployment
Create a new secret named app-config-secret from an env file,kubectl create secret generic app-config-secret --from-env-file=path/to/configs.env
Start a hazelcast pod and let the container expose port 7000,kubectl run hazelcast --image=hazelcast/hazelcast --port=7000
Update deployment 'payment-processor-deployment' with a new environment variable,kubectl set env deployment/payment-processor-deployment SMTP_HOST=smtp.example.com
Create a copy of gateway-pod adding a debug container and changing container images,"kubectl debug gateway-pod -it --copy-to=debug-image-memcached --image=debian --set-image=mailer=mailer:latest,app=app:debug"
Return snapshot logs from container gateway-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/gateway-deployment -c security-service-pod-1
"Get output from running the 'go version' command from pod web-app-pod, using the first container by default",kubectl exec web-app-pod -- go version
Update pod 'frontend' with the label 'release' and the value 'v1.0',kubectl label pods frontend release=v1.0
Return snapshot of previous terminated ruby container logs from pod proxy-server-pod,kubectl logs -p -c ruby proxy-server-pod
Begin streaming the logs of the lunar-launcher container in pod api-service-pod,kubectl logs -f -c lunar-launcher api-service-pod
"Get output from running 'apk add curl' command from the first pod of the deployment load-balancer-deployment, using the first container by default",kubectl exec deploy/load-balancer-deployment -- apk add curl
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/global-config deployment/payment-processor-deployment
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/api-config deployment/backend-microservice-deployment
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/app-config-prod deployment/database-deployment
"Create a cluster role name ""bar"" with NonResourceURL specified","kubectl create clusterrole ""bar"" --verb=list --non-resource-url=/proxy/*"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8081 5000
"Listen on port 9090 locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod 9090:9090
Get output from running the 'geth attach' command in code-explorer from pod api-service-pod,kubectl exec api-service-pod -c code-explorer -- geth attach
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/testing-cluster/kubernetes.ca.crt
Begin streaming the logs of the warp-drive container in pod backend-pod,kubectl logs -f -c warp-drive backend-pod
"Listen on port 3000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod 3000:8888
Create a new config map named log-config based on folder configs,kubectl create configmap log-config --from-file=path/to/configs
Replace a pod based on the JSON passed into stdin,cat config.json | kubectl replace -f -
Roll back to the previous deployment with dry-run,kubectl rollout undo --dry-run=server deployment/test
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=my-k8s-cluster
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kube-server/web-app-pod-1::/tmp/foo :/tmp/bar
Create a new secret named ssl-key-secret from an env file,kubectl create secret generic ssl-key-secret --from-env-file=path/to/properties.env
"Check to see if I can get the job named ""data-migration-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/data-migration-job -n logging
Update pod 'log-aggregator' with the label 'unhealthy' and the value 'true',kubectl label pods log-aggregator unhealthy=true
Begin streaming the logs of the ruby container in pod frontend-pod,kubectl logs -f -c ruby frontend-pod
Get output from running the 'npm --version' command in mycontainer from pod backend-pod,kubectl exec backend-pod -c mycontainer -- npm --version
"Remove exec auth plugin environment variables for the ""saas-admin"" entry",kubectl config set-credentials saas-admin --exec-env=var-to-remove-
Begin streaming the logs of the nebula-navigator container in pod backend-pod,kubectl logs -f -c nebula-navigator backend-pod
Create a job with a command,kubectl create job scaling-job --image=redis -- redis-server
"Listen on port 5000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5000:5432
Add a taint with key 'cpu-type' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  cpu-type=k8s-node-1:PreferNoSchedule
"Listen on port 5432 locally, forwarding to 8088 in the pod",kubectl port-forward pod/cdn-service-pod 5432:8088
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/web-service"
"Listen on port 5432 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5432:3000
Create a new secret named monitoring-credentials-secret from an env file,kubectl create secret generic monitoring-credentials-secret --from-env-file=path/to/parameters.env
"Auto scale a replication controller ""log-aggregator"", with the number of pods between 1 and 7, target CPU utilization at 20%",kubectl autoscale rc log-aggregator --max=7 --cpu-percent=20
Rename the context 'dev-context' to 'team-beta-context' in your kubeconfig file,kubectl config rename-context dev-context team-beta-context
"Set a deployments nginx container cpu limits to ""2"" and memory to ""2Gi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=2,memory=2Gi"
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod media-stream-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach media-stream-pod -c quantum-quark -i -t
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube kube-node-lease/image-resizer-pod-20:/tmp/bar
"Delete pods and services with same names ""vpn"" and ""monitoring""","kubectl delete pod,service vpn monitoring"
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp kube-system/monitoring-agent-pod-6:~/.config/kube /tmp/bar_dir
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 3000 8088
"Update pod 'email' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods email SLA='99.9% uptime'
Create a new secret named jwt-secret from an env file,kubectl create secret generic jwt-secret --from-env-file=path/to/parameters.env
Update pod 'frontend' with the label 'role' and the value 'cache',kubectl label pods frontend role=cache
"Listen on port 8088 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8088:6379
"Listen on port 3000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 3000:8088"
Update pod 'analytics' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods analytics release-
Begin streaming the logs of the lunar-launcher container in pod gateway-pod,kubectl logs -f -c lunar-launcher gateway-pod
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/env-vars deployment/backend-microservice-deployment
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/db-config deployment/log-aggregator-deployment
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 6379 8081
Set deployment backend-microservice-deployment's service account to metrics-server,kubectl set serviceaccount deployment backend-microservice-deployment metrics-server
Get output from running the 'node' command in nebula-navigator from pod security-service-pod,kubectl exec security-service-pod -c nebula-navigator -- node
Get output from cyber-sleuth from pod web-app-pod,kubectl attach web-app-pod -c cyber-sleuth
"Delete pods and services with same names ""database"" and ""media-stream""","kubectl delete pod,service database media-stream"
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/env-vars deployment/email-server-deployment
"Listen on port 8081 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8081:5000"
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/cdn-service-pod
Roll back to the previous deployment,kubectl rollout undo deployment/my-deployment
Return snapshot of previous terminated nano-bot container logs from pod proxy-server-pod,kubectl logs -p -c nano-bot proxy-server-pod
Create a new LoadBalancer service named analytics-lb,kubectl create service loadbalancer analytics-lb --tcp=27017:5001
Set deployment search-engine-deployment's service account to my-service-account,kubectl set serviceaccount deployment search-engine-deployment my-service-account
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node dev-node-4 -p $'spec:\n type: LoadBalancer'
Update image of all containers of daemonset test to 'nginx:1.21.3',kubectl set image daemonset test *=nginx:1.21.3
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8081 9090
Get output from stardust-shuttle from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c stardust-shuttle
Use the context for the sun-cluster cluster,kubectl config use-context sun-cluster
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/batch-processing-job -n logging
Create a new config map named log-config from an env file,kubectl create configmap log-config --from-env-file=path/to/settings.env
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kubeapps/auth-service-pod-11:/tmp/foo :/tmp/bar
Add a taint with key 'cpu-type' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  cpu-type=web-node-8:PreferNoSchedule
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8000 6379
"Define new exec auth plugin args for the ""web-app"" entry",kubectl config set-credentials web-app --exec-arg=arg1 --exec-arg=arg2
Get output from running the 'pip --version' command in stardust-shuttle from pod frontend-pod,kubectl exec frontend-pod -c stardust-shuttle -- pip --version
Delete a pod with minimal delay,kubectl delete pod foo --now
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json team='frontend team'
Get output from running the 'go' command in code-explorer from pod cdn-service-pod,kubectl exec cdn-service-pod -c code-explorer -- go
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=settings=/path/to/properties/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Get output from running the 'mongod' command in astro-container from pod analytics-pod,kubectl exec analytics-pod -c astro-container -- mongod
"Listen on port 8088 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8088:5000"
Create a new config map named app-settings from an env file,kubectl create configmap app-settings --from-env-file=path/to/configs.env
"Listen on port 8000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8000:8080
Update image of all containers of daemonset services to 'alpine:3.14',kubectl set image daemonset services *=alpine:3.14
Embed certificate authority data for the data-cluster cluster entry,kubectl config set-cluster data-cluster --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
Create a job with a command,kubectl create job monitoring-job --image=ubuntu -- docker run -it ubuntu
Get output from lunar-launcher from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c lunar-launcher
Create a new LoadBalancer service named auth-service-lb,kubectl create service loadbalancer auth-service-lb --tcp=8888:8081
Display only the most recent 12 lines of output in pod email-service-pod,kubectl logs --tail=12 email-service-pod
Create a deployment with a command,kubectl create deployment gitlab --image=redis -- redis-server
Create a new service account named vault,kubectl create serviceaccount vault
Embed certificate authority data for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --embed-certs --certificate-authority=~/.kube/cluster-alpha/kubernetes.ca.crt
Start a postgres pod and let the container expose port 5001,kubectl run hazelcast --image=postgres --port=5001
Get output from time-machine from pod gateway-pod,kubectl attach gateway-pod -c time-machine
Deny CSR 'csr-prometheus-8',kubectl certificate deny csr-prometheus-8
Begin streaming the logs of the warp-drive container in pod api-service-pod,kubectl logs -f -c warp-drive api-service-pod
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.on-prem-context.cluster sun-cluster
"Delete pods and services with same names ""foo"" and ""backend""","kubectl delete pod,service foo backend"
Update pod 'database' with the label 'role' and the value 'frontend',kubectl label pods database role=frontend
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/monitoring-pod
Add to node 'web-node-8' a taint with key 'disktype' and no value,kubectl taint nodes web-node-8 disktype:NoSchedule
Set deployment database-deployment's service account to vault,kubectl set serviceaccount deployment database-deployment vault
Embed certificate authority data for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --embed-certs --certificate-authority=~/.kube/cluster-alpha/kubernetes.ca.crt
Apply the configuration in params.json to a pod,kubectl apply -f ./params.json
Return snapshot of previous terminated lunar-launcher container logs from pod media-stream-pod,kubectl logs -p -c lunar-launcher media-stream-pod
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-config deployment/proxy-service-deployment
Add a taint with key 'disktype' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  disktype=kube-master-9:PreferNoSchedule
"Listen on port 5000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5000:6379
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod analytics-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach analytics-pod -c cosmic-container -i -t
Start a python pod and let the container expose port 8000,kubectl run hazelcast --image=python --port=8000
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp kube-proxy/load-balancer-pod-9:~/.config/kube :/tmp/bar
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/database-indexing-job -n testing
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/log-config deployment/order-processing-deployment
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/monitoring-config deployment/search-engine-deployment
"Listen on port 3000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 3000:8888"
Remove from node 'k8s-node-1' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes k8s-node-1 cpu-type:NoSchedule-
Display only the most recent 43 lines of output in pod payment-gateway-pod,kubectl logs --tail=43 payment-gateway-pod
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json SLA='99.9% uptime'
"Get output from running the 'nginx' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- nginx
Create a new secret named my-secret with keys for each file in folder bar,kubectl create secret generic my-secret --from-file=path/to/properties
Create a deployment named mattermost that runs the ethereum/client-go image and expose port 3000,kubectl create deployment mattermost --image=ethereum/client-go --port=3000
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/analytics-platform-deployment DB_USER=username -o yaml
"Listen on port 8000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8000:8088
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/payment-gateway-pod
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 3000 5432
Update image of all containers of daemonset prod to 'golang:1.17',kubectl set image daemonset prod *=golang:1.17
Set deployment web-app-deployment's service account to elasticsearch,kubectl set serviceaccount deployment web-app-deployment elasticsearch
Update deployment 'order-processing-deployment' with a new environment variable,kubectl set env deployment/order-processing-deployment SMTP_HOST=smtp.example.com
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json deployment-script='https://example.com/deploy.sh'
"Delete pods and services with same names ""auth"" and ""frontend""","kubectl delete pod,service auth frontend"
Begin streaming the logs of the time-machine container in pod payment-gateway-pod,kubectl logs -f -c time-machine payment-gateway-pod
Start a golang pod and let the container expose port 5001,kubectl run hazelcast --image=golang --port=5001
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/virus-scan-job -n kube-public
Create a new secret named ssl-key-secret from an env file,kubectl create secret generic ssl-key-secret --from-env-file=path/to/settings.env
Set deployment load-balancer-deployment's service account to vault,kubectl set serviceaccount deployment load-balancer-deployment vault
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod e-commerce-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach e-commerce-pod -c quantum-quark -i -t
Get output from running the 'elasticsearch' command in cosmic-container from pod email-service-pod,kubectl exec email-service-pod -c cosmic-container -- elasticsearch
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 9090 8088
Get output from running the 'postgres' command in warp-drive from pod monitoring-pod,kubectl exec monitoring-pod -c warp-drive -- postgres
Create a deployment named mattermost that runs the wordpress image,kubectl create deployment mattermost --image=wordpress
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/security-service-pod 8080:8888
Return snapshot logs from container search-engine-deployment-1 of a deployment named mypod,kubectl logs deployment/search-engine-deployment -c mypod-1
"Listen on port 8080 locally, forwarding to 8000 in the pod",kubectl port-forward pod/chat-app-pod 8080:8000
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 9090 8888
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod backend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach backend-pod -c nano-bot -i -t
Import environment from a secret,kubectl set env --from=secret/tls-certificate-secret deployment/mydeployment
List resources from a directory with kustomization.yaml - e.g. settings/kustomization.yaml,kubectl get -k settings/
"Listen on port 6379 locally, forwarding to 5432 in the pod",kubectl port-forward pod/web-app-pod 6379:5432
Unset namespace in service-account-context context,kubectl config unset contexts.service-account-context.namespace
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/log-analysis-job -n testing
"Delete pods and services with same names ""web"" and ""analytics""","kubectl delete pod,service web analytics"
Create a copy of gateway-pod changing all container images to ruby,kubectl debug gateway-pod --copy-to=debug-image-app --set-image=*=ruby
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8080 8000
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/analytics-pod 8888:3000
Update pod 'frontend' only if the resource is unchanged from version 1,kubectl annotate pods frontend description='my frontend running nginx' --resource-version=1
Return snapshot logs from container frontend-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/frontend-deployment -c media-stream-pod-1
Copy :/tmp/foo local file to /tmp/bar_dir in a remote pod in a specific container,kubectl cp :/tmp/foo backend-pod-13:/tmp/bar_dir -c task-processor
"Wait for the pod ""gateway-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/gateway-pod
Describe a node,kubectl describe nodes load-balancer-node-17.lb-cluster.local
Update image of all containers of daemonset nginx to 'python:3.9.7',kubectl set image daemonset nginx *=python:3.9.7
"Create a cluster role named ""foo"" with ResourceName specified",kubectl create clusterrole foo --verb=use --resource=configmaps --resource-name=cdn-proxy --resource-name=search-elasticsearch
Delete pods and services with label zone=us-east-1,"kubectl delete pods,services -l zone=us-east-1"
"Update pod 'frontend' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods frontend security-scan-status='pass'
Create a copy of chat-app-pod adding a debug container and changing container images,"kubectl debug chat-app-pod -it --copy-to=debug-image-api --image=debian --set-image=proxy=nginx:1.21,web=nginx:latest"
"List a pod identified by type and name specified in ""parameters.yaml"" in JSON output format",kubectl get -f parameters.yaml -o json
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller security-service-rc
Create a copy of monitoring-pod changing the command of lunar-launcher,kubectl debug monitoring-pod -it --copy-to=debug-image-web --container=lunar-launcher -- sh
Create a new secret named oauth-secret from an env file,kubectl create secret generic oauth-secret --from-env-file=path/to/parameters.env
"Create a service for a replication controller identified by type and name specified in ""alpine-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f alpine-controller.yaml --port=9090 --target-port=909200
"Get output from running the 'mongod' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- mongod
Create a deployment named cache that runs the wordpress image and expose port 3000,kubectl create deployment cache --image=wordpress --port=3000
"Auto scale a deployment ""proxy-server"", with the number of pods between 4 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy-server --min=4 --max=9
Get output from quantum-quark from pod media-stream-pod,kubectl attach media-stream-pod -c quantum-quark
"Set a deployments nginx container cpu limits to ""500m"" and memory to ""4Gi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=500m,memory=4Gi"
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""alpha-apps"" API group",kubectl get deployments.legacy-1.0.0.alpha-apps -o json
"Start a php pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=php --overrides='{ ""apiVersion"": ""custom-version"", ""spec"": { ... } }'"
"Listen on port 8080 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8080:5000
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/batch-processing-job -n staging
Start a golang pod,kubectl run nginx --image=golang
Import environment from a config map with a prefix,kubectl set env --from=configmap/ui-config --prefix=MYSQL_ deployment/web-app-deployment
Create a new secret named app-config-secret with keys for each file in folder bar,kubectl create secret generic app-config-secret --from-file=path/to/settings
"Update pod 'cdn' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn compliance-level=PCI-DSS
Check to see if I can create pods in any namespace,kubectl auth can-i create pods --all-namespaces
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/api-config deployment/payment-processor-deployment
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node dev-node-4 -p $'spec:\n unschedulable: true'
Create a new LoadBalancer service named proxy-service-lb,kubectl create service loadbalancer proxy-service-lb --tcp=6379:8088
"Get output from running the 'ash' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- ash
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/analytics-pod 8088:5432
Remove from node 'testing-node-11' all the taints with key 'special',kubectl taint nodes testing-node-11 special-
"Listen on port 8088 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8088:8081"
"Set a deployments ubuntu container cpu limits to ""50m"" and memory to ""4Gi""","kubectl set resources deployment ubuntu -c=nginx --limits=cpu=50m,memory=4Gi"
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json security-scan-status=pass
Add a taint with key 'dedicated' on nodes having label role=database,kubectl taint node -l role=database  dedicated=app-node-6:PreferNoSchedule
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""legacy-apps"" API group",kubectl get deployments.v2.0.0.legacy-apps -o json
Set deployment email-server-deployment's service account to kube-proxy,kubectl set serviceaccount deployment email-server-deployment kube-proxy
Get output from running the 'jenkins --version' command in quantum-quark from pod cdn-service-pod,kubectl exec cdn-service-pod -c quantum-quark -- jenkins --version
Return snapshot of previous terminated nano-bot container logs from pod gateway-pod,kubectl logs -p -c nano-bot gateway-pod
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/namespace-config deployment/authentication-service-deployment
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=staging-cluster
"Listen on port 8888 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8888:8081
Update pod 'frontend' with the label 'component' and the value 'web',kubectl label pods frontend component=web
"Get output from running the 'postgres' command from pod media-stream-pod, using the first container by default",kubectl exec media-stream-pod -- postgres
"Listen on port 3000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 3000:9090"
"Listen on port 5000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/cdn-service-pod 5000:5432
Add to node 'node-2' a taint with key 'special' and no value,kubectl taint nodes node-2 special:NoSchedule
Get output from lunar-launcher from pod backend-pod,kubectl attach backend-pod -c lunar-launcher
Create a new ClusterIP service named payment-service-clusterip,kubectl create service clusterip payment-service-clusterip --tcp=8082:8088
"Get output from running 'pip --version' command from the first pod of the service notification-service, using the first container by default",kubectl exec svc/notification-service -- pip --version
"Update pod 'cdn' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods cdn compliance-level='PCI-DSS'
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/web-app-pod 6379:3000
"Start a mysql pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mysql --overrides='{ ""apiVersion"": ""v1.0.0"", ""spec"": { ... } }'"
Get output from astro-container from pod web-app-pod,kubectl attach web-app-pod -c astro-container
Create an ingress with TLS enabled using the default ingress certificate and different path types,"kubectl create ingress ingtls --class=default \
--rule=""foo.com/=svc:https,tls"" \
--rule=""site.com/path/subpath*=othersvc:8083"""
Get output from running the 'elasticsearch' command in astro-container from pod auth-service-pod,kubectl exec auth-service-pod -c astro-container -- elasticsearch
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.staging-context.cluster my-k8s-cluster
Return snapshot logs from container api-server-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/api-server-deployment -c chat-app-pod-1
"Set a deployments alpine container cpu limits to ""1"" and memory to ""4Gi""","kubectl set resources deployment alpine -c=nginx --limits=cpu=1,memory=4Gi"
Roll back to daemonset revision 3,kubectl rollout undo daemonset/prod --to-revision=3
"Listen on port 5432 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5432:5000
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=admissionregistration.k8s.io
"Listen on port 5000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 5000:8000
Get output from lunar-launcher from pod vpn-service-pod,kubectl attach vpn-service-pod -c lunar-launcher
Update pod 'proxy-server' only if the resource is unchanged from version 1,kubectl label pods proxy-server status=unhealthy --resource-version=1
Create a deployment named prometheus that runs the jenkins image and expose port 9000,kubectl create deployment prometheus --image=jenkins --port=9000
"Listen on port 8081 locally, forwarding to 8000 in the pod",kubectl port-forward pod/chat-app-pod 8081:8000
"Listen on port 9090 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 9090:8081
"Update pod 'web' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web alert-email=alerts@example.com
Get output from running the 'mysqld' command in quantum-quark from pod proxy-server-pod,kubectl exec proxy-server-pod -c quantum-quark -- mysqld
Update pod 'foo' with the label 'role' and the value 'frontend',kubectl label pods foo role=frontend
Add a taint with key 'app' on nodes having label environment=production,kubectl taint node -l environment=production  app=gpu-node-12:PreferNoSchedule
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=policy
"Listen on port 8088 locally, forwarding to 3000 in the pod",kubectl port-forward pod/frontend-pod 8088:3000
Return snapshot of previous terminated time-machine container logs from pod backend-pod,kubectl logs -p -c time-machine backend-pod
Add a taint with key 'workload' on nodes having label release=beta,kubectl taint node -l release=beta  workload=prod-node-5:PreferNoSchedule
"Delete pods and services with same names ""foo"" and ""proxy-server""","kubectl delete pod,service foo proxy-server"
Create a pod disruption budget named batch-processing-pdb that will select all pods with the project=my-project label # and require minumum 9 of them being available at any point in time,kubectl create poddisruptionbudget batch-processing-pdb --selector=project=my-project --min-available=9
"Auto scale a deployment ""email"", with the number of pods between 2 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment email --min=2 --max=15
Import environment from a secret,kubectl set env --from=secret/jwt-secret deployment/web-app-deployment
Show metrics for a given node,kubectl top node worker-node-3
Return snapshot of previous terminated mycontainer container logs from pod e-commerce-pod,kubectl logs -p -c mycontainer e-commerce-pod
View the details of daemonset revision 1,kubectl rollout history daemonset/namespace-2 --revision=1
Embed certificate authority data for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --embed-certs --certificate-authority=~/.kube/e2e/kubernetes.ca.crt
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 9092,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=9092
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=network.openshift.io
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=web-cluster
Create an ingress with TLS enabled using the default ingress certificate and different path types,"kubectl create ingress ingtls --class=default \
--rule=""foo.com/=svc:https,tls"" \
--rule=""testing.com/path/subpath*=othersvc:8081"""
Add a taint with key 'dedicated' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  dedicated=storage-node-13:PreferNoSchedule
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod chat-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach chat-app-pod -c cosmic-container -i -t
"Create a cluster role binding for app-operator, sysadmin, and security-auditors using the view cluster role",kubectl create clusterrolebinding view --clusterrole=view --user=app-operator --user=sysadmin --group=security-auditors
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=cluster-gamma
"Start a jenkins pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=jenkins --overrides='{ ""apiVersion"": ""feature-branch-2.3.0"", ""spec"": { ... } }'"
"Get output from running the 'bash' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- bash
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=data-cluster
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/analytics-platform-deployment -c analytics-pod-1
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-name-config deployment/frontend-deployment
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/proxy-service"
Return snapshot of previous terminated cosmic-container container logs from pod payment-gateway-pod,kubectl logs -p -c cosmic-container payment-gateway-pod
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""beta-apps"" API group",kubectl get deployments.v1.0.0.beta-apps -o yaml
Add to node 'testing-node-11' a taint with key 'environment' and no value,kubectl taint nodes testing-node-11 environment:NoSchedule
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=cluster-alpha
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/order-service"
List a single pod in JSON output format,kubectl get -o json pod proxy-service-pod
"Delete pods and services with same names ""proxy-server"" and ""auth""","kubectl delete pod,service proxy-server auth"
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=9091 --target-port=909000
Remove from node 'backup-node-14' all the taints with key 'workload',kubectl taint nodes backup-node-14 workload-
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod e-commerce-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach e-commerce-pod -c mycontainer -i -t
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/proxy-server-pod
"Update pod 'analytics' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics contact-email=support@example.com
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/docker.elastic.co/elasticsearch/elasticsearch
Create a job with a command,kubectl create job indexing --image=postgres -- postgres
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=app-cluster
Begin streaming the logs of the lunar-launcher container in pod analytics-pod,kubectl logs -f -c lunar-launcher analytics-pod
Update image of all containers of daemonset nginx to 'mysql:5.7.35',kubectl set image daemonset nginx *=mysql:5.7.35
"Listen on port 8000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/log-aggregator-pod 8000:9090
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named database-pod,kubectl logs deployment/scheduler-app-deployment -c database-pod-1
Create a cron job with a command,"kubectl create cronjob log-rotation --image=docker.elastic.co/elasticsearch/elasticsearch --schedule=""*/1 * * * *"" -- elasticsearch --version"
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/log-config deployment/load-balancer-deployment
Roll back to daemonset revision 1,kubectl rollout undo daemonset/namespace-2 --to-revision=1
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-settings deployment/log-aggregator-deployment
Roll back to daemonset revision 1,kubectl rollout undo daemonset/my-deployment --to-revision=1
Add a taint with key 'datacenter' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  datacenter=db-node-7:PreferNoSchedule
Create a new secret named database-secret from an env file,kubectl create secret generic database-secret --from-env-file=path/to/profiles.env
Add to node 'monitoring-node-15' a taint with key 'datacenter' and no value,kubectl taint nodes monitoring-node-15 datacenter:NoSchedule
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/gateway-deployment DB_HOST=localhost -o yaml
Set deployment gateway-deployment's service account to elasticsearch,kubectl set serviceaccount deployment gateway-deployment elasticsearch
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""api-v1"" API group",kubectl get deployments.v1.1.1.api-v1 -o json
Create a new secret named database-secret with keys for each file in folder bar,kubectl create secret generic database-secret --from-file=path/to/properties
"Listen on port 8888 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8888:8080
"Listen on port 9090 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 9090:8888"
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n namespace-1
Update pod 'auth' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods auth release-
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/profiles/file2.txt
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.local-context.cluster data-cluster
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-config deployment/database-deployment
Update image of all containers of daemonset namespace-2 to 'debian:11.0',kubectl set image daemonset namespace-2 *=debian:11.0
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/mysql
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8080 5432
Create a new secret named azure-storage-secret with keys for each file in folder bar,kubectl create secret generic azure-storage-secret --from-file=path/to/profiles
Copy /tmp/foo_dir from a remote pod to /tmp/bar locally,kubectl cp kubeapps/cache-pod-5:/tmp/foo_dir /tmp/bar
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/backend-pod
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/web-app-pod 5000:6379
"If the deployment named db-migration-replicaset's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/db-migration-replicaset
Return snapshot logs from container payment-processor-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/payment-processor-deployment -c proxy-service-pod-1
"Listen on port 8081 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8081:5432
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/parameters/file2.txt
Create a new NodePort service named database-nodeport,kubectl create service nodeport database-nodeport --tcp=8082:6379
"Listen on port 8081 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8081:5432"
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/analytics-service 5432:https
"Listen on port 8080 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8080:8080"
"Set a deployments go container cpu limits to ""200m"" and memory to ""256Mi""","kubectl set resources deployment go -c=nginx --limits=cpu=200m,memory=256Mi"
"Get output from running the 'go' command from pod media-stream-pod, using the first container by default",kubectl exec media-stream-pod -- go
Create a new secret named database-secret from an env file,kubectl create secret generic database-secret --from-env-file=path/to/preferences.env
"Scale a resource identified by type and name specified in ""options.yaml"" to 7",kubectl scale --replicas=7 -f options.yaml
"Get output from running the 'jenkins --version' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- jenkins --version
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=5001:8088
"Delete pods and services with same names ""vpn"" and ""analytics""","kubectl delete pod,service vpn analytics"
Get output from running the 'kafka-topics --list' command in lunar-launcher from pod media-stream-pod,kubectl exec media-stream-pod -c lunar-launcher -- kafka-topics --list
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/env-vars deployment/proxy-service-deployment
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node app-node-6 -p '{""stringData"":{""password"":""new-password""}'"
Get output from nebula-navigator from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c nebula-navigator
Copy /tmp/foo_dir local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp /tmp/foo_dir prometheus/worker-pod-4:/tmp/bar_dir
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""api-v1"" API group",kubectl get deployments.stable-2.0.0.api-v1 -o json
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json team='frontend team'
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/proxy-service-pod
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/api-service-pod 8080:8888
Create a job with a command,kubectl create job indexing --image=wordpress -- mysql --version
Add to node 'k8s-node-1' a taint with key 'disktype' and no value,kubectl taint nodes k8s-node-1 disktype:NoSchedule
"Listen on port 9090 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 9090:6379
"Listen on a random port locally, forwarding to 8000 in the pod",kubectl port-forward pod/chat-app-pod :8000
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-config deployment/scheduler-app-deployment
"Start a wordpress pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=wordpress --overrides='{ ""apiVersion"": ""dev-2.2.0"", ""spec"": { ... } }'"
"List deployments in JSON output format, in the ""custom-version"" version of the ""prod-apps"" API group",kubectl get deployments.custom-version.prod-apps -o json
Add a taint with key 'zone' on nodes having label release=beta,kubectl taint node -l release=beta  zone=db-node-7:PreferNoSchedule
"Delete pods and services with same names ""auth"" and ""security""","kubectl delete pod,service auth security"
Copy /var/run/secrets/kubernetes.io/serviceaccount/ local file to /tmp/bar in a remote pod in a specific container,kubectl cp /var/run/secrets/kubernetes.io/serviceaccount/ metrics-exporter-pod-10:/tmp/bar -c api-server-container
Add a taint with key 'special' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  special=monitoring-node-15:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/env-vars deployment/payment-processor-deployment
Create a job with a command,kubectl create job indexing --image=mongo -- mongo
"Embed client certificate data in the ""app-operator"" entry",kubectl config set-credentials app-operator --client-certificate=~/.kube/admin.crt --embed-certs=true
Add to node 'testing-node-11' a taint with key 'cpu-type' and no value,kubectl taint nodes testing-node-11 cpu-type:NoSchedule
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=settings=/path/to/configurations/file1.txt --from-file=key2=/path/to/preferences/file2.txt
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=kube-cluster-2
Set deployment analytics-platform-deployment's service account to vault,kubectl set serviceaccount deployment analytics-platform-deployment vault
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 8080 8088
Create a job with a command,kubectl create job certificate-renewal --image=redis -- redis-cli
"Check to see if I can get the job named ""data-migration-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/data-migration-job -n kube-system
Add a taint with key 'environment' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  environment=node-1:PreferNoSchedule
Update pod 'frontend' with the label 'component' and the value 'worker',kubectl label pods frontend component=worker
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=cluster-beta
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""external-apps"" API group",kubectl get deployments.v1.0.0.external-apps -o yaml
Copy /tmp/foo_dir from a remote pod to /tmp/bar locally,kubectl cp istio-system/image-resizer-pod-20:/tmp/foo_dir /tmp/bar
"Get output from running the 'node --version' command from pod security-service-pod, using the first container by default",kubectl exec security-service-pod -- node --version
Add a taint with key 'zone' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  zone=db-node-7:PreferNoSchedule
Show merged kubeconfig settings and raw certificate data,kubectl config view --raw
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""apps"" API group",kubectl get deployments.feature-branch-2.3.0.apps -o json
Begin streaming the logs of the mycontainer container in pod media-stream-pod,kubectl logs -f -c mycontainer media-stream-pod
Get output from astro-container from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c astro-container
"Mark node ""storage-node-13"" as unschedulable",kubectl cordon storage-node-13
Scale a replica set named 'webapp-replicaset' to 5,kubectl scale --replicas=5 rs/webapp-replicaset
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/analytics-platform-deployment SMTP_PASSWORD=your-password -o yaml
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/api-service-pod 9090 8081
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""third-party-apps"" API group",kubectl get deployments.beta-1.0.third-party-apps -o json
Update pod 'cdn' with the label 'role' and the value 'cache',kubectl label pods cdn role=cache
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=cloud-cluster
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.edge-context.cluster sun-cluster
Get output from nano-bot from pod frontend-pod,kubectl attach frontend-pod -c nano-bot
"Get output from running 'geth attach' command from the first pod of the service gateway-service, using the first container by default",kubectl exec svc/gateway-service -- geth attach
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=kube-cluster-1
"Listen on port 6379 locally, forwarding to 9090 in the pod",kubectl port-forward pod/analytics-pod 6379:9090
"Listen on port 8000 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8000:8080"
Set deployment search-engine-deployment's service account to kube-dns,kubectl set serviceaccount deployment search-engine-deployment kube-dns
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-config-dev deployment/monitoring-stack-deployment
Delete the context for the dev-context cluster,kubectl config delete-context dev-context
"Create a service for a replicated ubuntu using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ubuntu --port=8089 --target-port=808100
"Create a service for a replication controller identified by type and name specified in ""ubuntu-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f ubuntu-controller.yaml --port=5432 --target-port=300100
"Create a service for a replication controller identified by type and name specified in ""hazelcast-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f hazelcast-controller.yaml --port=3306 --target-port=909100
Create a deployment named monitoring that runs the redis image,kubectl create deployment monitoring --image=redis
"Force replace, delete and then re-create the resource",kubectl replace --force -f ./settings.json
Add a taint with key 'zone' on nodes having label team=devops,kubectl taint node -l team=devops  zone=prod-node-5:PreferNoSchedule
"Listen on a random port locally, forwarding to 3000 in the pod",kubectl port-forward pod/web-app-pod :3000
Return snapshot of previous terminated cyber-sleuth container logs from pod database-pod,kubectl logs -p -c cyber-sleuth database-pod
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/global-config deployment/payment-processor-deployment
Start a jenkins pod and let the container expose port 3000,kubectl run hazelcast --image=jenkins --port=3000
Print flags inherited by all commands,kubectl options
Edit the service named 'analytics-service',kubectl edit svc/analytics-service
Create a deployment with a command,kubectl create deployment api --image=php -- composer --version
"Listen on port 8000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8000:3000
Rename the context 'local-context' to 'team-beta-context' in your kubeconfig file,kubectl config rename-context local-context team-beta-context
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/log-aggregator-pod :5432
Create a new secret named ldap-credentials-secret from an env file,kubectl create secret generic ldap-credentials-secret --from-env-file=path/to/options.env
Return snapshot logs from container notification-handler-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/notification-handler-deployment -c proxy-server-pod-1
Start a wordpress pod and let the container expose port 5001,kubectl run hazelcast --image=wordpress --port=5001
Create a new ExternalName service named external-git-service,kubectl create service externalname external-git-service --external-name sample-domain.net
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/preferences/file2.txt
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/options/file2.txt
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""custom-apps"" API group",kubectl get deployments.v1.1.0.custom-apps -o yaml
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""custom-apps"" API group",kubectl get deployments.beta-1.0.custom-apps -o yaml
Set the last-applied-configuration of a resource to match the contents of a file,kubectl apply set-last-applied -f conf.yaml
"Get output from running 'redis-server --version' command from the first pod of the service database-service, using the first container by default",kubectl exec svc/database-service -- redis-server --version
Create a new secret named cert-manager-secret with keys for each file in folder bar,kubectl create secret generic cert-manager-secret --from-file=path/to/settings
Update pod 'proxy-server' with the label 'release' and the value 'v1.0',kubectl label pods proxy-server release=v1.0
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""internal-apps"" API group",kubectl get deployments.dev-2.2.0.internal-apps -o json
"Listen on port 9090 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 9090:8088
"Get output from running 'java -jar /usr/share/jenkins/jenkins.war' command from the first pod of the service search-service, using the first container by default",kubectl exec svc/search-service -- java -jar /usr/share/jenkins/jenkins.war
"Auto scale a deployment ""vpn"", with the number of pods between 4 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment vpn --min=4 --max=13
"Listen on port 8081 locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod 8081:8888
"Create a cluster role binding for admin, devops-user, and operations-team using the reader cluster role",kubectl create clusterrolebinding reader --clusterrole=reader --user=admin --user=devops-user --group=operations-team
Get output from running the 'node' command in astro-container from pod gateway-pod,kubectl exec gateway-pod -c astro-container -- node
Return snapshot of previous terminated rocket-ranger container logs from pod backend-pod,kubectl logs -p -c rocket-ranger backend-pod
"Listen on port 8088 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8088:5000
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/email-service 8088:https
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-config-prod deployment/monitoring-stack-deployment
Add a taint with key 'environment' on nodes having label role=database,kubectl taint node -l role=database  environment=app-node-6:PreferNoSchedule
Return snapshot of previous terminated time-machine container logs from pod web-app-pod,kubectl logs -p -c time-machine web-app-pod
"Get output from running 'redis-server' command from the first pod of the service search-service, using the first container by default",kubectl exec svc/search-service -- redis-server
"Listen on a random port locally, forwarding to 9090 in the pod",kubectl port-forward pod/e-commerce-pod :9090
Get output from running the 'yum install -y aws-cli' command in lunar-launcher from pod vpn-service-pod,kubectl exec vpn-service-pod -c lunar-launcher -- yum install -y aws-cli
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/api-server-deployment REDIS_HOST=redis-server -o yaml
Create a job,kubectl create job batch-processing --image=busybox
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""api-v2"" API group",kubectl get deployments.stable-2.0.0.api-v2 -o yaml
Embed certificate authority data for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --embed-certs --certificate-authority=~/.kube/cloud-cluster/kubernetes.ca.crt
Create a new config map named app-secrets based on folder properties,kubectl create configmap app-secrets --from-file=path/to/properties
"Listen on port 6379 locally, forwarding to 9090 in the pod",kubectl port-forward pod/web-app-pod 6379:9090
Set deployment order-processing-deployment's service account to dashboard,kubectl set serviceaccount deployment order-processing-deployment dashboard
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=web-cluster
Rename the context 'cluster-1-context' to 'admin-context' in your kubeconfig file,kubectl config rename-context cluster-1-context admin-context
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8088 9090
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/env-vars deployment/scheduler-app-deployment
Remove from node 'dev-node-4' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes dev-node-4 disktype:NoSchedule-
Edit the last-applied-configuration annotations by file in JSON,kubectl apply edit-last-applied -f pod.yaml -o json
"Listen on port 8080 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8080:8080
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.testing-context.cluster web-cluster
"Set a deployments mongo container cpu limits to ""500m"" and memory to ""128Mi""","kubectl set resources deployment mongo -c=nginx --limits=cpu=500m,memory=128Mi"
"Embed client certificate data in the ""jane.smith"" entry",kubectl config set-credentials jane.smith --client-certificate=~/.kube/admin.crt --embed-certs=true
Create a new secret named ssl-key-secret with keys for each file in folder bar,kubectl create secret generic ssl-key-secret --from-file=path/to/profiles
Return snapshot of previous terminated code-explorer container logs from pod gateway-pod,kubectl logs -p -c code-explorer gateway-pod
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/profiles/file2.txt
Create a new secret named aws-credentials-secret from an env file,kubectl create secret generic aws-credentials-secret --from-env-file=path/to/data.env
Get output from running the 'gem --version' command in nebula-navigator from pod analytics-pod,kubectl exec analytics-pod -c nebula-navigator -- gem --version
Start a mongo pod and let the container expose port 9091,kubectl run hazelcast --image=mongo --port=9091
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.app-1-context.cluster testing-cluster
Create a deployment named wordpress that runs the php image and expose port 8084,kubectl create deployment wordpress --image=php --port=8084
Update all configmaps in the namespace,kubectl annotate configmaps --all description='my frontend running nginx'
Add a taint with key 'cpu-type' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  cpu-type=prod-node-5:PreferNoSchedule
Create a job with a command,"kubectl create job indexing --image=amazonlinux -- /bin/bash -c ""echo 'Hello"
Create a job with a command,kubectl create job certificate-renewal --image=wordpress -- wp
Create a new service account named jenkins,kubectl create serviceaccount jenkins
"Get output from running the 'mysql' command from pod database-pod, using the first container by default",kubectl exec database-pod -- mysql
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod analytics-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Scale a replica set named 'foo' to 7,kubectl scale --replicas=7 rs/foo
Set only the server field on the cluster-beta cluster entry without touching other values,kubectl config set-cluster cluster-beta --server=https://1.2.3.4
Create a job with a command,kubectl create job monitoring-job --image=alpine -- apk add curl
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=8084 --target-port=500100
Add a taint with key 'datacenter' on nodes having label component=proxy,kubectl taint node -l component=proxy  datacenter=prod-node-5:PreferNoSchedule
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=kube-cluster-1
"Get output from running the 'elasticsearch' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- elasticsearch
Update image of all containers of daemonset namespace-2 to 'python:3.9.7',kubectl set image daemonset namespace-2 *=python:3.9.7
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.cluster-2-context.cluster dev-cluster
"Listen on port 5000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5000:5432
"Create a cluster role name ""bar"" with NonResourceURL specified","kubectl create clusterrole ""bar"" --verb=use --non-resource-url=/exec/*"
Update pod 'database' with the label 'tier' and the value 'database',kubectl label pods database tier=database
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f node-settings.json -p '{""spec"":{""someField"":""newValue""}'"
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/mypod 8888 8888
Resume an already paused deployment,kubectl rollout resume deployment/test
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/mypod 8080 8088
Get output from running the 'geth' command in rocket-ranger from pod web-app-pod,kubectl exec web-app-pod -c rocket-ranger -- geth
Create a job with a command,kubectl create job batch-processing --image=python -- pip --version
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8000 8080
"Listen on port 6379 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 6379:8888
Remove from node 'db-node-7' all the taints with key 'datacenter',kubectl taint nodes db-node-7 datacenter-
Remove from node 'worker-node-3' all the taints with key 'datacenter',kubectl taint nodes worker-node-3 datacenter-
Return snapshot logs from pod log-aggregator-pod with multi containers,kubectl logs log-aggregator-pod --all-containers=true
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/security-service-pod 9090:8080
Show all logs from pod proxy-service-pod written in the last hour,kubectl logs --since=1h proxy-service-pod
Get output from running the 'nginx' command in time-machine from pod api-service-pod,kubectl exec api-service-pod -c time-machine -- nginx
Start a mysql pod and let the container expose port 3000,kubectl run hazelcast --image=mysql --port=3000
Get output from running the 'mongo --version' command in stardust-shuttle from pod web-app-pod,kubectl exec web-app-pod -c stardust-shuttle -- mongo --version
"Delete pods and services with same names ""foo"" and ""media-stream""","kubectl delete pod,service foo media-stream"
Add a taint with key 'hardware' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  hardware=db-node-7:PreferNoSchedule
Unset namespace in gce context,kubectl config unset contexts.gce.namespace
"Listen on port 3000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 3000:8088
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=settings=/path/to/configurations/file1.txt --from-file=key2=/path/to/settings/file2.txt
Set the resource request and limits for all containers in go,"kubectl set resources deployment go --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=512Mi"
Display only the most recent 53 lines of output in pod web-app-pod,kubectl logs --tail=53 web-app-pod
"Delete pods and services with same names ""api"" and ""analytics""","kubectl delete pod,service api analytics"
"Listen on port 9090 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 9090:8088"
Update pod 'payment' with the label 'role' and the value 'cache',kubectl label pods payment role=cache
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.on-prem-context.cluster prod-cluster
"Update pod 'chat-app' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods chat-app backup-strategy='daily-backups'
Create a job with a command,kubectl create job cleanup --image=golang -- go
Update pod 'media-stream' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods media-stream role-
Update pod 'backend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods backend app-
Create a new ExternalName service named external-file-storage-service,kubectl create service externalname external-file-storage-service --external-name news-demo.news
Embed certificate authority data for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --embed-certs --certificate-authority=~/.kube/cluster-alpha/kubernetes.ca.crt
"Auto scale a deployment ""gateway"", with the number of pods between 5 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=5 --max=14
Display only the most recent 23 lines of output in pod e-commerce-pod,kubectl logs --tail=23 e-commerce-pod
Set the user field on the user-b-context context entry without touching other values,kubectl config set-context user-b-context --user=cluster-admin
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller api-service-rc
"Create a cluster role named ""foo"" with ResourceName specified",kubectl create clusterrole foo --verb=create --resource=configmaps --resource-name=blog-backend --resource-name=prod-api-gateway
View the details of daemonset revision 5,kubectl rollout history daemonset/staging --revision=5
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod media-stream-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach media-stream-pod -c stardust-shuttle -i -t
"Create a role named ""bar"" with ResourceName specified",kubectl create role bar --verb=delete --resource=pods --resource-name=message-queue --resource-name=payment-processor
"Listen on port 8888 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8888:8888
"Listen on port 3000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/cdn-service-pod 3000:8080
Add a taint with key 'environment' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  environment=node-1:PreferNoSchedule
"Drain node ""backup-node-14"", even if there are pods not managed by a replication controller, replica set, job, daemon set or stateful set on it",kubectl drain backup-node-14 --force
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/db-config deployment/monitoring-stack-deployment
Add a taint with key 'environment' on nodes having label team=devops,kubectl taint node -l team=devops  environment=storage-node-13:PreferNoSchedule
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""web-apps"" API group",kubectl get deployments.legacy-1.0.0.web-apps -o json
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8088 3000
Remove from node 'node-2' all the taints with key 'special',kubectl taint nodes node-2 special-
Import environment from a secret,kubectl set env --from=secret/git-credentials-secret deployment/frontend-deployment
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/parameters/file2.txt
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=properties=/path/to/preferences/file1.txt --from-file=key1=/path/to/parameters/file2.txt
"Listen on port 6379 locally, forwarding to 9090 in the pod",kubectl port-forward pod/mypod 6379:9090
"Auto scale a deployment ""log-aggregator"", with the number of pods between 1 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment log-aggregator --min=1 --max=10
Apply the JSON passed into stdin to a pod,cat pod.json | kubectl apply -f -
Get output from running the 'redis-cli' command in nebula-navigator from pod database-pod,kubectl exec database-pod -c nebula-navigator -- redis-cli
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/log-aggregator-pod 6379:8081
Return snapshot logs from container frontend-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/frontend-deployment -c gateway-pod-1
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 3000 8888
Set deployment email-server-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment email-server-deployment kube-controller-manager
Dump a set of namespaces to /path/to/cluster-state,"kubectl cluster-info dump --namespaces default,kube-system --output-directory=/path/to/cluster-state"
Create a copy of web-app-pod changing the command of cyber-sleuth,kubectl debug web-app-pod -it --copy-to=my-custom-dbg --container=cyber-sleuth -- sh
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/security-service-pod 5000 9090
"If the deployment named staging-app-rs's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/staging-app-rs
Begin streaming the logs of the ruby container in pod mypod,kubectl logs -f -c ruby mypod
Add a taint with key 'app' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  app=worker-node-3:PreferNoSchedule
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8000 9090
Set deployment order-processing-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment order-processing-deployment gitlab-runner
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/app-cluster/kubernetes.ca.crt
Set deployment order-processing-deployment's service account to prometheus,kubectl set serviceaccount deployment order-processing-deployment prometheus
Get output from running the 'mongo' command in cyber-sleuth from pod backend-pod,kubectl exec backend-pod -c cyber-sleuth -- mongo
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-secrets deployment/order-processing-deployment
Add a taint with key 'dedicated' on nodes having label service=auth,kubectl taint node -l service=auth  dedicated=k8s-node-1:PreferNoSchedule
Dump current cluster state to ~/.config/kube,kubectl cluster-info dump --output-directory=~/.config/kube
Update deployment 'payment-processor-deployment' with a new environment variable,kubectl set env deployment/payment-processor-deployment LOG_LEVEL=info
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json custom-label=my-custom-value
Create a new ClusterIP service named notification-service-clusterip,kubectl create service clusterip notification-service-clusterip --tcp=8443:8083
"Create a cluster role name ""reader"" with NonResourceURL specified","kubectl create clusterrole ""reader"" --verb=proxy --non-resource-url=/debug/core"
Remove from node 'db-node-7' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes db-node-7 cpu-type:NoSchedule-
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name placeholder-app.app
Set deployment frontend-deployment's service account to tiller,kubectl set serviceaccount deployment frontend-deployment tiller
"Listen on port 5000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 5000:8081"
Get output from running the 'go' command in astro-container from pod database-pod,kubectl exec database-pod -c astro-container -- go
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 6379 5000
Execute set-last-applied against each configuration file in a directory,kubectl apply set-last-applied -f config/
Return snapshot of previous terminated quantum-quark container logs from pod payment-gateway-pod,kubectl logs -p -c quantum-quark payment-gateway-pod
Return snapshot of previous terminated cyber-sleuth container logs from pod payment-gateway-pod,kubectl logs -p -c cyber-sleuth payment-gateway-pod
Create a new secret named docker-registry-secret from an env file,kubectl create secret generic docker-registry-secret --from-env-file=path/to/configs.env
Add a taint with key 'special' on nodes having label release=beta,kubectl taint node -l release=beta  special=monitoring-node-15:PreferNoSchedule
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""legacy-apps"" API group",kubectl get deployments.v2.0.0.legacy-apps -o yaml
Create a job with a command,kubectl create job security-scan-job --image=postgres -- postgres
"Listen on port 8088 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8088:5000"
Get output from running the 'ruby --version' command in lunar-launcher from pod analytics-pod,kubectl exec analytics-pod -c lunar-launcher -- ruby --version
Start a ubuntu pod and let the container expose port 5001,kubectl run hazelcast --image=ubuntu --port=5001
Update pod 'gateway' with the label 'role' and the value 'cache',kubectl label pods gateway role=cache
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-config deployment/load-balancer-deployment
Create a job with a command,kubectl create job database-seeding-job --image=alpine -- ash
Create a copy of analytics-pod changing all container images to nginx,kubectl debug analytics-pod --copy-to=debug-image-web --set-image=*=nginx
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8080 8080
Set deployment frontend-deployment's service account to metrics-server,kubectl set serviceaccount deployment frontend-deployment metrics-server
Create a job with a command,kubectl create job cleanup --image=ruby -- irb
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/backend-pod 8081 3000
Create a new secret named docker-registry-secret from an env file,kubectl create secret generic docker-registry-secret --from-env-file=path/to/profiles.env
"Update pod 'proxy' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods proxy app-version='2.5.1'
Add to node 'prod-node-5' a taint with key 'dedicated' and no value,kubectl taint nodes prod-node-5 dedicated:NoSchedule
Create a deployment named gitlab that runs the ubuntu image and expose port 9091,kubectl create deployment gitlab --image=ubuntu --port=9091
Set deployment mydeployment's service account to tekton,kubectl set serviceaccount deployment mydeployment tekton
"Check to see if I can get the job named ""security-scan-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/security-scan-job -n kube-public
"Listen on port 8080 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8080:9090
"Listen on port 5432 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 5432:8888"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node node-1 -p '{""spec"":{""type"":""LoadBalancer""}'"
Create a new LoadBalancer service named log-aggregator-lb,kubectl create service loadbalancer log-aggregator-lb --tcp=8443:8084
"Update pod 'gateway' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway release-notes='https://example.com/release-notes/v2.5.1'
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=8082 --target-port=818100
Create a job with a command,kubectl create job log-processing-job --image=wordpress -- apache2ctl -D FOREGROUND
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node db-node-7 -p '{""spec"":{""replicas"":3}'"
Begin streaming the logs of the quantum-quark container in pod gateway-pod,kubectl logs -f -c quantum-quark gateway-pod
Create a new secret named oauth-secret with keys for each file in folder bar,kubectl create secret generic oauth-secret --from-file=path/to/data
"List all allowed actions in namespace ""testing""",kubectl auth can-i --list --namespace=testing
"Get output from running the 'irb' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- irb
Start a postgres pod and let the container expose port 27017,kubectl run hazelcast --image=postgres --port=27017
Create a copy of vpn-service-pod changing all container images to amazonlinux,kubectl debug vpn-service-pod --copy-to=dgb-img --set-image=*=amazonlinux
Remove from node 'dev-node-4' all the taints with key 'dedicated',kubectl taint nodes dev-node-4 dedicated-
Create a new ClusterIP service named billing-service-clusterip,kubectl create service clusterip billing-service-clusterip --tcp=9000:7000
Add a taint with key 'special' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  special=app-node-6:PreferNoSchedule
Rename the context 'cloud-context' to 'user-b-context' in your kubeconfig file,kubectl config rename-context cloud-context user-b-context
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/logging-service"
Update pod 'analytics' with the label 'app' and the value 'myapp',kubectl label pods analytics app=myapp
"Listen on port 8081 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/logging-service 8081:https
Start a jenkins pod and let the container expose port 8089,kubectl run hazelcast --image=jenkins --port=8089
Set deployment monitoring-stack-deployment's service account to prometheus,kubectl set serviceaccount deployment monitoring-stack-deployment prometheus
Create a new ExternalName service named external-identity-provider-service,kubectl create service externalname external-identity-provider-service --external-name tutorial-ai.ai
"Delete pods and services with same names ""foo"" and ""proxy""","kubectl delete pod,service foo proxy"
Import environment from a secret,kubectl set env --from=secret/email-credentials-secret deployment/web-app-deployment
Embed certificate authority data for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --embed-certs --certificate-authority=~/.kube/prod-cluster/kubernetes.ca.crt
Update pod 'proxy-server' with the label 'tier' and the value 'database',kubectl label pods proxy-server tier=database
Begin streaming the logs of the quantum-quark container in pod proxy-server-pod,kubectl logs -f -c quantum-quark proxy-server-pod
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp argocd/load-balancer-pod-9:~/.config/kube :/tmp/bar
Create a copy of media-stream-pod adding a debug container and changing container images,"kubectl debug media-stream-pod -it --copy-to=debug-image-api --image=debian --set-image=worker=my-custom-worker:1.2.3,worker=my-custom-worker:1.2.3"
Update pod 'chat-app' with the label 'release' and the value 'v1.0',kubectl label pods chat-app release=v1.0
Switch to raw terminal mode; sends stdin to 'bash' in cyber-sleuth from pod e-commerce-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach e-commerce-pod -c cyber-sleuth -i -t
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 5432 8081
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=8082 --target-port=330600
"Update pod 'security' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security app-version=2.5.1
"Create a single ingress called 'default-ingress' that directs requests to website.com/bar to svc # svc1:8081 with a tls secret ""my-cert""","kubectl create ingress default-ingress --rule=""website.com/bar=svc1:8081,tls=my-cert"""
"Listen on port 5432 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5432:5000
"Update pod 'monitoring' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods monitoring criticality='high'
Set deployment search-engine-deployment's service account to fluentd,kubectl set serviceaccount deployment search-engine-deployment fluentd
Create a new secret named api-key-secret from an env file,kubectl create secret generic api-key-secret --from-env-file=path/to/properties.env
Switch to raw terminal mode; sends stdin to 'bash' in cyber-sleuth from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c cyber-sleuth -i -t
"Remove exec auth plugin environment variables for the ""web-app"" entry",kubectl config set-credentials web-app --exec-env=var-to-remove-
Get output from running the 'elasticsearch' command in nano-bot from pod api-service-pod,kubectl exec api-service-pod -c nano-bot -- elasticsearch
Return snapshot of previous terminated astro-container container logs from pod backend-pod,kubectl logs -p -c astro-container backend-pod
Update pod 'media-stream' with the label 'tier' and the value 'frontend',kubectl label pods media-stream tier=frontend
"Delete pods and services with same names ""gateway"" and ""foo""","kubectl delete pod,service gateway foo"
"Get output from running the 'redis-cli' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- redis-cli
Return snapshot logs from container search-engine-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/search-engine-deployment -c monitoring-pod-1
Create a cron job with a command,"kubectl create cronjob daily-report --image=php --schedule=""*/1 * * * *"" -- composer --version"
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json backup-strategy='daily backups'
"Update a pod identified by the type and name in ""conf.json""",kubectl label -f conf.json status=unhealthy
"Update pod 'gateway' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway alert-email=alerts@example.com
Get output from time-machine from pod proxy-server-pod,kubectl attach proxy-server-pod -c time-machine
Create a deployment named logging that runs the amazonlinux image with 5 replicas,kubectl create deployment logging --image=amazonlinux --replicas=5
Set deployment user-management-deployment's service account to prometheus,kubectl set serviceaccount deployment user-management-deployment prometheus
Get output from running the 'dotnet --list-runtimes' command in cosmic-container from pod chat-app-pod,kubectl exec chat-app-pod -c cosmic-container -- dotnet --list-runtimes
Create a new config map named app-name-config based on folder data,kubectl create configmap app-name-config --from-file=path/to/data
Create a new secret named password-secret with keys for each file in folder bar,kubectl create secret generic password-secret --from-file=path/to/data
"Listen on port 5432 locally, forwarding to 8088 in the pod",kubectl port-forward pod/security-service-pod 5432:8088
Add a taint with key 'environment' on nodes having label release=beta,kubectl taint node -l release=beta  environment=testing-node-11:PreferNoSchedule
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod payment-gateway-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Begin streaming the logs of the warp-drive container in pod database-pod,kubectl logs -f -c warp-drive database-pod
Get output from code-explorer from pod security-service-pod,kubectl attach security-service-pod -c code-explorer
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node app-node-6 -p $'spec:\n rules:\n- http:\n    paths:\n    - path: /\n      backend:\n        service:\n          name: new-service'
"Get output from running the 'geth' command from pod mypod, using the first container by default",kubectl exec mypod -- geth
Get output from running the 'redis-cli' command in quantum-quark from pod security-service-pod,kubectl exec security-service-pod -c quantum-quark -- redis-cli
"Delete pods and services with same names ""analytics"" and ""vpn""","kubectl delete pod,service analytics vpn"
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 3000 8088
"Update pod 'email' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email contact-email=support@example.com
"Create a single ingress called 'app-ingress' that directs requests to testing.com/input to svc # svc1:9091 with a tls secret ""my-cert""","kubectl create ingress app-ingress --rule=""testing.com/input=svc1:9091,tls=my-cert"""
"Set a deployments mysql container cpu limits to ""5"" and memory to ""4Gi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=5,memory=4Gi"
Create a deployment named registry that runs the mysql image and expose port 7000,kubectl create deployment registry --image=mysql --port=7000
Return snapshot logs from container order-processing-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/order-processing-deployment -c chat-app-pod-1
"Listen on port 9090 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 9090:8081
Update pod 'email' with the label 'tier' and the value 'database',kubectl label pods email tier=database
Add a taint with key 'datacenter' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  datacenter=kube-master-9:PreferNoSchedule
Update image of all containers of daemonset services to 'httpd:2.4.48',kubectl set image daemonset services *=httpd:2.4.48
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=8081 --target-port=700000
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=8081:8181
Start a jenkins pod,kubectl run nginx --image=jenkins
Unset namespace in client-2-context context,kubectl config unset contexts.client-2-context.namespace
Create a new ExternalName service named external-geolocation-service,kubectl create service externalname external-geolocation-service --external-name test-site.org
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/scheduler-app-deployment -c media-stream-pod-1
Update a cluster role binding for argocd,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:argocd
Create a new secret named cert-manager-secret with keys for each file in folder bar,kubectl create secret generic cert-manager-secret --from-file=path/to/preferences
Set the resource request and limits for all containers in python,"kubectl set resources deployment python --limits=cpu=200m,memory=512Mi --requests=cpu=50m,memory=256Mi"
"Delete pods and services with same names ""auth"" and ""gateway""","kubectl delete pod,service auth gateway"
"Create a single ingress called 'app1-ingress' that directs requests to testing.com/input to svc # svc1:9092 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""testing.com/input=svc1:9092,tls=my-cert"""
Get output from cosmic-container from pod proxy-server-pod,kubectl attach proxy-server-pod -c cosmic-container
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/api-service-pod 8888:5000
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=star-cluster
"Listen on port 5432 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5432:5000
Update image of all containers of daemonset test to 'ruby:3.0.2',kubectl set image daemonset test *=ruby:3.0.2
Set deployment notification-handler-deployment's service account to tekton,kubectl set serviceaccount deployment notification-handler-deployment tekton
Use the context for the my-k8s-cluster cluster,kubectl config use-context my-k8s-cluster
"Create a service for a pod proxy-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod proxy-service-pod --port=8443 --name=frontend
"Listen on port 3000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/api-service 3000:https
"Auto scale a deployment ""security"", with the number of pods between 2 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=2 --max=9
Create a new service account named dashboard,kubectl create serviceaccount dashboard
"If the deployment named app-v2-replicaset's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/app-v2-replicaset
Copy ~/.config/kube from a remote pod to /tmp/bar locally,kubectl cp velero/task-processor-pod-17:~/.config/kube /tmp/bar
Check the rollout status of a daemonset,kubectl rollout status daemonset/prod
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8888 5432
Start a python pod and let the container expose port 8084,kubectl run hazelcast --image=python --port=8084
Create a copy of cdn-service-pod adding a debug container and changing container images,"kubectl debug cdn-service-pod -it --copy-to=my-custom-dbg --image=debian --set-image=proxy=nginx:1.21,mailer=mailer:latest"
List the environment variables defined on a deployments 'load-balancer-deployment',kubectl set env deployment/load-balancer-deployment --list
"Start a jenkins pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=jenkins --overrides='{ ""apiVersion"": ""stable-2.0.0"", ""spec"": { ... } }'"
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller gateway-rc
Create a new config map named log-config from the key=value pairs in the file,kubectl create configmap log-config --from-file=path/to/properties
Create a job with a command,kubectl create job monitoring-job --image=amazonlinux -- bash
Create a job with a command,kubectl create job indexing --image=python -- python --version
Embed certificate authority data for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/mypod 8081:5432
Return snapshot logs from all containers in pods defined by label feature=feature-xyz,kubectl logs -l feature=feature-xyz --all-containers=true
Create a new ClusterIP service named ldap-service-clusterip,kubectl create service clusterip ldap-service-clusterip --tcp=8181:9091
Remove from node 'node-1' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes node-1 workload:NoSchedule-
Create a job with a command,kubectl create job report-generation-job --image=mysql -- mysql --version
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""custom-apps"" API group",kubectl get deployments.rc-1.1.0.custom-apps -o json
"Get output from running the 'docker run ubuntu echo ""Hello, World""' command in cosmic-container from pod gateway-pod","kubectl exec gateway-pod -c cosmic-container -- docker run ubuntu echo ""Hello, World"""
Update image of all containers of daemonset namespace-2 to 'node:14.17.3',kubectl set image daemonset namespace-2 *=node:14.17.3
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 6379 8088
Start a alpine pod and let the container expose port 8888,kubectl run hazelcast --image=alpine --port=8888
Create a job with a command,kubectl create job certificate-renewal --image=postgres -- psql
"Update pod 'api' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods api compliance-level='PCI-DSS'
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8888 5432
Create a copy of backend-pod changing all container images to node,kubectl debug backend-pod --copy-to=my-debugger --set-image=*=node
Update deployment 'search-engine-deployment' with a new environment variable,kubectl set env deployment/search-engine-deployment PORT=8080
Add a taint with key 'hardware' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  hardware=node-2:PreferNoSchedule
Create a copy of mypod adding a debug container and changing container images,"kubectl debug mypod -it --copy-to=debug-image-web --image=debian --set-image=scheduler=my-scheduler:1.0,app=app:debug"
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config-dev deployment/database-deployment
"Update pod 'api' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods api criticality='high'
"Set a deployments go container cpu limits to ""1"" and memory to ""1Gi""","kubectl set resources deployment go -c=nginx --limits=cpu=1,memory=1Gi"
Create a deployment named prometheus that runs the php image and expose port 8089,kubectl create deployment prometheus --image=php --port=8089
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/data/file2.txt
Create a new secret named encryption-key-secret from an env file,kubectl create secret generic encryption-key-secret --from-env-file=path/to/settings.env
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/env-vars deployment/email-server-deployment
"Listen on port 5000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/e-commerce-pod 5000:8088
"Listen on port 8000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8000:8088
View the details of daemonset revision 1,kubectl rollout history daemonset/services --revision=1
"Listen on port 8080 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8080:5432
Rename the context 'cloud-context' to 'service-account-context' in your kubeconfig file,kubectl config rename-context cloud-context service-account-context
Return snapshot logs from container api-server-deployment-1 of a deployment named mypod,kubectl logs deployment/api-server-deployment -c mypod-1
"Get output from running the 'composer --version' command from pod proxy-server-pod, using the first container by default",kubectl exec proxy-server-pod -- composer --version
Update pod 'auth' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods auth unhealthy-
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/proxy-server-pod
Return snapshot logs from container gateway-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/gateway-deployment -c payment-gateway-pod-1
Update deployment 'email-server-deployment' with a new environment variable,kubectl set env deployment/email-server-deployment GOOGLE_API_KEY=your-google-api-key
Begin streaming the logs of the code-explorer container in pod security-service-pod,kubectl logs -f -c code-explorer security-service-pod
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/batch-processing-job -n kube-node-lease
Create a cron job with a command,"kubectl create cronjob email-notifications --image=postgres --schedule=""*/1 * * * *"" -- postgres"
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/chat-app-pod 6379:3000
"Update pod 'proxy' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy contact-email=support@example.com
Return snapshot logs from container mydeployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/mydeployment -c payment-gateway-pod-1
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-config-dev deployment/gateway-deployment
"Update pod 'media-stream' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods media-stream env='staging'
"Listen on port 8888 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8888:8088"
Return snapshot logs from container web-app-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/web-app-deployment -c monitoring-pod-1
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=6379:6379
Get output from running the 'irb' command in cosmic-container from pod auth-service-pod,kubectl exec auth-service-pod -c cosmic-container -- irb
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/proxy-server-pod
Remove from node 'backup-node-14' all the taints with key 'dedicated',kubectl taint nodes backup-node-14 dedicated-
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.cloud-context.cluster edge-cluster
"Update pod 'database' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database team='frontend team'
Start a node pod and let the container expose port 27017,kubectl run hazelcast --image=node --port=27017
Create a job with a command,kubectl create job security-scan-job --image=centos -- sleep 3600
"Delete pods and services with same names ""web"" and ""security""","kubectl delete pod,service web security"
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 5432 3000
"Listen on port 8080 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8080:8080
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/monitoring-pod
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""beta-apps"" API group",kubectl get deployments.alpha-2.0.beta-apps -o json
"Set basic auth for the ""cloud-user"" entry",kubectl config set-credentials cloud-user --username=admin --password=uXFGweU9l35qcif
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""api-v2"" API group",kubectl get deployments.hotfix-1.1.2.api-v2 -o json
Update pod 'vpn' with the label 'role' and the value 'backend',kubectl label pods vpn role=backend
"Listen on port 9090 locally, forwarding to 5000 in the pod",kubectl port-forward pod/security-service-pod 9090:5000
"Delete pods and services with same names ""chat-app"" and ""vpn""","kubectl delete pod,service chat-app vpn"
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/api-service"
Begin streaming the logs of the mycontainer container in pod database-pod,kubectl logs -f -c mycontainer database-pod
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp velero/image-resizer-pod-20:~/.config/kube /tmp/bar_dir
"If the deployment named web's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/web
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8088 --target-port=808300
"Listen on port 5000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5000:8088
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/frontend-pod :8088
Roll back to daemonset revision 1,kubectl rollout undo daemonset/namespace-1 --to-revision=1
Remove from node 'edge-node-10' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes edge-node-10 workload:NoSchedule-
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/e-commerce-pod 3000:6379
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json contact-email=support@example.com
"Create a cluster role named ""custom_role"" with ResourceName specified",kubectl create clusterrole custom_role --verb=exec --resource=services --resource-name=file-processing --resource-name=load-balancer
Get output from running the 'ash' command in warp-drive from pod mypod,kubectl exec mypod -c warp-drive -- ash
Create a copy of chat-app-pod changing all container images to nginx,kubectl debug chat-app-pod --copy-to=debug-image-api --set-image=*=nginx
Edit the last-applied-configuration annotations by file in JSON,kubectl apply edit-last-applied -f conf.yaml -o json
Edit the job 'notification-sender-job' in JSON using the v1 API format,kubectl edit job.v1.batch/notification-sender-job -o json
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=8443:8010
Return snapshot of previous terminated nebula-navigator container logs from pod e-commerce-pod,kubectl logs -p -c nebula-navigator e-commerce-pod
Create a new secret named azure-storage-secret with keys for each file in folder bar,kubectl create secret generic azure-storage-secret --from-file=path/to/options
Get output from warp-drive from pod backend-pod,kubectl attach backend-pod -c warp-drive
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod proxy-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-service-pod -c astro-container -i -t
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""custom-deployments"" API group",kubectl get deployments.stable-2.0.0.custom-deployments -o yaml
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=app-cluster
"Listen on port 5432 locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod 5432:8088
Describe pods by label component=proxy,kubectl describe po -l component=proxy
Begin streaming the logs of the ruby container in pod email-service-pod,kubectl logs -f -c ruby email-service-pod
Edit the job 'report-generation-job' in JSON using the v1 API format,kubectl edit job.v1.batch/report-generation-job -o json
Create a job with a command,kubectl create job scaling-job --image=ethereum/client-go -- geth attach
Return snapshot logs from container search-engine-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/search-engine-deployment -c auth-service-pod-1
Deny CSR 'csr-frontend-4',kubectl certificate deny csr-frontend-4
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=cluster-gamma
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=8083 --target-port=808400
Return snapshot logs from container database-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/database-deployment -c web-app-pod-1
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=6379:9090
"Update pod 'cdn' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods cdn env='staging'
Get output from cosmic-container from pod api-service-pod,kubectl attach api-service-pod -c cosmic-container
Delete a pod using the type and name specified in options.json,kubectl delete -f ./options.json
Embed certificate authority data for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --embed-certs --certificate-authority=~/.kube/kube-cluster-1/kubernetes.ca.crt
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json contact-email=support@example.com
"Get output from running 'mysql' command from the first pod of the service monitoring-service, using the first container by default",kubectl exec svc/monitoring-service -- mysql
Get the documentation of a specific field of a resource,kubectl explain resource=services.status.conditions
Create a new ExternalName service named my-ns,kubectl create service externalname my-ns --external-name documentation-tech.tech
Create a deployment named nats that runs the golang image with 7 replicas,kubectl create deployment nats --image=golang --replicas=7
"Update pod 'monitoring' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring criticality=high
Get output from time-machine from pod email-service-pod,kubectl attach email-service-pod -c time-machine
Execute set-last-applied against each configuration file in a directory,kubectl apply set-last-applied -f path/
"Wait for the pod ""auth-service-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/auth-service-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
Get output from running the 'yum install -y wget' command in nebula-navigator from pod proxy-service-pod,kubectl exec proxy-service-pod -c nebula-navigator -- yum install -y wget
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=properties=/path/to/parameters/file1.txt --from-file=key1=/path/to/properties/file2.txt
"Listen on port 8888 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8888:8888"
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/log-aggregator-pod
Embed certificate authority data for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --embed-certs --certificate-authority=~/.kube/edge-cluster/kubernetes.ca.crt
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp istio-system/task-processor-pod-17:/tmp/foo_dir :/tmp/bar
Set deployment order-processing-deployment's service account to argocd,kubectl set serviceaccount deployment order-processing-deployment argocd
"Update pod 'chat-app' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods chat-app owner='alice-smith'
"Listen on port 8088 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8088:6379"
Create a new config map named log-config based on folder data,kubectl create configmap log-config --from-file=path/to/data
Create a cron job with a command,"kubectl create cronjob monthly-audit --image=redis --schedule=""*/1 * * * *"" -- redis-server --version"
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/user-management-deployment
Add a taint with key 'hardware' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  hardware=backup-node-14:PreferNoSchedule
Get output from the first pod of a replica set named jenkins,kubectl attach rs/jenkins
Create an ingress with multiple hosts and the pathType as Prefix,"kubectl create ingress ingress1 --class=default \
--rule=""foo.com/path*=svc:27017"" \
--rule=""module.com/admin*=svc2:http"""
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/auth-service-pod
Create a new secret named ssh-key-secret with keys for each file in folder bar,kubectl create secret generic ssh-key-secret --from-file=path/to/options
"Listen on port 8081 locally, forwarding to 3000 in the pod",kubectl port-forward pod/cdn-service-pod 8081:3000
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/cloud-cluster/kubernetes.ca.crt
Update pod 'foo' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods foo component-
"Update node 'edge-node-10' with a taint with key 'datacenter' and value 'dc-1' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes edge-node-10 datacenter=dc-1:NoExecute
Update deployment 'payment-processor-deployment' with a new environment variable,kubectl set env deployment/payment-processor-deployment ENV=prod
"Get output from running 'geth' command from the first pod of the service analytics-service, using the first container by default",kubectl exec svc/analytics-service -- geth
"Listen on port 8080 locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod 8080:8080
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.legacy-1.0.0.sandbox-apps -o json
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to /etc/kubernetes locally,kubectl cp kube-system/database-pod-2:/var/run/secrets/kubernetes.io/serviceaccount/ /etc/kubernetes
Begin streaming the logs of the rocket-ranger container in pod mypod,kubectl logs -f -c rocket-ranger mypod
Add to node 'edge-node-10' a taint with key 'app' and no value,kubectl taint nodes edge-node-10 app:NoSchedule
"If the deployment named backend-service-replicaset's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/backend-service-replicaset
"Create a service for a replication controller identified by type and name specified in ""wordpress-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f wordpress-controller.yaml --port=5000 --target-port=808300
Copy /tmp/foo local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp /tmp/foo cert-manager/ingress-controller-pod-8:/tmp/bar_dir
Create a cron job with a command,"kubectl create cronjob daily-report --image=postgres --schedule=""*/1 * * * *"" -- pg_dump --version"
Create a new ClusterIP service named ldap-service-clusterip,kubectl create service clusterip ldap-service-clusterip --tcp=3000:6379
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/payment-gateway-pod
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 8000 3000
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/backend-microservice-deployment -c cdn-service-pod-1
Create a new LoadBalancer service named ingress-controller-lb,kubectl create service loadbalancer ingress-controller-lb --tcp=8888:5001
Create a new ExternalName service named external-identity-provider-service,kubectl create service externalname external-identity-provider-service --external-name mockup-cloud.cloud
Create a copy of proxy-service-pod adding a debug container and changing container images,"kubectl debug proxy-service-pod -it --copy-to=debug-image-web --image=debian --set-image=app=app:debug,scheduler=my-scheduler:1.0"
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/api-config deployment/analytics-platform-deployment
Create a deployment named prometheus that runs the wordpress image,kubectl create deployment prometheus --image=wordpress
"Update pod 'database' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database monitoring-tool=Prometheus
Describe all services managed by the 'frontend' replication controller (rc-created pods # get the name of the rc as a prefix in the pod the name),kubectl describe services frontend
"Describe a pod identified by type and name in ""preferences.json""",kubectl describe -f preferences.json
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""beta-apps"" API group",kubectl get deployments.v3.0.0.beta-apps -o json
Update pod 'proxy-server' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods proxy-server description-
Get output from stardust-shuttle from pod proxy-server-pod,kubectl attach proxy-server-pod -c stardust-shuttle
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-config-dev deployment/user-management-deployment
"Listen on port 6379 locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod 6379:6379
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""external-apps"" API group",kubectl get deployments.v3.0.0.external-apps -o yaml
"Listen on port 8081 locally, forwarding to 6379 in the pod",kubectl port-forward pod/web-app-pod 8081:6379
Update pod 'cdn' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods cdn description-
Get output from running the 'wp' command in mycontainer from pod media-stream-pod,kubectl exec media-stream-pod -c mycontainer -- wp
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node app-node-6 -p $'spec:\n type: LoadBalancer'
"Delete pods and services with same names ""web"" and ""vpn""","kubectl delete pod,service web vpn"
Embed certificate authority data for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --embed-certs --certificate-authority=~/.kube/testing-cluster/kubernetes.ca.crt
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8081 8080
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 3000 3000
Update pod 'email' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods email release-
Create a deployment named my-dep that runs the nginx image and expose port 5001,kubectl create deployment my-dep --image=nginx --port=5001
Create a copy of gateway-pod changing all container images to python,kubectl debug gateway-pod --copy-to=debug-image-memcached --set-image=*=python
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/app-config-prod deployment/api-server-deployment
"Get output from running 'geth' command from the first pod of the service web-service, using the first container by default",kubectl exec svc/web-service -- geth
"Update pod 'database' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database app-version=2.5.1
"Delete pods and services with same names ""log-aggregator"" and ""email""","kubectl delete pod,service log-aggregator email"
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/vpn-service-pod
Show all logs from pod analytics-pod written in the last hour,kubectl logs --since=1h analytics-pod
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/env-vars deployment/authentication-service-deployment
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.app-1-context.cluster web-cluster
"Auto scale a deployment ""security"", with the number of pods between 7 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=7 --max=10
Set deployment web-app-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment web-app-deployment kube-scheduler
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/email-service-pod
Create a new secret named aws-credentials-secret from an env file,kubectl create secret generic aws-credentials-secret --from-env-file=path/to/properties.env
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod log-aggregator-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
Get output from running the 'mongo --version' command in rocket-ranger from pod mypod,kubectl exec mypod -c rocket-ranger -- mongo --version
Return snapshot logs from container notification-handler-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/notification-handler-deployment -c payment-gateway-pod-1
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8888 8888
List resource information in custom columns,"kubectl get pod proxy-server-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.spec.replicas
Remove from node 'k8s-node-1' all the taints with key 'zone',kubectl taint nodes k8s-node-1 zone-
Update a single-container pod's image version (tag) to v4,kubectl get pod chat-app-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
Create a new ClusterIP service named git-service-clusterip,kubectl create service clusterip git-service-clusterip --tcp=5432:9090
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=properties=/path/to/properties/file1.txt --from-file=key1=/path/to/settings/file2.txt
Begin streaming the logs of the code-explorer container in pod monitoring-pod,kubectl logs -f -c code-explorer monitoring-pod
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/frontend-pod
Create a new config map named app-config-prod based on folder settings,kubectl create configmap app-config-prod --from-file=path/to/settings
"Delete pods and services with same names ""backend"" and ""database""","kubectl delete pod,service backend database"
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/cdn-service-pod
Return snapshot logs from container load-balancer-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/load-balancer-deployment -c email-service-pod-1
Get output from running the 'go run hello.go' command in nebula-navigator from pod gateway-pod,kubectl exec gateway-pod -c nebula-navigator -- go run hello.go
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=cluster-beta
"Listen on port 8888 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8888:8081"
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/payment-gateway-pod
"Get output from running the 'mysqld' command from pod log-aggregator-pod, using the first container by default",kubectl exec log-aggregator-pod -- mysqld
"Listen on port 8080 locally, forwarding to 8080 in the pod",kubectl port-forward pod/log-aggregator-pod 8080:8080
Return snapshot of previous terminated lunar-launcher container logs from pod proxy-server-pod,kubectl logs -p -c lunar-launcher proxy-server-pod
Add a taint with key 'disktype' on nodes having label environment=production,kubectl taint node -l environment=production  disktype=k8s-node-1:PreferNoSchedule
Add a taint with key 'dedicated' on nodes having label environment=production,kubectl taint node -l environment=production  dedicated=monitoring-node-15:PreferNoSchedule
"Run a proxy to the Kubernetes API server on port 8080, serving static content from ./local/www/",kubectl proxy --port=8080 --www=./local/www/
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-name-config deployment/analytics-platform-deployment
Create a deployment named sonarqube that runs the python image,kubectl create deployment sonarqube --image=python
Import environment from a secret,kubectl set env --from=secret/jwt-secret deployment/api-server-deployment
"Listen on port 8888 locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod 8888:5432
"Get output from running 'mysql --version' command from the first pod of the service backend-service, using the first container by default",kubectl exec svc/backend-service -- mysql --version
Create a cron job with a command,"kubectl create cronjob email-notifications --image=php --schedule=""*/1 * * * *"" --"
Import environment from a config map with a prefix,kubectl set env --from=configmap/ui-config --prefix=MYSQL_ deployment/search-engine-deployment
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/monitoring-service"
Create a new secret named oauth-secret from an env file,kubectl create secret generic oauth-secret --from-env-file=path/to/options.env
"Listen on port 5000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 5000:8088"
Display only the most recent 20 lines of output in pod security-service-pod,kubectl logs --tail=20 security-service-pod
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/notification-service"
Add a taint with key 'environment' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  environment=prod-node-5:PreferNoSchedule
Get output from quantum-quark from pod database-pod,kubectl attach database-pod -c quantum-quark
Update image of all containers of daemonset namespace- to 'centos:8.4.2105',kubectl set image daemonset namespace-3 *=centos:8.4.2105
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node backup-node-14 -p $'data:\n key: new-value'
Create a copy of frontend-pod changing all container images to hazelcast/hazelcast,kubectl debug frontend-pod --copy-to=debug-image-memcached --set-image=*=hazelcast/hazelcast
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node k8s-node-1 -p '{""spec"":{""replicas"":3}'"
Get output from nebula-navigator from pod security-service-pod,kubectl attach security-service-pod -c nebula-navigator
Add a taint with key 'app' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  app=gpu-node-12:PreferNoSchedule
Create a new ExternalName service named external-monitoring-service,kubectl create service externalname external-monitoring-service --external-name museum-example.museum
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=9000 --target-port=808300
Add a taint with key 'zone' on nodes having label environment=production,kubectl taint node -l environment=production  zone=monitoring-node-15:PreferNoSchedule
Create a cron job,"kubectl create cronjob cron-task --image=busybox --schedule=""*/1 * * * *"""
Get output from running the 'composer --version' command in time-machine from pod database-pod,kubectl exec database-pod -c time-machine -- composer --version
"Update pod 'gateway' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway backup-strategy='daily backups'
Create a copy of web-app-pod adding a debug container and changing container images,"kubectl debug web-app-pod -it --copy-to=dgb-img --image=debian --set-image=proxy=nginx:1.21,proxy=nginx:1.21"
Create a new LoadBalancer service named auth-service-lb,kubectl create service loadbalancer auth-service-lb --tcp=8089:8888
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=settings=/path/to/properties/file1.txt --from-file=key2=/path/to/settings/file2.txt
Create a copy of database-pod changing all container images to mongo,kubectl debug database-pod --copy-to=my-custom-dbg --set-image=*=mongo
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp ingress-nginx/admin-dashboard-pod-16:/tmp/foo /tmp/bar
"Update pod 'vpn' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn owner='alice smith'
"Check to see if I can get the job named ""cleanup-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/cleanup-job -n default
"Delete pods and services with same names ""database"" and ""monitoring""","kubectl delete pod,service database monitoring"
Update pod 'api' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods api component-
"Delete pods and services with same names ""foo"" and ""security""","kubectl delete pod,service foo security"
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=conf=/path/to/configs/file1.txt --from-file=data=/path/to/configurations/file2.txt
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=8083 --target-port=808000
Add a taint with key 'special' on nodes having label release=beta,kubectl taint node -l release=beta  special=worker-node-3:PreferNoSchedule
Add to node 'kube-master-9' a taint with key 'app' and no value,kubectl taint nodes kube-master-9 app:NoSchedule
"Listen on port 8000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8000:8000
"Listen on port 8080 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8080:9090
Get output from running the 'wp' command in nebula-navigator from pod monitoring-pod,kubectl exec monitoring-pod -c nebula-navigator -- wp
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""prod-apps"" API group",kubectl get deployments.v1.1.0.prod-apps -o yaml
Remove from node 'monitoring-node-15' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes monitoring-node-15 zone:PreferNoSchedule-
Set deployment authentication-service-deployment's service account to tekton,kubectl set serviceaccount deployment authentication-service-deployment tekton
"Listen on port 5000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/e-commerce-pod 5000:5000
"Listen on port 3000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 3000:8080
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to :/tmp/bar locally,kubectl cp default/metrics-exporter-pod-10:/var/run/secrets/kubernetes.io/serviceaccount/ :/tmp/bar
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json contact-email=support@example.com
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""my-apps"" API group",kubectl get deployments.v1.1.1.my-apps -o json
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""backup-apps"" API group",kubectl get deployments.v1.0.0.backup-apps -o json
Create a new NodePort service named web-app-nodeport,kubectl create service nodeport web-app-nodeport --tcp=8443:5432
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-config deployment/gateway-deployment
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.beta-1.0.sandbox-apps -o yaml
"Update pod 'database' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods database env='staging'
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/email-service"
"Auto scale a replication controller ""analytics"", with the number of pods between 1 and 6, target CPU utilization at 90%",kubectl autoscale rc analytics --max=6 --cpu-percent=90
Update image of all containers of daemonset namespace-1 to 'redis:6.2.5',kubectl set image daemonset namespace-1 *=redis:6.2.5
Show metrics for a given node,kubectl top node web-node-8
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""alpha-apps"" API group",kubectl get deployments.feature-branch-2.3.0.alpha-apps -o yaml
"Update pod 'media-stream' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream compliance-level=PCI-DSS
"Update pod 'backend' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods backend monitoring-tool='Prometheus'
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.client-2-context.cluster on-prem-cluster
Create a new secret named jwt-secret with keys for each file in folder bar,kubectl create secret generic jwt-secret --from-file=path/to/data
Create a deployment named db that runs the node image,kubectl create deployment db --image=node
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""alpha-apps"" API group",kubectl get deployments.v3.0.0.alpha-apps -o json
Update all deployments' and rc's nginx container's image to 'openjdk:16.0.2',"kubectl set image deployments,rc openjdk=openjdk:16.0.2 --all"
Create a job with a command,kubectl create job cleanup --image=redis -- redis-server
Copy /var/run/secrets/kubernetes.io/serviceaccount/ local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /var/run/secrets/kubernetes.io/serviceaccount/ cert-manager/auth-service-pod-11:/etc/kubernetes
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/analytics-pod :5432
"Start the alpine pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=alpine -- <arg1> <arg2> ... <argN>
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/kube-system-config deployment/analytics-platform-deployment
Display only the most recent 43 lines of output in pod security-service-pod,kubectl logs --tail=43 security-service-pod
Update pod 'web' with the label 'component' and the value 'web',kubectl label pods web component=web
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/monitoring-config deployment/log-aggregator-deployment
Add to node 'k8s-node-1' a taint with key 'hardware' and no value,kubectl taint nodes k8s-node-1 hardware:NoSchedule
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 6379 3000
View the details of daemonset revision 1,kubectl rollout history daemonset/namespace-1 --revision=1
Add a taint with key 'hardware' on nodes having label role=database,kubectl taint node -l role=database  hardware=prod-node-5:PreferNoSchedule
"Update pod 'api' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api env=staging
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/authentication-service"
Create a deployment named wordpress that runs the mongo image with 6 replicas,kubectl create deployment wordpress --image=mongo --replicas=6
Create a new NodePort service named ingress-controller-nodeport,kubectl create service nodeport ingress-controller-nodeport --tcp=8081:3001
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named backend-pod,kubectl logs deployment/cache-cluster-deployment -c backend-pod-1
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=my-k8s-cluster
"Update pod 'gateway' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway contact-email=support@example.com
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod e-commerce-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach e-commerce-pod -c nano-bot -i -t
"Get output from running the 'python' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- python
"Get output from running the 'docker run ubuntu echo ""Hello, World""' command in cyber-sleuth from pod email-service-pod","kubectl exec email-service-pod -c cyber-sleuth -- docker run ubuntu echo ""Hello, World"""
Create a new secret named encryption-key-secret with keys for each file in folder bar,kubectl create secret generic encryption-key-secret --from-file=path/to/data
"Enable the OpenID Connect auth provider for the ""cluster-admin"" entry with additional args",kubectl config set-credentials cluster-admin --auth-provider=oidc --auth-provider-arg=client-id=foo --auth-provider-arg=client-secret=bar
"Delete pods and services with same names ""database"" and ""database""","kubectl delete pod,service database database"
Create a new secret named aws-credentials-secret with keys for each file in folder bar,kubectl create secret generic aws-credentials-secret --from-file=path/to/properties
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp kube-dns/load-balancer-pod-9:/tmp/foo_dir :/tmp/bar
Remove from node 'kube-master-9' all the taints with key 'hardware',kubectl taint nodes kube-master-9 hardware-
Return snapshot of previous terminated cyber-sleuth container logs from pod proxy-service-pod,kubectl logs -p -c cyber-sleuth proxy-service-pod
Create a deployment with a command,kubectl create deployment db --image=ethereum/client-go -- geth version
Update image of all containers of daemonset services to 'postgres:13.4',kubectl set image daemonset services *=postgres:13.4
"Create a service for a replicated python using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs python --port=5000 --target-port=800000
"Listen on port 6379 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 6379:8088
Get output from lunar-launcher from pod gateway-pod,kubectl attach gateway-pod -c lunar-launcher
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=5432:8010
Create a deployment named registry that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 8081,kubectl create deployment registry --image=docker.elastic.co/elasticsearch/elasticsearch --port=8081
Create a new secret named cert-manager-secret from an env file,kubectl create secret generic cert-manager-secret --from-env-file=path/to/profiles.env
Add a taint with key 'cpu-type' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  cpu-type=db-node-7:PreferNoSchedule
Start a wordpress pod and let the container expose port 27017,kubectl run hazelcast --image=wordpress --port=27017
Start a ethereum/client-go pod and let the container expose port 3001,kubectl run hazelcast --image=ethereum/client-go --port=3001
Display only the most recent 23 lines of output in pod security-service-pod,kubectl logs --tail=23 security-service-pod
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-config deployment/frontend-deployment
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/global-config deployment/backend-microservice-deployment
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/properties/file2.txt
Return snapshot of previous terminated warp-drive container logs from pod frontend-pod,kubectl logs -p -c warp-drive frontend-pod
Remove from node 'app-node-6' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes app-node-6 app:PreferNoSchedule-
Add a taint with key 'zone' on nodes having label myLabel,kubectl taint node -l myLabel  zone=app-node-6:PreferNoSchedule
Get output from running the 'elasticsearch --version' command in cosmic-container from pod chat-app-pod,kubectl exec chat-app-pod -c cosmic-container -- elasticsearch --version
Get output from running the 'redis-server' command in astro-container from pod monitoring-pod,kubectl exec monitoring-pod -c astro-container -- redis-server
"Create a service for a replicated ubuntu, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ubuntu --port=80 --target-port=909200
"Listen on port 8080 locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod 8080:8080
Start a golang pod and let the container expose port 3306,kubectl run hazelcast --image=golang --port=3306
Remove from node 'app-node-6' all the taints with key 'dedicated',kubectl taint nodes app-node-6 dedicated-
Start a postgres pod and let the container expose port 8081,kubectl run hazelcast --image=postgres --port=8081
Get output from running the 'pip --version' command in astro-container from pod email-service-pod,kubectl exec email-service-pod -c astro-container -- pip --version
Embed certificate authority data for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
Return snapshot logs from container gateway-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/gateway-deployment -c log-aggregator-pod-1
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=3000:8888
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/backend-microservice-deployment -c security-service-pod-1
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=cluster-gamma
"Update pod 'foo' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods foo compliance-level='PCI-DSS'
Update deployment 'gateway-deployment' with a new environment variable,kubectl set env deployment/gateway-deployment QUEUE_NAME=task-queue
Start a confluentinc/cp-kafka pod and let the container expose port 8088,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8088
"Listen on port 9090 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 9090:8088
Remove from node 'gpu-node-12' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes gpu-node-12 app:PreferNoSchedule-
Get output from running pod media-stream-pod; use the 'kubectl.kubernetes.io/default-container' annotation # for selecting the container to be attached or the first container in the pod will be chosen,kubectl attach media-stream-pod
"Get output from running the 'go' command from pod database-pod, using the first container by default",kubectl exec database-pod -- go
Add a taint with key 'cpu-type' on nodes having label service=auth,kubectl taint node -l service=auth  cpu-type=gpu-node-12:PreferNoSchedule
"Create a role named ""foo"" with API Group specified","kubectl create role foo --verb=proxy,get,update --resource=deployments.apps"
Show metrics for a given node,kubectl top node k8s-node-1
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/api-service-pod 3000:6379
Import environment from a secret,kubectl set env --from=secret/email-credentials-secret deployment/monitoring-stack-deployment
Get output from running the 'python' command in astro-container from pod cdn-service-pod,kubectl exec cdn-service-pod -c astro-container -- python
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=star-cluster
"Set only the ""client-key"" field on the ""robot-user"" # entry, without touching other values",kubectl config set-credentials robot-user --client-key=~/.kube/admin.key
Return snapshot logs from pod email-service-pod with multi containers,kubectl logs email-service-pod --all-containers=true
Get output from cosmic-container from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c cosmic-container
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.edge-context.cluster web-cluster
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 6379 8000
"Update pod 'proxy-server' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods proxy-server monitoring-tool='Prometheus'
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-name-config deployment/email-server-deployment
Begin streaming the logs of the nano-bot container in pod web-app-pod,kubectl logs -f -c nano-bot web-app-pod
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/analytics-pod 9090:8080
"Get output from running the 'redis-server' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- redis-server
"Listen on port 8081 locally, forwarding to 8000 in the pod",kubectl port-forward pod/mypod 8081:8000
Create a priority class named batch-priority,"kubectl create priorityclass batch-priority --value=25 --description=""Priority for batch processing workloads"""
Update deployment 'log-aggregator-deployment' with a new environment variable,kubectl set env deployment/log-aggregator-deployment ENV=prod
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/proxy-server-pod 8088:8888
Set deployment web-app-deployment's service account to spinnaker,kubectl set serviceaccount deployment web-app-deployment spinnaker
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/namespace-config deployment/user-management-deployment
Set deployment email-server-deployment's service account to metrics-server,kubectl set serviceaccount deployment email-server-deployment metrics-server
Embed certificate authority data for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --embed-certs --certificate-authority=~/.kube/dev-cluster/kubernetes.ca.crt
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/docker-registry"
Set deployment mydeployment's service account to vault,kubectl set serviceaccount deployment mydeployment vault
"Listen on port 5432 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 5432:5432"
"Remove exec auth plugin environment variables for the ""cloud-user"" entry",kubectl config set-credentials cloud-user --exec-env=var-to-remove-
"Update pod 'media-stream' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream deployment-script='https://example.com/deploy.sh'
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-secrets deployment/database-deployment
"If the deployment named db-migration-replicaset's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/db-migration-replicaset
Import environment from a secret,kubectl set env --from=secret/ssh-key-secret deployment/cache-cluster-deployment
Add a taint with key 'zone' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  zone=prod-node-5:PreferNoSchedule
List a single pod in JSON output format,kubectl get -o json pod payment-gateway-pod
Update pod 'frontend' with the label 'release' and the value 'v2.0',kubectl label pods frontend release=v2.0
Update pod 'foo' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods foo env-
Return snapshot logs from container proxy-service-deployment-1 of a deployment named backend-pod,kubectl logs deployment/proxy-service-deployment -c backend-pod-1
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8888 8088
Add a taint with key 'hardware' on nodes having label component=proxy,kubectl taint node -l component=proxy  hardware=k8s-node-1:PreferNoSchedule
Get output from running the 'dotnet --list-runtimes' command in cosmic-container from pod database-pod,kubectl exec database-pod -c cosmic-container -- dotnet --list-runtimes
Start a mysql pod and let the container expose port 9090,kubectl run hazelcast --image=mysql --port=9090
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/monitoring-config deployment/backend-microservice-deployment
"Listen on port 8000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/web-app-pod 8000:8000
Update pod 'database' only if the resource is unchanged from version 1,kubectl label pods database status=unhealthy --resource-version=1
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/log-analysis-job -n production
"Run a proxy to the Kubernetes API server on port 9090, serving static content from ./local/www/",kubectl proxy --port=9090 --www=./local/www/
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kube-server/image-resizer-pod-20:/tmp/foo /tmp/bar_dir
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node gpu-node-12 -p $'spec:\n replicas: 3'
Begin streaming the logs of the stardust-shuttle container in pod web-app-pod,kubectl logs -f -c stardust-shuttle web-app-pod
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/queue-processing-job -n kube-dns
Roll back to daemonset revision 5,kubectl rollout undo daemonset/prod --to-revision=5
Create a copy of email-service-pod changing the command of nano-bot,kubectl debug email-service-pod -it --copy-to=debug-image-1 --container=nano-bot -- sh
Create a new ExternalName service named external-file-storage-service,kubectl create service externalname external-file-storage-service --external-name practice-online.site
Create a new ExternalName service named my-ns,kubectl create service externalname my-ns --external-name illustration-shop.shop
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=8088 --target-port=808400
Remove from node 'k8s-node-1' all the taints with key 'datacenter',kubectl taint nodes k8s-node-1 datacenter-
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod api-service-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
"Auto scale a deployment ""payment"", with the number of pods between 7 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment payment --min=7 --max=9
Get output from running the 'elasticsearch --version' command in code-explorer from pod web-app-pod,kubectl exec web-app-pod -c code-explorer -- elasticsearch --version
Describe a node,kubectl describe nodes gateway-node-14.gateway-cluster.net
Display only the most recent 53 lines of output in pod chat-app-pod,kubectl logs --tail=53 chat-app-pod
Create a copy of security-service-pod changing all container images to wordpress,kubectl debug security-service-pod --copy-to=debug-image-web --set-image=*=wordpress
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=testing-cluster
Add a taint with key 'dedicated' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  dedicated=dev-node-4:PreferNoSchedule
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=kube-cluster-1
Return snapshot of previous terminated time-machine container logs from pod media-stream-pod,kubectl logs -p -c time-machine media-stream-pod
"Listen on port 5000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/proxy-server-pod 5000:8888
Return snapshot of previous terminated time-machine container logs from pod auth-service-pod,kubectl logs -p -c time-machine auth-service-pod
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp argocd/logging-agent-pod-7:/tmp/foo :/tmp/bar
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/namespace-config deployment/log-aggregator-deployment
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=settings=/path/to/parameters/file1.txt --from-file=key2=/path/to/parameters/file2.txt
Copy ~/.config/kube local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp ~/.config/kube kube-system/security-scanner-pod-18:/tmp/bar_dir
"Listen on port 5000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/api-service-pod 5000:8080
"Delete pods and services with same names ""monitoring"" and ""email""","kubectl delete pod,service monitoring email"
Get output from nano-bot from pod api-service-pod,kubectl attach api-service-pod -c nano-bot
Set deployment payment-processor-deployment's service account to kube-proxy,kubectl set serviceaccount deployment payment-processor-deployment kube-proxy
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/proxy-service"
Set deployment database-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment database-deployment kube-controller-manager
Create a new ClusterIP service named inventory-service-clusterip,kubectl create service clusterip inventory-service-clusterip --tcp=9090:7000
Begin streaming the logs of the rocket-ranger container in pod vpn-service-pod,kubectl logs -f -c rocket-ranger vpn-service-pod
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/proxy-service-pod
"If the deployment named webapp-replicaset's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/webapp-replicaset
Add a taint with key 'dedicated' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  dedicated=edge-node-10:PreferNoSchedule
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.user-a-context.cluster cluster-beta
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/chat-app-pod 8888:8888
Return snapshot logs from container web-app-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/web-app-deployment -c payment-gateway-pod-1
"Listen on port 8080 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8080:8888
Get output from running the 'npm --version' command in lunar-launcher from pod e-commerce-pod,kubectl exec e-commerce-pod -c lunar-launcher -- npm --version
Create a cron job with a command,"kubectl create cronjob data-sync --image=ubuntu --schedule=""*/1 * * * *"" -- docker run ubuntu echo ""Hello"
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-geolocation-service
Embed certificate authority data for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=prod-cluster
"Get output from running the 'redis-server --version' command from pod database-pod, using the first container by default",kubectl exec database-pod -- redis-server --version
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/env-vars deployment/backend-microservice-deployment
Set deployment analytics-platform-deployment's service account to prometheus,kubectl set serviceaccount deployment analytics-platform-deployment prometheus
"Delete pods and services with same names ""vpn"" and ""frontend""","kubectl delete pod,service vpn frontend"
"Listen on port 8088 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8088:3000"
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.user-b-context.cluster star-cluster
Get output from rocket-ranger from pod mypod,kubectl attach mypod -c rocket-ranger
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=8088:5432
"Embed client certificate data in the ""prod-user"" entry",kubectl config set-credentials prod-user --client-certificate=~/.kube/admin.crt --embed-certs=true
Create a new config map named app-config-prod from the key=value pairs in the file,kubectl create configmap app-config-prod --from-file=path/to/configs
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""backup-apps"" API group",kubectl get deployments.feature-branch-2.3.0.backup-apps -o json
Get output from running the 'elasticsearch' command in cyber-sleuth from pod frontend-pod,kubectl exec frontend-pod -c cyber-sleuth -- elasticsearch
Create a copy of email-service-pod changing all container images to node,kubectl debug email-service-pod --copy-to=debug-image-app --set-image=*=node
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/auth-service-pod
"Listen on port 8888 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8888:5432
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 5000 6379
Add a taint with key 'app' on nodes having label environment=production,kubectl taint node -l environment=production  app=backup-node-14:PreferNoSchedule
Set deployment mydeployment's service account to cert-manager,kubectl set serviceaccount deployment mydeployment cert-manager
Get output from running the 'ash' command in rocket-ranger from pod proxy-service-pod,kubectl exec proxy-service-pod -c rocket-ranger -- ash
Create a deployment named jenkins that runs the postgres image,kubectl create deployment jenkins --image=postgres
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/api-service-pod
"Listen on port 8081 locally, forwarding to 9090 in the pod",kubectl port-forward pod/security-service-pod 8081:9090
Show metrics for the pods defined by label environment=production,kubectl top pod -l environment=production
Update pod 'chat-app' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods chat-app unhealthy-
"Get output from running the 'mysqld' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- mysqld
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=properties=/path/to/data/file1.txt --from-file=key1=/path/to/profiles/file2.txt
"Start a alpine pod and set labels ""app=alpine"" and ""env=prod"" in the container","kubectl run hazelcast --image=alpine --labels=""app=alpine,env=prod"""
List resource information in custom columns,"kubectl get pod payment-gateway-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Create a job with a command,kubectl create job report-generation-job --image=postgres -- postgres
Add a taint with key 'app' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  app=node-2:PreferNoSchedule
Update deployment 'log-aggregator-deployment' with a new environment variable,kubectl set env deployment/log-aggregator-deployment PORT=8080
"Set a deployments postgres container cpu limits to ""200m"" and memory to ""4Gi""","kubectl set resources deployment postgres -c=nginx --limits=cpu=200m,memory=4Gi"
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/api-service-pod
Create a deployment named logging that runs the confluentinc/cp-kafka image and expose port 9000,kubectl create deployment logging --image=confluentinc/cp-kafka --port=9000
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""custom-deployments"" API group",kubectl get deployments.alpha-2.0.custom-deployments -o yaml
Update pod 'proxy-server' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy-server env-
"Get output from running the 'geth version' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- geth version
Get output from running the 'go run hello.go' command in cyber-sleuth from pod media-stream-pod,kubectl exec media-stream-pod -c cyber-sleuth -- go run hello.go
"Create a role named ""reader"" with ResourceName specified",kubectl create role reader --verb=list --resource=pods --resource-name=app-worker-1 --resource-name=payment-processor
Return snapshot logs from container web-app-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/web-app-deployment -c frontend-pod-1
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.client-2-context.cluster star-cluster
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod 8888:5000
Return snapshot of previous terminated cyber-sleuth container logs from pod email-service-pod,kubectl logs -p -c cyber-sleuth email-service-pod
"Listen on port 8080 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8080:6379"
Start a golang pod and let the container expose port 8888,kubectl run hazelcast --image=golang --port=8888
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/properties/file2.txt
"Listen on port 8000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8000:9090
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=app-cluster
Start a golang pod and let the container expose port 8080,kubectl run hazelcast --image=golang --port=8080
Create a job with a command,kubectl create job database-seeding-job --image=centos -- bash
Create a new ExternalName service named external-cloud-storage-service,kubectl create service externalname external-cloud-storage-service --external-name illustration-shop.shop
"Get output from running the 'go' command from pod web-app-pod, using the first container by default",kubectl exec web-app-pod -- go
Get output from running the 'bash' command in cosmic-container from pod vpn-service-pod,kubectl exec vpn-service-pod -c cosmic-container -- bash
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/email-service 5432:https
"Listen on port 8888 locally, forwarding to 9090 in the pod",kubectl port-forward pod/api-service-pod 8888:9090
"Start a mysql pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=mysql --restart=Never
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/web-app-pod 3000:5000
"Listen on port 8888 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8888:8888"
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json compliance-level=PCI-DSS
"Get output from running 'nginx' command from the first pod of the service frontend-service, using the first container by default",kubectl exec svc/frontend-service -- nginx
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/virus-scan-job -n development
"Check to see if I can get the job named ""cleanup-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/cleanup-job -n namespace-1
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=edge-cluster
Set deployment user-management-deployment's service account to kube-proxy,kubectl set serviceaccount deployment user-management-deployment kube-proxy
Remove from node 'node-1' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes node-1 hardware:NoExecute-
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/kube-system-config deployment/search-engine-deployment
Remove from node 'db-node-7' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes db-node-7 app:PreferNoSchedule-
Create a copy of e-commerce-pod changing all container images to busybox,kubectl debug e-commerce-pod --copy-to=debug-image-web --set-image=*=busybox
Get output from running the 'elasticsearch' command in mycontainer from pod analytics-pod,kubectl exec analytics-pod -c mycontainer -- elasticsearch
Get output from running the 'mysqld' command in lunar-launcher from pod monitoring-pod,kubectl exec monitoring-pod -c lunar-launcher -- mysqld
Set the resource request and limits for all containers in python,"kubectl set resources deployment python --limits=cpu=200m,memory=512Mi --requests=cpu=3,memory=4Gi"
Get output from running the 'nginx' command in quantum-quark from pod email-service-pod,kubectl exec email-service-pod -c quantum-quark -- nginx
Delete the context for the app-1-context cluster,kubectl config delete-context app-1-context
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.staging-context.cluster app-cluster
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c rocket-ranger -i -t
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8888 3000
Return snapshot of previous terminated code-explorer container logs from pod proxy-service-pod,kubectl logs -p -c code-explorer proxy-service-pod
Get output from cosmic-container from pod security-service-pod,kubectl attach security-service-pod -c cosmic-container
Deny CSR 'csr-kubelet-14',kubectl certificate deny csr-kubelet-14
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=properties=/path/to/preferences/file1.txt --from-file=key1=/path/to/properties/file2.txt
Switch to raw terminal mode; sends stdin to 'bash' in nebula-navigator from pod mypod # and sends stdout/stderr from 'bash' back to the client,kubectl attach mypod -c nebula-navigator -i -t
Return snapshot logs from container gateway-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/gateway-deployment -c proxy-server-pod-1
Get output from running the 'dotnet' command in cosmic-container from pod media-stream-pod,kubectl exec media-stream-pod -c cosmic-container -- dotnet
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.prod-context.cluster galaxy-cluster
"Listen on port 6379 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 6379:9090
"Wait for the pod ""cdn-service-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/cdn-service-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
Start a confluentinc/cp-kafka pod and let the container expose port 8010,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8010
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod 8000:8081
Begin streaming the logs of the mycontainer container in pod backend-pod,kubectl logs -f -c mycontainer backend-pod
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=cloud-cluster
"Listen on port 8088 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8088:8088
Get output from running the 'mysql' command in time-machine from pod web-app-pod,kubectl exec web-app-pod -c time-machine -- mysql
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod 8088:9090
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/scheduler-service"
Roll back to the previous deployment with dry-run,kubectl rollout undo --dry-run=server deployment/staging
"Listen on port 5000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 5000:8080
Create a copy of proxy-service-pod changing all container images to php,kubectl debug proxy-service-pod --copy-to=debug-image-memcached --set-image=*=php
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=settings=/path/to/settings/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Embed certificate authority data for the web-cluster cluster entry,kubectl config set-cluster web-cluster --embed-certs --certificate-authority=~/.kube/prod-cluster/kubernetes.ca.crt
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/logging-service"
Get output from nebula-navigator from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c nebula-navigator
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.staging-context.cluster cluster-beta
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/sun-cluster/kubernetes.ca.crt
Import environment from a secret,kubectl set env --from=secret/ssh-key-secret deployment/scheduler-app-deployment
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=8443 --target-port=888800
Set deployment user-management-deployment's service account to jenkins,kubectl set serviceaccount deployment user-management-deployment jenkins
Get output from running the 'dotnet --list-runtimes' command in warp-drive from pod web-app-pod,kubectl exec web-app-pod -c warp-drive -- dotnet --list-runtimes
"Auto scale a deployment ""log-aggregator"", with the number of pods between 2 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment log-aggregator --min=2 --max=8
"Listen on port 8000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8000:5000
"Listen on port 3000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/web-service 3000:https
Start a postgres pod and let the container expose port 8082,kubectl run hazelcast --image=postgres --port=8082
Get output from running the 'redis-server' command in mycontainer from pod proxy-service-pod,kubectl exec proxy-service-pod -c mycontainer -- redis-server
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/monitoring-config deployment/user-management-deployment
Set deployment database-deployment's service account to metrics-server,kubectl set serviceaccount deployment database-deployment metrics-server
Set deployment search-engine-deployment's service account to dashboard,kubectl set serviceaccount deployment search-engine-deployment dashboard
"Delete pods and services with same names ""api"" and ""chat-app""","kubectl delete pod,service api chat-app"
Create a deployment named worker that runs the php image and expose port 8888,kubectl create deployment worker --image=php --port=8888
"Update a role binding for developer3, k8s-admin, and qa-engineers",kubectl set subject rolebinding admin --user=developer3 --user=k8s-admin --group=qa-engineers
Start a postgres pod and let the container expose port 9092,kubectl run hazelcast --image=postgres --port=9092
Create a copy of auth-service-pod changing all container images to ruby,kubectl debug auth-service-pod --copy-to=debug-image-api --set-image=*=ruby
Create a job with a command,kubectl create job security-scan-job --image=python -- pip --version
Embed certificate authority data for the star-cluster cluster entry,kubectl config set-cluster star-cluster --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
Get output from running the 'irb' command in stardust-shuttle from pod mypod,kubectl exec mypod -c stardust-shuttle -- irb
Start a hazelcast pod and let the container expose port 8089,kubectl run hazelcast --image=hazelcast/hazelcast --port=8089
Begin streaming the logs of the code-explorer container in pod log-aggregator-pod,kubectl logs -f -c code-explorer log-aggregator-pod
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl exec -n kube-flannel web-app-pod-1 -- tar cf - /tmp/foo_dir | tar xf - -C :/tmp/bar
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""legacy-apps"" API group",kubectl get deployments.beta-1.0.legacy-apps -o yaml
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8000 3000
"Listen on a random port locally, forwarding to 9090 in the pod",kubectl port-forward pod/proxy-server-pod :9090
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/kube-system-config deployment/proxy-service-deployment
Show metrics for the pods defined by label region=eu-west-2,kubectl top pod -l region=eu-west-2
"Listen on port 5000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 5000:8888"
"List deployments in JSON output format, in the ""custom-version"" version of the ""api-v2"" API group",kubectl get deployments.custom-version.api-v2 -o json
"Get output from running the 'irb' command from pod database-pod, using the first container by default",kubectl exec database-pod -- irb
Display only the most recent 20 lines of output in pod auth-service-pod,kubectl logs --tail=20 auth-service-pod
Set deployment api-server-deployment's service account to spinnaker,kubectl set serviceaccount deployment api-server-deployment spinnaker
Set deployment gateway-deployment's service account to fluentd,kubectl set serviceaccount deployment gateway-deployment fluentd
Add a taint with key 'app' on nodes having label myLabel,kubectl taint node -l myLabel  app=gpu-node-12:PreferNoSchedule
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=cluster-alpha
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node prod-node-5 -p '{""spec"":{""rules"":[{""http"":{""paths"":[{""path"":""/"",""backend"":{""service"": {""name"": ""new-service""}}}]}}'"
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=prod-cluster
"Listen on port 8888 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8888:8080
"Listen on port 9090 locally, forwarding to 5432 in the pod",kubectl port-forward pod/backend-pod 9090:5432
Create a new secret named ssh-key-secret with keys for each file in folder bar,kubectl create secret generic ssh-key-secret --from-file=path/to/properties
"Create a service for a replication controller identified by type and name specified in ""ubuntu-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f ubuntu-controller.yaml --port=5000 --target-port=500000
Begin streaming the logs from all containers in pods defined by label team=devops,kubectl logs -f -l team=devops --all-containers=true
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=8084 --target-port=300000
Create a new secret named password-secret with keys for each file in folder bar,kubectl create secret generic password-secret --from-file=path/to/settings
"Delete pods and services with same names ""cdn"" and ""database""","kubectl delete pod,service cdn database"
Replace a pod using the data in config.json,kubectl replace -f ./config.json
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-name-config deployment/backend-microservice-deployment
"Listen on port 8000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8000:5000
Get output from running the 'postgres' command in mycontainer from pod api-service-pod,kubectl exec api-service-pod -c mycontainer -- postgres
Create a job with a command,kubectl create job data-migration-job --image=alpine -- apk add curl
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.testing-context.cluster cluster-alpha
"Delete pods and services with same names ""proxy"" and ""monitoring""","kubectl delete pod,service proxy monitoring"
"Get output from running the 'redis-cli' command from pod mypod, using the first container by default",kubectl exec mypod -- redis-cli
"Create a service for a pod analytics-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod analytics-pod --port=8000 --name=frontend
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""admin"" entry",kubectl config set-credentials admin --auth-provider=oidc --auth-provider-arg=client-secret-
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod backend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach backend-pod -c warp-drive -i -t
Update deployment 'notification-handler-deployment' with a new environment variable,kubectl set env deployment/notification-handler-deployment DB_PASSWORD=secretpassword
"Listen on port 6379 locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod 6379:8080
"If the deployment named web's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/web
Copy :/tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp ingress-nginx/load-balancer-pod-9::/tmp/foo /etc/kubernetes
"Set a deployments nginx container cpu limits to ""500m"" and memory to ""128Mi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=500m,memory=128Mi"
Create a job with a command,kubectl create job monitoring-job --image=node -- node --version
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/gateway-pod
Create a deployment named cache that runs the ethereum/client-go image and expose port 8443,kubectl create deployment cache --image=ethereum/client-go --port=8443
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/db-config deployment/cache-cluster-deployment
List a single pod in YAML output format,kubectl get -o yaml pod payment-gateway-pod
"Listen on port 8081 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8081:8000
Rename the context 'cluster-2-context' to 'app-2-context' in your kubeconfig file,kubectl config rename-context cluster-2-context app-2-context
Create a new NodePort service named auth-service-nodeport,kubectl create service nodeport auth-service-nodeport --tcp=8089:6379
"Update pod 'monitoring' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring SLA='99.9% uptime'
"Listen on port 9090 locally, forwarding to 8081 in the pod",kubectl port-forward pod/analytics-pod 9090:8081
Return only the phase value of the specified pod,kubectl get -o template pod/vpn-service-pod --template={{.status.phase}}
"Set a deployments node container cpu limits to ""1"" and memory to ""512Mi""","kubectl set resources deployment node -c=nginx --limits=cpu=1,memory=512Mi"
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/virus-scan-job -n kube-dns
Embed certificate authority data for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
"Listen on port 8088 locally, forwarding to 5000 in the pod",kubectl port-forward pod/frontend-pod 8088:5000
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=e2e
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/chat-app-pod :8081
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json app-version=2.5.1
Begin streaming the logs of the ruby container in pod media-stream-pod,kubectl logs -f -c ruby media-stream-pod
Create a new ExternalName service named external-third-party-api-service,kubectl create service externalname external-third-party-api-service --external-name demo-service.dev
Unset namespace in prod-context context,kubectl config unset contexts.prod-context.namespace
"Check to see if I can get the job named ""cron-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/cron-job -n namespace-1
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/profiles/file2.txt
Get output from running the 'composer --version' command in cosmic-container from pod auth-service-pod,kubectl exec auth-service-pod -c cosmic-container -- composer --version
Start a confluentinc/cp-kafka pod,kubectl run nginx --image=confluentinc/cp-kafka
Set the certificate-authority-data field on the cluster-alpha cluster,"kubectl config set clusters.cluster-alpha.certificate-authority-data $(echo ""cert_data_here"" | base64 -i -)"
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/namespace-config deployment/cache-cluster-deployment
Get output from rocket-ranger from pod backend-pod,kubectl attach backend-pod -c rocket-ranger
"Create a cluster role name ""foo"" with NonResourceURL specified","kubectl create clusterrole ""foo"" --verb=create --non-resource-url=/metrics"
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/backend-service 5432:https
"Listen on port 8088 locally, forwarding to 3000 in the pod",kubectl port-forward pod/log-aggregator-pod 8088:3000
Create an ingress with multiple hosts and the pathType as Prefix,"kubectl create ingress ingress1 --class=default \
--rule=""website.com/path*=svc:8084"" \
--rule=""bar.com/admin*=svc2:http"""
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/frontend-pod
Rename the context 'staging-context' to 'edge-context' in your kubeconfig file,kubectl config rename-context staging-context edge-context
"Update pod 'gateway' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway monitoring-tool=Prometheus
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/env-vars deployment/user-management-deployment
Replace a pod using the data in params.json,kubectl replace -f ./params.json
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/web-app-pod
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.client-2-context.cluster galaxy-cluster
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/frontend-pod 5432 5000
Get output from running the 'geth version' command in quantum-quark from pod database-pod,kubectl exec database-pod -c quantum-quark -- geth version
"Listen on port 8081 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8081:8888
Start a postgres pod and let the container expose port 6379,kubectl run hazelcast --image=postgres --port=6379
Create a copy of security-service-pod adding a debug container and changing container images,"kubectl debug security-service-pod -it --copy-to=debug-image-memcached --image=debian --set-image=cache=redis:alpine,api=api:v2"
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/kube-system-config deployment/web-app-deployment
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-config-dev deployment/payment-processor-deployment
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/ruby
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=3001 --target-port=844300
Get output from time-machine from pod backend-pod,kubectl attach backend-pod -c time-machine
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json security-scan-status=pass
Update image of all containers of daemonset staging to 'alpine:3.14',kubectl set image daemonset staging *=alpine:3.14
"Create a service for a replicated ubuntu using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ubuntu --port=9000 --target-port=500100
Set deployment proxy-service-deployment's service account to elasticsearch,kubectl set serviceaccount deployment proxy-service-deployment elasticsearch
"Auto scale a replication controller ""media-stream"", with the number of pods between 1 and 2, target CPU utilization at 90%",kubectl autoscale rc media-stream --max=2 --cpu-percent=90
Remove from node 'node-1' all the taints with key 'environment',kubectl taint nodes node-1 environment-
View the details of daemonset revision 5,kubectl rollout history daemonset/services --revision=5
Update pod 'analytics' with the label 'release' and the value 'v2.0',kubectl label pods analytics release=v2.0
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/security-service-pod
Set the user field on the service-account-context context entry without touching other values,kubectl config set-context service-account-context --user=cluster-admin
"Listen on port 8080 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8080:6379
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.user-b-context.cluster cluster-gamma
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.team-beta-context.cluster sun-cluster
Create a job with a command,kubectl create job certificate-renewal --image=golang -- go
Create a deployment named web that runs the php image with 5 replicas,kubectl create deployment web --image=php --replicas=5
Add a taint with key 'workload' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  workload=worker-node-3:PreferNoSchedule
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 9090 8888
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node worker-node-3 -p $'spec:\n unschedulable: true'
Return snapshot logs from container gateway-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/gateway-deployment -c media-stream-pod-1
Add a taint with key 'app' on nodes having label myLabel,kubectl taint node -l myLabel  app=worker-node-3:PreferNoSchedule
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json team='frontend team'
Create a new secret named git-credentials-secret with keys for each file in folder bar,kubectl create secret generic git-credentials-secret --from-file=path/to/profiles
"Listen on port 8081 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8081:8081
"Listen on port 9090 locally, forwarding to 5432 in the pod",kubectl port-forward pod/cdn-service-pod 9090:5432
Return snapshot of previous terminated stardust-shuttle container logs from pod api-service-pod,kubectl logs -p -c stardust-shuttle api-service-pod
Update a cluster role binding for kube-proxy,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:kube-proxy
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/mypod 8081 8081
"Update pod 'chat-app' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app description='Web server for marketing site'
Create a deployment named jenkins-x that runs the php image with 6 replicas,kubectl create deployment jenkins-x --image=php --replicas=6
Update pod 'foo' with the label 'tier' and the value 'frontend',kubectl label pods foo tier=frontend
Rename the context 'testing-context' to 'admin-context' in your kubeconfig file,kubectl config rename-context testing-context admin-context
Create a new ClusterIP service named billing-service-clusterip,kubectl create service clusterip billing-service-clusterip --tcp=9090:9090
"List deployments in JSON output format, in the ""custom-version"" version of the ""mobile-apps"" API group",kubectl get deployments.custom-version.mobile-apps -o json
Create a new secret named oauth-secret with keys for each file in folder bar,kubectl create secret generic oauth-secret --from-file=path/to/properties
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 3000 5432
"Listen on port 6379 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 6379:8080
"Check to see if I can get the job named ""load-testing-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/load-testing-job -n default
Start a python pod and let the container expose port 8443,kubectl run hazelcast --image=python --port=8443
Return snapshot of previous terminated time-machine container logs from pod database-pod,kubectl logs -p -c time-machine database-pod
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""third-party-apps"" API group",kubectl get deployments.v2.0.0.third-party-apps -o json
Display only the most recent 43 lines of output in pod e-commerce-pod,kubectl logs --tail=43 e-commerce-pod
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=9000 --target-port=808800
"Update pod 'backend' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend backup-strategy='daily backups'
Add a taint with key 'app' on nodes having label release=beta,kubectl taint node -l release=beta  app=db-node-7:PreferNoSchedule
"Listen on port 8888 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8888:8088
Create a new secret named app-config-secret from an env file,kubectl create secret generic app-config-secret --from-env-file=path/to/settings.env
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/redis
Check the rollout status of a daemonset,kubectl rollout status daemonset/namespace-2
Edit the job 'data-migration-job' in JSON using the v1 API format,kubectl edit job.v1.batch/data-migration-job -o json
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=settings=/path/to/settings/file1.txt --from-file=key2=/path/to/options/file2.txt
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/log-rotation-job -n namespace-1
"Auto scale a deployment ""web"", with the number of pods between 1 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment web --min=1 --max=9
Remove from node 'node-1' all the taints with key 'workload',kubectl taint nodes node-1 workload-
Rename the context 'staging-context' to 'app-1-context' in your kubeconfig file,kubectl config rename-context staging-context app-1-context
Return snapshot of previous terminated time-machine container logs from pod email-service-pod,kubectl logs -p -c time-machine email-service-pod
List a single pod in JSON output format,kubectl get -o json pod security-service-pod
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/frontend-pod 5432 9090
Create a copy of e-commerce-pod adding a debug container and changing container images,"kubectl debug e-commerce-pod -it --copy-to=debug-image-memcached --image=debian --set-image=proxy=nginx:1.21,proxy=nginx:1.21"
Create a deployment named registry that runs the ubuntu image with 6 replicas,kubectl create deployment registry --image=ubuntu --replicas=6
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.user-a-context.cluster prod-cluster
Get output from quantum-quark from pod api-service-pod,kubectl attach api-service-pod -c quantum-quark
Add a taint with key 'zone' on nodes having label release=beta,kubectl taint node -l release=beta  zone=dev-node-4:PreferNoSchedule
Add a taint with key 'hardware' on nodes having label release=beta,kubectl taint node -l release=beta  hardware=node-1:PreferNoSchedule
"Listen on port 8080 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/email-service 8080:https
Start a ethereum/client-go pod and let the container expose port 8888,kubectl run hazelcast --image=ethereum/client-go --port=8888
Display only the most recent 5 lines of output in pod email-service-pod,kubectl logs --tail=5 email-service-pod
Create a copy of chat-app-pod changing all container images to centos,kubectl debug chat-app-pod --copy-to=debug-image-app --set-image=*=centos
Add a taint with key 'disktype' on nodes having label service=auth,kubectl taint node -l service=auth  disktype=storage-node-13:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/env-vars deployment/order-processing-deployment
"Start a alpine pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=alpine --overrides='{ ""apiVersion"": ""v2.1.0"", ""spec"": { ... } }'"
Add a taint with key 'special' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  special=gpu-node-12:PreferNoSchedule
"Listen on port 9090 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 9090:5432
Get output from running the 'gem --version' command in cosmic-container from pod frontend-pod,kubectl exec frontend-pod -c cosmic-container -- gem --version
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""web-apps"" API group",kubectl get deployments.hotfix-1.1.2.web-apps -o yaml
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/kube-system-config deployment/notification-handler-deployment
Start a python pod and let the container expose port 9092,kubectl run hazelcast --image=python --port=9092
Add a taint with key 'zone' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  zone=backup-node-14:PreferNoSchedule
"Listen on port 8000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/scheduler-service 8000:https
Update image of all containers of daemonset nginx to 'wordpress:5.8.1',kubectl set image daemonset nginx *=wordpress:5.8.1
Add to node 'gpu-node-12' a taint with key 'app' and no value,kubectl taint nodes gpu-node-12 app:NoSchedule
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8080 8000
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=9090 --target-port=808400
Embed certificate authority data for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
Describe a node,kubectl describe nodes cloud-node-4.cloud-provider.io
Create a job with a command,kubectl create job data-migration-job --image=mysql -- mysql
"Auto scale a deployment ""web"", with the number of pods between 2 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment web --min=2 --max=12
"Update pod 'log-aggregator' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods log-aggregator status=unhealthy
"Delete pods and services with same names ""monitoring"" and ""media-stream""","kubectl delete pod,service monitoring media-stream"
"Get output from running 'go run hello.go' command from the first pod of the service user-service, using the first container by default",kubectl exec svc/user-service -- go run hello.go
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kube-dns/api-server-pod-3:/tmp/foo /tmp/bar
Remove from node 'dev-node-4' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes dev-node-4 dedicated:NoSchedule-
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=edge-cluster
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/security-service-pod 3000:5000
"Listen on port 8000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/database-service 8000:https
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-name-config deployment/order-processing-deployment
"Listen on port 5000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/mypod 5000:3000
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 5432 6379
Create a deployment named nats that runs the confluentinc/cp-kafka image and expose port 9092,kubectl create deployment nats --image=confluentinc/cp-kafka --port=9092
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8000 3000
"Check to see if I can get the job named ""security-scan-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/security-scan-job -n development
"Listen on port 3000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 3000:9090
Add to node 'backup-node-14' a taint with key 'cpu-type' and no value,kubectl taint nodes backup-node-14 cpu-type:NoSchedule
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/log-config deployment/mydeployment
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/monitoring-stack-deployment -c e-commerce-pod-1
Begin streaming the logs of the mycontainer container in pod e-commerce-pod,kubectl logs -f -c mycontainer e-commerce-pod
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 5000 8081
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/cdn-service-pod :8088
"Start a wordpress pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=wordpress --overrides='{ ""apiVersion"": ""v2.1.0"", ""spec"": { ... } }'"
Add a taint with key 'app' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  app=k8s-node-1:PreferNoSchedule
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.user-b-context.cluster data-cluster
Resume an already paused deployment,kubectl rollout resume deployment/development
Get output from running the 'ash' command in cyber-sleuth from pod analytics-pod,kubectl exec analytics-pod -c cyber-sleuth -- ash
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/db-config deployment/notification-handler-deployment
"Get output from running the 'dotnet' command from pod web-app-pod, using the first container by default",kubectl exec web-app-pod -- dotnet
"Update node 'edge-node-10' with a taint with key 'app' and value 'backend' and effect 'PreferNoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes edge-node-10 app=backend:PreferNoSchedule
"Check to see if I can get the job named ""cron-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/cron-job -n monitoring
Rename the context 'on-prem-context' to 'user-b-context' in your kubeconfig file,kubectl config rename-context on-prem-context user-b-context
"Listen on port 3000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 3000:3000"
Create a new secret named gcp-service-account-secret from an env file,kubectl create secret generic gcp-service-account-secret --from-env-file=path/to/options.env
Return snapshot of previous terminated astro-container container logs from pod email-service-pod,kubectl logs -p -c astro-container email-service-pod
"Auto scale a deployment ""monitoring"", with the number of pods between 2 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment monitoring --min=2 --max=14
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 6379 3000
"Get output from running the 'elasticsearch --version' command from pod log-aggregator-pod, using the first container by default",kubectl exec log-aggregator-pod -- elasticsearch --version
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 5432 8081
View the details of daemonset revision 5,kubectl rollout history daemonset/my-deployment --revision=5
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.admin-context.cluster data-cluster
"Update pod 'security' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods security team='frontend-team'
"Delete pods and services with same names ""payment"" and ""monitoring""","kubectl delete pod,service payment monitoring"
Create a job with a command,kubectl create job audit-job --image=centos -- sleep 3600
"Create a role binding for jane.doe, bob.smith, and developers using the reader cluster role",kubectl create rolebinding reader --clusterrole=reader --user=jane.doe --user=bob.smith --group=developers
Add a taint with key 'zone' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  zone=backup-node-14:PreferNoSchedule
Set deployment scheduler-app-deployment's service account to metrics-server,kubectl set serviceaccount deployment scheduler-app-deployment metrics-server
"Auto scale a deployment ""media-stream"", with the number of pods between 1 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment media-stream --min=1 --max=10
Add a taint with key 'app' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  app=web-node-8:PreferNoSchedule
Get output from the first pod of a replica set named hazelcast,kubectl attach rs/hazelcast
Return snapshot logs from container database-deployment-1 of a deployment named mypod,kubectl logs deployment/database-deployment -c mypod-1
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 8081 6379
"Listen on port 8888 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8888:3000
Create a deployment with a command,kubectl create deployment ingress --image=node -- node
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
Remove from node 'web-node-8' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes web-node-8 hardware:NoExecute-
"Listen on port 8088 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8088:8080"
Create a copy of e-commerce-pod changing all container images to ethereum/client-go,kubectl debug e-commerce-pod --copy-to=my-debugger --set-image=*=ethereum/client-go
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-config-dev deployment/log-aggregator-deployment
"Print result (in yaml format) of updating nginx container image from local file, without hitting the server",kubectl set image -f path/to/file.yaml mongo=mongo:5.0.2 --local -o yaml
Update pod 'security' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods security tier-
"If the deployment named frontend-rs's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/frontend-rs
Begin streaming the logs of the time-machine container in pod cdn-service-pod,kubectl logs -f -c time-machine cdn-service-pod
"Get output from running 'node' command from the first pod of the service order-service, using the first container by default",kubectl exec svc/order-service -- node
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=cloud-cluster
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/proxy-server-pod
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""custom-apps"" API group",kubectl get deployments.v1.0.0.custom-apps -o yaml
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=cluster-gamma
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/cdn-service-pod :8081
"Listen on port 5432 locally, forwarding to 8081 in the pod",kubectl port-forward pod/frontend-pod 5432:8081
"Get output from running 'mongo' command from the first pod of the deployment proxy-service-deployment, using the first container by default",kubectl exec deploy/proxy-service-deployment -- mongo
Create a new config map named global-config with key1=config1 and key2=config2,kubectl create configmap global-config --from-literal=conf=config1 --from-literal=data=config2
Return snapshot of previous terminated lunar-launcher container logs from pod payment-gateway-pod,kubectl logs -p -c lunar-launcher payment-gateway-pod
"Update pod 'vpn' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn scaling-policy=auto-horizontal-scaling
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/confluentinc/cp-kafka
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kube-node-lease/api-server-pod-3:/tmp/foo /tmp/bar
Create a new ExternalName service named external-caching-service,kubectl create service externalname external-caching-service --external-name tutorial-ai.ai
Return snapshot of previous terminated code-explorer container logs from pod media-stream-pod,kubectl logs -p -c code-explorer media-stream-pod
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.cluster-2-context.cluster testing-cluster
"Auto scale a deployment ""backend"", with the number of pods between 6 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment backend --min=6 --max=10
Set deployment authentication-service-deployment's service account to istio,kubectl set serviceaccount deployment authentication-service-deployment istio
Create a new NodePort service named my-ns,kubectl create service nodeport my-ns --tcp=8181:8082
Display only the most recent 31 lines of output in pod database-pod,kubectl logs --tail=31 database-pod
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/analytics-platform-deployment -c proxy-service-pod-1
"If the deployment named dev-environment-rs's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/dev-environment-rs
"Auto scale a deployment ""foo"", with the number of pods between 6 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment foo --min=6 --max=11
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.cluster-1-context.cluster star-cluster
Remove from node 'prod-node-5' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes prod-node-5 workload:NoSchedule-
Create a deployment with a command,kubectl create deployment mattermost --image=postgres -- postgres
Set deployment payment-processor-deployment's service account to istio,kubectl set serviceaccount deployment payment-processor-deployment istio
Update image of all containers of daemonset prod to 'java:11.0.12',kubectl set image daemonset prod *=java:11.0.12
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/api-service"
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=settings=/path/to/settings/file1.txt --from-file=key2=/path/to/data/file2.txt
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/backend-pod 8080:8888
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f kubeadm-config.yaml -p '{""spec"":{""unschedulable"":true}}'"
Set the resource request and limits for all containers in mysql,"kubectl set resources deployment mysql --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=1Gi"
"Listen on port 6379 locally, forwarding to 6379 in the pod",kubectl port-forward pod/analytics-pod 6379:6379
Get output from running the 'mysql' command in nebula-navigator from pod cdn-service-pod,kubectl exec cdn-service-pod -c nebula-navigator -- mysql
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/e-commerce-pod
Check the rollout status of a daemonset,kubectl rollout status daemonset/staging
Add a taint with key 'cpu-type' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  cpu-type=dev-node-4:PreferNoSchedule
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8081 5432
"Update pod 'foo' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo compliance-level=PCI-DSS
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""backup-apps"" API group",kubectl get deployments.v2.0.0.backup-apps -o json
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json owner='alice smith'
Create a deployment named jenkins that runs the mysql image and expose port 8081,kubectl create deployment jenkins --image=mysql --port=8081
Get output from running the 'pg_dump --version' command in code-explorer from pod chat-app-pod,kubectl exec chat-app-pod -c code-explorer -- pg_dump --version
Update pod 'foo' with the label 'tier' and the value 'backend',kubectl label pods foo tier=backend
Get output from running the 'elasticsearch-plugin --list' command in nano-bot from pod e-commerce-pod,kubectl exec e-commerce-pod -c nano-bot -- elasticsearch-plugin --list
Create a deployment named grafana that runs the php image and expose port 8088,kubectl create deployment grafana --image=php --port=8088
"Delete pods and services with same names ""api"" and ""cdn""","kubectl delete pod,service api cdn"
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/kube-system-config deployment/order-processing-deployment
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=kube-cluster-1
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/chat-app-pod
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod analytics-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach analytics-pod -c rocket-ranger -i -t
Start a mysql pod and let the container expose port 6379,kubectl run hazelcast --image=mysql --port=6379
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.cluster-2-context.cluster data-cluster
Create a new ExternalName service named my-ns,kubectl create service externalname my-ns --external-name education-edu.edu
"Start a centos pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=centos --overrides='{ ""apiVersion"": ""legacy-1.0.0"", ""spec"": { ... } }'"
"Update pod 'vpn' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn team='frontend team'
"Get output from running the 'gem --version' command from pod database-pod, using the first container by default",kubectl exec database-pod -- gem --version
"Get output from running the 'python' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- python
Import environment from a secret,kubectl set env --from=secret/jwt-secret deployment/search-engine-deployment
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=settings=/path/to/parameters/file1.txt --from-file=key2=/path/to/profiles/file2.txt
"Update pod 'proxy' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods proxy alert-email='alerts@example.com'
"Listen on port 8080 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8080:5432"
Update pod 'frontend' with the label 'role' and the value 'frontend',kubectl label pods frontend role=frontend
"Listen on a random port locally, forwarding to 6379 in the pod",kubectl port-forward pod/analytics-pod :6379
Edit the deployment 'cache-cluster-deployment' in YAML and save the modified config in its annotation,kubectl edit deployment/cache-cluster-deployment -o yaml --save-config
Update pod 'web' with the label 'unhealthy' and the value 'true',kubectl label pods web unhealthy=true
Return snapshot of previous terminated mycontainer container logs from pod frontend-pod,kubectl logs -p -c mycontainer frontend-pod
"List deployments in YAML output format, in the ""custom-version"" version of the ""sandbox-apps"" API group",kubectl get deployments.custom-version.sandbox-apps -o yaml
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/scheduler-app-deployment -c frontend-pod-1
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""testing-apps"" API group",kubectl get deployments.stable-2.0.0.testing-apps -o yaml
Create a new config map named app-config from an env file,kubectl create configmap app-config --from-env-file=path/to/configs.env
Create a job with a command,kubectl create job data-migration-job --image=mongo -- mongod
Start a mysql pod and let the container expose port 7000,kubectl run hazelcast --image=mysql --port=7000
Create a new ClusterIP service named monitoring-service-clusterip,kubectl create service clusterip monitoring-service-clusterip --tcp=8443:27017
Begin streaming the logs of the code-explorer container in pod payment-gateway-pod,kubectl logs -f -c code-explorer payment-gateway-pod
"Get output from running the 'elasticsearch' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- elasticsearch
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""internal-apps"" API group",kubectl get deployments.rc-1.1.0.internal-apps -o yaml
Display only the most recent 12 lines of output in pod analytics-pod,kubectl logs --tail=12 analytics-pod
Create a new ClusterIP service named analytics-service-clusterip,kubectl create service clusterip analytics-service-clusterip --tcp=8081:9092
"Listen on port 9090 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 9090:8088"
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-config-dev deployment/cache-cluster-deployment
Return snapshot logs from container authentication-service-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/authentication-service-deployment -c gateway-pod-1
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-config-prod deployment/load-balancer-deployment
"Listen on port 8888 locally, forwarding to 8081 in the pod",kubectl port-forward pod/proxy-server-pod 8888:8081
"Auto scale a replication controller ""gateway"", with the number of pods between 1 and 2, target CPU utilization at 60%",kubectl autoscale rc gateway --max=2 --cpu-percent=60
Begin streaming the logs of the time-machine container in pod vpn-service-pod,kubectl logs -f -c time-machine vpn-service-pod
Return snapshot logs from container search-engine-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/search-engine-deployment -c web-app-pod-1
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json expiration-date='2024-12-31'
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-secrets deployment/frontend-deployment
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-config deployment/monitoring-stack-deployment
Start a mongo pod and let the container expose port 8000,kubectl run hazelcast --image=mongo --port=8000
Import environment from a secret,kubectl set env --from=secret/docker-registry-secret deployment/authentication-service-deployment
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""internal-apps"" API group",kubectl get deployments.hotfix-1.1.2.internal-apps -o json
"Listen on a random port locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod :9090
Remove from node 'edge-node-10' all the taints with key 'disktype',kubectl taint nodes edge-node-10 disktype-
Create a new ExternalName service named external-third-party-api-service,kubectl create service externalname external-third-party-api-service --external-name test-site.org
"Listen on port 8088 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8088:5432"
Get output from running the 'pip --version' command in time-machine from pod security-service-pod,kubectl exec security-service-pod -c time-machine -- pip --version
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""custom-apps"" API group",kubectl get deployments.v2.0.0.custom-apps -o json
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8080 8888
Print the supported API resources with more information,kubectl api-resources -o wide
Create a job with a command,kubectl create job indexing --image=nginx -- nginx -t
"List all allowed actions in namespace ""kube-dns""",kubectl auth can-i --list --namespace=kube-dns
Set deployment api-server-deployment's service account to istio,kubectl set serviceaccount deployment api-server-deployment istio
"Scale a resource identified by type and name specified in ""pod.json"" to 7",kubectl scale --replicas=7 -f pod.json
Set deployment scheduler-app-deployment's service account to fluentd,kubectl set serviceaccount deployment scheduler-app-deployment fluentd
"Update pod 'proxy' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods proxy owner='alice-smith'
Add to node 'dev-node-4' a taint with key 'hardware' and no value,kubectl taint nodes dev-node-4 hardware:NoSchedule
Create a new secret named jwt-secret from an env file,kubectl create secret generic jwt-secret --from-env-file=path/to/data.env
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=9092 --target-port=300100
Start a mongo pod and let the container expose port 8081,kubectl run hazelcast --image=mongo --port=8081
Start a ubuntu pod and let the container expose port 7000,kubectl run hazelcast --image=ubuntu --port=7000
Return snapshot of previous terminated astro-container container logs from pod frontend-pod,kubectl logs -p -c astro-container frontend-pod
"Listen on port 8081 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/backend-service 8081:https
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/kube-system-config deployment/gateway-deployment
Add a taint with key 'zone' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  zone=k8s-node-1:PreferNoSchedule
Return snapshot logs from container payment-processor-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/payment-processor-deployment -c media-stream-pod-1
Copy /tmp/foo_dir_dir local directory to :/tmp/bar_dir in a remote pod in the default namespace,kubectl cp /tmp/foo_dir_dir security-scanner-pod-18::/tmp/bar_dir
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/preferences/file2.txt
Return snapshot logs from container frontend-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/frontend-deployment -c api-service-pod-1
"Update pod 'payment' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods payment team='frontend-team'
Create a new ExternalName service named external-authentication-service,kubectl create service externalname external-authentication-service --external-name document-company.com
"Create a single ingress called 'public-ingress' that directs requests to website.com/module to svc # svc1:9000 with a tls secret ""my-cert""","kubectl create ingress public-ingress --rule=""website.com/module=svc1:9000,tls=my-cert"""
"Listen on port 6379 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 6379:5000
"Update pod 'monitoring' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods monitoring owner='alice-smith'
"Get output from running 'elasticsearch' command from the first pod of the service monitoring-service, using the first container by default",kubectl exec svc/monitoring-service -- elasticsearch
Return snapshot of previous terminated quantum-quark container logs from pod vpn-service-pod,kubectl logs -p -c quantum-quark vpn-service-pod
"Update node 'kube-master-9' with a taint with key 'special' and value 'backup' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes kube-master-9 special=backup:NoSchedule
"Scale a resource identified by type and name specified in ""setup.json"" to 3",kubectl scale --replicas=3 -f setup.json
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 5432 8000
Set only the server field on the my-k8s-cluster cluster entry without touching other values,kubectl config set-cluster my-k8s-cluster --server=https://1.2.3.4
Create a new secret named azure-storage-secret from an env file,kubectl create secret generic azure-storage-secret --from-env-file=path/to/configurations.env
"If the deployment named web's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/web
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/preferences/file2.txt
"Start a hazelcast pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=hazelcast/hazelcast --overrides='{ ""apiVersion"": ""beta-1.0"", ""spec"": { ... } }'"
Create a copy of monitoring-pod changing all container images to alpine,kubectl debug monitoring-pod --copy-to=debug-image-web --set-image=*=alpine
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod :8081
"List deployments in YAML output format, in the ""custom-version"" version of the ""web-apps"" API group",kubectl get deployments.custom-version.web-apps -o yaml
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.user-a-context.cluster cluster-gamma
Update pod 'media-stream' only if the resource is unchanged from version 1,kubectl label pods media-stream status=unhealthy --resource-version=1
Get output from running the 'jenkins-plugin-cli' command in time-machine from pod media-stream-pod,kubectl exec media-stream-pod -c time-machine -- jenkins-plugin-cli
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8081 8000
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f node-config.toml -p '{""spec"":{""containers"":[{""name"":""container-name"", ""resources"":{""limits"":{""cpu"":""200m""}}}]}'"
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8084 --target-port=330600
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/cdn-service-pod
"If the deployment named backend-service-replicaset's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/backend-service-replicaset
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=star-cluster
"Delete pods and services with same names ""analytics"" and ""chat-app""","kubectl delete pod,service analytics chat-app"
Create a job with a command,kubectl create job audit-job --image=jenkins -- java -jar /usr/share/jenkins/jenkins.war
"Listen on port 5000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5000:3000
Set deployment database-deployment's service account to tiller,kubectl set serviceaccount deployment database-deployment tiller
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=9091:3001
Describe a node,kubectl describe nodes iot-node-11.iot-edge.local
Display only the most recent 3 lines of output in pod backend-pod,kubectl logs --tail=3 backend-pod
"Get output from running 'python --version' command from the first pod of the service search-service, using the first container by default",kubectl exec svc/search-service -- python --version
Create a deployment named web that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 8000,kubectl create deployment web --image=docker.elastic.co/elasticsearch/elasticsearch --port=8000
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n monitoring
Add a taint with key 'dedicated' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  dedicated=db-node-7:PreferNoSchedule
"Create a single ingress called 'myapp-ingress' that directs requests to foo.com/module to svc # svc1:8082 with a tls secret ""my-cert""","kubectl create ingress myapp-ingress --rule=""foo.com/module=svc1:8082,tls=my-cert"""
Update pod 'cdn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods cdn unhealthy-
Create a cron job with a command,"kubectl create cronjob log-rotation --image=node --schedule=""*/1 * * * *"" -- node"
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=8088 --target-port=543200
"Listen on port 6379 locally, forwarding to 8080 in the pod",kubectl port-forward pod/e-commerce-pod 6379:8080
Create a new config map named api-config from the key=value pairs in the file,kubectl create configmap api-config --from-file=path/to/settings
View the last-applied-configuration annotations by file in JSON,kubectl apply view-last-applied -f pod.yaml -o json
Display only the most recent 31 lines of output in pod auth-service-pod,kubectl logs --tail=31 auth-service-pod
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n kube-node-lease
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=batch
"Listen on port 8081 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8081:8888
Create a copy of log-aggregator-pod adding a debug container and changing container images,"kubectl debug log-aggregator-pod -it --copy-to=debug-image-1 --image=debian --set-image=cache=redis:alpine,database=mysql:5.7"
Display only the most recent 43 lines of output in pod database-pod,kubectl logs --tail=43 database-pod
Begin streaming the logs of the astro-container container in pod mypod,kubectl logs -f -c astro-container mypod
Create a job with a command,kubectl create job indexing --image=wordpress -- wp
Update pod 'payment' with the label 'app' and the value 'myapp',kubectl label pods payment app=myapp
"Listen on port 8000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8000:9090
Remove from node 'dev-node-4' all the taints with key 'datacenter',kubectl taint nodes dev-node-4 datacenter-
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/backend-pod 5432 5000
Return snapshot logs from all containers in pods defined by label role=database,kubectl logs -l role=database --all-containers=true
Get output from running the 'jenkins --version' command in code-explorer from pod analytics-pod,kubectl exec analytics-pod -c code-explorer -- jenkins --version
Create a deployment named jenkins that runs the ubuntu image and expose port 8000,kubectl create deployment jenkins --image=ubuntu --port=8000
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/vpn-service-pod
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 9000,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=9000
"Listen on port 6379 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 6379:9090
Update a single-container pod's image version (tag) to v4,kubectl get pod gateway-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
Add a taint with key 'dedicated' on nodes having label role=database,kubectl taint node -l role=database  dedicated=web-node-8:PreferNoSchedule
Update pod 'gateway' with the label 'release' and the value 'v1.0',kubectl label pods gateway release=v1.0
Restart a daemon set,kubectl rollout restart daemonset/development
"Listen on port 8080 locally, forwarding to 9090 in the pod",kubectl port-forward pod/mypod 8080:9090
"Update pod 'cdn' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods cdn monitoring-tool='Prometheus'
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=conf=/path/to/settings/file1.txt --from-file=data=/path/to/profiles/file2.txt
Create a deployment named jenkins that runs the jenkins image and expose port 8082,kubectl create deployment jenkins --image=jenkins --port=8082
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/frontend-pod 5432 3000
Start a node pod and let the container expose port 3306,kubectl run hazelcast --image=node --port=3306
"Create a single ingress called 'rontend-ingress' that directs requests to testing.com/example to svc # svc1:8181 with a tls secret ""my-cert""","kubectl create ingress rontend-ingress --rule=""testing.com/example=svc1:8181,tls=my-cert"""
Return snapshot of previous terminated rocket-ranger container logs from pod vpn-service-pod,kubectl logs -p -c rocket-ranger vpn-service-pod
"Update pod 'gateway' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods gateway custom-label='my-custom-value'
Start a jenkins pod and let the container expose port 9090,kubectl run hazelcast --image=jenkins --port=9090
"Create a cluster role named ""foo"" with SubResource specified","kubectl create clusterrole foo --verb=use,get,patch --resource=nodes,nodes/proxy"
Set deployment user-management-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment user-management-deployment gitlab-runner
"Get output from running 'irb' command from the first pod of the deployment mydeployment, using the first container by default",kubectl exec deploy/mydeployment -- irb
Create a job with a command,kubectl create job data-migration-job --image=ubuntu -- docker run -it ubuntu
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.app-2-context.cluster galaxy-cluster
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=8082 --target-port=900000
Get output from running the 'gem --version' command in cosmic-container from pod api-service-pod,kubectl exec api-service-pod -c cosmic-container -- gem --version
Update pod 'security' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods security unhealthy-
Resume an already paused deployment,kubectl rollout resume deployment/namespace-3
Update pod 'chat-app' with the label 'role' and the value 'frontend',kubectl label pods chat-app role=frontend
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8080 8088
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=networking.k8s.io
Start a confluentinc/cp-kafka pod and let the container expose port 9091,kubectl run hazelcast --image=confluentinc/cp-kafka --port=9091
Set deployment web-app-deployment's service account to default,kubectl set serviceaccount deployment web-app-deployment default
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/chat-app-pod
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/security-service-pod 5000:6379
Print the supported API resources sorted by a column,kubectl api-resources --sort-by=storageVersionHash
"Delete pods and services with same names ""chat-app"" and ""chat-app""","kubectl delete pod,service chat-app chat-app"
Add a taint with key 'datacenter' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  datacenter=storage-node-13:PreferNoSchedule
"Listen on port 6379 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 6379:8888
"If the deployment named foo's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/foo
Restart a deployment,kubectl rollout restart deployment/services
Create a deployment named jenkins that runs the ethereum/client-go image and expose port 6379,kubectl create deployment jenkins --image=ethereum/client-go --port=6379
Add to node 'db-node-7' a taint with key 'special' and no value,kubectl taint nodes db-node-7 special:NoSchedule
Start a node pod and let the container expose port 8083,kubectl run hazelcast --image=node --port=8083
"Listen on port 5000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5000:8888
Get output from running pod monitoring-pod; use the 'kubectl.kubernetes.io/default-container' annotation # for selecting the container to be attached or the first container in the pod will be chosen,kubectl attach monitoring-pod
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/kube-system-config deployment/log-aggregator-deployment
"Start a mongo pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mongo --overrides='{ ""apiVersion"": ""v2.1.0"", ""spec"": { ... } }'"
Add a taint with key 'disktype' on nodes having label team=devops,kubectl taint node -l team=devops  disktype=kube-master-9:PreferNoSchedule
Create a new secret named tls-certificate-secret from an env file,kubectl create secret generic tls-certificate-secret --from-env-file=path/to/settings.env
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 6379 6379
Start a amazonlinux pod and let the container expose port 9092,kubectl run hazelcast --image=amazonlinux --port=9092
"Update pod 'security' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security contact-email=support@example.com
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml release-notes='https://example.com/release-notes/v2.5.1'
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=5001 --target-port=543200
"Listen on port 5000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5000:8081
Add a taint with key 'environment' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  environment=db-node-7:PreferNoSchedule
Create a new config map named app-config-dev from an env file,kubectl create configmap app-config-dev --from-env-file=path/to/properties.env
"Delete pods and services with same names ""api"" and ""payment""","kubectl delete pod,service api payment"
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node worker-node-3 -p $'data:\n key: new-value'
Update deployment 'notification-handler-deployment' with a new environment variable,kubectl set env deployment/notification-handler-deployment DB_HOST=localhost
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 3000 3000
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/kube-system-config deployment/web-app-deployment
"Force replace, delete and then re-create the resource",kubectl replace --force -f ./pod.json
"Create a single ingress called 'website-ingress' that directs requests to website.com/input to svc # svc1:6379 with a tls secret ""my-cert""","kubectl create ingress website-ingress --rule=""website.com/input=svc1:6379,tls=my-cert"""
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/postgres
Create a job with a command,kubectl create job backup --image=golang -- go run hello.go
"If the deployment named frontend-rs's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/frontend-rs
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8888 5000
Set the resource request and limits for all containers in node,"kubectl set resources deployment node --limits=cpu=200m,memory=512Mi --requests=cpu=2,memory=64Mi"
"Listen on port 8888 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8888:5000
Create an ingress with TLS enabled using the default ingress certificate and different path types,"kubectl create ingress ingtls --class=default \
--rule=""website.com/=svc:https,tls"" \
--rule=""website.com/path/subpath*=othersvc:3001"""
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/security-service-pod
"Create a role binding for jane.doe, bob.smith, and developers using the bar cluster role",kubectl create rolebinding bar --clusterrole=bar --user=jane.doe --user=bob.smith --group=developers
"Update pod 'security' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security env=staging
Update pod 'monitoring' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods monitoring env-
Set deployment authentication-service-deployment's service account to kube-dns,kubectl set serviceaccount deployment authentication-service-deployment kube-dns
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 5432 5432
Display only the most recent 43 lines of output in pod mypod,kubectl logs --tail=43 mypod
"Get output from running 'elasticsearch --version' command from the first pod of the service backend-service, using the first container by default",kubectl exec svc/backend-service -- elasticsearch --version
Create a deployment named proxy that runs the postgres image and expose port 5000,kubectl create deployment proxy --image=postgres --port=5000
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/cdn-service-pod
Copy :/tmp/foo_dir local directory to /tmp/bar_dir_dir in a remote pod in the default namespace,kubectl cp :/tmp/foo_dir task-processor-pod-17:/tmp/bar_dir_dir
Update pod 'security' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods security release-
Embed certificate authority data for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --embed-certs --certificate-authority=~/.kube/e2e/kubernetes.ca.crt
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=testing-cluster
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""web-apps"" API group",kubectl get deployments.beta-1.0.web-apps -o yaml
"Create a service for a replicated centos, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc centos --port=9090 --target-port=808000
Create a new ExternalName service named external-caching-service,kubectl create service externalname external-caching-service --external-name illustration-shop.shop
"Listen on a random port locally, forwarding to 8000 in the pod",kubectl port-forward pod/web-app-pod :8000
Rename the context 'prod-context' to 'team-alpha-context' in your kubeconfig file,kubectl config rename-context prod-context team-alpha-context
List a single pod in YAML output format,kubectl get -o yaml pod proxy-server-pod
Create a new secret named git-credentials-secret from an env file,kubectl create secret generic git-credentials-secret --from-env-file=path/to/profiles.env
"Listen on port 6379 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 6379:3000"
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=8888 --target-port=808200
"Listen on port 8080 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8080:8000"
Describe a pod,kubectl describe pods/ingress-controller
"Run a proxy to the Kubernetes API server on port 8082, serving static content from ./local/www/",kubectl proxy --port=8082 --www=./local/www/
Begin streaming the logs from all containers in pods defined by label namespace=mynamespace,kubectl logs -f -l namespace=mynamespace --all-containers=true
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=properties=/path/to/preferences/file1.txt --from-file=key1=/path/to/configurations/file2.txt
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 3000 5000
"Delete pods and services with same names ""auth"" and ""backend""","kubectl delete pod,service auth backend"
Create a new service account named elasticsearch,kubectl create serviceaccount elasticsearch
Get output from running pod proxy-server-pod; use the 'kubectl.kubernetes.io/default-container' annotation # for selecting the container to be attached or the first container in the pod will be chosen,kubectl attach proxy-server-pod
Create a new secret named password-secret using a combination of a file and a literal,kubectl create secret generic password-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""internal-apps"" API group",kubectl get deployments.alpha-2.0.internal-apps -o yaml
"Set a deployments mysql container cpu limits to ""3"" and memory to ""64Mi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=3,memory=64Mi"
Add a taint with key 'special' on nodes having label release=beta,kubectl taint node -l release=beta  special=app-node-6:PreferNoSchedule
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=staging-cluster
Embed certificate authority data for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --embed-certs --certificate-authority=~/.kube/sun-cluster/kubernetes.ca.crt
"Update pod 'web' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web git-repo='https://github.com/example/my-app'
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/api-config deployment/search-engine-deployment
Return snapshot logs from container email-server-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/email-server-deployment -c api-service-pod-1
Set deployment api-server-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment api-server-deployment kube-scheduler
"Listen on port 5432 locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod 5432:8081
"Listen on port 8000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8000:5000"
Begin streaming the logs of the mycontainer container in pod web-app-pod,kubectl logs -f -c mycontainer web-app-pod
"Update pod 'auth' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods auth alert-email='alerts@example.com'
Embed certificate authority data for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --embed-certs --certificate-authority=~/.kube/app-cluster/kubernetes.ca.crt
Create a job with a command,kubectl create job deployment-rollout-job --image=ethereum/client-go -- geth
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""custom-deployments"" API group",kubectl get deployments.alpha-2.0.custom-deployments -o json
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 6379 8000
Get output from quantum-quark from pod backend-pod,kubectl attach backend-pod -c quantum-quark
Embed certificate authority data for the star-cluster cluster entry,kubectl config set-cluster star-cluster --embed-certs --certificate-authority=~/.kube/cloud-cluster/kubernetes.ca.crt
Update image of all containers of daemonset nginx to 'debian:11.0',kubectl set image daemonset nginx *=debian:11.0
Update image of all containers of daemonset services to 'mongo:5.0.2',kubectl set image daemonset services *=mongo:5.0.2
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-config-prod deployment/analytics-platform-deployment
Set deployment database-deployment's service account to flux,kubectl set serviceaccount deployment database-deployment flux
"Listen on port 8081 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8081:8088"
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.service-account-context.cluster cloud-cluster
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp kube-proxy/metrics-exporter-pod-10:~/.config/kube /tmp/bar_dir
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kube-public/backend-pod-13:/tmp/foo /tmp/bar_dir
"Create a cluster role name ""foo"" with NonResourceURL specified","kubectl create clusterrole ""foo"" --verb=use --non-resource-url=/healthz"
"Listen on port 5000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/api-service-pod 5000:5432
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/global-config deployment/api-server-deployment
Create a job with a command,kubectl create job security-scan-job --image=ethereum/client-go -- geth version
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/frontend-deployment REDIS_HOST=redis-server -o yaml
Display only the most recent 31 lines of output in pod api-service-pod,kubectl logs --tail=31 api-service-pod
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/docker-registry"
Create a new secret named ldap-credentials-secret with keys for each file in folder bar,kubectl create secret generic ldap-credentials-secret --from-file=path/to/settings
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8000 8080
"If the deployment named mysql's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/mysql
Get output from running the 'redis-cli' command in mycontainer from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c mycontainer -- redis-cli
Get output from running the 'dotnet' command in cosmic-container from pod security-service-pod,kubectl exec security-service-pod -c cosmic-container -- dotnet
Describe one context in your kubeconfig file,kubectl config get-contexts edge-context
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""experimental-apps"" API group",kubectl get deployments.hotfix-1.1.2.experimental-apps -o json
Get output from running the 'php --version' command in time-machine from pod monitoring-pod,kubectl exec monitoring-pod -c time-machine -- php --version
Create an ingress with TLS enabled using the default ingress certificate and different path types,"kubectl create ingress ingtls --class=default \
--rule=""foo.com/=svc:https,tls"" \
--rule=""site.com/path/subpath*=othersvc:3000"""
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/mypod :8081
Add a taint with key 'hardware' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  hardware=dev-node-4:PreferNoSchedule
"Auto scale a replication controller ""api"", with the number of pods between 1 and 6, target CPU utilization at 40%",kubectl autoscale rc api --max=6 --cpu-percent=40
Return snapshot logs from pod chat-app-pod with only one container,kubectl logs chat-app-pod
Print the supported namespaced resources,kubectl api-resources --singularNamespaced=true
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/search-service"
Remove from node 'gpu-node-12' all the taints with key 'datacenter',kubectl taint nodes gpu-node-12 datacenter-
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/gateway-service"
Add a taint with key 'special' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  special=prod-node-5:PreferNoSchedule
"Listen on port 8080 locally, forwarding to 5000 in the pod",kubectl port-forward pod/web-app-pod 8080:5000
Create a copy of payment-gateway-pod changing all container images to mysql,kubectl debug payment-gateway-pod --copy-to=debug-image-web --set-image=*=mysql
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""alpha-apps"" API group",kubectl get deployments.rc-1.1.0.alpha-apps -o json
Create a new NodePort service named e-commerce-nodeport,kubectl create service nodeport e-commerce-nodeport --tcp=9091:27017
Update pod 'security' with the label 'env' and the value 'production',kubectl label pods security env=production
Update pod 'foo' only if the resource is unchanged from version 1,kubectl annotate pods foo description='my frontend running nginx' --resource-version=1
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=my-k8s-cluster
Rename the context 'prod-context' to 'app-1-context' in your kubeconfig file,kubectl config rename-context prod-context app-1-context
Begin streaming the logs of the quantum-quark container in pod proxy-service-pod,kubectl logs -f -c quantum-quark proxy-service-pod
Update pod 'monitoring' with the label 'tier' and the value 'frontend',kubectl label pods monitoring tier=frontend
Add a taint with key 'app' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  app=backup-node-14:PreferNoSchedule
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=3000:5001
Return snapshot logs from first container of a job named log-analysis-job,kubectl logs job/log-analysis-job
Update image of all containers of daemonset prod to 'amazonlinux:2',kubectl set image daemonset prod *=amazonlinux:2
Update pod 'proxy-server' with the label 'tier' and the value 'backend',kubectl label pods proxy-server tier=backend
Create a copy of email-service-pod adding a debug container and changing container images,"kubectl debug email-service-pod -it --copy-to=debug-image-web --image=debian --set-image=worker=my-custom-worker:1.2.3,worker=my-custom-worker:1.2.3"
"Listen on port 5000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/analytics-pod 5000:8088
Get output from quantum-quark from pod auth-service-pod,kubectl attach auth-service-pod -c quantum-quark
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/log-config deployment/frontend-deployment
"Listen on port 8000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/analytics-service 8000:https
Copy :/tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp :/tmp/foo kube-public/front-end-pod-12:/tmp/bar
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=80 --target-port=543200
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/api-service-pod 9090:8080
Get output from code-explorer from pod backend-pod,kubectl attach backend-pod -c code-explorer
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/kube-system-config deployment/mydeployment
"Delete pods and services with same names ""foo"" and ""email""","kubectl delete pod,service foo email"
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/payment-gateway-pod
"Create a role named ""bar"" with ResourceName specified",kubectl create role bar --verb=watch --resource=pods --resource-name=error-logger --resource-name=machine-learning
Remove from node 'monitoring-node-15' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes monitoring-node-15 special:NoSchedule-
Create a copy of proxy-server-pod changing all container images to mongo,kubectl debug proxy-server-pod --copy-to=debug-image-memcached --set-image=*=mongo
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=cloud-cluster
"Listen on port 5432 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 5432:6379
"Update pod 'database' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database criticality=high
Create a job with a command,kubectl create job data-migration-job --image=wordpress -- apache2ctl -D FOREGROUND
Add a taint with key 'special' on nodes having label release=beta,kubectl taint node -l release=beta  special=dev-node-4:PreferNoSchedule
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.cloud-context.cluster app-cluster
Rename the context 'cluster-2-context' to 'edge-context' in your kubeconfig file,kubectl config rename-context cluster-2-context edge-context
Get output from cyber-sleuth from pod security-service-pod,kubectl attach security-service-pod -c cyber-sleuth
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/parameters/file2.txt
Create a job with a command,kubectl create job log-processing-job --image=alpine -- apk add curl
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/monitoring-config deployment/monitoring-stack-deployment
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/mypod 8080:6379
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/backend-pod 6379:8081
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/e-commerce-pod :8080
"Check to see if I can get the job named ""backup-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/backup-job -n cert-manager
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8088 8088
"Update pod 'web' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods web expiration-date='2024-12-31'
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=e2e
Return snapshot of previous terminated stardust-shuttle container logs from pod cdn-service-pod,kubectl logs -p -c stardust-shuttle cdn-service-pod
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/media-stream-pod
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod chat-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach chat-app-pod -c astro-container -i -t
Create a new ClusterIP service named monitoring-service-clusterip,kubectl create service clusterip monitoring-service-clusterip --tcp=8010:8084
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/web-app-pod 3000:3000
Start the postgres pod using a different command and custom arguments,kubectl run nginx --image=postgres --command -- <cmd> <arg1> ... <argN>
Update pod 'web' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods web env-
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node backup-node-14 -p $'spec:\n unschedulable: true'
"Get output from running 'wp' command from the first pod of the service notification-service, using the first container by default",kubectl exec svc/notification-service -- wp
"Listen on port 8080 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8080:8088
Add to node 'dev-node-4' a taint with key 'datacenter' and no value,kubectl taint nodes dev-node-4 datacenter:NoSchedule
Create a copy of vpn-service-pod adding a debug container and changing container images,"kubectl debug vpn-service-pod -it --copy-to=debug-image-app --image=debian --set-image=logger=logging-app:debug,proxy=nginx:1.21"
"Listen on port 5000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 5000:8088"
"Listen on port 8081 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8081:9090"
Add a taint with key 'datacenter' on nodes having label myLabel,kubectl taint node -l myLabel  datacenter=kube-master-9:PreferNoSchedule
"Get output from running the 'yum install -y wget' command from pod payment-gateway-pod, using the first container by default",kubectl exec payment-gateway-pod -- yum install -y wget
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/queue-processing-job -n kube-public
Set deployment gateway-deployment's service account to flux,kubectl set serviceaccount deployment gateway-deployment flux
Create a job with a command,kubectl create job cleanup --image=php -- composer --version
"Get output from running the 'mysql' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- mysql
Set the resource request and limits for all containers in wordpress,"kubectl set resources deployment wordpress --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=128Mi"
Display only the most recent 53 lines of output in pod vpn-service-pod,kubectl logs --tail=53 vpn-service-pod
Update pod 'web' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods web release-
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=9000 --target-port=900000
"Update pod 'media-stream' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods media-stream criticality='high'
Copy /tmp/foo_dir local directory to :/tmp/bar_dir in a remote pod in the default namespace,kubectl cp /tmp/foo_dir backend-pod-13::/tmp/bar_dir
Create a new config map named db-config from an env file,kubectl create configmap db-config --from-env-file=path/to/data.env
Roll back to daemonset revision 1,kubectl rollout undo daemonset/prod --to-revision=1
"Listen on port 8080 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8080:8888
"Delete pods and services with same names ""cdn"" and ""foo""","kubectl delete pod,service cdn foo"
Print the supported API resources sorted by a column,kubectl api-resources --sort-by=shortnames
"Define new exec auth plugin args for the ""dev-user"" entry",kubectl config set-credentials dev-user --exec-arg=arg1 --exec-arg=arg2
Create a deployment named drupal that runs the mysql image,kubectl create deployment drupal --image=mysql
View the rollout history of a deployment,kubectl rollout history deployment/namespace-3
Create a new ExternalName service named external-cloud-storage-service,kubectl create service externalname external-cloud-storage-service --external-name test-site.org
Copy /tmp/foo_dir from a remote pod to /tmp/bar locally,kubectl cp kube-flannel/load-balancer-pod-9:/tmp/foo_dir /tmp/bar
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod e-commerce-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach e-commerce-pod -c cosmic-container -i -t
Copy ~/.config/kube_dir local directory to /tmp/bar_dir in a remote pod in the default namespace,kubectl cp ~/.config/kube_dir image-resizer-pod-20:/tmp/bar_dir
Get the documentation of a specific field of a resource,kubectl explain resource=pods.spec.template
Create a copy of e-commerce-pod changing all container images to jenkins,kubectl debug e-commerce-pod --copy-to=debug-image-memcached --set-image=*=jenkins
"Create a single ingress called 'api-ingress' that directs requests to foo.com/module to svc # svc1:7000 with a tls secret ""my-cert""","kubectl create ingress api-ingress --rule=""foo.com/module=svc1:7000,tls=my-cert"""
Roll back to daemonset revision 3,kubectl rollout undo daemonset/development --to-revision=3
Add a taint with key 'app' on nodes having label app=web-app,kubectl taint node -l app=web-app  app=monitoring-node-15:PreferNoSchedule
Create a new secret named jwt-secret from an env file,kubectl create secret generic jwt-secret --from-env-file=path/to/configurations.env
Create a job with a command,kubectl create job cleanup --image=node -- node --version
Remove from node 'db-node-7' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes db-node-7 special:NoSchedule-
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.team-alpha-context.cluster cluster-beta
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/chat-app-pod 8088:8000
Edit the job 'cleanup-job' in JSON using the v1 API format,kubectl edit job.v1.batch/cleanup-job -o json
Get output from running the 'wp' command in rocket-ranger from pod database-pod,kubectl exec database-pod -c rocket-ranger -- wp
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=galaxy-cluster
Delete a pod using the type and name specified in conf.json,kubectl delete -f ./conf.json
List a single pod in JSON output format,kubectl get -o json pod log-aggregator-pod
Set deployment api-server-deployment's service account to jenkins,kubectl set serviceaccount deployment api-server-deployment jenkins
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/analytics-pod 8088:8000
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=8443 --target-port=700000
"Wait for the pod ""proxy-server-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/proxy-server-pod
Create a copy of vpn-service-pod changing all container images to alpine,kubectl debug vpn-service-pod --copy-to=debug-image-web --set-image=*=alpine
"Get output from running the 'bash' command from pod web-app-pod, using the first container by default",kubectl exec web-app-pod -- bash
"Enable the Google Compute Platform auth provider for the ""deploy-bot"" entry",kubectl config set-credentials deploy-bot --auth-provider=gcp
Create a job with a command,kubectl create job testing --image=mysql -- mysqld
"Listen on port 8888 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8888:5432"
"Listen on port 8088 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8088:8080
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/web-service 9090:https
"Set a deployments centos container cpu limits to ""500m"" and memory to ""128Mi""","kubectl set resources deployment centos -c=nginx --limits=cpu=500m,memory=128Mi"
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/analytics-pod 3000 8080
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""external-apps"" API group",kubectl get deployments.v2.1.0.external-apps -o json
Return snapshot of previous terminated warp-drive container logs from pod backend-pod,kubectl logs -p -c warp-drive backend-pod
"Delete pods and services with same names ""cdn"" and ""email""","kubectl delete pod,service cdn email"
Set deployment proxy-service-deployment's service account to metrics-server,kubectl set serviceaccount deployment proxy-service-deployment metrics-server
"Update pod 'log-aggregator' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator compliance-level=PCI-DSS
Create a deployment named registry that runs the ubuntu image and expose port 8888,kubectl create deployment registry --image=ubuntu --port=8888
"Set a deployments php container cpu limits to ""100m"" and memory to ""2Gi""","kubectl set resources deployment php -c=nginx --limits=cpu=100m,memory=2Gi"
Get output from running the 'redis-server --version' command in stardust-shuttle from pod monitoring-pod,kubectl exec monitoring-pod -c stardust-shuttle -- redis-server --version
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8088 8888
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.testing-context.cluster staging-cluster
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/log-aggregator-pod 8000:8088
"Create a single ingress called 'private-ingress' that directs requests to site.com/input to svc # svc1:3306 with a tls secret ""my-cert""","kubectl create ingress private-ingress --rule=""site.com/input=svc1:3306,tls=my-cert"""
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/api-service"
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""external-apps"" API group",kubectl get deployments.beta-1.0.external-apps -o json
Add a taint with key 'workload' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  workload=dev-node-4:PreferNoSchedule
Begin streaming the logs of the nebula-navigator container in pod chat-app-pod,kubectl logs -f -c nebula-navigator chat-app-pod
Start a python pod and let the container expose port 6379,kubectl run hazelcast --image=python --port=6379
"Delete pods and services with same names ""security"" and ""web""","kubectl delete pod,service security web"
Create a new service account named tekton,kubectl create serviceaccount tekton
Return snapshot logs from container order-processing-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/order-processing-deployment -c proxy-server-pod-1
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/user-service"
Return snapshot of previous terminated cyber-sleuth container logs from pod cdn-service-pod,kubectl logs -p -c cyber-sleuth cdn-service-pod
"Scale a resource identified by type and name specified in ""pod.json"" to 5",kubectl scale --replicas=5 -f pod.json
Update image of all containers of daemonset app-v2 to 'redis:6.2.5',kubectl set image daemonset app-v2 *=redis:6.2.5
"Listen on port 8888 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8888:6379
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/database-indexing-job -n kube-node-lease
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/database-indexing-job -n default
Get output from running the 'php --version' command in nebula-navigator from pod web-app-pod,kubectl exec web-app-pod -c nebula-navigator -- php --version
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/proxy-service"
Add a taint with key 'datacenter' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  datacenter=gpu-node-12:PreferNoSchedule
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.client-2-context.cluster moon-cluster
Delete the deploy-bot user,kubectl config delete-user deploy-bot
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-secrets --prefix=MYSQL_ deployment/mydeployment
Start a ruby pod and let the container expose port 27017,kubectl run hazelcast --image=ruby --port=27017
"Update pod 'media-stream' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream git-repo='https://github.com/example/my-app'
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=properties=/path/to/settings/file1.txt --from-file=key1=/path/to/profiles/file2.txt
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json SLA='99.9% uptime'
Describe one context in your kubeconfig file,kubectl config get-contexts client-1-context
"Update pod 'web' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods web security-scan-status='pass'
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""api-v1"" API group",kubectl get deployments.v1.0.0.api-v1 -o json
Return snapshot of previous terminated nebula-navigator container logs from pod gateway-pod,kubectl logs -p -c nebula-navigator gateway-pod
Get output from running the 'redis-cli' command in code-explorer from pod e-commerce-pod,kubectl exec e-commerce-pod -c code-explorer -- redis-cli
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/db-config deployment/notification-handler-deployment
Display only the most recent 20 lines of output in pod api-service-pod,kubectl logs --tail=20 api-service-pod
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/user-service"
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/log-config deployment/log-aggregator-deployment
Return snapshot of previous terminated lunar-launcher container logs from pod gateway-pod,kubectl logs -p -c lunar-launcher gateway-pod
Start a redis pod and let the container expose port 8181,kubectl run hazelcast --image=redis --port=8181
Roll back to daemonset revision 5,kubectl rollout undo daemonset/test --to-revision=5
Update pod 'payment' with the label 'tier' and the value 'database',kubectl label pods payment tier=database
Update pod 'web' with the label 'tier' and the value 'frontend',kubectl label pods web tier=frontend
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/global-config deployment/scheduler-app-deployment
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.user-a-context.cluster dev-cluster
Set deployment payment-processor-deployment's service account to vault,kubectl set serviceaccount deployment payment-processor-deployment vault
"Delete pods and services with same names ""database"" and ""vpn""","kubectl delete pod,service database vpn"
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.testing-context.cluster cluster-beta
Create a new ExternalName service named external-file-storage-service,kubectl create service externalname external-file-storage-service --external-name museum-example.museum
Create a new ClusterIP service named monitoring-service-clusterip,kubectl create service clusterip monitoring-service-clusterip --tcp=3000:8888
Import environment from a secret,kubectl set env --from=secret/api-key-secret deployment/backend-microservice-deployment
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8000 8081
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/frontend-pod :8080
"Update pod 'foo' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods foo security-scan-status='pass'
"Start a php pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=php --overrides='{ ""apiVersion"": ""rc-1.1.0"", ""spec"": { ... } }'"
Add a taint with key 'hardware' on nodes having label myLabel,kubectl taint node -l myLabel  hardware=db-node-7:PreferNoSchedule
Describe pods by label customer=acme-corp,kubectl describe po -l customer=acme-corp
Create a new secret named payment-gateway-secret from an env file,kubectl create secret generic payment-gateway-secret --from-env-file=path/to/properties.env
"Listen on port 8888 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8888:8081"
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""api-v1"" API group",kubectl get deployments.v3.0.0.api-v1 -o json
Update pod 'analytics' with the label 'component' and the value 'worker',kubectl label pods analytics component=worker
Create a copy of proxy-server-pod changing all container images to nginx,kubectl debug proxy-server-pod --copy-to=my-debugger --set-image=*=nginx
Create a job with a command,kubectl create job log-collection --image=postgres -- postgres
"Update pod 'cdn' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn backup-strategy='daily backups'
Update deployment 'email-server-deployment' with a new environment variable,kubectl set env deployment/email-server-deployment MAX_CONNECTIONS=100
"Listen on port 6379 locally, forwarding to 5000 in the pod",kubectl port-forward pod/web-app-pod 6379:5000
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod vpn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach vpn-service-pod -c rocket-ranger -i -t
Add a taint with key 'zone' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  zone=web-node-8:PreferNoSchedule
"Listen on port 8081 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8081:3000"
"Remove exec auth plugin environment variables for the ""system"" entry",kubectl config set-credentials system --exec-env=var-to-remove-
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8000 5432
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/app-config deployment/database-deployment
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/monitoring-config deployment/payment-processor-deployment
Create a new secret named ssh-key-secret with keys for each file in folder bar,kubectl create secret generic ssh-key-secret --from-file=path/to/data
"Update pod 'media-stream' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods media-stream monitoring-tool='Prometheus'
"Wait for the pod ""mypod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/mypod
"Update pod 'web' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods web app-version='2.5.1'
Create a new secret named aws-credentials-secret with keys for each file in folder bar,kubectl create secret generic aws-credentials-secret --from-file=path/to/configs
"Listen on port 8088 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8088:9090
Create a new secret named oauth-secret with keys for each file in folder bar,kubectl create secret generic oauth-secret --from-file=path/to/configs
"Start a ubuntu pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ubuntu --overrides='{ ""apiVersion"": ""legacy-1.0.0"", ""spec"": { ... } }'"
Create a new NodePort service named web-app-nodeport,kubectl create service nodeport web-app-nodeport --tcp=8088:27017
Embed certificate authority data for the app-cluster cluster entry,kubectl config set-cluster app-cluster --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
Begin streaming the logs of the mycontainer container in pod security-service-pod,kubectl logs -f -c mycontainer security-service-pod
"List all allowed actions in namespace ""kube-system""",kubectl auth can-i --list --namespace=kube-system
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8888 8888
Create a deployment named drupal that runs the ethereum/client-go image with 7 replicas,kubectl create deployment drupal --image=ethereum/client-go --replicas=7
Add a taint with key 'cpu-type' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  cpu-type=app-node-6:PreferNoSchedule
"Delete pods and services with same names ""log-aggregator"" and ""vpn""","kubectl delete pod,service log-aggregator vpn"
"Listen on port 8000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8000:5432
Create a new config map named app-config based on folder parameters,kubectl create configmap app-config --from-file=path/to/parameters
Add a taint with key 'datacenter' on nodes having label service=auth,kubectl taint node -l service=auth  datacenter=dev-node-4:PreferNoSchedule
Copy /tmp/foo_dir local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo_dir kube-server/ingress-controller-pod-8:/etc/kubernetes
"Listen on port 8000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/api-service-pod 8000:8888
Create a new ExternalName service named external-notification-service,kubectl create service externalname external-notification-service --external-name travel-sample.travel
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/log-aggregator-deployment -c proxy-service-pod-1
Create a new secret named my-secret from an env file,kubectl create secret generic my-secret --from-env-file=path/to/parameters.env
"Check to see if I can get the job named ""report-generation-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/report-generation-job -n logging
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name news-demo.news
Update pod 'monitoring' with the label 'tier' and the value 'database',kubectl label pods monitoring tier=database
"Update pod 'log-aggregator' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator deployment-script='https://example.com/deploy.sh'
"Update pod 'api' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api backup-strategy='daily backups'
Update deployment 'database-deployment' with a new environment variable,kubectl set env deployment/database-deployment PORT=8080
Roll back to daemonset revision 5,kubectl rollout undo daemonset/services --to-revision=5
Return snapshot logs from container email-server-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/email-server-deployment -c web-app-pod-1
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/env-vars deployment/mydeployment
Create a copy of backend-pod adding a debug container and changing container images,"kubectl debug backend-pod -it --copy-to=debug-image-web --image=debian --set-image=api=api:v2,worker=my-custom-worker:1.2.3"
"Create a service for a replication controller identified by type and name specified in ""php-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f php-controller.yaml --port=8000 --target-port=909000
"Listen on port 5000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/analytics-pod 5000:8080
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/ui-config deployment/gateway-deployment
Add a taint with key 'app' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  app=node-1:PreferNoSchedule
"Listen on port 8000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8000:5000
Create a copy of web-app-pod adding a debug container and changing container images,"kubectl debug web-app-pod -it --copy-to=debug-image-memcached --image=debian --set-image=api=api:v2,proxy=nginx:1.21"
Get output from running the 'mysql --version' command in stardust-shuttle from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c stardust-shuttle -- mysql --version
Create a deployment named app that runs the ubuntu image and expose port 7000,kubectl create deployment app --image=ubuntu --port=7000
Display only the most recent 43 lines of output in pod frontend-pod,kubectl logs --tail=43 frontend-pod
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.service-account-context.cluster edge-cluster
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json owner='alice smith'
Start a wordpress pod and let the container expose port 8089,kubectl run hazelcast --image=wordpress --port=8089
"Update pod 'vpn' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn contact-email=support@example.com
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/analytics-pod 8080:8088
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/ui-config deployment/email-server-deployment
Update deployment 'order-processing-deployment' with a new environment variable,kubectl set env deployment/order-processing-deployment REDIS_HOST=redis-server
Start a wordpress pod and let the container expose port 8088,kubectl run hazelcast --image=wordpress --port=8088
Copy ~/.config/kube local file to /etc/kubernetes in a remote pod in namespace,kubectl cp ~/.config/kube prometheus/cache-pod-5:/etc/kubernetes
"Set only the ""client-key"" field on the ""app-operator"" # entry, without touching other values",kubectl config set-credentials app-operator --client-key=~/.kube/admin.key
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/frontend-pod
Copy :/tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp :/tmp/foo kubeapps/front-end-pod-12:/tmp/bar
Update image of all containers of daemonset prod to 'redis:6.2.5',kubectl set image daemonset prod *=redis:6.2.5
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/chat-app-pod 8888:5000
"Listen on port 9090 locally, forwarding to 5000 in the pod",kubectl port-forward pod/e-commerce-pod 9090:5000
Create a deployment named api that runs the node image and expose port 3000,kubectl create deployment api --image=node --port=3000
"Listen on port 9090 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 9090:8080"
Create a deployment named db that runs the hazelcast image,kubectl create deployment db --image=hazelcast/hazelcast
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/web-app-pod 3000:8081
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod 8000:5432
"Start a hazelcast pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=hazelcast/hazelcast --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
"Create a single ingress called 'app-gateway-ingress' that directs requests to site.com/example to svc # svc1:8080 with a tls secret ""my-cert""","kubectl create ingress app-gateway-ingress --rule=""site.com/example=svc1:8080,tls=my-cert"""
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/gateway-pod
Update pod 'proxy' with the label 'env' and the value 'development',kubectl label pods proxy env=development
Add a taint with key 'datacenter' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  datacenter=edge-node-10:PreferNoSchedule
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/golang
"Get output from running 'dotnet' command from the first pod of the service email-service, using the first container by default",kubectl exec svc/email-service -- dotnet
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.dev-context.cluster cluster-beta
Create a deployment named logging that runs the centos image and expose port 8089,kubectl create deployment logging --image=centos --port=8089
Create a new ExternalName service named external-cloud-storage-service,kubectl create service externalname external-cloud-storage-service --external-name news-demo.news
Get output from the first pod of a replica set named kafka,kubectl attach rs/kafka
Set deployment payment-processor-deployment's service account to flux,kubectl set serviceaccount deployment payment-processor-deployment flux
Create a job with a command,kubectl create job scaling-job --image=nginx -- nginx -t
"Scale a resource identified by type and name specified in ""params.json"" to 1",kubectl scale --replicas=1 -f params.json
Create a copy of e-commerce-pod changing all container images to confluentinc/cp-kafka,kubectl debug e-commerce-pod --copy-to=debug-image-api --set-image=*=confluentinc/cp-kafka
"Listen on port 3000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod 3000:8088
"Listen on port 8080 locally, forwarding to 9090 in the pod",kubectl port-forward pod/security-service-pod 8080:9090
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""apps"" API group",kubectl get deployments.dev-2.2.0.apps -o json
Get output from mycontainer from pod chat-app-pod,kubectl attach chat-app-pod -c mycontainer
"Listen on port 8080 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8080:8888"
"Listen on port 9090 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 9090:8080"
Return snapshot of previous terminated code-explorer container logs from pod database-pod,kubectl logs -p -c code-explorer database-pod
Add a taint with key 'environment' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  environment=backup-node-14:PreferNoSchedule
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=e2e
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.edge-context.cluster cloud-cluster
Return snapshot logs from container notification-handler-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/notification-handler-deployment -c security-service-pod-1
"Get output from running 'jenkins-plugin-cli' command from the first pod of the deployment proxy-service-deployment, using the first container by default",kubectl exec deploy/proxy-service-deployment -- jenkins-plugin-cli
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/database-pod
"Create a role binding for user1, user2, and group1 using the view cluster role",kubectl create rolebinding view --clusterrole=view --user=user1 --user=user2 --group=group1
Create a deployment named worker that runs the mcr.microsoft.com/dotnet/core/runtime image with 4 replicas,kubectl create deployment worker --image=mcr.microsoft.com/dotnet/core/runtime --replicas=4
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/api-service-pod 3000:3000
Display only the most recent 3 lines of output in pod vpn-service-pod,kubectl logs --tail=3 vpn-service-pod
Set deployment web-app-deployment's service account to my-service-account,kubectl set serviceaccount deployment web-app-deployment my-service-account
"Listen on port 6379 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 6379:8088
Create a deployment named jenkins-x that runs the mongo image and expose port 8082,kubectl create deployment jenkins-x --image=mongo --port=8082
Display only the most recent 12 lines of output in pod frontend-pod,kubectl logs --tail=12 frontend-pod
Return snapshot logs from container search-engine-deployment-1 of a deployment named database-pod,kubectl logs deployment/search-engine-deployment -c database-pod-1
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-secrets deployment/email-server-deployment
"Delete pods and services with same names ""cdn"" and ""web""","kubectl delete pod,service cdn web"
Add a taint with key 'workload' on nodes having label myLabel,kubectl taint node -l myLabel  workload=gpu-node-12:PreferNoSchedule
"Listen on port 8080 locally, forwarding to 9090 in the pod",kubectl port-forward pod/cdn-service-pod 8080:9090
Set deployment scheduler-app-deployment's service account to prometheus,kubectl set serviceaccount deployment scheduler-app-deployment prometheus
"Get output from running the 'nginx -g ""daemon off;""' command in cosmic-container from pod proxy-server-pod","kubectl exec proxy-server-pod -c cosmic-container -- nginx -g ""daemon off;"""
"Scale a resource identified by type and name specified in ""docker-registry.yaml"" to 3",kubectl scale --replicas=3 -f docker-registry.yaml
"Listen on port 9090 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 9090:6379
Get output from nano-bot from pod cdn-service-pod,kubectl attach cdn-service-pod -c nano-bot
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json team='frontend team'
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json security-scan-status=pass
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/backend-pod 8088 8088
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/analytics-service"
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/configurations/file2.txt
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/gateway-pod
"Check to see if I can get the job named ""cleanup-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/cleanup-job -n kube-system
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/scheduler-app-deployment -c payment-gateway-pod-1
Copy :/tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp cert-manager/load-balancer-pod-9::/tmp/foo /etc/kubernetes
"Get output from running 'ash' command from the first pod of the deployment proxy-service-deployment, using the first container by default",kubectl exec deploy/proxy-service-deployment -- ash
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f kube-proxy-config.yaml -p '{""spec"":{""rules"":[{""http"":{""paths"":[{""path"":""/"",""backend"":{""service"": {""name"": ""new-service""}}}]}}'"
Scale a replica set named 'backend-service-replicaset' to 5,kubectl scale --replicas=5 rs/backend-service-replicaset
"Delete pods and services with same names ""proxy-server"" and ""backend""","kubectl delete pod,service proxy-server backend"
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/mypod 9090:8000
"Delete pods and services with same names ""analytics"" and ""foo""","kubectl delete pod,service analytics foo"
"Get output from running 'psql' command from the first pod of the deployment cache-cluster-deployment, using the first container by default",kubectl exec deploy/cache-cluster-deployment -- psql
"Create a service for a replicated centos using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs centos --port=8082 --target-port=909000
Add to node 'dev-node-4' a taint with key 'dedicated' and no value,kubectl taint nodes dev-node-4 dedicated:NoSchedule
Create a job with a command,kubectl create job database-seeding-job --image=amazonlinux -- bash
"If the deployment named staging-app-rs's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/staging-app-rs
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/frontend-pod 9090:8000
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=galaxy-cluster
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.service-account-context.cluster data-cluster
"Set a deployments node container cpu limits to ""3"" and memory to ""512Mi""","kubectl set resources deployment node -c=nginx --limits=cpu=3,memory=512Mi"
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/api-service"
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name example-domain.com
Get output from running the 'go' command in nebula-navigator from pod backend-pod,kubectl exec backend-pod -c nebula-navigator -- go
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""mobile-apps"" API group",kubectl get deployments.v1.1.0.mobile-apps -o yaml
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/analytics-pod 8000:5000
Embed certificate authority data for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --embed-certs --certificate-authority=~/.kube/kube-cluster-2/kubernetes.ca.crt
"Listen on port 5432 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 5432:8088"
Update image of all containers of daemonset services to 'centos:8.4.2105',kubectl set image daemonset services *=centos:8.4.2105
"Listen on port 8080 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8080:8088
"Set a deployments node container cpu limits to ""3"" and memory to ""4Gi""","kubectl set resources deployment node -c=nginx --limits=cpu=3,memory=4Gi"
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/cdn-service-pod 8888:3000
Create a new secret named app-config-secret with keys for each file in folder bar,kubectl create secret generic app-config-secret --from-file=path/to/data
Display only the most recent 5 lines of output in pod backend-pod,kubectl logs --tail=5 backend-pod
Create an ingress with multiple hosts and the pathType as Prefix,"kubectl create ingress ingress1 --class=default \
--rule=""testing.com/path*=svc:8181"" \
--rule=""bar.com/admin*=svc2:http"""
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 9090 8000
"Listen on port 8000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/api-service-pod 8000:3000
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""third-party-apps"" API group",kubectl get deployments.v1.0.0.third-party-apps -o json
Remove from node 'edge-node-10' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes edge-node-10 cpu-type:NoSchedule-
Create a job with a command,kubectl create job certificate-renewal --image=redis -- redis-server
"Start a node pod and set labels ""app=node"" and ""env=prod"" in the container","kubectl run hazelcast --image=node --labels=""app=node,env=prod"""
Update pod 'auth' with the label 'tier' and the value 'backend',kubectl label pods auth tier=backend
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod api-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach api-service-pod -c time-machine -i -t
Create a job with a command,kubectl create job certificate-renewal --image=node -- node
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/web-app-pod
Describe a node,kubectl describe nodes testing-node-12.testing-lab.internal
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8888 5000
"Listen on port 3000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 3000:9090"
"Set a deployments redis container cpu limits to ""100m"" and memory to ""512Mi""","kubectl set resources deployment redis -c=nginx --limits=cpu=100m,memory=512Mi"
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/order-service"
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/env-vars deployment/gateway-deployment
"Update pod 'auth' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth last-deployment=2023-03-15
"Delete pods and services with same names ""vpn"" and ""payment""","kubectl delete pod,service vpn payment"
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/proxy-service"
"Listen on port 8088 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8088:8080
Set the server field on the cluster-beta cluster to https://1.2.3.4,kubectl config set clusters.cluster-beta.server https://1.2.3.4
"Create a service for a pod analytics-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod analytics-pod --port=8083 --name=frontend
Create a new config map named app-name-config from an env file,kubectl create configmap app-name-config --from-env-file=path/to/data.env
"Update pod 'frontend' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods frontend criticality='high'
Disable cert checking for the dev cluster entry,kubectl config set-cluster prod-cluster --insecure-skip-tls-verify=true
Get output from running the 'irb' command in warp-drive from pod vpn-service-pod,kubectl exec vpn-service-pod -c warp-drive -- irb
Add a taint with key 'special' on nodes having label team=devops,kubectl taint node -l team=devops  special=dev-node-4:PreferNoSchedule
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod frontend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach frontend-pod -c time-machine -i -t
Begin streaming the logs of the stardust-shuttle container in pod api-service-pod,kubectl logs -f -c stardust-shuttle api-service-pod
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/db-config deployment/cache-cluster-deployment
Create a copy of media-stream-pod changing all container images to ubuntu,kubectl debug media-stream-pod --copy-to=debug-image-web --set-image=*=ubuntu
Create a cron job with a command,"kubectl create cronjob database-maintenance --image=node --schedule=""*/1 * * * *"" -- npm --version"
Display only the most recent 12 lines of output in pod payment-gateway-pod,kubectl logs --tail=12 payment-gateway-pod
"Listen on port 8888 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/email-service 8888:https
Begin streaming the logs of the stardust-shuttle container in pod gateway-pod,kubectl logs -f -c stardust-shuttle gateway-pod
Return snapshot logs from pod backend-pod with only one container,kubectl logs backend-pod
Return snapshot logs from pod gateway-pod with multi containers,kubectl logs gateway-pod --all-containers=true
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""v1.0.0"", ""spec"": { ... } }'"
Get output from running the 'mongo' command in warp-drive from pod database-pod,kubectl exec database-pod -c warp-drive -- mongo
Create a copy of monitoring-pod changing all container images to mongo,kubectl debug monitoring-pod --copy-to=my-debugger --set-image=*=mongo
Create a new secret named ssh-key-secret from an env file,kubectl create secret generic ssh-key-secret --from-env-file=path/to/parameters.env
Create a new ClusterIP service named monitoring-service-clusterip,kubectl create service clusterip monitoring-service-clusterip --tcp=8888:27017
Get output from running the 'elasticsearch --version' command in lunar-launcher from pod gateway-pod,kubectl exec gateway-pod -c lunar-launcher -- elasticsearch --version
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config deployment/database-deployment
"Listen on port 8888 locally, forwarding to 8088 in the pod",kubectl port-forward pod/cdn-service-pod 8888:8088
Get output from running the 'mysqld' command in astro-container from pod api-service-pod,kubectl exec api-service-pod -c astro-container -- mysqld
Embed certificate authority data for the web-cluster cluster entry,kubectl config set-cluster web-cluster --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
Return snapshot logs from container database-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/database-deployment -c auth-service-pod-1
Import environment from a secret,kubectl set env --from=secret/database-secret deployment/order-processing-deployment
Add a taint with key 'hardware' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  hardware=kube-master-9:PreferNoSchedule
"Update node 'app-node-6' with a taint with key 'disktype' and value 'ssd' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes app-node-6 disktype=ssd:NoSchedule
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.team-beta-context.cluster web-cluster
"Create a cluster role named ""foo"" that allows user to perform ""list"", ""create"" and ""update"" on pods","kubectl create clusterrole foo --verb=list,create,update --resource=pods"
Create a new secret named cert-manager-secret from an env file,kubectl create secret generic cert-manager-secret --from-env-file=path/to/configurations.env
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8080 8088
Embed certificate authority data for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --embed-certs --certificate-authority=~/.kube/cloud-cluster/kubernetes.ca.crt
List a single pod in YAML output format,kubectl get -o yaml pod database-pod
"Listen on port 8888 locally, forwarding to 9090 in the pod",kubectl port-forward pod/cdn-service-pod 8888:9090
Create a deployment named monitoring that runs the wordpress image and expose port 27017,kubectl create deployment monitoring --image=wordpress --port=27017
Update all containers in all replication controllers in the project to have ENV=prod,kubectl set env rc --all DB_HOST=localhost
Get output from running the 'apk add curl' command in time-machine from pod web-app-pod,kubectl exec web-app-pod -c time-machine -- apk add curl
"Get output from running 'psql' command from the first pod of the deployment api-server-deployment, using the first container by default",kubectl exec deploy/api-server-deployment -- psql
Create a cron job with a command,"kubectl create cronjob weekly-summary --image=redis --schedule=""*/1 * * * *"" -- redis-cli"
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""beta-apps"" API group",kubectl get deployments.feature-branch-2.3.0.beta-apps -o json
"Auto scale a replication controller ""frontend"", with the number of pods between 1 and 6, target CPU utilization at 20%",kubectl autoscale rc frontend --max=6 --cpu-percent=20
Copy /tmp/foo local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo kube-proxy/cache-pod-5:/etc/kubernetes
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8081 8888
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/backend-microservice-deployment LOG_LEVEL=info -o yaml
Create a new ExternalName service named my-ns,kubectl create service externalname my-ns --external-name dummy-website.io
Add to node 'worker-node-3' a taint with key 'dedicated' and no value,kubectl taint nodes worker-node-3 dedicated:NoSchedule
"Delete pods and services with same names ""backend"" and ""auth""","kubectl delete pod,service backend auth"
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/ui-config deployment/analytics-platform-deployment
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f kubeadm-config.yaml -p '{""spec"":{""someField"":""newValue""}'"
Get output from running the 'sleep 3600' command in mycontainer from pod frontend-pod,kubectl exec frontend-pod -c mycontainer -- sleep 3600
Print the supported API resources sorted by a column,kubectl api-resources --sort-by=name
"Listen on port 8888 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8888:8088"
Create a new secret named ssl-key-secret using a combination of a file and a literal,kubectl create secret generic ssl-key-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8088 8888
"Set basic auth for the ""prod-user"" entry",kubectl config set-credentials prod-user --username=admin --password=uXFGweU9l35qcif
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c quantum-quark -i -t
Begin streaming the logs of the lunar-launcher container in pod mypod,kubectl logs -f -c lunar-launcher mypod
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 3000 5432
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/gateway-pod
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=8082 --target-port=909000
Update image of all containers of daemonset test to 'python:3.9.7',kubectl set image daemonset test *=python:3.9.7
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/db-config deployment/user-management-deployment
Copy :/tmp/foo local file to /etc/kubernetes in a remote pod in namespace,kubectl cp :/tmp/foo prometheus/web-app-pod-1:/etc/kubernetes
Add a taint with key 'dedicated' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  dedicated=db-node-7:PreferNoSchedule
"Listen on port 5000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/cdn-service-pod 5000:8080
"Listen on port 9090 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 9090:9090"
"Set basic auth for the ""john.doe"" entry",kubectl config set-credentials john.doe --username=admin --password=uXFGweU9l35qcif
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/postgres
"Listen on port 9090 locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod 9090:8081
Start a postgres pod and let the container expose port 5432,kubectl run hazelcast --image=postgres --port=5432
Create a new ExternalName service named external-analytics-service,kubectl create service externalname external-analytics-service --external-name dummy-website.io
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""mobile-apps"" API group",kubectl get deployments.v2.1.0.mobile-apps -o json
Create a new ExternalName service named external-geolocation-service,kubectl create service externalname external-geolocation-service --external-name mockup-cloud.cloud
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/web-app-pod
Get output from running the 'pg_dump --version' command in lunar-launcher from pod monitoring-pod,kubectl exec monitoring-pod -c lunar-launcher -- pg_dump --version
Update pod 'auth' with the label 'tier' and the value 'database',kubectl label pods auth tier=database
Set the resource request and limits for all containers in wordpress,"kubectl set resources deployment wordpress --limits=cpu=200m,memory=512Mi --requests=cpu=5,memory=256Mi"
"Update pod 'foo' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo git-repo='https://github.com/example/my-app'
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=edge-cluster
"Create a role named ""custom_role"" with ResourceName specified",kubectl create role custom_role --verb=use --resource=pods --resource-name=monitoring-prometheus --resource-name=database-master
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/api-service-pod 6379 8088
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.testing-context.cluster sun-cluster
Set deployment log-aggregator-deployment's service account to fluentd,kubectl set serviceaccount deployment log-aggregator-deployment fluentd
Create a pod using the data in options.json,kubectl create -f ./options.json
Rename the context 'staging-context' to 'service-account-context' in your kubeconfig file,kubectl config rename-context staging-context service-account-context
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=9091:27017
Create a new secret named app-config-secret from an env file,kubectl create secret generic app-config-secret --from-env-file=path/to/preferences.env
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/backend-pod 6379 8088
"Get output from running 'mysql' command from the first pod of the deployment payment-processor-deployment, using the first container by default",kubectl exec deploy/payment-processor-deployment -- mysql
"Update node 'worker-node-3' with a taint with key 'cpu-type' and value 'x86' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes worker-node-3 cpu-type=x86:NoSchedule
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""custom-deployments"" API group",kubectl get deployments.v2.1.0.custom-deployments -o yaml
Start a jenkins pod and let the container expose port 3001,kubectl run hazelcast --image=jenkins --port=3001
"If the deployment named mysql's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/mysql
Deny CSR 'csr-ingress-7',kubectl certificate deny csr-ingress-7
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8080 8080
Get output from running the 'bash' command in astro-container from pod vpn-service-pod,kubectl exec vpn-service-pod -c astro-container -- bash
Update deployment 'gateway-deployment' with a new environment variable,kubectl set env deployment/gateway-deployment MAX_CONNECTIONS=100
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/mypod 3000:5432
Get output from running the 'docker run -it ubuntu' command in quantum-quark from pod chat-app-pod,kubectl exec chat-app-pod -c quantum-quark -- docker run -it ubuntu
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""backup-apps"" API group",kubectl get deployments.dev-2.2.0.backup-apps -o yaml
"Delete pods and services with same names ""backend"" and ""frontend""","kubectl delete pod,service backend frontend"
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.staging-context.cluster web-cluster
"Listen on port 8000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8000:3000
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""beta-apps"" API group",kubectl get deployments.v2.0.0.beta-apps -o json
"Set a deployments ubuntu container cpu limits to ""50m"" and memory to ""64Mi""","kubectl set resources deployment ubuntu -c=nginx --limits=cpu=50m,memory=64Mi"
"Update pod 'auth' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth app-version=2.5.1
"Listen on port 8080 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8080:8080"
Remove from node 'kube-master-9' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes kube-master-9 datacenter:NoExecute-
Set the user field on the gce context entry without touching other values,kubectl config set-context gce --user=cluster-admin
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.cluster-2-context.cluster app-cluster
Create a deployment named app that runs the ubuntu image and expose port 3000,kubectl create deployment app --image=ubuntu --port=3000
Create a job with a command,kubectl create job database-seeding-job --image=nginx -- nginx -t
Create a copy of proxy-service-pod adding a debug container and changing container images,"kubectl debug proxy-service-pod -it --copy-to=debug-image-app --image=debian --set-image=worker=my-custom-worker:1.2.3,worker=my-custom-worker:1.2.3"
"Create a role named ""reader"" with API Group specified","kubectl create role reader --verb=create,list,delete --resource=persistentvolumes.storage.k8s.io"
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/cdn-service-pod
"Listen on port 9090 locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod 9090:5432
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp velero/auth-service-pod-11:~/.config/kube :/tmp/bar
Create a copy of proxy-server-pod adding a debug container and changing container images,"kubectl debug proxy-server-pod -it --copy-to=debug-image-app --image=debian --set-image=web=nginx:latest,mailer=mailer:latest"
Begin streaming the logs of the stardust-shuttle container in pod log-aggregator-pod,kubectl logs -f -c stardust-shuttle log-aggregator-pod
"Listen on port 5432 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 5432:6379
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=edge-cluster
Get output from running the 'mongo' command in nebula-navigator from pod web-app-pod,kubectl exec web-app-pod -c nebula-navigator -- mongo
Update pod 'vpn' with the label 'env' and the value 'production',kubectl label pods vpn env=production
"Delete pods and services with same names ""media-stream"" and ""analytics""","kubectl delete pod,service media-stream analytics"
Add a taint with key 'cpu-type' on nodes having label myLabel,kubectl taint node -l myLabel  cpu-type=kube-master-9:PreferNoSchedule
"Create a role binding for jane.doe, bob.smith, and developers using the custom_role cluster role",kubectl create rolebinding custom_role --clusterrole=custom_role --user=jane.doe --user=bob.smith --group=developers
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=8089:5000
"Create a cluster role named ""foo"" with ResourceName specified",kubectl create clusterrole foo --verb=connect --resource=configmaps --resource-name=prod-api-gateway --resource-name=image-processor
Add a taint with key 'environment' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  environment=edge-node-10:PreferNoSchedule
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=8000:3001
Create a new NodePort service named my-ns,kubectl create service nodeport my-ns --tcp=5001:5000
Create a copy of monitoring-pod changing all container images to wordpress,kubectl debug monitoring-pod --copy-to=debug-image-1 --set-image=*=wordpress
Return snapshot of previous terminated nebula-navigator container logs from pod monitoring-pod,kubectl logs -p -c nebula-navigator monitoring-pod
Copy /tmp/foo local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp /tmp/foo kube-system/cache-pod-5:/tmp/bar_dir
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json security-scan-status=pass
Add a taint with key 'hardware' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  hardware=monitoring-node-15:PreferNoSchedule
Create a new secret named git-credentials-secret with keys for each file in folder bar,kubectl create secret generic git-credentials-secret --from-file=path/to/data
Create a deployment named app that runs the golang image with 7 replicas,kubectl create deployment app --image=golang --replicas=7
Create a new config map named log-config from the key=value pairs in the file,kubectl create configmap log-config --from-file=path/to/parameters
Embed certificate authority data for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --embed-certs --certificate-authority=~/.kube/e2e/kubernetes.ca.crt
Disable cert checking for the dev cluster entry,kubectl config set-cluster sun-cluster --insecure-skip-tls-verify=true
Get output from running the 'mysql' command in stardust-shuttle from pod gateway-pod,kubectl exec gateway-pod -c stardust-shuttle -- mysql
Add a taint with key 'hardware' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  hardware=k8s-node-1:PreferNoSchedule
Create a new config map named log-config based on folder settings,kubectl create configmap log-config --from-file=path/to/settings
Add a taint with key 'dedicated' on nodes having label release=beta,kubectl taint node -l release=beta  dedicated=backup-node-14:PreferNoSchedule
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.on-prem-context.cluster galaxy-cluster
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml monitoring-tool=Prometheus
"Update pod 'monitoring' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods monitoring security-scan-status='pass'
Create a new secret named encryption-key-secret with keys for each file in folder bar,kubectl create secret generic encryption-key-secret --from-file=path/to/properties
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""my-apps"" API group",kubectl get deployments.beta-1.0.my-apps -o json
Add a taint with key 'dedicated' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  dedicated=web-node-8:PreferNoSchedule
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.cluster-2-context.cluster cluster-alpha
Update pod 'proxy' only if the resource is unchanged from version 1,kubectl label pods proxy status=unhealthy --resource-version=1
Create a new secret named jwt-secret from an env file,kubectl create secret generic jwt-secret --from-env-file=path/to/properties.env
Create a new ExternalName service named external-identity-provider-service,kubectl create service externalname external-identity-provider-service --external-name sample-domain.net
"Update pod 'cdn' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn last-deployment=2023-03-15
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/monitoring-pod
"Delete pods and services with same names ""auth"" and ""proxy-server""","kubectl delete pod,service auth proxy-server"
Create a cron job with a command,"kubectl create cronjob email-notifications --image=mongo --schedule=""*/1 * * * *"" -- mongo --version"
"Update pod 'monitoring' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods monitoring expiration-date='2024-12-31'
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=data-cluster
"List a pod identified by type and name specified in ""options.yaml"" in JSON output format",kubectl get -f options.yaml -o json
Update pod 'chat-app' with the label 'tier' and the value 'database',kubectl label pods chat-app tier=database
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp kubeapps/database-pod-2:/tmp/foo_dir /tmp/bar_dir
Add a taint with key 'environment' on nodes having label myLabel,kubectl taint node -l myLabel  environment=app-node-6:PreferNoSchedule
Create a job with a command,kubectl create job deployment-rollout-job --image=alpine -- apk add curl
Return snapshot of previous terminated astro-container container logs from pod web-app-pod,kubectl logs -p -c astro-container web-app-pod
Update pod 'email' with the label 'release' and the value 'v1.0',kubectl label pods email release=v1.0
Create a new secret named tls-certificate-secret with keys for each file in folder bar,kubectl create secret generic tls-certificate-secret --from-file=path/to/preferences
Create a deployment named sonarqube that runs the mysql image and expose port 8443,kubectl create deployment sonarqube --image=mysql --port=8443
"Start a redis pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=redis --overrides='{ ""apiVersion"": ""stable-2.0.0"", ""spec"": { ... } }'"
Rename the context 'old-name' to 'app-2-context' in your kubeconfig file,kubectl config rename-context old-name app-2-context
Create a job with a command,kubectl create job report-generation-job --image=alpine -- ash
"Update pod 'frontend' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend expiration-date='2024-12-31'
"Set a deployments redis container cpu limits to ""10"" and memory to ""2Gi""","kubectl set resources deployment redis -c=nginx --limits=cpu=10,memory=2Gi"
Start a mongo pod and let the container expose port 3001,kubectl run hazelcast --image=mongo --port=3001
Create a copy of proxy-server-pod adding a debug container and changing container images,"kubectl debug proxy-server-pod -it --copy-to=my-debugger --image=debian --set-image=mailer=mailer:latest,web=nginx:latest"
Create a new LoadBalancer service named web-app-lb,kubectl create service loadbalancer web-app-lb --tcp=5000:9092
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/app-secrets deployment/gateway-deployment
"Listen on a random port locally, forwarding to 9090 in the pod",kubectl port-forward pod/api-service-pod :9090
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/log-aggregator-pod 6379:3000
Add a taint with key 'environment' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  environment=storage-node-13:PreferNoSchedule
Get output from mycontainer from pod mypod,kubectl attach mypod -c mycontainer
Return snapshot of previous terminated mycontainer container logs from pod api-service-pod,kubectl logs -p -c mycontainer api-service-pod
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 5000 8080
Create a job with a command,kubectl create job monitoring-job --image=docker.elastic.co/elasticsearch/elasticsearch -- elasticsearch
"Update pod 'log-aggregator' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator contact-email=support@example.com
Create a new secret named api-secret-key from an env file,kubectl create secret generic api-secret-key --from-env-file=path/to/settings.env
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kubeapps/front-end-pod-12::/tmp/foo :/tmp/bar
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/global-config deployment/backend-microservice-deployment
Add a taint with key 'hardware' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  hardware=gpu-node-12:PreferNoSchedule
"Listen on port 8000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8000:5000"
"Listen on port 9090 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 9090:8081
Add to node 'gpu-node-12' a taint with key 'disktype' and no value,kubectl taint nodes gpu-node-12 disktype:NoSchedule
Return snapshot logs from container order-processing-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/order-processing-deployment -c auth-service-pod-1
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=8000 --target-port=500100
"Listen on port 5432 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 5432:8088"
"Listen on port 8088 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8088:3000"
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/batch-processing-job -n development
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/api-config deployment/monitoring-stack-deployment
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/python
"Delete pods and services with same names ""monitoring"" and ""proxy""","kubectl delete pod,service monitoring proxy"
Start a hazelcast pod and let the container expose port 8443,kubectl run hazelcast --image=hazelcast/hazelcast --port=8443
"Scale a resource identified by type and name specified in ""options.yaml"" to 5",kubectl scale --replicas=5 -f options.yaml
"Listen on port 9090 locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod 9090:5000
"Update node 'db-node-7' with a taint with key 'special' and value 'backup' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes db-node-7 special=backup:NoSchedule
"List deployments in YAML output format, in the ""custom-version"" version of the ""api-v1"" API group",kubectl get deployments.custom-version.api-v1 -o yaml
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/cdn-service-pod 6379:8888
Create a new config map named monitoring-config from an env file,kubectl create configmap monitoring-config --from-env-file=path/to/preferences.env
Create a deployment named drupal that runs the centos image with 7 replicas,kubectl create deployment drupal --image=centos --replicas=7
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 3000 8080
Return snapshot logs from first container of a job named cron-job,kubectl logs job/cron-job
"Listen on port 8888 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8888:5000"
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller monitoring-rc
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""external-apps"" API group",kubectl get deployments.v2.0.0.external-apps -o yaml
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-config deployment/load-balancer-deployment
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=properties=/path/to/data/file1.txt --from-file=key1=/path/to/configurations/file2.txt
"Get output from running the 'mysql' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- mysql
Create a job,kubectl create job backup --image=busybox
Get output from running the 'npm --version' command in astro-container from pod chat-app-pod,kubectl exec chat-app-pod -c astro-container -- npm --version
"Listen on port 8088 locally, forwarding to 8080 in the pod",kubectl port-forward pod/security-service-pod 8088:8080
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""custom-deployments"" API group",kubectl get deployments.stable-2.0.0.custom-deployments -o json
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8083 --target-port=808800
Get output from running the 'mongo' command in cyber-sleuth from pod frontend-pod,kubectl exec frontend-pod -c cyber-sleuth -- mongo
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=node.k8s.io
"Delete pods and services with same names ""email"" and ""gateway""","kubectl delete pod,service email gateway"
Create a job with a command,kubectl create job batch-processing --image=ethereum/client-go -- geth
"Update pod 'gateway' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway deployment-script='https://example.com/deploy.sh'
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/api-service-pod
"Listen on port 8081 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8081:5000"
Get output from running the 'npm --version' command in code-explorer from pod api-service-pod,kubectl exec api-service-pod -c code-explorer -- npm --version
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp kubeapps/load-balancer-pod-9:~/.config/kube :/tmp/bar
"Set a deployments node container cpu limits to ""200m"" and memory to ""128Mi""","kubectl set resources deployment node -c=nginx --limits=cpu=200m,memory=128Mi"
"Get output from running the 'psql' command from pod gateway-pod, using the first container by default",kubectl exec gateway-pod -- psql
Update deployment 'mydeployment' with a new environment variable,kubectl set env deployment/mydeployment JWT_SECRET=your-jwt-secret
"Auto scale a deployment ""payment"", with the number of pods between 6 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment payment --min=6 --max=9
"Listen on port 5000 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 5000:8080"
Return snapshot logs from container load-balancer-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/load-balancer-deployment -c api-service-pod-1
Return snapshot logs from container frontend-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/frontend-deployment -c vpn-service-pod-1
"Print result (in yaml format) of updating nginx container image from local file, without hitting the server",kubectl set image -f path/to/file.yaml python=python:3.9.7 --local -o yaml
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller e-commerce-rc
Return snapshot logs from all containers in pods defined by label owner=john-doe,kubectl logs -l owner=john-doe --all-containers=true
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/backend-microservice-deployment -c frontend-pod-1
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/notification-service"
Start a mongo pod and let the container expose port 8088,kubectl run hazelcast --image=mongo --port=8088
"Start a hazelcast pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=hazelcast/hazelcast --overrides='{ ""apiVersion"": ""alpha-2.0"", ""spec"": { ... } }'"
Return snapshot of previous terminated ruby container logs from pod mypod,kubectl logs -p -c ruby mypod
"Wait for the pod ""payment-gateway-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/payment-gateway-pod
Create a new ExternalName service named external-third-party-api-service,kubectl create service externalname external-third-party-api-service --external-name practice-online.site
Set deployment database-deployment's service account to tekton,kubectl set serviceaccount deployment database-deployment tekton
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/notification-service"
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=9092:8443
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 5432 5000
Get output from running the 'geth' command in mycontainer from pod auth-service-pod,kubectl exec auth-service-pod -c mycontainer -- geth
"Listen on port 8088 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8088:8888
Set the server field on the staging-cluster cluster to https://1.2.3.4,kubectl config set clusters.staging-cluster.server https://1.2.3.4
"Update pod 'proxy-server' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server scaling-policy=auto-horizontal-scaling
Create a deployment named jenkins that runs the mcr.microsoft.com/dotnet/core/runtime image,kubectl create deployment jenkins --image=mcr.microsoft.com/dotnet/core/runtime
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=sun-cluster
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=8082 --target-port=330600
Create a copy of vpn-service-pod changing all container images to ruby,kubectl debug vpn-service-pod --copy-to=my-debugger --set-image=*=ruby
Restart a daemon set,kubectl rollout restart daemonset/app-v2
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/configurations/file2.txt
Start a amazonlinux pod and let the container expose port 8084,kubectl run hazelcast --image=amazonlinux --port=8084
"Listen on port 3000 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 3000:6379"
Create a new NodePort service named backend-nodeport,kubectl create service nodeport backend-nodeport --tcp=8089:3306
"Update pod 'gateway' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway last-deployment=2023-03-15
Set deployment database-deployment's service account to spinnaker,kubectl set serviceaccount deployment database-deployment spinnaker
Return snapshot logs from container api-server-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/api-server-deployment -c api-service-pod-1
Return snapshot logs from container authentication-service-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/authentication-service-deployment -c e-commerce-pod-1
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/media-stream-pod
Add to node 'web-node-8' a taint with key 'workload' and no value,kubectl taint nodes web-node-8 workload:NoSchedule
View the details of daemonset revision 7,kubectl rollout history daemonset/staging --revision=7
Get output from running pod database-pod; use the 'kubectl.kubernetes.io/default-container' annotation # for selecting the container to be attached or the first container in the pod will be chosen,kubectl attach database-pod
Create a deployment named drupal that runs the ubuntu image and expose port 8000,kubectl create deployment drupal --image=ubuntu --port=8000
Scale a replica set named 'dev-environment-rs' to 3,kubectl scale --replicas=3 rs/dev-environment-rs
"If the deployment named prod-app-rs's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/prod-app-rs
View the rollout history of a deployment,kubectl rollout history deployment/namespace-2
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8000 8000
"Check to see if I can get the job named ""backup-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/backup-job -n kube-system
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/cluster-beta/kubernetes.ca.crt
"Listen on port 5432 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5432:8888
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=sun-cluster
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-name-config deployment/database-deployment
Return snapshot logs from container gateway-deployment-1 of a deployment named backend-pod,kubectl logs deployment/gateway-deployment -c backend-pod-1
Begin streaming the logs of the cosmic-container container in pod auth-service-pod,kubectl logs -f -c cosmic-container auth-service-pod
Return snapshot logs from container payment-processor-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/payment-processor-deployment -c security-service-pod-1
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/backend-service 8088:https
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.on-prem-context.cluster moon-cluster
Create a job with a command,kubectl create job indexing --image=centos -- sleep 3600
"Update pod 'auth' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth description='Web server for marketing site'
Copy :/tmp/foo local file to /etc/kubernetes in a remote pod in namespace,kubectl cp :/tmp/foo logging/ingress-controller-pod-8:/etc/kubernetes
"Listen on port 3000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 3000:9090
"Listen on port 8888 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8888:6379"
"Create a catch all ingress of ""/path"" pointing to service svc:port and Ingress Class as ""otheringress""","kubectl create ingress catch-all --class=otheringress --rule=""/path=svc:port"""
Get output from running the 'java -jar /usr/share/jenkins/jenkins.war' command in code-explorer from pod proxy-service-pod,kubectl exec proxy-service-pod -c code-explorer -- java -jar /usr/share/jenkins/jenkins.war
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""prod-apps"" API group",kubectl get deployments.v1.1.0.prod-apps -o json
Describe a node,kubectl describe nodes research-node-15.research-lab.local
Return snapshot logs from container proxy-service-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/proxy-service-deployment -c chat-app-pod-1
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/preferences/file2.txt
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/db-config deployment/web-app-deployment
Watch the rollout status of a deployment,kubectl rollout status deployment/staging
"Delete pods and services with same names ""database"" and ""security""","kubectl delete pod,service database security"
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp kube-server/web-app-pod-1:~/.config/kube /tmp/bar_dir
"Listen on port 8080 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8080:8080"
Embed certificate authority data for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --embed-certs --certificate-authority=~/.kube/cloud-cluster/kubernetes.ca.crt
"Listen on port 9090 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 9090:8081
"Start a hazelcast pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=hazelcast/hazelcast --overrides='{ ""apiVersion"": ""rc-1.1.0"", ""spec"": { ... } }'"
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""alpha-apps"" API group",kubectl get deployments.feature-branch-2.3.0.alpha-apps -o json
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.user-b-context.cluster staging-cluster
"Listen on port 6379 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 6379:3000
Create a new secret named tls-certificate-secret from an env file,kubectl create secret generic tls-certificate-secret --from-env-file=path/to/profiles.env
Remove from node 'backup-node-14' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes backup-node-14 zone:PreferNoSchedule-
Set deployment order-processing-deployment's service account to tekton,kubectl set serviceaccount deployment order-processing-deployment tekton
Add a taint with key 'hardware' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  hardware=prod-node-5:PreferNoSchedule
"Start a centos pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=centos --overrides='{ ""apiVersion"": ""v2.1.0"", ""spec"": { ... } }'"
Add to node 'app-node-6' a taint with key 'hardware' and no value,kubectl taint nodes app-node-6 hardware:NoSchedule
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/dev-cluster/kubernetes.ca.crt
Add a taint with key 'app' on nodes having label service=auth,kubectl taint node -l service=auth  app=worker-node-3:PreferNoSchedule
"Listen on port 3000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/log-aggregator-pod 3000:8080
"Create a role named ""default_role"" with ResourceName specified",kubectl create role default_role --verb=proxy --resource=pods --resource-name=document-storage --resource-name=machine-learning
Create a copy of gateway-pod changing all container images to mongo,kubectl debug gateway-pod --copy-to=debug-image-app --set-image=*=mongo
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8088 8000
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""my-apps"" API group",kubectl get deployments.beta-1.0.my-apps -o yaml
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/app-settings deployment/search-engine-deployment
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/kube-cluster-1/kubernetes.ca.crt
"Delete pods and services with same names ""log-aggregator"" and ""foo""","kubectl delete pod,service log-aggregator foo"
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""internal-apps"" API group",kubectl get deployments.v1.1.1.internal-apps -o json
Begin streaming the logs of the lunar-launcher container in pod database-pod,kubectl logs -f -c lunar-launcher database-pod
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/backend-pod 8088:9090
Describe a pod,kubectl describe pods/load-balancer
Create a pod disruption budget named cache-cluster-pdb that will select all pods with the release=1.0.0 label # and require at least four of them being available at any point in time,kubectl create poddisruptionbudget cache-cluster-pdb --selector=release=1.0.0 --min-available=4
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8888 3000
"Check to see if I can get the job named ""security-scan-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/security-scan-job -n kube-ingress
Update deployment 'email-server-deployment' with a new environment variable,kubectl set env deployment/email-server-deployment SMTP_PASSWORD=your-password
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 5000 5000
"Create a single ingress called 'web-ingress' that directs requests to site.com/bar to svc # svc1:8080 with a tls secret ""my-cert""","kubectl create ingress web-ingress --rule=""site.com/bar=svc1:8080,tls=my-cert"""
Create a new secret named email-credentials-secret with keys for each file in folder bar,kubectl create secret generic email-credentials-secret --from-file=path/to/configurations
"Listen on port 8088 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8088:5000"
Add to node 'dev-node-4' a taint with key 'zone' and no value,kubectl taint nodes dev-node-4 zone:NoSchedule
"Check to see if I can get the job named ""cleanup-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/cleanup-job -n kube-node-lease
Add a taint with key 'zone' on nodes having label myLabel,kubectl taint node -l myLabel  zone=testing-node-11:PreferNoSchedule
Create a new secret named api-secret-key from an env file,kubectl create secret generic api-secret-key --from-env-file=path/to/properties.env
Start a mysql pod and let the container expose port 3306,kubectl run hazelcast --image=mysql --port=3306
"Check to see if I can get the job named ""backup-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/backup-job -n kube-dns
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/centos
"List deployments in JSON output format, in the ""custom-version"" version of the ""beta-apps"" API group",kubectl get deployments.custom-version.beta-apps -o json
Add a taint with key 'dedicated' on nodes having label component=proxy,kubectl taint node -l component=proxy  dedicated=storage-node-13:PreferNoSchedule
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=80 --target-port=8000
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8888 8080
Update pod 'media-stream' with the label 'env' and the value 'staging',kubectl label pods media-stream env=staging
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/chat-app-pod
"Create a service for an node deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment node --port=9090 --target-port=8000
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=8089 --target-port=808200
"Update pod 'payment' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods payment backup-strategy='daily-backups'
"Set a deployments elasticsearch container cpu limits to ""200m"" and memory to ""64Mi""","kubectl set resources deployment elasticsearch -c=nginx --limits=cpu=200m,memory=64Mi"
Update deployment 'frontend-deployment' with a new environment variable,kubectl set env deployment/frontend-deployment DB_PASSWORD=secretpassword
"Delete pods and services with same names ""proxy"" and ""cdn""","kubectl delete pod,service proxy cdn"
Set deployment notification-handler-deployment's service account to jenkins,kubectl set serviceaccount deployment notification-handler-deployment jenkins
"Listen on port 3000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 3000:8080
Get output from running the 'kafka-console-producer --broker-list localhost:9092 --topic test' command in cyber-sleuth from pod proxy-service-pod,kubectl exec proxy-service-pod -c cyber-sleuth -- kafka-console-producer --broker-list localhost:9092 --topic test
Deny CSR 'csr-node-1',kubectl certificate deny csr-node-1
Create a new secret named private-key-secret from an env file,kubectl create secret generic private-key-secret --from-env-file=path/to/properties.env
Begin streaming the logs of the cyber-sleuth container in pod media-stream-pod,kubectl logs -f -c cyber-sleuth media-stream-pod
Replace a pod based on the JSON passed into stdin,cat parameters.yaml | kubectl replace -f -
Create a new config map named monitoring-config from the key=value pairs in the file,kubectl create configmap monitoring-config --from-file=path/to/properties
Return snapshot logs from container load-balancer-deployment-1 of a deployment named backend-pod,kubectl logs deployment/load-balancer-deployment -c backend-pod-1
"Update node 'dev-node-4' with a taint with key 'zone' and value 'us-west-1a' and effect 'PreferNoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes dev-node-4 zone=us-west-1a:PreferNoSchedule
Add a taint with key 'hardware' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  hardware=dev-node-4:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/app-name-config deployment/load-balancer-deployment
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp ingress-nginx/payment-gateway-pod-19::/tmp/foo /tmp/bar
Create a copy of analytics-pod changing all container images to ubuntu,kubectl debug analytics-pod --copy-to=debug-image-1 --set-image=*=ubuntu
Return snapshot of previous terminated nebula-navigator container logs from pod database-pod,kubectl logs -p -c nebula-navigator database-pod
Update image of all containers of daemonset development to 'alpine:3.14',kubectl set image daemonset development *=alpine:3.14
"Enable the OpenID Connect auth provider for the ""john.doe"" entry with additional args",kubectl config set-credentials john.doe --auth-provider=oidc --auth-provider-arg=client-id=foo --auth-provider-arg=client-secret=bar
Describe one context in your kubeconfig file,kubectl config get-contexts prod-context
"Get output from running 'nginx' command from the first pod of the deployment load-balancer-deployment, using the first container by default",kubectl exec deploy/load-balancer-deployment -- nginx
"Listen on port 8080 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8080:3000
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/db-service"
"Delete pods and services with same names ""proxy"" and ""foo""","kubectl delete pod,service proxy foo"
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""external-apps"" API group",kubectl get deployments.dev-2.2.0.external-apps -o yaml
Create a deployment named gateway that runs the amazonlinux image,kubectl create deployment gateway --image=amazonlinux
"Listen on port 3000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 3000:8081"
Update deployment 'search-engine-deployment' with a new environment variable,kubectl set env deployment/search-engine-deployment JWT_SECRET=your-jwt-secret
"Delete pods and services with same names ""proxy-server"" and ""vpn""","kubectl delete pod,service proxy-server vpn"
Update image of all containers of daemonset namespace-1 to 'centos:8.4.2105',kubectl set image daemonset namespace-1 *=centos:8.4.2105
"Update pod 'proxy' with the annotation 'git-repo' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods proxy git-repo='https://github.com/example/my-app'
Set deployment api-server-deployment's service account to kube-dns,kubectl set serviceaccount deployment api-server-deployment kube-dns
"If the deployment named foo's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/foo
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=data-cluster
Return snapshot of previous terminated nebula-navigator container logs from pod media-stream-pod,kubectl logs -p -c nebula-navigator media-stream-pod
Get output from warp-drive from pod proxy-server-pod,kubectl attach proxy-server-pod -c warp-drive
Update pod 'proxy' with the label 'component' and the value 'api',kubectl label pods proxy component=api
Update pod 'auth' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods auth component-
Update image of all containers of daemonset staging to 'openjdk:16.0.2',kubectl set image daemonset staging *=openjdk:16.0.2
Create a new LoadBalancer service named email-service-lb,kubectl create service loadbalancer email-service-lb --tcp=8084:8089
Get output from running the 'python --version' command in nano-bot from pod proxy-server-pod,kubectl exec proxy-server-pod -c nano-bot -- python --version
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node db-node-7 -p '{""data"":{""key"":""new-value""}'"
"Auto scale a deployment ""proxy-server"", with the number of pods between 4 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy-server --min=4 --max=15
Create a job with a command,kubectl create job log-processing-job --image=redis -- redis-cli
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""my-apps"" API group",kubectl get deployments.stable-2.0.0.my-apps -o yaml
Create a pod based on the JSON passed into stdin,cat settings.json | kubectl create -f -
"Listen on a random port locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod :8888
Return snapshot logs from pod analytics-pod with multi containers,kubectl logs analytics-pod --all-containers=true
Create a new secret named api-key-secret using a combination of a file and a literal,kubectl create secret generic api-key-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
Create a job with a command,kubectl create job certificate-renewal --image=alpine -- apk add curl
Create a new LoadBalancer service named cdn-service-lb,kubectl create service loadbalancer cdn-service-lb --tcp=8000:9000
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=sun-cluster
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=80 --target-port=300000
Rename the context 'cluster-2-context' to 'team-beta-context' in your kubeconfig file,kubectl config rename-context cluster-2-context team-beta-context
"Listen on port 5432 locally, forwarding to 5000 in the pod",kubectl port-forward pod/cdn-service-pod 5432:5000
"Update pod 'proxy-server' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods proxy-server expiration-date='2024-12-31'
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""experimental-apps"" API group",kubectl get deployments.beta-1.0.experimental-apps -o yaml
Create a new secret named ldap-credentials-secret with keys for each file in folder bar,kubectl create secret generic ldap-credentials-secret --from-file=path/to/parameters
Update pod 'proxy-server' with the label 'role' and the value 'frontend',kubectl label pods proxy-server role=frontend
Create a cron job with a command,"kubectl create cronjob report-generation --image=alpine --schedule=""*/1 * * * *"" -- apk add curl"
"Update pod 'vpn' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn monitoring-tool=Prometheus
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/mypod 5432:9090
Create a copy of log-aggregator-pod changing all container images to confluentinc/cp-kafka,kubectl debug log-aggregator-pod --copy-to=my-custom-dbg --set-image=*=confluentinc/cp-kafka
"Delete pods and services with same names ""email"" and ""payment""","kubectl delete pod,service email payment"
Get output from running the 'mongo' command in stardust-shuttle from pod auth-service-pod,kubectl exec auth-service-pod -c stardust-shuttle -- mongo
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8888 8080
"Get output from running 'irb' command from the first pod of the service notification-service, using the first container by default",kubectl exec svc/notification-service -- irb
Create a new service account named gitlab-runner,kubectl create serviceaccount gitlab-runner
"Update pod 'monitoring' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring deployment-script='https://example.com/deploy.sh'
Embed certificate authority data for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --embed-certs --certificate-authority=~/.kube/moon-cluster/kubernetes.ca.crt
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/web-app-pod
Create a copy of auth-service-pod changing all container images to jenkins,kubectl debug auth-service-pod --copy-to=debug-image-1 --set-image=*=jenkins
Create a deployment named web that runs the ethereum/client-go image and expose port 8080,kubectl create deployment web --image=ethereum/client-go --port=8080
"Listen on a random port locally, forwarding to 8000 in the pod",kubectl port-forward pod/frontend-pod :8000
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=8082:7000
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.client-2-context.cluster edge-cluster
Create a job with a command,kubectl create job security-scan-job --image=ruby -- irb
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=8081 --target-port=808200
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-name-config --prefix=MYSQL_ deployment/email-server-deployment
Add a taint with key 'hardware' on nodes having label release=beta,kubectl taint node -l release=beta  hardware=storage-node-13:PreferNoSchedule
"Update pod 'frontend' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling', overwriting any existing value",kubectl annotate --overwrite pods frontend scaling-policy='auto-horizontal-scaling'
Create a job with a command,kubectl create job batch-processing --image=nginx -- nginx
Get output from running the 'kafka-topics --list' command in cosmic-container from pod e-commerce-pod,kubectl exec e-commerce-pod -c cosmic-container -- kafka-topics --list
"If the deployment named payment-service-rs's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/payment-service-rs
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""external-apps"" API group",kubectl get deployments.dev-2.2.0.external-apps -o json
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/security-service-pod 8081:8080
Get output from running the 'apk add curl' command in mycontainer from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c mycontainer -- apk add curl
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 6379 8000
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/analytics-platform-deployment -c web-app-pod-1
"Get output from running 'go' command from the first pod of the service backend-service, using the first container by default",kubectl exec svc/backend-service -- go
Create a copy of gateway-pod changing the command of astro-container,kubectl debug gateway-pod -it --copy-to=my-debugger --container=astro-container -- sh
"Listen on a random port locally, forwarding to 3000 in the pod",kubectl port-forward pod/log-aggregator-pod :3000
Update pod 'proxy' with the label 'role' and the value 'backend',kubectl label pods proxy role=backend
Get output from astro-container from pod analytics-pod,kubectl attach analytics-pod -c astro-container
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json monitoring-tool=Prometheus
Update pod 'auth' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods auth app-
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=my-k8s-cluster
"Listen on port 8080 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8080:3000
"Listen on port 8088 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8088:6379
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json scaling-policy=auto-horizontal-scaling
Rename the context 'cloud-context' to 'team-alpha-context' in your kubeconfig file,kubectl config rename-context cloud-context team-alpha-context
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/monitoring-service"
"Update pod 'chat-app' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app custom-label=my-custom-value
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/order-service"
"Listen on port 8080 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8080:8080"
Create a new NodePort service named proxy-server-nodeport,kubectl create service nodeport proxy-server-nodeport --tcp=3306:8082
Deny CSR 'csr-webserver-1',kubectl certificate deny csr-webserver-1
Return snapshot logs from container authentication-service-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/authentication-service-deployment -c security-service-pod-1
Rename the context 'cluster-2-context' to 'app-1-context' in your kubeconfig file,kubectl config rename-context cluster-2-context app-1-context
Create a job with a command,kubectl create job cleanup --image=postgres -- postgres
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""custom-apps"" API group",kubectl get deployments.hotfix-1.1.2.custom-apps -o yaml
Import environment from a secret,kubectl set env --from=secret/database-secret deployment/email-server-deployment
Begin streaming the logs of the warp-drive container in pod gateway-pod,kubectl logs -f -c warp-drive gateway-pod
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/security-service-pod 8080:3000
Start a node pod and let the container expose port 8088,kubectl run hazelcast --image=node --port=8088
Start a jenkins pod and let the container expose port 8080,kubectl run hazelcast --image=jenkins --port=8080
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json contact-email=support@example.com
Create a new secret named payment-gateway-secret from an env file,kubectl create secret generic payment-gateway-secret --from-env-file=path/to/configurations.env
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller proxy-server-rc
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/web-app-pod 5432 9090
"Listen on port 8081 locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod 8081:8888
"Listen on port 5000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 5000:5000
"Start a ethereum/client-go pod and set labels ""app=go"" and ""env=prod"" in the container","kubectl run hazelcast --image=ethereum/client-go --labels=""app=go,env=prod"""
"Auto scale a replication controller ""frontend"", with the number of pods between 1 and 3, target CPU utilization at 40%",kubectl autoscale rc frontend --max=3 --cpu-percent=40
Update deployment 'backend-microservice-deployment' with a new environment variable,kubectl set env deployment/backend-microservice-deployment DB_HOST=localhost
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""api-v1"" API group",kubectl get deployments.v1.1.0.api-v1 -o yaml
Return snapshot logs from container frontend-deployment-1 of a deployment named mypod,kubectl logs deployment/frontend-deployment -c mypod-1
"Listen on port 8081 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8081:9090"
Get output from running the 'apache2ctl -D FOREGROUND' command in mycontainer from pod database-pod,kubectl exec database-pod -c mycontainer -- apache2ctl -D FOREGROUND
Get output from running the 'composer --version' command in cyber-sleuth from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c cyber-sleuth -- composer --version
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8081 6379
"Listen on port 8080 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8080:8888
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=cluster-gamma
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/logging-service"
"Get output from running 'geth' command from the first pod of the deployment load-balancer-deployment, using the first container by default",kubectl exec deploy/load-balancer-deployment -- geth
Get output from cosmic-container from pod e-commerce-pod,kubectl attach e-commerce-pod -c cosmic-container
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""beta-apps"" API group",kubectl get deployments.v1.1.1.beta-apps -o yaml
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name practice-online.site
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/cache-cluster-deployment -c security-service-pod-1
Update pod 'vpn' with the label 'role' and the value 'frontend',kubectl label pods vpn role=frontend
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/batch-processing-job -n production
Create a deployment named gitlab that runs the amazonlinux image and expose port 8000,kubectl create deployment gitlab --image=amazonlinux --port=8000
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 8088 8888
Remove from node 'worker-node-3' all the taints with key 'special',kubectl taint nodes worker-node-3 special-
Create a new config map named app-name-config based on folder settings,kubectl create configmap app-name-config --from-file=path/to/settings
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=e2e
Begin streaming the logs of the cyber-sleuth container in pod api-service-pod,kubectl logs -f -c cyber-sleuth api-service-pod
"Delete pods and services with same names ""analytics"" and ""media-stream""","kubectl delete pod,service analytics media-stream"
Get output from running the 'dotnet' command in quantum-quark from pod frontend-pod,kubectl exec frontend-pod -c quantum-quark -- dotnet
Return snapshot of previous terminated rocket-ranger container logs from pod auth-service-pod,kubectl logs -p -c rocket-ranger auth-service-pod
"Get output from running the 'psql' command from pod proxy-server-pod, using the first container by default",kubectl exec proxy-server-pod -- psql
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json env=staging
Create a job with a command,kubectl create job cleanup --image=alpine -- ash
"Update pod 'database' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods database status=unhealthy
Update deployment 'web-app-deployment' with a new environment variable,kubectl set env deployment/web-app-deployment SMTP_USERNAME=your-username
"Auto scale a deployment ""frontend"", with the number of pods between 5 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=5 --max=14
Use the context for the on-prem-cluster cluster,kubectl config use-context on-prem-cluster
Update image of all containers of daemonset namespace-1 to 'postgres:13.4',kubectl set image daemonset namespace-1 *=postgres:13.4
"Delete pods and services with same names ""log-aggregator"" and ""proxy-server""","kubectl delete pod,service log-aggregator proxy-server"
"Update pod 'vpn' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn app-version=2.5.1
"Set a deployments jenkins container cpu limits to ""1"" and memory to ""256Mi""","kubectl set resources deployment jenkins -c=nginx --limits=cpu=1,memory=256Mi"
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-secrets deployment/email-server-deployment
Get output from quantum-quark from pod frontend-pod,kubectl attach frontend-pod -c quantum-quark
"Get output from running the 'go run hello.go' command from pod mypod, using the first container by default",kubectl exec mypod -- go run hello.go
Create a new config map named api-config from an env file,kubectl create configmap api-config --from-env-file=path/to/parameters.env
"Update pod 'database' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods database team='frontend-team'
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod 8080:8081
Copy /tmp/foo_dir local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo_dir rook-ceph/web-app-pod-1:/etc/kubernetes
List resource information in custom columns,"kubectl get pod email-service-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
"Listen on port 5432 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 5432:8888"
Return snapshot logs from container load-balancer-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/load-balancer-deployment -c proxy-server-pod-1
List a single pod in YAML output format,kubectl get -o yaml pod web-app-pod
Add a taint with key 'dedicated' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  dedicated=node-2:PreferNoSchedule
Set deployment authentication-service-deployment's service account to metrics-server,kubectl set serviceaccount deployment authentication-service-deployment metrics-server
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.user-a-context.cluster galaxy-cluster
"Check to see if I can get the job named ""security-scan-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/security-scan-job -n logging
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/e-commerce-pod
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=star-cluster
Get output from astro-container from pod e-commerce-pod,kubectl attach e-commerce-pod -c astro-container
"Listen on port 5000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/api-service-pod 5000:8888
Create a deployment named gateway that runs the nginx image,kubectl create deployment gateway --image=nginx
"Auto scale a deployment ""backend"", with the number of pods between 2 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment backend --min=2 --max=13
"Embed client certificate data in the ""saas-admin"" entry",kubectl config set-credentials saas-admin --client-certificate=~/.kube/admin.crt --embed-certs=true
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=properties=/path/to/settings/file1.txt --from-file=key1=/path/to/data/file2.txt
Get output from astro-container from pod gateway-pod,kubectl attach gateway-pod -c astro-container
"Listen on port 5000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/web-service 5000:https
Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo prometheus/front-end-pod-12:/tmp/bar
"Listen on port 8088 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8088:9090"
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=data-cluster
Create a new ClusterIP service named log-service-clusterip,kubectl create service clusterip log-service-clusterip --tcp=8010:9000
Add a taint with key 'dedicated' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  dedicated=testing-node-11:PreferNoSchedule
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod proxy-server-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Remove from node 'web-node-8' all the taints with key 'app',kubectl taint nodes web-node-8 app-
Create a deployment named my-dep that runs the jenkins image and expose port 9091,kubectl create deployment my-dep --image=jenkins --port=9091
Return only the phase value of the specified pod,kubectl get -o template pod/web-app-pod --template={{.status.phase}}
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/properties/file2.txt
Remove from node 'web-node-8' all the taints with key 'cpu-type',kubectl taint nodes web-node-8 cpu-type-
Create a new secret named api-secret-key from an env file,kubectl create secret generic api-secret-key --from-env-file=path/to/profiles.env
"Create a role named ""custom_role"" with API Group specified","kubectl create role custom_role --verb=create,get,proxy --resource=clusterrolebindings.rbac.authorization.k8s.io"
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""api-v2"" API group",kubectl get deployments.legacy-1.0.0.api-v2 -o yaml
Get output from nebula-navigator from pod analytics-pod,kubectl attach analytics-pod -c nebula-navigator
"Listen on port 9090 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 9090:8000
"Force replace, delete and then re-create the resource",kubectl replace --force -f ./options.yaml
"Listen on port 9090 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 9090:8081"
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.user-a-context.cluster moon-cluster
Create a new secret named database-secret with keys for each file in folder bar,kubectl create secret generic database-secret --from-file=path/to/profiles
Get output from nano-bot from pod chat-app-pod,kubectl attach chat-app-pod -c nano-bot
"Delete pods and services with same names ""media-stream"" and ""proxy""","kubectl delete pod,service media-stream proxy"
Delete pods and services with label customer=acme-corp,"kubectl delete pods,services -l customer=acme-corp"
Update a single-container pod's image version (tag) to v4,kubectl get pod analytics-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
"Update pod 'frontend' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend contact-email=support@example.com
Remove from node 'app-node-6' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes app-node-6 dedicated:NoSchedule-
Return snapshot logs from container search-engine-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/search-engine-deployment -c media-stream-pod-1
"Listen on port 8888 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8888:3000"
"Embed client certificate data in the ""operator"" entry",kubectl config set-credentials operator --client-certificate=~/.kube/admin.crt --embed-certs=true
"Create a service for a replication controller identified by type and name specified in ""alpine-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f alpine-controller.yaml --port=6379 --target-port=888800
"Create a service for a replicated ruby using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ruby --port=8000 --target-port=808900
"Delete pods and services with same names ""proxy-server"" and ""api""","kubectl delete pod,service proxy-server api"
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/api-service-pod
"Create a single ingress called 'app-proxy-ingress' that directs requests to website.com/bar to svc # svc1:9090 with a tls secret ""my-cert""","kubectl create ingress app-proxy-ingress --rule=""website.com/bar=svc1:9090,tls=my-cert"""
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=settings=/path/to/preferences/file1.txt --from-file=key2=/path/to/preferences/file2.txt
Edit the last-applied-configuration annotations by file in JSON,kubectl apply edit-last-applied -f params.yaml -o json
Add to node 'prod-node-5' a taint with key 'environment' and no value,kubectl taint nodes prod-node-5 environment:NoSchedule
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json compliance-level=PCI-DSS
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/proxy-server-pod 8080:3000
"Delete pods and services with same names ""chat-app"" and ""proxy-server""","kubectl delete pod,service chat-app proxy-server"
Start a ethereum/client-go pod and let the container expose port 8088,kubectl run hazelcast --image=ethereum/client-go --port=8088
"Start a centos pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=centos --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
"Listen on a random port locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod :3000
Start a ubuntu pod and let the container expose port 3000,kubectl run hazelcast --image=ubuntu --port=3000
Set the resource request and limits for all containers in elasticsearch,"kubectl set resources deployment elasticsearch --limits=cpu=200m,memory=512Mi --requests=cpu=2,memory=4Gi"
"Listen on port 5000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/search-service 5000:https
Create a cron job with a command,"kubectl create cronjob data-processing --image=postgres --schedule=""*/1 * * * *"" -- postgres"
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/api-service-pod 8088:8888
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/global-config deployment/monitoring-stack-deployment
Create a job with a command,"kubectl create job log-collection --image=ubuntu -- docker run ubuntu echo ""Hello"
Return snapshot logs from container notification-handler-deployment-1 of a deployment named mypod,kubectl logs deployment/notification-handler-deployment -c mypod-1
Set deployment web-app-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment web-app-deployment gitlab-runner
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name tutorial-ai.ai
"Update pod 'cdn' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn expiration-date='2024-12-31'
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/monitoring-config deployment/proxy-service-deployment
View the details of daemonset revision 3,kubectl rollout history daemonset/test --revision=3
"Delete pods and services with same names ""media-stream"" and ""foo""","kubectl delete pod,service media-stream foo"
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8888 5432
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/monitoring-config deployment/frontend-deployment
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.cloud-context.cluster sun-cluster
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-logging-service
Create a new secret named my-secret from ~/.docker/config.json,kubectl create secret docker-registry my-secret --from-file=.dockerconfigjson=path/to/.docker/config.json
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""beta-apps"" API group",kubectl get deployments.v1.0.0.beta-apps -o json
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod 8088:5432
Create a copy of payment-gateway-pod changing all container images to postgres,kubectl debug payment-gateway-pod --copy-to=dgb-img --set-image=*=postgres
Get output from running the 'dotnet' command in warp-drive from pod proxy-service-pod,kubectl exec proxy-service-pod -c warp-drive -- dotnet
Return snapshot logs from container gateway-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/gateway-deployment -c cdn-service-pod-1
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/preferences/file2.txt
"Update pod 'cdn' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn owner='alice smith'
"Listen on port 6379 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 6379:8088
"Get output from running the 'sleep 3600' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- sleep 3600
Create a copy of gateway-pod adding a debug container and changing container images,"kubectl debug gateway-pod -it --copy-to=debug-image-1 --image=debian --set-image=proxy=nginx:1.21,worker=my-custom-worker:1.2.3"
"If the deployment named backend-service-replicaset's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/backend-service-replicaset
"Create a cluster role named ""default_role"" that allows user to perform ""list"", ""create"" and ""update"" on pods","kubectl create clusterrole default_role --verb=list,create,update --resource=pods"
"Auto scale a replication controller ""vpn"", with the number of pods between 1 and 4, target CPU utilization at 81%",kubectl autoscale rc vpn --max=4 --cpu-percent=81
Start a nginx pod and let the container expose port 5000,kubectl run hazelcast --image=nginx --port=5000
"If the deployment named web's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/web
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 6379 6379
Start a ruby pod and let the container expose port 6379,kubectl run hazelcast --image=ruby --port=6379
"Get output from running the 'wp' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- wp
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.local-context.cluster app-cluster
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/search-service"
Return snapshot logs from container frontend-deployment-1 of a deployment named backend-pod,kubectl logs deployment/frontend-deployment -c backend-pod-1
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=settings=/path/to/preferences/file1.txt --from-file=key2=/path/to/settings/file2.txt
Copy /tmp/foo local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo kube-flannel/worker-pod-4:/etc/kubernetes
Remove the environment variable ENV from container 'astro-container' in all deployment configs,"kubectl set env deployments --all --containers=""astro-container"" ENV-"
Create a new ClusterIP service named shipping-service-clusterip,kubectl create service clusterip shipping-service-clusterip --tcp=9090:27017
Add to node 'edge-node-10' a taint with key 'workload' and no value,kubectl taint nodes edge-node-10 workload:NoSchedule
Update pod 'gateway' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods gateway release-
Add a taint with key 'workload' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  workload=node-1:PreferNoSchedule
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.staging-context.cluster kube-cluster-2
"Update pod 'security' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security git-repo='https://github.com/example/my-app'
Begin streaming the logs of the ruby container in pod proxy-service-pod,kubectl logs -f -c ruby proxy-service-pod
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/monitoring-stack-deployment -c log-aggregator-pod-1
"Update pod 'foo' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo release-notes='https://example.com/release-notes/v2.5.1'
Add a taint with key 'app' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  app=web-node-8:PreferNoSchedule
"Listen on port 8080 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8080:5432
Display only the most recent 20 lines of output in pod cdn-service-pod,kubectl logs --tail=20 cdn-service-pod
Rename the context 'dev-context' to 'user-a-context' in your kubeconfig file,kubectl config rename-context dev-context user-a-context
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""apps"" API group",kubectl get deployments.v1.1.1.apps -o yaml
Create a new config map named namespace-config based on folder parameters,kubectl create configmap namespace-config --from-file=path/to/parameters
"List a pod identified by type and name specified in ""settings.yaml"" in JSON output format",kubectl get -f settings.yaml -o json
"Get output from running the 'mysql' command from pod media-stream-pod, using the first container by default",kubectl exec media-stream-pod -- mysql
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.user-a-context.cluster my-k8s-cluster
Create a cron job with a command,"kubectl create cronjob cron-task --image=postgres --schedule=""*/1 * * * *"" -- postgres"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node storage-node-13 -p '{""spec"":{""rules"":[{""http"":{""paths"":[{""path"":""/"",""backend"":{""service"": {""name"": ""new-service""}}}]}}'"
Get output from running the 'sleep 3600' command in mycontainer from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c mycontainer -- sleep 3600
Create a job with a command,kubectl create job monitoring-job --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet --list-sdks
Display only the most recent 43 lines of output in pod monitoring-pod,kubectl logs --tail=43 monitoring-pod
"Listen on port 8081 locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod 8081:8088
Get output from running the 'redis-server --version' command in time-machine from pod proxy-service-pod,kubectl exec proxy-service-pod -c time-machine -- redis-server --version
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""external-apps"" API group",kubectl get deployments.rc-1.1.0.external-apps -o json
Create a copy of proxy-service-pod changing all container images to ubuntu,kubectl debug proxy-service-pod --copy-to=debug-image-api --set-image=*=ubuntu
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 8443,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=8443
Get output from the first pod of a replica set named python,kubectl attach rs/python
Create a new ExternalName service named external-payment-gateway-service,kubectl create service externalname external-payment-gateway-service --external-name bar.com
Create a deployment named gitlab that runs the ruby image and expose port 3001,kubectl create deployment gitlab --image=ruby --port=3001
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-settings deployment/log-aggregator-deployment
"Get output from running 'jenkins-plugin-cli' command from the first pod of the service backend-service, using the first container by default",kubectl exec svc/backend-service -- jenkins-plugin-cli
Create a cron job with a command,"kubectl create cronjob daily-report --image=jenkins --schedule=""*/1 * * * *"" -- jenkins --version"
Create a copy of e-commerce-pod changing all container images to busybox,kubectl debug e-commerce-pod --copy-to=my-debugger --set-image=*=busybox
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp prometheus/file-server-pod-14::/tmp/foo /tmp/bar_dir
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 9090 8888
Add to node 'kube-master-9' a taint with key 'special' and no value,kubectl taint nodes kube-master-9 special:NoSchedule
Update pod 'frontend' with the label 'app' and the value 'myapp',kubectl label pods frontend app=myapp
Begin streaming the logs of the nebula-navigator container in pod gateway-pod,kubectl logs -f -c nebula-navigator gateway-pod
Create a new ClusterIP service named inventory-service-clusterip,kubectl create service clusterip inventory-service-clusterip --tcp=9090:8443
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/security-service-pod 6379:3000
Roll back to daemonset revision 7,kubectl rollout undo daemonset/test --to-revision=7
"Listen on port 8000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/proxy-server-pod 8000:3000
Update pod 'backend' with the label 'release' and the value 'v2.0',kubectl label pods backend release=v2.0
View the details of daemonset revision 5,kubectl rollout history daemonset/namespace-3 --revision=5
"Listen on port 9090 locally, forwarding to 5000 in the pod",kubectl port-forward pod/api-service-pod 9090:5000
Embed certificate authority data for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --embed-certs --certificate-authority=~/.kube/cluster-beta/kubernetes.ca.crt
Approve CSR 'csr-frontend-4',kubectl certificate approve csr-frontend-4
Create a copy of chat-app-pod changing all container images to golang,kubectl debug chat-app-pod --copy-to=debug-image-api --set-image=*=golang
Get output from running the 'mongod' command in quantum-quark from pod proxy-service-pod,kubectl exec proxy-service-pod -c quantum-quark -- mongod
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/analytics-service"
Add a taint with key 'app' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  app=testing-node-11:PreferNoSchedule
Remove from node 'testing-node-11' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes testing-node-11 datacenter:NoExecute-
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-name-config deployment/log-aggregator-deployment
"Listen on port 6379 locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod 6379:5432
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=kube-cluster-1
Update pod 'database' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods database release-
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 6379 3000
"Listen on port 5432 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5432:3000
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/log-aggregator-pod 8088:8000
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=settings=/path/to/settings/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/db-service"
Get output from running the 'node' command in stardust-shuttle from pod frontend-pod,kubectl exec frontend-pod -c stardust-shuttle -- node
"Listen on port 9090 locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod 9090:3000
"Create a role named ""view"" with ResourceName specified",kubectl create role view --verb=watch --resource=pods --resource-name=load-balancer --resource-name=app-worker-1
Create a job with a command,kubectl create job image-build-job --image=node -- node
"Listen on port 8081 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8081:5000
"Listen on port 8080 locally, forwarding to 8080 in the pod",kubectl port-forward pod/security-service-pod 8080:8080
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 9090 8888
Set deployment user-management-deployment's service account to argocd,kubectl set serviceaccount deployment user-management-deployment argocd
Return snapshot logs from pod log-aggregator-pod with only one container,kubectl logs log-aggregator-pod
Update pod 'foo' with the label 'env' and the value 'production',kubectl label pods foo env=production
"Listen on port 6379 locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod 6379:8088
Create a new config map named api-config from an env file,kubectl create configmap api-config --from-env-file=path/to/configurations.env
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/log-aggregator-pod 8080:8088
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/database-pod
Remove from node 'worker-node-3' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes worker-node-3 dedicated:NoSchedule-
Add a taint with key 'datacenter' on nodes having label myLabel,kubectl taint node -l myLabel  datacenter=gpu-node-12:PreferNoSchedule
Return snapshot of previous terminated rocket-ranger container logs from pod gateway-pod,kubectl logs -p -c rocket-ranger gateway-pod
"Update pod 'foo' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo custom-label=my-custom-value
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=settings=/path/to/properties/file1.txt --from-file=key2=/path/to/properties/file2.txt
Set deployment email-server-deployment's service account to istio,kubectl set serviceaccount deployment email-server-deployment istio
"List deployments in JSON output format, in the ""custom-version"" version of the ""my-apps"" API group",kubectl get deployments.custom-version.my-apps -o json
Create a job with a command,"kubectl create job backup --image=ubuntu -- docker run ubuntu echo ""Hello"
Remove from node 'worker-node-3' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes worker-node-3 environment:NoSchedule-
Update pod 'cdn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods cdn role-
Update pod 'security' with the label 'tier' and the value 'frontend',kubectl label pods security tier=frontend
Update image of all containers of daemonset staging to 'debian:11.0',kubectl set image daemonset staging *=debian:11.0
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/db-config deployment/frontend-deployment
Add a taint with key 'zone' on nodes having label component=proxy,kubectl taint node -l component=proxy  zone=node-1:PreferNoSchedule
Start a mongo pod and let the container expose port 8443,kubectl run hazelcast --image=mongo --port=8443
Create a job with a command,kubectl create job log-processing-job --image=mongo -- mongo --version
Return snapshot logs from container order-processing-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/order-processing-deployment -c web-app-pod-1
"Listen on port 8888 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/user-service 8888:https
"Update pod 'cdn' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods cdn security-scan-status='pass'
Return snapshot logs from container order-processing-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/order-processing-deployment -c proxy-service-pod-1
"Listen on port 8888 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8888:8000
"Create a role named ""bar"" with ResourceName specified",kubectl create role bar --verb=create --resource=pods --resource-name=database-master --resource-name=api-server
Rollback to the previous deployment,kubectl rollout undo deployment/namespace-3
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.service-account-context.cluster web-cluster
Create a deployment named mattermost that runs the mongo image and expose port 8083,kubectl create deployment mattermost --image=mongo --port=8083
Remove from node 'monitoring-node-15' all the taints with key 'cpu-type',kubectl taint nodes monitoring-node-15 cpu-type-
"Update pod 'media-stream' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream env=staging
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""experimental-apps"" API group",kubectl get deployments.stable-2.0.0.experimental-apps -o yaml
Use the context for the prod-cluster cluster,kubectl config use-context prod-cluster
Update pod 'foo' only if the resource is unchanged from version 1,kubectl label pods foo status=unhealthy --resource-version=1
Get output from running the 'geth' command in mycontainer from pod proxy-server-pod,kubectl exec proxy-server-pod -c mycontainer -- geth
Set deployment search-engine-deployment's service account to vault,kubectl set serviceaccount deployment search-engine-deployment vault
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.v2.0.0.sandbox-apps -o yaml
"Set a deployments postgres container cpu limits to ""50m"" and memory to ""4Gi""","kubectl set resources deployment postgres -c=nginx --limits=cpu=50m,memory=4Gi"
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""prod-apps"" API group",kubectl get deployments.v3.0.0.prod-apps -o yaml
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/analytics-pod 6379:8081
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=app-cluster
"Update pod 'email' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods email criticality='high'
Update pod 'media-stream' with the label 'component' and the value 'worker',kubectl label pods media-stream component=worker
Create a new config map named global-config from an env file,kubectl create configmap global-config --from-env-file=path/to/settings.env
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""extensions"" API group",kubectl get deployments.stable-2.0.0.extensions -o yaml
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/security-service-pod 5000 8888
Deny CSR 'csr-mysql-10',kubectl certificate deny csr-mysql-10
Get the documentation of a specific field of a resource,kubectl explain resource=services.spec.replicas
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/proxy-server-pod
"Run a proxy to the Kubernetes API server on port 8081, serving static content from ./local/www/",kubectl proxy --port=8081 --www=./local/www/
"Start a php pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=php --overrides='{ ""apiVersion"": ""v2.0.0"", ""spec"": { ... } }'"
Create a job with a command,kubectl create job monitoring-job --image=python -- python --version
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/backend-pod :5432
Create a copy of gateway-pod adding a debug container and changing container images,"kubectl debug gateway-pod -it --copy-to=dgb-img --image=debian --set-image=app=app:debug,api=api:v2"
Update image of all containers of daemonset staging to 'postgres:13.4',kubectl set image daemonset staging *=postgres:13.4
Return snapshot logs from container user-management-deployment-1 of a deployment named mypod,kubectl logs deployment/user-management-deployment -c mypod-1
Get output from running the 'mongo' command in mycontainer from pod api-service-pod,kubectl exec api-service-pod -c mycontainer -- mongo
Update image of all containers of daemonset namespace- to 'amazonlinux:2',kubectl set image daemonset namespace-3 *=amazonlinux:2
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/e-commerce-pod
"Update pod 'cdn' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn custom-label=my-custom-value
"Listen on port 8888 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8888:3000"
Begin streaming the logs of the quantum-quark container in pod vpn-service-pod,kubectl logs -f -c quantum-quark vpn-service-pod
Remove from node 'k8s-node-1' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes k8s-node-1 app:PreferNoSchedule-
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.client-1-context.cluster kube-cluster-1
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 5000 8088
Create a new LoadBalancer service named proxy-service-lb,kubectl create service loadbalancer proxy-service-lb --tcp=8010:6379
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/email-service-pod
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=sun-cluster
"Listen on port 5432 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 5432:5000"
Get output from running the 'pg_dump --version' command in stardust-shuttle from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c stardust-shuttle -- pg_dump --version
Create a copy of monitoring-pod changing all container images to ubuntu,kubectl debug monitoring-pod --copy-to=dgb-img --set-image=*=ubuntu
Update pod 'auth' with the label 'role' and the value 'backend',kubectl label pods auth role=backend
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=properties=/path/to/data/file1.txt --from-file=key1=/path/to/settings/file2.txt
Set deployment email-server-deployment's service account to default,kubectl set serviceaccount deployment email-server-deployment default
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""testing-apps"" API group",kubectl get deployments.v3.0.0.testing-apps -o json
"Update pod 'media-stream' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods media-stream status=unhealthy
Create a job,kubectl create job testing --image=busybox
"Listen on port 8081 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8081:8080
Create a new secret named ldap-credentials-secret with keys for each file in folder bar,kubectl create secret generic ldap-credentials-secret --from-file=path/to/preferences
Create a job with a command,kubectl create job audit-job --image=amazonlinux -- bash
Unset namespace in cloud-context context,kubectl config unset contexts.cloud-context.namespace
"Start a php pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=php --overrides='{ ""apiVersion"": ""beta-1.0"", ""spec"": { ... } }'"
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5000:9090
"Listen on port 3000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 3000:5000
"Create a service for an node deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment node --port=8443 --target-port=808300
Create a copy of email-service-pod changing the command of cyber-sleuth,kubectl debug email-service-pod -it --copy-to=debug-image-api --container=cyber-sleuth -- sh
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/email-service"
Check the rollout status of a daemonset,kubectl rollout status daemonset/test
"Delete pods and services with same names ""web"" and ""log-aggregator""","kubectl delete pod,service web log-aggregator"
"Create a service for a replicated ruby using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ruby --port=3306 --target-port=909200
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/log-analysis-job -n kube-dns
"Delete pods and services with same names ""analytics"" and ""proxy-server""","kubectl delete pod,service analytics proxy-server"
"Listen on port 5432 locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod 5432:8088
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f kube-proxy-config.yaml -p '{""spec"":{""replicas"":3}'"
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp kubeapps/monitoring-agent-pod-6:~/.config/kube /tmp/bar_dir
"If the deployment named backend-service-replicaset's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/backend-service-replicaset
Start a amazonlinux pod and let the container expose port 8010,kubectl run hazelcast --image=amazonlinux --port=8010
Return snapshot logs from container proxy-service-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/proxy-service-deployment -c media-stream-pod-1
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/api-config deployment/analytics-platform-deployment
Begin streaming the logs of the code-explorer container in pod mypod,kubectl logs -f -c code-explorer mypod
Get output from running the 'mongod' command in nano-bot from pod e-commerce-pod,kubectl exec e-commerce-pod -c nano-bot -- mongod
"Listen on port 8081 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8081:8088
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.dev-context.cluster staging-cluster
Get output from cyber-sleuth from pod gateway-pod,kubectl attach gateway-pod -c cyber-sleuth
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/frontend-pod 5000:6379
Create a new secret named password-secret with keys for each file in folder bar,kubectl create secret generic password-secret --from-file=path/to/preferences
"Create a service for a replicated alpine using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs alpine --port=8000 --target-port=300000
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""my-apps"" API group",kubectl get deployments.legacy-1.0.0.my-apps -o json
"Listen on port 5432 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 5432:8088
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/queue-processing-job -n monitoring
Describe a pod,kubectl describe pods/admin-dashboard-pod
Get output from lunar-launcher from pod frontend-pod,kubectl attach frontend-pod -c lunar-launcher
Import environment from a secret,kubectl set env --from=secret/password-secret deployment/load-balancer-deployment
Add to node 'web-node-8' a taint with key 'cpu-type' and no value,kubectl taint nodes web-node-8 cpu-type:NoSchedule
Create a new secret named email-credentials-secret with keys for each file in folder bar,kubectl create secret generic email-credentials-secret --from-file=path/to/properties
"Create a service for a replicated ubuntu using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ubuntu --port=8081 --target-port=808000
Create a new secret named azure-storage-secret with keys for each file in folder bar,kubectl create secret generic azure-storage-secret --from-file=path/to/data
Create a new secret named email-credentials-secret from an env file,kubectl create secret generic email-credentials-secret --from-env-file=path/to/parameters.env
Set the resource request and limits for all containers in ruby,"kubectl set resources deployment ruby --limits=cpu=200m,memory=512Mi --requests=cpu=2,memory=1Gi"
"Get output from running the 'redis-server' command from pod log-aggregator-pod, using the first container by default",kubectl exec log-aggregator-pod -- redis-server
"Set a deployments redis container cpu limits to ""2"" and memory to ""128Mi""","kubectl set resources deployment redis -c=nginx --limits=cpu=2,memory=128Mi"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/mypod 5000 5000
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json security-scan-status=pass
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 9090 8088
Diff resources included in config.json,kubectl diff -f config.json
"Get output from running the 'elasticsearch' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- elasticsearch
Roll back to daemonset revision 7,kubectl rollout undo daemonset/namespace-3 --to-revision=7
Create a job with a command,kubectl create job audit-job --image=wordpress -- mysql --version
Add to node 'kube-master-9' a taint with key 'datacenter' and no value,kubectl taint nodes kube-master-9 datacenter:NoSchedule
"Get output from running the '/bin/bash -c ""echo 'Hello, Amazon Linux'""' command from pod analytics-pod, using the first container by default","kubectl exec analytics-pod -- /bin/bash -c ""echo 'Hello, Amazon Linux'"""
Begin streaming the logs from all containers in pods defined by label feature=feature-xyz,kubectl logs -f -l feature=feature-xyz --all-containers=true
Scale a replica set named 'baz' to 7,kubectl scale --replicas=7 rs/baz
"Listen on port 5000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 5000:8080
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/ui-config deployment/order-processing-deployment
Get output from mycontainer from pod proxy-service-pod,kubectl attach proxy-service-pod -c mycontainer
"Listen on port 8081 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8081:8888
Update pod 'web' with the label 'component' and the value 'worker',kubectl label pods web component=worker
Set deployment monitoring-stack-deployment's service account to vault,kubectl set serviceaccount deployment monitoring-stack-deployment vault
"If the deployment named web's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/web
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json scaling-policy=auto-horizontal-scaling
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/global-config deployment/authentication-service-deployment
Return snapshot logs from container notification-handler-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/notification-handler-deployment -c chat-app-pod-1
"Create a service for a replication controller identified by type and name specified in ""alpine-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f alpine-controller.yaml --port=7000 --target-port=909000
Create a copy of mypod changing all container images to wordpress,kubectl debug mypod --copy-to=debug-image-1 --set-image=*=wordpress
Add a taint with key 'workload' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  workload=k8s-node-1:PreferNoSchedule
Update pod 'frontend' with the label 'role' and the value 'backend',kubectl label pods frontend role=backend
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=app-cluster
Set deployment payment-processor-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment payment-processor-deployment kube-scheduler
"Listen on port 8000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod 8000:8888
"Listen on port 3000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 3000:5432
Import environment from a secret,kubectl set env --from=secret/payment-gateway-secret deployment/email-server-deployment
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""api-v1"" API group",kubectl get deployments.v2.1.0.api-v1 -o json
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""extensions"" API group",kubectl get deployments.v2.1.0.extensions -o json
Update pod 'gateway' with the label 'tier' and the value 'backend',kubectl label pods gateway tier=backend
Apply resources from a directory containing kustomization.yaml - e.g. conf/kustomization.yaml,kubectl apply -k conf/
Get output from running the 'mysqld' command in lunar-launcher from pod cdn-service-pod,kubectl exec cdn-service-pod -c lunar-launcher -- mysqld
Start a nginx pod and let the container expose port 9000,kubectl run hazelcast --image=nginx --port=9000
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=8089:8010
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-secrets deployment/monitoring-stack-deployment
Return snapshot logs from all containers in pods defined by label app=web-app,kubectl logs -l app=web-app --all-containers=true
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-config-dev deployment/proxy-service-deployment
Return snapshot of previous terminated warp-drive container logs from pod mypod,kubectl logs -p -c warp-drive mypod
Return snapshot of previous terminated code-explorer container logs from pod log-aggregator-pod,kubectl logs -p -c code-explorer log-aggregator-pod
"Check to see if I can get the job named ""data-migration-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/data-migration-job -n development
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=80 --target-port=330600
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""api-v1"" API group",kubectl get deployments.stable-2.0.0.api-v1 -o yaml
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=9000 --target-port=700000
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 8080 8080
"Get output from running 'psql' command from the first pod of the service proxy-service, using the first container by default",kubectl exec svc/proxy-service -- psql
Set deployment log-aggregator-deployment's service account to argocd,kubectl set serviceaccount deployment log-aggregator-deployment argocd
Get output from running the 'nginx' command in cyber-sleuth from pod backend-pod,kubectl exec backend-pod -c cyber-sleuth -- nginx
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/email-service"
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp prometheus/payment-gateway-pod-19::/tmp/foo :/tmp/bar
Import environment from a secret,kubectl set env --from=secret/monitoring-credentials-secret deployment/mydeployment
Create a job with a command,kubectl create job backup --image=wordpress -- apache2ctl -D FOREGROUND
Update all deployments' and rc's nginx container's image to 'nginx:1.21.3',"kubectl set image deployments,rc nginx=nginx:1.21.3 --all"
Set deployment backend-microservice-deployment's service account to cert-manager,kubectl set serviceaccount deployment backend-microservice-deployment cert-manager
"Update pod 'foo' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo criticality=high
Update pod 'vpn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods vpn role-
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/profiles/file2.txt
Create a new secret named docker-registry-secret from an env file,kubectl create secret generic docker-registry-secret --from-env-file=path/to/data.env
"Create a cluster role named ""bar"" with ResourceName specified",kubectl create clusterrole bar --verb=use --resource=services --resource-name=content-delivery --resource-name=content-delivery
Copy ~/.config/kube from a remote pod to /etc/kubernetes locally,kubectl cp kube-proxy/metrics-exporter-pod-10:~/.config/kube /etc/kubernetes
Set the resource request and limits for all containers in wordpress,"kubectl set resources deployment wordpress --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=256Mi"
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/frontend-pod 8888:8000
Get output from running the 'python' command in astro-container from pod vpn-service-pod,kubectl exec vpn-service-pod -c astro-container -- python
"Listen on port 8088 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8088:8081
"Listen on port 8888 locally, forwarding to 8088 in the pod",kubectl port-forward pod/backend-pod 8888:8088
Create a new ExternalName service named external-geolocation-service,kubectl create service externalname external-geolocation-service --external-name sandbox-site.co
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=6379 --target-port=909200
Build the current working directory,kubectl kustomize
"Get output from running the 'nginx' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- nginx
Create a new LoadBalancer service named monitoring-lb,kubectl create service loadbalancer monitoring-lb --tcp=5000:8000
Get output from running the 'node' command in warp-drive from pod analytics-pod,kubectl exec analytics-pod -c warp-drive -- node
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.local-context.cluster star-cluster
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""mobile-apps"" API group",kubectl get deployments.v1.1.0.mobile-apps -o json
Start a redis pod and let the container expose port 8888,kubectl run hazelcast --image=redis --port=8888
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.local-context.cluster on-prem-cluster
Delete resources from a directory containing kustomization.yaml - e.g. dir/kustomization.yaml,kubectl delete -k dir/
"Get output from running the 'mysqld' command from pod proxy-service-pod, using the first container by default",kubectl exec proxy-service-pod -- mysqld
Create a new secret named gcp-service-account-secret from an env file,kubectl create secret generic gcp-service-account-secret --from-env-file=path/to/profiles.env
"Listen on port 5432 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 5432:8080"
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/email-service-pod
Get output from running the 'dotnet --list-sdks' command in rocket-ranger from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c rocket-ranger -- dotnet --list-sdks
Update pod 'media-stream' with the label 'unhealthy' and the value 'true',kubectl label pods media-stream unhealthy=true
"Auto scale a deployment ""proxy-server"", with the number of pods between 7 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy-server --min=7 --max=14
Import environment from a secret,kubectl set env --from=secret/ssh-key-secret deployment/search-engine-deployment
Set deployment email-server-deployment's service account to elasticsearch,kubectl set serviceaccount deployment email-server-deployment elasticsearch
Add a taint with key 'hardware' on nodes having label environment=production,kubectl taint node -l environment=production  hardware=prod-node-5:PreferNoSchedule
Create a job with a command,kubectl create job report-generation-job --image=python -- python
Edit the service named 'api-service',kubectl edit svc/api-service
Create a new ExternalName service named external-dns-service,kubectl create service externalname external-dns-service --external-name museum-example.museum
"Auto scale a deployment ""frontend"", with the number of pods between 6 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=6 --max=9
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=settings=/path/to/options/file1.txt --from-file=key2=/path/to/settings/file2.txt
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8080 3000
"Listen on port 8081 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8081:3000
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/cache-warming-job -n logging
Update deployment 'web-app-deployment' with a new environment variable,kubectl set env deployment/web-app-deployment ENV=prod
Create a new ExternalName service named external-third-party-api-service,kubectl create service externalname external-third-party-api-service --external-name dummy-website.io
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/api-config deployment/proxy-service-deployment
Create a new config map named api-config from an env file,kubectl create configmap api-config --from-env-file=path/to/data.env
"Update a role binding for user1, user2, and group1",kubectl set subject rolebinding admin --user=user1 --user=user2 --group=group1
Start a redis pod and let the container expose port 8081,kubectl run hazelcast --image=redis --port=8081
Get output from running the 'geth attach' command in rocket-ranger from pod e-commerce-pod,kubectl exec e-commerce-pod -c rocket-ranger -- geth attach
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/kube-system-config deployment/database-deployment
"Update pod 'backend' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend compliance-level=PCI-DSS
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.local-context.cluster kube-cluster-2
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp monitoring/load-balancer-pod-9:/tmp/foo /tmp/bar
"Create a service for a replication controller identified by type and name specified in ""wordpress-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f wordpress-controller.yaml --port=8080 --target-port=801000
"Update pod 'api' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api custom-label=my-custom-value
Return snapshot of previous terminated cosmic-container container logs from pod log-aggregator-pod,kubectl logs -p -c cosmic-container log-aggregator-pod
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.cluster-1-context.cluster on-prem-cluster
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/security-service-pod 8000:5432
"List deployments in YAML output format, in the ""custom-version"" version of the ""mobile-apps"" API group",kubectl get deployments.custom-version.mobile-apps -o yaml
Return snapshot logs from container search-engine-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/search-engine-deployment -c api-service-pod-1
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""api-v1"" API group",kubectl get deployments.hotfix-1.1.2.api-v1 -o yaml
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/env-vars deployment/search-engine-deployment
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/web-app-pod
"As above, but abort if there are pods not managed by a replication controller, replica set, job, daemon set or stateful set, and use a grace period of 5 minutes",kubectl drain foo --grace-period=300
Create a new secret named aws-credentials-secret with key1=supersecret and key2=topsecret,kubectl create secret generic aws-credentials-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
"Update a role binding for admin, devops-user, and operations-team",kubectl set subject rolebinding admin --user=admin --user=devops-user --group=operations-team
"Delete pods and services with same names ""proxy-server"" and ""frontend""","kubectl delete pod,service proxy-server frontend"
"Listen on port 8888 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8888:8088"
Add to node 'app-node-6' a taint with key 'disktype' and no value,kubectl taint nodes app-node-6 disktype:NoSchedule
"Update pod 'payment' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment git-repo='https://github.com/example/my-app'
Start a jenkins pod and let the container expose port 9091,kubectl run hazelcast --image=jenkins --port=9091
Create a copy of frontend-pod changing all container images to nginx,kubectl debug frontend-pod --copy-to=dgb-img --set-image=*=nginx
"Listen on port 8888 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/api-service 8888:https
Create a job with a command,kubectl create job cleanup --image=postgres -- psql
Update pod 'auth' with the label 'role' and the value 'cache',kubectl label pods auth role=cache
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8888 6379
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod security-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach security-service-pod -c cosmic-container -i -t
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=5432:7000
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=web-cluster
Create a new secret named payment-gateway-secret with keys for each file in folder bar,kubectl create secret generic payment-gateway-secret --from-file=path/to/data
List resource information in custom columns,"kubectl get pod api-service-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=sun-cluster
Add a taint with key 'special' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  special=dev-node-4:PreferNoSchedule
Remove from node 'node-2' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes node-2 workload:NoSchedule-
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod 8080:8888
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8088 8081
Add a taint with key 'datacenter' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  datacenter=kube-master-9:PreferNoSchedule
Return snapshot of previous terminated astro-container container logs from pod security-service-pod,kubectl logs -p -c astro-container security-service-pod
"Listen on port 5432 locally, forwarding to 5000 in the pod",kubectl port-forward pod/analytics-pod 5432:5000
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""extensions"" API group",kubectl get deployments.beta-1.0.extensions -o yaml
Begin streaming the logs of the lunar-launcher container in pod cdn-service-pod,kubectl logs -f -c lunar-launcher cdn-service-pod
Return snapshot logs from pod proxy-server-pod with only one container,kubectl logs proxy-server-pod
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/proxy-server-pod 8888:5000
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/log-config deployment/payment-processor-deployment
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/ui-config deployment/cache-cluster-deployment
Begin streaming the logs of the mycontainer container in pod log-aggregator-pod,kubectl logs -f -c mycontainer log-aggregator-pod
Return snapshot logs from container payment-processor-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/payment-processor-deployment -c e-commerce-pod-1
Get output from the first pod of a replica set named alpine,kubectl attach rs/alpine
Approve CSR 'csr-elastic-9',kubectl certificate approve csr-elastic-9
Return snapshot of previous terminated cyber-sleuth container logs from pod proxy-server-pod,kubectl logs -p -c cyber-sleuth proxy-server-pod
Create a new ExternalName service named external-database-service,kubectl create service externalname external-database-service --external-name sample-domain.net
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=conf=/path/to/settings/file1.txt --from-file=data=/path/to/settings/file2.txt
Return snapshot of previous terminated mycontainer container logs from pod auth-service-pod,kubectl logs -p -c mycontainer auth-service-pod
Get output from running the 'jenkins-plugin-cli' command in code-explorer from pod media-stream-pod,kubectl exec media-stream-pod -c code-explorer -- jenkins-plugin-cli
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 8080,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=8080
Add a taint with key 'workload' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  workload=node-1:PreferNoSchedule
Remove the environment variable ENV from container 'time-machine' in all deployment configs,"kubectl set env deployments --all --containers=""time-machine"" ENV-"
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/backend-service"
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/api-config deployment/order-processing-deployment
Get output from running the 'java -jar /usr/share/jenkins/jenkins.war' command in code-explorer from pod api-service-pod,kubectl exec api-service-pod -c code-explorer -- java -jar /usr/share/jenkins/jenkins.war
Update deployment 'cache-cluster-deployment' with a new environment variable,kubectl set env deployment/cache-cluster-deployment DB_HOST=localhost
Remove from node 'monitoring-node-15' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes monitoring-node-15 disktype:NoSchedule-
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=5001 --target-port=543200
"If the deployment named staging-app-rs's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/staging-app-rs
Return snapshot logs from all containers in pods defined by label instance=app-instance-1,kubectl logs -l instance=app-instance-1 --all-containers=true
Get output from running the 'geth attach' command in mycontainer from pod vpn-service-pod,kubectl exec vpn-service-pod -c mycontainer -- geth attach
"List deployments in YAML output format, in the ""custom-version"" version of the ""alpha-apps"" API group",kubectl get deployments.custom-version.alpha-apps -o yaml
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=9090 --target-port=909000
"Update pod 'gateway' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods gateway last-deployment='2023-03-15'
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/user-management-deployment PORT=8080 -o yaml
Create a job with a command,kubectl create job batch-processing --image=postgres -- postgres
Resume an already paused deployment,kubectl rollout resume deployment/namespace-1
Get output from mycontainer from pod cdn-service-pod,kubectl attach cdn-service-pod -c mycontainer
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/security-service-pod 5432 8080
"Listen on port 8088 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8088:8088
Create a deployment named my-dep that runs the amazonlinux image and expose port 5001,kubectl create deployment my-dep --image=amazonlinux --port=5001
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""mobile-apps"" API group",kubectl get deployments.rc-1.1.0.mobile-apps -o yaml
Update pod 'log-aggregator' with the label 'release' and the value 'v2.0',kubectl label pods log-aggregator release=v2.0
Add a taint with key 'special' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  special=edge-node-10:PreferNoSchedule
Get output from running the 'python --version' command in nebula-navigator from pod analytics-pod,kubectl exec analytics-pod -c nebula-navigator -- python --version
Scale a replica set named 'app-v2-replicaset' to 5,kubectl scale --replicas=5 rs/app-v2-replicaset
"Create a service for a replicated php, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc php --port=5000 --target-port=909000
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.cluster-1-context.cluster dev-cluster
Update image of all containers of daemonset namespace-1 to 'ruby:3.0.2',kubectl set image daemonset namespace-1 *=ruby:3.0.2
Create a job with a command,kubectl create job indexing --image=alpine -- apk add curl
Create a new config map named global-config from the key=value pairs in the file,kubectl create configmap global-config --from-file=path/to/configs
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-name-config deployment/monitoring-stack-deployment
Return snapshot logs from container web-app-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/web-app-deployment -c api-service-pod-1
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod 8000:8088
Update pod 'chat-app' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods chat-app env-
Create a deployment with a command,kubectl create deployment app --image=ruby -- irb
"Create a cluster role binding for user1, user2, and group1 using the bar cluster role",kubectl create clusterrolebinding bar --clusterrole=bar --user=user1 --user=user2 --group=group1
"Create a service for a replicated alpine using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs alpine --port=3306 --target-port=500000
Return snapshot logs from all containers in pods defined by label cluster=my-cluster,kubectl logs -l cluster=my-cluster --all-containers=true
Start a jenkins pod and let the container expose port 9092,kubectl run hazelcast --image=jenkins --port=9092
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/cache-cluster-deployment -c gateway-pod-1
"If the deployment named bar's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/bar
Update pod 'api' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods api release-
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""api-v1"" API group",kubectl get deployments.v1.1.1.api-v1 -o yaml
"Listen on port 5432 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 5432:8000
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/global-config deployment/frontend-deployment
Create a new ExternalName service named external-notification-service,kubectl create service externalname external-notification-service --external-name blog-test.blog
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=autoscaling
Add a taint with key 'special' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  special=dev-node-4:PreferNoSchedule
Add a taint with key 'dedicated' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  dedicated=k8s-node-1:PreferNoSchedule
Add a taint with key 'hardware' on nodes having label myLabel,kubectl taint node -l myLabel  hardware=dev-node-4:PreferNoSchedule
Update image of all containers of daemonset app-v2 to 'golang:1.17',kubectl set image daemonset app-v2 *=golang:1.17
Create a cron job with a command,"kubectl create cronjob alerts-cleanup --image=postgres --schedule=""*/1 * * * *"" -- pg_dump --version"
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=kube-cluster-2
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 9090 8000
"Listen on port 5000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 5000:8000"
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/ui-config deployment/scheduler-app-deployment
Remove from node 'app-node-6' all the taints with key 'special',kubectl taint nodes app-node-6 special-
Create a deployment named my-dep that runs the postgres image and expose port 8089,kubectl create deployment my-dep --image=postgres --port=8089
"Update pod 'proxy-server' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server security-scan-status=pass
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json env=staging
Add a taint with key 'special' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  special=monitoring-node-15:PreferNoSchedule
Remove from node 'node-2' all the taints with key 'workload',kubectl taint nodes node-2 workload-
Create a deployment named gitlab that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 8443,kubectl create deployment gitlab --image=docker.elastic.co/elasticsearch/elasticsearch --port=8443
Show all logs from pod auth-service-pod written in the last hour,kubectl logs --since=1h auth-service-pod
Set deployment proxy-service-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment proxy-service-deployment kube-scheduler
Add a taint with key 'cpu-type' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  cpu-type=backup-node-14:PreferNoSchedule
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/log-aggregator-pod 8000:5432
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=kube-cluster-1
"Listen on port 3000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 3000:8088
"Get output from running the 'geth version' command from pod web-app-pod, using the first container by default",kubectl exec web-app-pod -- geth version
Create a new NodePort service named e-commerce-nodeport,kubectl create service nodeport e-commerce-nodeport --tcp=5000:9090
"If the deployment named staging-app-rs's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/staging-app-rs
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8888 8888
Add a taint with key 'datacenter' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  datacenter=node-2:PreferNoSchedule
"Listen on port 9090 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 9090:5432
Begin streaming the logs of the mycontainer container in pod payment-gateway-pod,kubectl logs -f -c mycontainer payment-gateway-pod
"Update pod 'backend' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend owner='alice smith'
"Listen on port 8080 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8080:5432
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json env=staging
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/web-service"
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""api-v2"" API group",kubectl get deployments.v1.0.0.api-v2 -o json
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to /etc/kubernetes locally,kubectl cp kube-public/database-pod-2:/var/run/secrets/kubernetes.io/serviceaccount/ /etc/kubernetes
Create a new ExternalName service named external-authentication-service,kubectl create service externalname external-authentication-service --external-name sandbox-site.co
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/backend-pod 9090 9090
"Delete pods and services with same names ""proxy-server"" and ""web""","kubectl delete pod,service proxy-server web"
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""backup-apps"" API group",kubectl get deployments.stable-2.0.0.backup-apps -o yaml
"Check to see if I can get the job named ""backup-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/backup-job -n monitoring
Embed certificate authority data for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --embed-certs --certificate-authority=~/.kube/cluster-beta/kubernetes.ca.crt
Create a deployment named monitoring that runs the ruby image and expose port 8083,kubectl create deployment monitoring --image=ruby --port=8083
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config deployment/order-processing-deployment
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod analytics-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach analytics-pod -c time-machine -i -t
Return snapshot logs from pod mypod with only one container,kubectl logs mypod
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=cloud-cluster
List resource information in custom columns,"kubectl get pod cdn-service-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Copy ~/.config/kube local file to :/tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube kube-dns/logging-agent-pod-7::/tmp/bar
Create a job with a command,kubectl create job scaling-job --image=python -- pip --version
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod 8000:8080
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""testing-apps"" API group",kubectl get deployments.v2.1.0.testing-apps -o yaml
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/api-service-pod 6379:8000
Update pod 'gateway' with the label 'unhealthy' and the value 'true',kubectl label pods gateway unhealthy=true
"Listen on port 8080 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8080:6379
Set deployment order-processing-deployment's service account to kube-proxy,kubectl set serviceaccount deployment order-processing-deployment kube-proxy
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=8181 --target-port=808300
"If the deployment named prod-app-rs's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/prod-app-rs
Get output from running the 'postgres' command in stardust-shuttle from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c stardust-shuttle -- postgres
Get output from running pod analytics-pod; use the 'kubectl.kubernetes.io/default-container' annotation # for selecting the container to be attached or the first container in the pod will be chosen,kubectl attach analytics-pod
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/api-service-pod :8080
Embed certificate authority data for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --embed-certs --certificate-authority=~/.kube/data-cluster/kubernetes.ca.crt
"Update pod 'analytics' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods analytics criticality='high'
"Auto scale a deployment ""database"", with the number of pods between 2 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment database --min=2 --max=10
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 5432 6379
"Auto scale a replication controller ""auth"", with the number of pods between 1 and 6, target CPU utilization at 40%",kubectl autoscale rc auth --max=6 --cpu-percent=40
Create a new secret named email-credentials-secret from an env file,kubectl create secret generic email-credentials-secret --from-env-file=path/to/settings.env
Return snapshot logs from container user-management-deployment-1 of a deployment named backend-pod,kubectl logs deployment/user-management-deployment -c backend-pod-1
"Listen on port 5432 locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod 5432:3000
Update pod 'frontend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods frontend component-
Print the supported namespaced resources,kubectl api-resources --kindspaced=true
Update image of all containers of daemonset namespace-2 to 'mysql:5.7.35',kubectl set image daemonset namespace-2 *=mysql:5.7.35
Create a deployment named wordpress that runs the wordpress image and expose port 9090,kubectl create deployment wordpress --image=wordpress --port=9090
"Update pod 'payment' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods payment monitoring-tool='Prometheus'
"Listen on port 6379 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 6379:8080
Create a new secret named email-credentials-secret with keys for each file in folder bar,kubectl create secret generic email-credentials-secret --from-file=path/to/configs
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=moon-cluster
Get output from running the 'postgres' command in cosmic-container from pod frontend-pod,kubectl exec frontend-pod -c cosmic-container -- postgres
Create a new ClusterIP service named analytics-service-clusterip,kubectl create service clusterip analytics-service-clusterip --tcp=3001:9092
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node worker-node-3 -p '{""spec"":{""someField"":""newValue""}'"
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/scheduler-app-deployment -c cdn-service-pod-1
Start a golang pod and let the container expose port 9092,kubectl run hazelcast --image=golang --port=9092
"Listen on port 8888 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8888:5432"
Copy /tmp/foo_dir local directory to /tmp/bar_dir in a remote pod in the default namespace,kubectl cp /tmp/foo_dir front-end-pod-12:/tmp/bar_dir
"Update pod 'chat-app' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app alert-email=alerts@example.com
Add a taint with key 'app' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  app=backup-node-14:PreferNoSchedule
"Listen on port 8088 locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod 8088:8080
Create a copy of auth-service-pod changing all container images to python,kubectl debug auth-service-pod --copy-to=debug-image-web --set-image=*=python
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=data-cluster
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=properties=/path/to/parameters/file1.txt --from-file=key1=/path/to/settings/file2.txt
Start a ethereum/client-go pod and let the container expose port 27017,kubectl run hazelcast --image=ethereum/client-go --port=27017
Start a alpine pod and let the container expose port 3001,kubectl run hazelcast --image=alpine --port=3001
Add a taint with key 'datacenter' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  datacenter=monitoring-node-15:PreferNoSchedule
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.cluster-2-context.cluster cluster-beta
"Update pod 'vpn' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn git-repo='https://github.com/example/my-app'
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod :8081
Disable cert checking for the dev cluster entry,kubectl config set-cluster kube-cluster-1 --insecure-skip-tls-verify=true
Start a python pod and let the container expose port 8082,kubectl run hazelcast --image=python --port=8082
Scale a replica set named 'app-v2-replicaset' to 1,kubectl scale --replicas=1 rs/app-v2-replicaset
Create a copy of payment-gateway-pod adding a debug container and changing container images,"kubectl debug payment-gateway-pod -it --copy-to=debug-image-memcached --image=debian --set-image=proxy=nginx:1.21,proxy=nginx:1.21"
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 7000,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=7000
Return snapshot of previous terminated time-machine container logs from pod analytics-pod,kubectl logs -p -c time-machine analytics-pod
Import environment from a secret,kubectl set env --from=secret/private-key-secret deployment/authentication-service-deployment
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=cluster-alpha
Get the documentation of a specific field of a resource,kubectl explain resource=pods.spec.containers
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=8082 --target-port=300100
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/global-config deployment/cache-cluster-deployment
Return snapshot logs from container notification-handler-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/notification-handler-deployment -c web-app-pod-1
"Enable the Google Compute Platform auth provider for the ""service-account"" entry",kubectl config set-credentials service-account --auth-provider=gcp
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=e2e
Add a taint with key 'app' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  app=db-node-7:PreferNoSchedule
"Listen on port 3000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 3000:3000
Create a new secret named api-secret-key using a combination of a file and a literal,kubectl create secret generic api-secret-key --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
Update deployment 'search-engine-deployment' with a new environment variable,kubectl set env deployment/search-engine-deployment CACHE_SIZE=64MB
Create a job with a command,kubectl create job indexing --image=node -- node
Resume an already paused deployment,kubectl rollout resume deployment/my-deployment
View the details of daemonset revision 7,kubectl rollout history daemonset/development --revision=7
"Listen on port 8000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8000:8081
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/backend-pod :8088
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/db-service"
Rename the context 'staging-context' to 'user-b-context' in your kubeconfig file,kubectl config rename-context staging-context user-b-context
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/proxy-server-pod 8088:8000
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/gateway-pod
"Auto scale a deployment ""security"", with the number of pods between 5 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=5 --max=14
"Listen on a random port locally, forwarding to 9090 in the pod",kubectl port-forward pod/web-app-pod :9090
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/queue-processing-job -n logging
Start a ubuntu pod and let the container expose port 27017,kubectl run hazelcast --image=ubuntu --port=27017
Update pod 'analytics' with the label 'component' and the value 'api',kubectl label pods analytics component=api
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-name-config deployment/proxy-service-deployment
"Listen on port 8000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8000:8000
"Listen on port 8000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8000:8088"
"Update pod 'frontend' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend monitoring-tool=Prometheus
Set deployment backend-microservice-deployment's service account to istio,kubectl set serviceaccount deployment backend-microservice-deployment istio
Create a new secret named azure-storage-secret with keys for each file in folder bar,kubectl create secret generic azure-storage-secret --from-file=path/to/parameters
"Update pod 'frontend' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods frontend env='staging'
Create a copy of log-aggregator-pod changing all container images to jenkins,kubectl debug log-aggregator-pod --copy-to=debug-image-1 --set-image=*=jenkins
Start a alpine pod and let the container expose port 8084,kubectl run hazelcast --image=alpine --port=8084
"Listen on port 8888 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/search-service 8888:https
Copy /tmp/foo_dir local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo_dir kube-public/front-end-pod-12:/etc/kubernetes
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/logging-service"
"Update pod 'proxy' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy team='frontend team'
Return snapshot of previous terminated ruby container logs from pod web-app-pod,kubectl logs -p -c ruby web-app-pod
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/payment-service 9090:https
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/settings/file2.txt
Add to node 'worker-node-3' a taint with key 'zone' and no value,kubectl taint nodes worker-node-3 zone:NoSchedule
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-settings deployment/gateway-deployment
Create a job with a command,kubectl create job testing --image=ethereum/client-go -- geth attach
"Listen on port 5432 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 5432:9090
"Listen on port 8080 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/logging-service 8080:https
Begin streaming the logs of the lunar-launcher container in pod frontend-pod,kubectl logs -f -c lunar-launcher frontend-pod
Remove from node 'worker-node-3' all the taints with key 'hardware',kubectl taint nodes worker-node-3 hardware-
Describe a pod,kubectl describe pods/payment-gateway-pod
Create a deployment named app that runs the wordpress image and expose port 8000,kubectl create deployment app --image=wordpress --port=8000
Embed certificate authority data for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --embed-certs --certificate-authority=~/.kube/app-cluster/kubernetes.ca.crt
"Get output from running the 'geth' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- geth
Create a new config map named app-config from an env file,kubectl create configmap app-config --from-env-file=path/to/properties.env
Create a deployment named grafana that runs the centos image and expose port 3000,kubectl create deployment grafana --image=centos --port=3000
Remove from node 'kube-master-9' all the taints with key 'app',kubectl taint nodes kube-master-9 app-
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/backend-pod 8081 8080
Create a new ClusterIP service named shipping-service-clusterip,kubectl create service clusterip shipping-service-clusterip --tcp=5432:8080
Create a new ExternalName service named external-metrics-service,kubectl create service externalname external-metrics-service --external-name practice-online.site
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""external-apps"" API group",kubectl get deployments.v2.1.0.external-apps -o yaml
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/backend-service"
Get output from running the 'ash' command in nano-bot from pod email-service-pod,kubectl exec email-service-pod -c nano-bot -- ash
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl exec -n velero auth-service-pod-11 -- tar cf - /tmp/foo | tar xf - -C /tmp/bar
Get output from running the 'wp' command in cosmic-container from pod proxy-service-pod,kubectl exec proxy-service-pod -c cosmic-container -- wp
Add a taint with key 'workload' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  workload=k8s-node-1:PreferNoSchedule
Return snapshot logs from container order-processing-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/order-processing-deployment -c api-service-pod-1
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp istio-system/web-app-pod-1::/tmp/foo :/tmp/bar
Create a job with a command,kubectl create job testing --image=ruby -- ruby --version
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=cluster-beta
"Delete pods and services with same names ""auth"" and ""monitoring""","kubectl delete pod,service auth monitoring"
Get output from running the 'kafka-server-start /etc/kafka/server.properties' command in astro-container from pod web-app-pod,kubectl exec web-app-pod -c astro-container -- kafka-server-start /etc/kafka/server.properties
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""legacy-apps"" API group",kubectl get deployments.dev-2.2.0.legacy-apps -o json
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node app-node-6 -p '{""spec"":{""containers"":[{""name"":""container-name"", ""resources"":{""limits"":{""cpu"":""200m""}}}]}'"
"Get output from running the 'java -jar /usr/share/jenkins/jenkins.war' command from pod media-stream-pod, using the first container by default",kubectl exec media-stream-pod -- java -jar /usr/share/jenkins/jenkins.war
Add a taint with key 'environment' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  environment=edge-node-10:PreferNoSchedule
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.local-context.cluster cluster-alpha
"Listen on port 8081 locally, forwarding to 8000 in the pod",kubectl port-forward pod/e-commerce-pod 8081:8000
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/mypod 6379:8081
Set deployment user-management-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment user-management-deployment kube-controller-manager
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8080 8088
Create a new ClusterIP service named log-service-clusterip,kubectl create service clusterip log-service-clusterip --tcp=8888:3001
"Auto scale a deployment ""api"", with the number of pods between 5 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment api --min=5 --max=11
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=properties=/path/to/configs/file1.txt --from-file=key1=/path/to/parameters/file2.txt
"Update pod 'vpn' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods vpn team='frontend-team'
Update pod 'frontend' with the label 'env' and the value 'staging',kubectl label pods frontend env=staging
Get output from running the 'dotnet --list-runtimes' command in code-explorer from pod api-service-pod,kubectl exec api-service-pod -c code-explorer -- dotnet --list-runtimes
Show metrics for a given node,kubectl top node gpu-node-12
Return snapshot of previous terminated astro-container container logs from pod log-aggregator-pod,kubectl logs -p -c astro-container log-aggregator-pod
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""third-party-apps"" API group",kubectl get deployments.v2.0.0.third-party-apps -o yaml
Create a new secret named jwt-secret with keys for each file in folder bar,kubectl create secret generic jwt-secret --from-file=path/to/options
Create a cron job with a command,"kubectl create cronjob email-notifications --image=ruby --schedule=""*/1 * * * *"" -- irb"
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""web-apps"" API group",kubectl get deployments.hotfix-1.1.2.web-apps -o json
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.client-1-context.cluster testing-cluster
Get output from nebula-navigator from pod e-commerce-pod,kubectl attach e-commerce-pod -c nebula-navigator
Import environment from a config map with a prefix,kubectl set env --from=configmap/global-config --prefix=MYSQL_ deployment/user-management-deployment
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/backend-service"
Remove from node 'app-node-6' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes app-node-6 environment:NoSchedule-
Create a new config map named app-config-prod with key1=config1 and key2=config2,kubectl create configmap app-config-prod --from-literal=settings=config1 --from-literal=key2=config2
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=web-cluster
"Auto scale a replication controller ""payment"", with the number of pods between 1 and 7, target CPU utilization at 50%",kubectl autoscale rc payment --max=7 --cpu-percent=50
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-config-dev deployment/api-server-deployment
Create a copy of vpn-service-pod changing all container images to mongo,kubectl debug vpn-service-pod --copy-to=debug-image-memcached --set-image=*=mongo
Create a new service account named kube-scheduler,kubectl create serviceaccount kube-scheduler
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=8000:7000
Create a new secret named database-secret with keys for each file in folder bar,kubectl create secret generic database-secret --from-file=path/to/preferences
Create a new secret named encryption-key-secret with keys for each file in folder bar,kubectl create secret generic encryption-key-secret --from-file=path/to/options
"Create a cluster role named ""view"" with ResourceName specified",kubectl create clusterrole view --verb=delete --resource=services --resource-name=nginx-proxy --resource-name=monitoring-prometheus
"Listen on port 5432 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5432:8080
"Create a cluster role name ""reader"" with NonResourceURL specified","kubectl create clusterrole ""reader"" --verb=proxy --non-resource-url=/readyz"
"Check to see if I can get the job named ""image-processing-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/image-processing-job -n staging
"Listen on port 5432 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5432:3000
"Check to see if I can get the job named ""load-testing-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/load-testing-job -n kube-dns
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=5000 --target-port=637900
"Delete pods and services with same names ""foo"" and ""vpn""","kubectl delete pod,service foo vpn"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8081 9090
"Set basic auth for the ""app-service"" entry",kubectl config set-credentials app-service --username=admin --password=uXFGweU9l35qcif
Set deployment backend-microservice-deployment's service account to argocd,kubectl set serviceaccount deployment backend-microservice-deployment argocd
"If the deployment named backend-service-replicaset's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/backend-service-replicaset
Import environment from a secret,kubectl set env --from=secret/app-config-secret deployment/load-balancer-deployment
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=testing-cluster
"List deployments in JSON output format, in the ""custom-version"" version of the ""web-apps"" API group",kubectl get deployments.custom-version.web-apps -o json
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=6379 --target-port=8000
Set deployment gateway-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment gateway-deployment gitlab-runner
Get output from running pod backend-pod; use the 'kubectl.kubernetes.io/default-container' annotation # for selecting the container to be attached or the first container in the pod will be chosen,kubectl attach backend-pod
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=cluster-beta
Update image of all containers of daemonset development to 'ubuntu:20.04',kubectl set image daemonset development *=ubuntu:20.04
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/frontend-pod 8000:8081
Set deployment proxy-service-deployment's service account to dashboard,kubectl set serviceaccount deployment proxy-service-deployment dashboard
Edit the deployment 'gateway-deployment' in YAML and save the modified config in its annotation,kubectl edit deployment/gateway-deployment -o yaml --save-config
Begin streaming the logs of the time-machine container in pod chat-app-pod,kubectl logs -f -c time-machine chat-app-pod
Rename the context 'cluster-1-context' to 'new-context' in your kubeconfig file,kubectl config rename-context cluster-1-context new-context
Get the password for the cluster-alpha user,"kubectl config view -o jsonpath='{.users[?(@.name == ""cluster-alpha"")].user.password}'"
"Update pod 'database' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods database alert-email='alerts@example.com'
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=settings=/path/to/settings/file1.txt --from-file=key2=/path/to/configs/file2.txt
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/analytics-pod 5000 8000
View the last-applied-configuration annotations by file in JSON,kubectl apply view-last-applied -f settings.yaml -o json
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/e2e/kubernetes.ca.crt
Import environment from a secret,kubectl set env --from=secret/ldap-credentials-secret deployment/search-engine-deployment
Start a redis pod and let the container expose port 9000,kubectl run hazelcast --image=redis --port=9000
"Listen on port 5000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 5000:8888"
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/web-app-pod 8000:8081
Start a alpine pod and let the container expose port 8181,kubectl run hazelcast --image=alpine --port=8181
"Listen on port 3000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/logging-service 3000:https
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""alpha-apps"" API group",kubectl get deployments.v1.1.0.alpha-apps -o yaml
Add a taint with key 'zone' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  zone=app-node-6:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-settings deployment/analytics-platform-deployment
Update pod 'web' with the label 'tier' and the value 'database',kubectl label pods web tier=database
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=moon-cluster
"Listen on port 9090 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 9090:3000
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/email-service"
Add a taint with key 'dedicated' on nodes having label myLabel,kubectl taint node -l myLabel  dedicated=node-2:PreferNoSchedule
Update pod 'chat-app' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods chat-app description-
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=testing-cluster
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/env-vars deployment/gateway-deployment
"Update pod 'security' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods security criticality='high'
Get output from running the 'redis-server --version' command in time-machine from pod mypod,kubectl exec mypod -c time-machine -- redis-server --version
Get output from running the 'nginx -t' command in stardust-shuttle from pod vpn-service-pod,kubectl exec vpn-service-pod -c stardust-shuttle -- nginx -t
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=conf=/path/to/options/file1.txt --from-file=data=/path/to/preferences/file2.txt
"Update pod 'security' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security last-deployment=2023-03-15
Start a mongo pod and let the container expose port 9092,kubectl run hazelcast --image=mongo --port=9092
Create a new secret named password-secret with keys for each file in folder bar,kubectl create secret generic password-secret --from-file=path/to/configurations
Update pod 'log-aggregator' with the label 'component' and the value 'web',kubectl label pods log-aggregator component=web
Return snapshot of previous terminated warp-drive container logs from pod proxy-service-pod,kubectl logs -p -c warp-drive proxy-service-pod
Get output from the first pod of a replica set named redis,kubectl attach rs/redis
Create a job with a command,kubectl create job image-build-job --image=python -- python
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/db-config deployment/authentication-service-deployment
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.admin-context.cluster edge-cluster
Rollback to the previous deployment,kubectl rollout undo deployment/app-v2
Rollback to the previous deployment,kubectl rollout undo deployment/test
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/api-service-pod 8888:8000
Start a mongo pod and let the container expose port 8080,kubectl run hazelcast --image=mongo --port=8080
Create a new LoadBalancer service named auth-service-lb,kubectl create service loadbalancer auth-service-lb --tcp=9000:7000
Update deployment 'mydeployment' with a new environment variable,kubectl set env deployment/mydeployment DB_PASSWORD=secretpassword
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/database-deployment DEBUG=true -o yaml
Create a cron job with a command,"kubectl create cronjob system-health-check --image=mongo --schedule=""*/1 * * * *"" -- mongo"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8081 5432
Add a taint with key 'environment' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  environment=k8s-node-1:PreferNoSchedule
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.service-account-context.cluster app-cluster
Create a new ClusterIP service named monitoring-service-clusterip,kubectl create service clusterip monitoring-service-clusterip --tcp=8443:3306
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=settings=/path/to/preferences/file1.txt --from-file=key2=/path/to/data/file2.txt
"Update pod 'email' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods email alert-email='alerts@example.com'
"Listen on port 8081 locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod 8081:8000
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""experimental-apps"" API group",kubectl get deployments.v1.0.0.experimental-apps -o yaml
Build some shared configuration directory,kubectl kustomize /home/config/dev
Start a node pod and let the container expose port 9000,kubectl run hazelcast --image=node --port=9000
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod analytics-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach analytics-pod -c nano-bot -i -t
Check to see if I can access the URL /logs/,kubectl auth can-i get /logs/
Remove from node 'node-2' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes node-2 disktype:NoSchedule-
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/cdn-service-pod 8080:3000
Create a new ExternalName service named external-analytics-service,kubectl create service externalname external-analytics-service --external-name practice-online.site
Get output from running the 'apk add curl' command in astro-container from pod analytics-pod,kubectl exec analytics-pod -c astro-container -- apk add curl
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 5000 5432
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=my-k8s-cluster
Return snapshot logs from container notification-handler-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/notification-handler-deployment -c media-stream-pod-1
Get output from cyber-sleuth from pod email-service-pod,kubectl attach email-service-pod -c cyber-sleuth
"Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment nginx --port=9091 --target-port=808400
"Set a deployments postgres container cpu limits to ""1"" and memory to ""256Mi""","kubectl set resources deployment postgres -c=nginx --limits=cpu=1,memory=256Mi"
Get output from running the 'gem --version' command in stardust-shuttle from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c stardust-shuttle -- gem --version
View the rollout history of a deployment,kubectl rollout history deployment/services
Update image of all containers of daemonset development to 'python:3.9.7',kubectl set image daemonset development *=python:3.9.7
"Listen on port 8888 locally, forwarding to 9090 in the pod",kubectl port-forward pod/backend-pod 8888:9090
Remove from node 'testing-node-11' all the taints with key 'workload',kubectl taint nodes testing-node-11 workload-
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json description='Web server for marketing site'
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=testing-cluster
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8088 3000
Create a deployment with a command,kubectl create deployment web --image=php --
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-secrets deployment/email-server-deployment
"Listen on port 8080 locally, forwarding to 8000 in the pod",kubectl port-forward pod/frontend-pod 8080:8000
Set the server field on the sun-cluster cluster to https://1.2.3.4,kubectl config set clusters.sun-cluster.server https://1.2.3.4
Create a new config map named namespace-config from the key=value pairs in the file,kubectl create configmap namespace-config --from-file=path/to/settings
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/frontend-pod 8000:8088
Start a amazonlinux pod and let the container expose port 8080,kubectl run hazelcast --image=amazonlinux --port=8080
Get output from mycontainer from pod web-app-pod,kubectl attach web-app-pod -c mycontainer
Add a taint with key 'app' on nodes having label component=proxy,kubectl taint node -l component=proxy  app=node-2:PreferNoSchedule
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/data/file2.txt
Return snapshot of previous terminated rocket-ranger container logs from pod cdn-service-pod,kubectl logs -p -c rocket-ranger cdn-service-pod
"Listen on port 9090 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 9090:8000
Copy ~/.config/kube from a remote pod to /etc/kubernetes locally,kubectl cp kube-server/api-server-pod-3:~/.config/kube /etc/kubernetes
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json owner='alice smith'
"Listen on port 8000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/user-service 8000:https
"Listen on port 5432 locally, forwarding to 6379 in the pod",kubectl port-forward pod/log-aggregator-pod 5432:6379
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/api-service-pod 6379:3000
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/global-config deployment/web-app-deployment
Create a copy of gateway-pod adding a debug container and changing container images,"kubectl debug gateway-pod -it --copy-to=debug-image-web --image=debian --set-image=mailer=mailer:latest,worker=my-custom-worker:1.2.3"
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-name-config deployment/backend-microservice-deployment
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/app-config deployment/search-engine-deployment
"Update pod 'proxy' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods proxy status=unhealthy
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 6379 9090
Create a new config map named app-name-config with key1=config1 and key2=config2,kubectl create configmap app-name-config --from-literal=settings=config1 --from-literal=key2=config2
"Set a deployments runtime container cpu limits to ""100m"" and memory to ""512Mi""","kubectl set resources deployment runtime -c=nginx --limits=cpu=100m,memory=512Mi"
Create a deployment named jenkins-x that runs the nginx image and expose port 27017,kubectl create deployment jenkins-x --image=nginx --port=27017
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 3000 6379
Copy ~/.config/kube local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp ~/.config/kube argocd/cache-pod-5:/tmp/bar_dir
"Auto scale a deployment ""web"", with the number of pods between 1 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment web --min=1 --max=13
Get output from running the 'go' command in mycontainer from pod web-app-pod,kubectl exec web-app-pod -c mycontainer -- go
"Create a service for a replicated ubuntu, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ubuntu --port=8888 --target-port=300100
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json git-repo='https://github.com/example/my-app'
Update pod 'proxy-server' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy-server unhealthy-
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=cluster-beta
Get output from running the 'mysqld' command in cosmic-container from pod auth-service-pod,kubectl exec auth-service-pod -c cosmic-container -- mysqld
Begin streaming the logs of the quantum-quark container in pod database-pod,kubectl logs -f -c quantum-quark database-pod
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=dev-cluster
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=6379 --target-port=808000
Copy :/tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp kube-dns/auth-service-pod-11::/tmp/foo /etc/kubernetes
Return snapshot of previous terminated nano-bot container logs from pod email-service-pod,kubectl logs -p -c nano-bot email-service-pod
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-config deployment/frontend-deployment
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/virus-scan-job -n staging
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/log-aggregator-pod 8088:5432
Add a taint with key 'hardware' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  hardware=backup-node-14:PreferNoSchedule
"Listen on port 9090 locally, forwarding to 8888 in the pod",kubectl port-forward pod/analytics-pod 9090:8888
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/backend-pod 3000 5000
Add a taint with key 'cpu-type' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  cpu-type=dev-node-4:PreferNoSchedule
Set deployment cache-cluster-deployment's service account to jenkins,kubectl set serviceaccount deployment cache-cluster-deployment jenkins
Get output from nebula-navigator from pod api-service-pod,kubectl attach api-service-pod -c nebula-navigator
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-config-prod deployment/api-server-deployment
"Listen on port 3000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod 3000:8888
"Listen on port 6379 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 6379:8088
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.team-beta-context.cluster testing-cluster
Start a php pod and let the container expose port 8443,kubectl run hazelcast --image=php --port=8443
Start a golang pod and let the container expose port 8088,kubectl run hazelcast --image=golang --port=8088
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/order-service 5432:https
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8088 8080
Update deployment 'user-management-deployment' with a new environment variable,kubectl set env deployment/user-management-deployment SECRET_KEY=your-secret-key
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 5000 8888
"Listen on port 8088 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8088:8080
Get output from mycontainer from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c mycontainer
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/analytics-pod 8088:9090
Get output from cosmic-container from pod gateway-pod,kubectl attach gateway-pod -c cosmic-container
Create a new ExternalName service named external-messaging-service,kubectl create service externalname external-messaging-service --external-name demo-service.dev
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-settings deployment/order-processing-deployment
Create a new config map named monitoring-config with key1=config1 and key2=config2,kubectl create configmap monitoring-config --from-literal=properties=config1 --from-literal=key1=config2
"Set a deployments ubuntu container cpu limits to ""100m"" and memory to ""128Mi""","kubectl set resources deployment ubuntu -c=nginx --limits=cpu=100m,memory=128Mi"
"Listen on port 5432 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5432:3000
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=settings=/path/to/parameters/file1.txt --from-file=key2=/path/to/parameters/file2.txt
Create a new ClusterIP service named catalog-service-clusterip,kubectl create service clusterip catalog-service-clusterip --tcp=3001:9092
Return snapshot logs from pod cdn-service-pod with multi containers,kubectl logs cdn-service-pod --all-containers=true
"Get output from running the 'ash' command from pod gateway-pod, using the first container by default",kubectl exec gateway-pod -- ash
Get output from running the 'python' command in quantum-quark from pod backend-pod,kubectl exec backend-pod -c quantum-quark -- python
Start a ubuntu pod and let the container expose port 8084,kubectl run hazelcast --image=ubuntu --port=8084
Update deployment 'gateway-deployment' with a new environment variable,kubectl set env deployment/gateway-deployment ENV=prod
Create a new secret named private-key-secret from an env file,kubectl create secret generic private-key-secret --from-env-file=path/to/preferences.env
To proxy all of the Kubernetes API and nothing else,kubectl proxy --api-prefix=/
Create a new ClusterIP service named monitoring-service-clusterip,kubectl create service clusterip monitoring-service-clusterip --tcp=8083:5000
Return snapshot of previous terminated warp-drive container logs from pod auth-service-pod,kubectl logs -p -c warp-drive auth-service-pod
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.status.conditions
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/mypod 8088 8000
"Get output from running 'node' command from the first pod of the service user-service, using the first container by default",kubectl exec svc/user-service -- node
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=8888 --target-port=844300
Set deployment cache-cluster-deployment's service account to my-service-account,kubectl set serviceaccount deployment cache-cluster-deployment my-service-account
Create a new ClusterIP service named security-service-clusterip,kubectl create service clusterip security-service-clusterip --tcp=8888:5001
Create a deployment named proxy that runs the ethereum/client-go image and expose port 8084,kubectl create deployment proxy --image=ethereum/client-go --port=8084
Rename the context 'on-prem-context' to 'client-2-context' in your kubeconfig file,kubectl config rename-context on-prem-context client-2-context
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/monitoring-config deployment/cache-cluster-deployment
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/web-app-pod
Begin streaming the logs of the cyber-sleuth container in pod web-app-pod,kubectl logs -f -c cyber-sleuth web-app-pod
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5000:9090
"Listen on port 6379 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 6379:8081"
"Start a redis pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=redis --restart=Never
"Update node 'app-node-6' with a taint with key 'datacenter' and value 'dc-1' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes app-node-6 datacenter=dc-1:NoExecute
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/namespace-config deployment/backend-microservice-deployment
Set deployment database-deployment's service account to fluentd,kubectl set serviceaccount deployment database-deployment fluentd
Get output from nebula-navigator from pod chat-app-pod,kubectl attach chat-app-pod -c nebula-navigator
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""custom-deployments"" API group",kubectl get deployments.v2.0.0.custom-deployments -o yaml
"Listen on port 8888 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8888:9090
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 5432 3000
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod :5000
"Delete pods and services with same names ""chat-app"" and ""cdn""","kubectl delete pod,service chat-app cdn"
"Update pod 'api' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api alert-email=alerts@example.com
Create a new LoadBalancer service named backend-lb,kubectl create service loadbalancer backend-lb --tcp=8084:8080
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/analytics-pod 5432:9090
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/scheduler-app-deployment -c monitoring-pod-1
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.dev-context.cluster testing-cluster
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.testing-context.cluster app-cluster
"Listen on port 6379 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 6379:6379"
Start a amazonlinux pod and let the container expose port 3306,kubectl run hazelcast --image=amazonlinux --port=3306
"Update pod 'api' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api description='Web server for marketing site'
"Listen on port 6379 locally, forwarding to 8080 in the pod",kubectl port-forward pod/frontend-pod 6379:8080
Show all logs from pod chat-app-pod written in the last hour,kubectl logs --since=1h chat-app-pod
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod database-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach database-pod -c code-explorer -i -t
"Mark node ""dev-node-4"" as unschedulable",kubectl cordon dev-node-4
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.edge-context.cluster star-cluster
Get output from running the 'ruby --version' command in code-explorer from pod monitoring-pod,kubectl exec monitoring-pod -c code-explorer -- ruby --version
Describe a pod,kubectl describe pods/worker-pod-4
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/log-aggregator-pod 3000:8081
Update image of all containers of daemonset namespace-1 to 'httpd:2.4.48',kubectl set image daemonset namespace-1 *=httpd:2.4.48
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8081 5432
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/analytics-service"
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod api-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach api-service-pod -c stardust-shuttle -i -t
"Update pod 'log-aggregator' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator last-deployment=2023-03-15
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/analytics-pod 3000:8000
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=8083 --target-port=808000
"Delete pods and services with same names ""chat-app"" and ""monitoring""","kubectl delete pod,service chat-app monitoring"
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 9091,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=9091
List all services in ps output format,kubectl get services
"Get output from running the 'nginx' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- nginx
"Auto scale a deployment ""auth"", with the number of pods between 2 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment auth --min=2 --max=9
"Create a role named ""custom_role"" with API Group specified","kubectl create role custom_role --verb=proxy,get,update --resource=clusterroles.rbac.authorization.k8s.io"
Update pod 'email' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods email tier-
"Listen on port 8000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8000:8081"
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=7000 --target-port=800000
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=moon-cluster
"Listen on port 5432 locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod 5432:6379
Begin streaming the logs from all containers in pods defined by label release=beta,kubectl logs -f -l release=beta --all-containers=true
"Get output from running 'python' command from the first pod of the deployment proxy-service-deployment, using the first container by default",kubectl exec deploy/proxy-service-deployment -- python
Update deployment 'proxy-service-deployment' with a new environment variable,kubectl set env deployment/proxy-service-deployment SECRET_KEY=your-secret-key
Update pod 'database' with the label 'unhealthy' and the value 'true',kubectl label pods database unhealthy=true
Create a new NodePort service named security-service-nodeport,kubectl create service nodeport security-service-nodeport --tcp=27017:8084
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/loadbalancer-service"
Rename the context 'cluster-1-context' to 'client-1-context' in your kubeconfig file,kubectl config rename-context cluster-1-context client-1-context
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8080 8088
"Get output from running the 'mysql' command from pod cdn-service-pod, using the first container by default",kubectl exec cdn-service-pod -- mysql
List resources from a directory with kustomization.yaml - e.g. setup/kustomization.yaml,kubectl get -k setup/
"Listen on port 9090 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 9090:8080
"Listen on port 8088 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8088:5432
Roll back to daemonset revision 3,kubectl rollout undo daemonset/namespace-3 --to-revision=3
Unset namespace in team-beta-context context,kubectl config unset contexts.team-beta-context.namespace
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp kube-public/load-balancer-pod-9:/tmp/foo_dir :/tmp/bar
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=dev-cluster
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod :8088
"Start a golang pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=golang --restart=Never
Set deployment email-server-deployment's service account to spinnaker,kubectl set serviceaccount deployment email-server-deployment spinnaker
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.on-prem-context.cluster web-cluster
Create a deployment named cache that runs the python image and expose port 5001,kubectl create deployment cache --image=python --port=5001
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name documentation-tech.tech
"Delete pods and services with same names ""database"" and ""frontend""","kubectl delete pod,service database frontend"
"Delete pods and services with same names ""security"" and ""database""","kubectl delete pod,service security database"
Embed certificate authority data for the data-cluster cluster entry,kubectl config set-cluster data-cluster --embed-certs --certificate-authority=~/.kube/sun-cluster/kubernetes.ca.crt
Edit the deployment 'backend-microservice-deployment' in YAML and save the modified config in its annotation,kubectl edit deployment/backend-microservice-deployment -o yaml --save-config
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/mypod 8081 8000
Rename the context 'on-prem-context' to 'client-1-context' in your kubeconfig file,kubectl config rename-context on-prem-context client-1-context
Return snapshot logs from pod chat-app-pod with multi containers,kubectl logs chat-app-pod --all-containers=true
"If the deployment named webapp-replicaset's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/webapp-replicaset
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""web-apps"" API group",kubectl get deployments.rc-1.1.0.web-apps -o yaml
Update pod 'email' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods email unhealthy-
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/monitoring-stack-deployment -c api-service-pod-1
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=80 --target-port=888800
"Create a cluster role named ""foo"" with ResourceName specified",kubectl create clusterrole foo --verb=delete --resource=pods --resource-name=auth-service --resource-name=file-storage
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=conf=/path/to/configs/file1.txt --from-file=data=/path/to/configurations/file2.txt
"Listen on port 8088 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8088:8080"
"Listen on port 3000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 3000:5000
Edit the last-applied-configuration annotations by file in JSON,kubectl apply edit-last-applied -f setup.yaml -o json
Approve CSR 'csr-mysql-10',kubectl certificate approve csr-mysql-10
"Get output from running the 'php --version' command from pod cdn-service-pod, using the first container by default",kubectl exec cdn-service-pod -- php --version
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller media-stream-rc
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n testing
Update pod 'monitoring' with the label 'unhealthy' and the value 'true',kubectl label pods monitoring unhealthy=true
Create a job with a command,kubectl create job report-generation-job --image=nginx -- nginx
Update pod 'auth' with the label 'env' and the value 'production',kubectl label pods auth env=production
"Delete pods and services with same names ""log-aggregator"" and ""proxy""","kubectl delete pod,service log-aggregator proxy"
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.v2.1.0.sandbox-apps -o yaml
"Get output from running the 'mongo' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- mongo
Update pod 'proxy' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods proxy description-
Replace a pod using the data in setup.json,kubectl replace -f ./setup.json
Deny CSR 'csr-def456',kubectl certificate deny csr-def456
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/chat-app-pod 5000:8081
"Listen on port 8080 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/user-service 8080:https
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""extensions"" API group",kubectl get deployments.v1.0.0.extensions -o yaml
Begin streaming the logs of the mycontainer container in pod cdn-service-pod,kubectl logs -f -c mycontainer cdn-service-pod
Set deployment gateway-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment gateway-deployment kube-scheduler
"Define new exec auth plugin args for the ""operator"" entry",kubectl config set-credentials operator --exec-arg=arg1 --exec-arg=arg2
Create a new secret named private-key-secret with keys for each file in folder bar,kubectl create secret generic private-key-secret --from-file=path/to/parameters
Create a new secret named azure-storage-secret with keys for each file in folder bar,kubectl create secret generic azure-storage-secret --from-file=path/to/configs
"Listen on port 6379 locally, forwarding to 5432 in the pod",kubectl port-forward pod/cdn-service-pod 6379:5432
"List deployments in JSON output format, in the ""custom-version"" version of the ""legacy-apps"" API group",kubectl get deployments.custom-version.legacy-apps -o json
Start a python pod and let the container expose port 8181,kubectl run hazelcast --image=python --port=8181
Get output from running the 'jenkins --version' command in warp-drive from pod media-stream-pod,kubectl exec media-stream-pod -c warp-drive -- jenkins --version
"Update pod 'chat-app' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app app-version=2.5.1
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=events.k8s.io
Get output from running the 'elasticsearch' command in time-machine from pod vpn-service-pod,kubectl exec vpn-service-pod -c time-machine -- elasticsearch
Add to node 'monitoring-node-15' a taint with key 'cpu-type' and no value,kubectl taint nodes monitoring-node-15 cpu-type:NoSchedule
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/backend-pod 9090:8000
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=8010 --target-port=808400
View the details of daemonset revision 5,kubectl rollout history daemonset/namespace-2 --revision=5
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8888 8088
Create a new config map named log-config from the key=value pairs in the file,kubectl create configmap log-config --from-file=path/to/preferences
"Create a cluster role named ""default_role"" with API Group specified","kubectl create clusterrole default_role --verb=patch,watch,exec --resource=jobs.batch"
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/monitoring-service"
"Listen on port 5000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 5000:5000
Create a job with a command,kubectl create job audit-job --image=alpine -- ash
"Create a job from a cron job named ""report-generation""",kubectl create job test-job --from=cronjob/report-generation
"Create a single ingress called 'api-v1-ingress' that directs requests to testing.com/example to svc # svc1:3001 with a tls secret ""my-cert""","kubectl create ingress api-v1-ingress --rule=""testing.com/example=svc1:3001,tls=my-cert"""
Create a deployment named proxy that runs the hazelcast image and expose port 5001,kubectl create deployment proxy --image=hazelcast/hazelcast --port=5001
Create a new ExternalName service named external-authentication-service,kubectl create service externalname external-authentication-service --external-name travel-sample.travel
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/analytics-pod 6379 6379
"Scale a resource identified by type and name specified in ""config.json"" to 7",kubectl scale --replicas=7 -f config.json
"Get output from running the 'go run hello.go' command from pod api-service-pod, using the first container by default",kubectl exec api-service-pod -- go run hello.go
"Listen on port 8080 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8080:8000
Rename the context 'staging-context' to 'client-2-context' in your kubeconfig file,kubectl config rename-context staging-context client-2-context
Start a ethereum/client-go pod and let the container expose port 9092,kubectl run hazelcast --image=ethereum/client-go --port=9092
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.alpha-2.0.sandbox-apps -o json
Create a deployment with a command,kubectl create deployment monitoring --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
Begin streaming the logs of the cosmic-container container in pod proxy-server-pod,kubectl logs -f -c cosmic-container proxy-server-pod
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/user-management-deployment SMTP_HOST=smtp.example.com -o yaml
"Create a role binding for developer3, k8s-admin, and qa-engineers using the custom_role cluster role",kubectl create rolebinding custom_role --clusterrole=custom_role --user=developer3 --user=k8s-admin --group=qa-engineers
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/backend-microservice-deployment -c log-aggregator-pod-1
Start a ruby pod and let the container expose port 8083,kubectl run hazelcast --image=ruby --port=8083
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8888 8888
Create a copy of analytics-pod changing the command of cosmic-container,kubectl debug analytics-pod -it --copy-to=debug-image-1 --container=cosmic-container -- sh
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-secrets deployment/mydeployment
"Delete pods and services with same names ""cdn"" and ""vpn""","kubectl delete pod,service cdn vpn"
"Listen on port 3000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 3000:8080
Create a new secret named oauth-secret from an env file,kubectl create secret generic oauth-secret --from-env-file=path/to/preferences.env
"If the deployment named payment-service-rs's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/payment-service-rs
"If the deployment named staging-app-rs's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/staging-app-rs
Embed certificate authority data for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
Display only the most recent 31 lines of output in pod payment-gateway-pod,kubectl logs --tail=31 payment-gateway-pod
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp velero/image-resizer-pod-20::/tmp/foo /tmp/bar
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=moon-cluster
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/cache-warming-job -n testing
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=on-prem-cluster
Create a job with a command,kubectl create job certificate-renewal --image=ethereum/client-go -- geth
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/e-commerce-pod 5432:9090
Begin streaming the logs of the ruby container in pod api-service-pod,kubectl logs -f -c ruby api-service-pod
"Listen on port 8080 locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod 8080:9090
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in a specific container,kubectl cp /tmp/foo_dir payment-gateway-pod-19::/tmp/bar -c web-app-container
Copy ~/.config/kube local file to :/tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube monitoring/web-app-pod-1::/tmp/bar
"Create a role named ""foo"" with ResourceName specified",kubectl create role foo --verb=create --resource=pods --resource-name=file-uploader --resource-name=notification-service
"Listen on port 9090 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 9090:8888
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-secrets deployment/notification-handler-deployment
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=8082 --target-port=909000
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/batch-processing-job -n kube-ingress
Create a copy of cdn-service-pod changing the command of nebula-navigator,kubectl debug cdn-service-pod -it --copy-to=debug-image-web --container=nebula-navigator -- sh
Remove from node 'dev-node-4' all the taints with key 'zone',kubectl taint nodes dev-node-4 zone-
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-name-config deployment/backend-microservice-deployment
Display only the most recent 20 lines of output in pod chat-app-pod,kubectl logs --tail=20 chat-app-pod
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/analytics-platform-deployment -c api-service-pod-1
"Delete pods and services with same names ""proxy-server"" and ""payment""","kubectl delete pod,service proxy-server payment"
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name travel-sample.travel
Set the server field on the my-k8s-cluster cluster to https://1.2.3.4,kubectl config set clusters.my-k8s-cluster.server https://1.2.3.4
List resource information in custom columns,"kubectl get pod chat-app-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod 9090:8080
Create a new ExternalName service named external-git-service,kubectl create service externalname external-git-service --external-name documentation-tech.tech
Update pod 'payment' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods payment unhealthy-
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/backend-pod 5432:9090
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/monitoring-stack-deployment PORT=8080 -o yaml
Get output from running the 'python' command in lunar-launcher from pod email-service-pod,kubectl exec email-service-pod -c lunar-launcher -- python
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 5432 8000
Create a job with a command,kubectl create job security-scan-job --image=golang -- go version
Create a deployment named jenkins that runs the redis image and expose port 5001,kubectl create deployment jenkins --image=redis --port=5001
Edit the last-applied-configuration annotations by file in JSON,kubectl apply edit-last-applied -f settings.yaml -o json
Create a new secret named payment-gateway-secret from an env file,kubectl create secret generic payment-gateway-secret --from-env-file=path/to/options.env
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod auth-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach auth-service-pod -c time-machine -i -t
Add to node 'testing-node-11' a taint with key 'datacenter' and no value,kubectl taint nodes testing-node-11 datacenter:NoSchedule
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/api-service"
Start a python pod and let the container expose port 3001,kubectl run hazelcast --image=python --port=3001
Create a cron job with a command,"kubectl create cronjob database-maintenance --image=nginx --schedule=""*/1 * * * *"" -- nginx -g ""daemon off;"""
Get output from rocket-ranger from pod monitoring-pod,kubectl attach monitoring-pod -c rocket-ranger
Rename the context 'prod-context' to 'client-2-context' in your kubeconfig file,kubectl config rename-context prod-context client-2-context
Create a deployment named proxy that runs the redis image and expose port 5001,kubectl create deployment proxy --image=redis --port=5001
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod 3000:8081
Create a job with a command,kubectl create job report-generation-job --image=wordpress -- wp
Get output from running the 'irb' command in mycontainer from pod auth-service-pod,kubectl exec auth-service-pod -c mycontainer -- irb
Create a new secret named ssl-key-secret with keys for each file in folder bar,kubectl create secret generic ssl-key-secret --from-file=path/to/configurations
"Define new exec auth plugin args for the ""api-user"" entry",kubectl config set-credentials api-user --exec-arg=arg1 --exec-arg=arg2
Create a cron job with a command,"kubectl create cronjob backup-job --image=golang --schedule=""*/1 * * * *"" -- go run hello.go"
Display only the most recent 23 lines of output in pod frontend-pod,kubectl logs --tail=23 frontend-pod
"Update pod 'email' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email app-version=2.5.1
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8089 --target-port=900000
Update image of all containers of daemonset app-v2 to 'httpd:2.4.48',kubectl set image daemonset app-v2 *=httpd:2.4.48
Get output from running the 'mysql' command in rocket-ranger from pod frontend-pod,kubectl exec frontend-pod -c rocket-ranger -- mysql
Create a job with a command,kubectl create job log-processing-job --image=ruby -- ruby --version
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""alpha-apps"" API group",kubectl get deployments.v1.0.0.alpha-apps -o json
"Update pod 'auth' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods auth custom-label='my-custom-value'
Create a deployment named monitoring that runs the hazelcast image and expose port 5000,kubectl create deployment monitoring --image=hazelcast/hazelcast --port=5000
Get output from running the 'jenkins-plugin-cli' command in nano-bot from pod chat-app-pod,kubectl exec chat-app-pod -c nano-bot -- jenkins-plugin-cli
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json compliance-level=PCI-DSS
Create a new config map named db-config from the key=value pairs in the file,kubectl create configmap db-config --from-file=path/to/options
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""third-party-apps"" API group",kubectl get deployments.v3.0.0.third-party-apps -o yaml
"Update node 'monitoring-node-15' with a taint with key 'hardware' and value 'gpu' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes monitoring-node-15 hardware=gpu:NoExecute
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""service-account"" entry",kubectl config set-credentials service-account --auth-provider=oidc --auth-provider-arg=client-secret-
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/loadbalancer-service"
Create a deployment named gateway that runs the python image with 6 replicas,kubectl create deployment gateway --image=python --replicas=6
"Listen on a random port locally, forwarding to 3000 in the pod",kubectl port-forward pod/security-service-pod :3000
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=5001 --target-port=637900
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/proxy-server-pod 3000:3000
Remove from node 'web-node-8' all the taints with key 'dedicated',kubectl taint nodes web-node-8 dedicated-
"Listen on port 8000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/mypod 8000:3000
Display only the most recent 3 lines of output in pod cdn-service-pod,kubectl logs --tail=3 cdn-service-pod
Add a taint with key 'disktype' on nodes having label release=beta,kubectl taint node -l release=beta  disktype=backup-node-14:PreferNoSchedule
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""custom-deployments"" API group",kubectl get deployments.hotfix-1.1.2.custom-deployments -o yaml
"Set a deployments runtime container cpu limits to ""500m"" and memory to ""512Mi""","kubectl set resources deployment runtime -c=nginx --limits=cpu=500m,memory=512Mi"
Update pod 'backend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods backend role-
Create a deployment named grafana that runs the mcr.microsoft.com/dotnet/core/runtime image with 2 replicas,kubectl create deployment grafana --image=mcr.microsoft.com/dotnet/core/runtime --replicas=2
"Listen on port 3000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 3000:3000"
Get output from nebula-navigator from pod mypod,kubectl attach mypod -c nebula-navigator
Update all pods in the namespace,kubectl label pods --all status=unhealthy
Set deployment database-deployment's service account to istio,kubectl set serviceaccount deployment database-deployment istio
Create a job with a command,"kubectl create job data-migration-job --image=ubuntu -- docker run ubuntu echo ""Hello"
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""experimental-apps"" API group",kubectl get deployments.v2.0.0.experimental-apps -o yaml
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""web-apps"" API group",kubectl get deployments.v1.0.0.web-apps -o json
"Update node 'edge-node-10' with a taint with key 'dedicated' and value 'special-user' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes edge-node-10 dedicated=special-user:NoSchedule
Create a new secret named tls-certificate-secret with keys for each file in folder bar,kubectl create secret generic tls-certificate-secret --from-file=path/to/configurations
Get output from running the 'composer --version' command in quantum-quark from pod gateway-pod,kubectl exec gateway-pod -c quantum-quark -- composer --version
Remove from node 'backup-node-14' all the taints with key 'disktype',kubectl taint nodes backup-node-14 disktype-
Update pod 'analytics' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods analytics component-
"Create a cluster role name ""default_role"" with NonResourceURL specified","kubectl create clusterrole ""default_role"" --verb=create --non-resource-url=/port-forward"
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/database-pod
Return snapshot logs from container load-balancer-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/load-balancer-deployment -c chat-app-pod-1
"Listen on port 6379 locally, forwarding to 5432 in the pod",kubectl port-forward pod/analytics-pod 6379:5432
Add a taint with key 'disktype' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  disktype=k8s-node-1:PreferNoSchedule
"Auto scale a deployment ""proxy"", with the number of pods between 7 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy --min=7 --max=12
Add a taint with key 'app' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  app=kube-master-9:PreferNoSchedule
"Listen on port 8080 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8080:5000"
Return snapshot logs from container api-server-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/api-server-deployment -c e-commerce-pod-1
"Create a cluster role named ""bar"" with API Group specified","kubectl create clusterrole bar --verb=list,create,connect --resource=clusterroles.rbac.authorization.k8s.io"
"Start a python pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=python --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=staging-cluster
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=8888 --target-port=888800
Create a copy of frontend-pod changing all container images to docker.elastic.co/elasticsearch/elasticsearch,kubectl debug frontend-pod --copy-to=debug-image-1 --set-image=*=docker.elastic.co/elasticsearch/elasticsearch
"Auto scale a deployment ""api"", with the number of pods between 6 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment api --min=6 --max=13
"Listen on port 5432 locally, forwarding to 8088 in the pod",kubectl port-forward pod/web-app-pod 5432:8088
Get output from running the 'jenkins-plugin-cli' command in lunar-launcher from pod vpn-service-pod,kubectl exec vpn-service-pod -c lunar-launcher -- jenkins-plugin-cli
Embed certificate authority data for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --embed-certs --certificate-authority=~/.kube/moon-cluster/kubernetes.ca.crt
Import environment from a secret,kubectl set env --from=secret/database-secret deployment/monitoring-stack-deployment
Update pod 'payment' with the label 'env' and the value 'production',kubectl label pods payment env=production
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/chat-app-pod 8888:8000
Show metrics for a given node,kubectl top node kube-master-9
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod vpn-service-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Create a job with a command,kubectl create job testing --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
Return snapshot logs from container frontend-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/frontend-deployment -c proxy-service-pod-1
Create a new secret named oauth-secret with key1=supersecret and key2=topsecret,kubectl create secret generic oauth-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
Set deployment scheduler-app-deployment's service account to dashboard,kubectl set serviceaccount deployment scheduler-app-deployment dashboard
Create a new ClusterIP service named catalog-service-clusterip,kubectl create service clusterip catalog-service-clusterip --tcp=5432:8084
Embed certificate authority data for the app-cluster cluster entry,kubectl config set-cluster app-cluster --embed-certs --certificate-authority=~/.kube/cluster-gamma/kubernetes.ca.crt
"Listen on port 9090 locally, forwarding to 3000 in the pod",kubectl port-forward pod/backend-pod 9090:3000
Add a taint with key 'environment' on nodes having label app=web-app,kubectl taint node -l app=web-app  environment=kube-master-9:PreferNoSchedule
Rename the context 'cluster-2-context' to 'user-b-context' in your kubeconfig file,kubectl config rename-context cluster-2-context user-b-context
"Listen on port 6379 locally, forwarding to 6379 in the pod",kubectl port-forward pod/backend-pod 6379:6379
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/analytics-pod 5000:8000
Return snapshot logs from container gateway-deployment-1 of a deployment named database-pod,kubectl logs deployment/gateway-deployment -c database-pod-1
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/proxy-server-pod :5432
Create a new NodePort service named web-app-nodeport,kubectl create service nodeport web-app-nodeport --tcp=9000:3001
Create a new secret named git-credentials-secret from an env file,kubectl create secret generic git-credentials-secret --from-env-file=path/to/settings.env
Create a new secret named jwt-secret with keys for each file in folder bar,kubectl create secret generic jwt-secret --from-file=path/to/settings
Update image of all containers of daemonset namespace- to 'php:7.4.22',kubectl set image daemonset namespace-3 *=php:7.4.22
Create a job with a command,kubectl create job database-seeding-job --image=golang -- go
Set deployment gateway-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment gateway-deployment kube-controller-manager
"Listen on port 8000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8000:8000"
"Listen on port 5432 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 5432:3000"
Get output from cyber-sleuth from pod mypod,kubectl attach mypod -c cyber-sleuth
"Listen on port 8088 locally, forwarding to 8080 in the pod",kubectl port-forward pod/frontend-pod 8088:8080
Create a pod based on the JSON passed into stdin,cat params.json | kubectl create -f -
Embed certificate authority data for the data-cluster cluster entry,kubectl config set-cluster data-cluster --embed-certs --certificate-authority=~/.kube/cluster-beta/kubernetes.ca.crt
Get output from running the 'mysql' command in stardust-shuttle from pod chat-app-pod,kubectl exec chat-app-pod -c stardust-shuttle -- mysql
Start a php pod and let the container expose port 5001,kubectl run hazelcast --image=php --port=5001
Get the documentation of a specific field of a resource,kubectl explain resource=services.status.podIP
Show metrics for the pods defined by label version=v1.0.0,kubectl top pod -l version=v1.0.0
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json team='frontend team'
Set deployment monitoring-stack-deployment's service account to kube-dns,kubectl set serviceaccount deployment monitoring-stack-deployment kube-dns
"Listen on port 6379 locally, forwarding to 9090 in the pod",kubectl port-forward pod/e-commerce-pod 6379:9090
Update pod 'database' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods database component-
Create a new secret named private-key-secret from an env file,kubectl create secret generic private-key-secret --from-env-file=path/to/configs.env
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/namespace-config deployment/frontend-deployment
"Mark node ""edge-node-10"" as unschedulable",kubectl cordon edge-node-10
Get output from running the 'dotnet --list-sdks' command in warp-drive from pod backend-pod,kubectl exec backend-pod -c warp-drive -- dotnet --list-sdks
Return snapshot logs from container frontend-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/frontend-deployment -c payment-gateway-pod-1
Start a centos pod,kubectl run nginx --image=centos
"Update pod 'api' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api owner='alice smith'
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""internal-apps"" API group",kubectl get deployments.stable-2.0.0.internal-apps -o json
"Listen on port 8000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8000:6379
"Listen on port 5000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod 5000:8888
"Listen on port 8088 locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod 8088:3000
Set deployment email-server-deployment's service account to argocd,kubectl set serviceaccount deployment email-server-deployment argocd
Return snapshot of previous terminated cyber-sleuth container logs from pod auth-service-pod,kubectl logs -p -c cyber-sleuth auth-service-pod
Start a redis pod and let the container expose port 5000,kubectl run hazelcast --image=redis --port=5000
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""testing-apps"" API group",kubectl get deployments.rc-1.1.0.testing-apps -o json
Import environment from a secret,kubectl set env --from=secret/docker-registry-secret deployment/proxy-service-deployment
Embed certificate authority data for the e2e cluster entry,kubectl config set-cluster e2e --embed-certs --certificate-authority=~/.kube/kube-cluster-2/kubernetes.ca.crt
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-secrets deployment/email-server-deployment
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""custom-apps"" API group",kubectl get deployments.alpha-2.0.custom-apps -o yaml
Start a golang pod and let the container expose port 27017,kubectl run hazelcast --image=golang --port=27017
"Define new exec auth plugin args for the ""developer"" entry",kubectl config set-credentials developer --exec-arg=arg1 --exec-arg=arg2
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json expiration-date='2024-12-31'
"Listen on port 6379 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 6379:5432
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/mypod 8088 5000
"Update pod 'auth' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth security-scan-status=pass
Add a taint with key 'datacenter' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  datacenter=edge-node-10:PreferNoSchedule
"Update node 'storage-node-13' with a taint with key 'special' and value 'backup' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes storage-node-13 special=backup:NoSchedule
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8888 8888
Get output from running the 'go' command in warp-drive from pod mypod,kubectl exec mypod -c warp-drive -- go
Create a new config map named global-config based on folder configs,kubectl create configmap global-config --from-file=path/to/configs
"Listen on port 9090 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 9090:6379
"Wait for the pod ""auth-service-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/auth-service-pod
"Listen on port 8000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8000:9090
Set deployment cache-cluster-deployment's service account to tiller,kubectl set serviceaccount deployment cache-cluster-deployment tiller
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/api-service-pod 5000:8000
Get output from running the 'mysqld' command in warp-drive from pod web-app-pod,kubectl exec web-app-pod -c warp-drive -- mysqld
"Auto scale a deployment ""chat-app"", with the number of pods between 1 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment chat-app --min=1 --max=10
"Listen on port 8888 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8888:8080"
Return snapshot logs from container search-engine-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/search-engine-deployment -c payment-gateway-pod-1
Set deployment web-app-deployment's service account to cert-manager,kubectl set serviceaccount deployment web-app-deployment cert-manager
"Check to see if I can get the job named ""backup-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/backup-job -n logging
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""backup-apps"" API group",kubectl get deployments.v1.1.0.backup-apps -o json
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml backup-strategy='daily backups'
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=kube-cluster-1
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/mypod 8888:3000
Set only the server field on the star-cluster cluster entry without touching other values,kubectl config set-cluster star-cluster --server=https://1.2.3.4
"Get output from running 'nginx -g ""daemon off;""' command from the first pod of the service frontend-service, using the first container by default","kubectl exec svc/frontend-service -- nginx -g ""daemon off;"""
Update image of all containers of daemonset namespace- to 'python:3.9.7',kubectl set image daemonset namespace-3 *=python:3.9.7
Create a new secret named private-key-secret with specified keys instead of names on disk,kubectl create secret generic private-key-secret --from-file=ssh-privatekey=path/to/id_rsa --from-file=ssh-publickey=path/to/id_rsa.pub
"Listen on port 5432 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 5432:5432
"Delete pods and services with same names ""vpn"" and ""backend""","kubectl delete pod,service vpn backend"
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 8888 8081
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n testing
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir kubeapps/worker-pod-4:/tmp/bar
Update pod 'web' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods web tier-
Delete pods and services with label region=eu-west-2,"kubectl delete pods,services -l region=eu-west-2"
"Listen on port 8081 locally, forwarding to 6379 in the pod",kubectl port-forward pod/backend-pod 8081:6379
Embed certificate authority data for the star-cluster cluster entry,kubectl config set-cluster star-cluster --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 9090 8000
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/options/file2.txt
Begin streaming the logs of the quantum-quark container in pod security-service-pod,kubectl logs -f -c quantum-quark security-service-pod
"Listen on port 8000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/cdn-service-pod 8000:9090
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.cloud-context.cluster prod-cluster
Create a new secret named tls-certificate-secret from an env file,kubectl create secret generic tls-certificate-secret --from-env-file=path/to/data.env
"If the deployment named webapp-replicaset's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/webapp-replicaset
Update image of all containers of daemonset namespace- to 'ubuntu:20.04',kubectl set image daemonset namespace-3 *=ubuntu:20.04
Embed certificate authority data for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --embed-certs --certificate-authority=~/.kube/app-cluster/kubernetes.ca.crt
"Create a cluster role named ""custom_role"" with ResourceName specified",kubectl create clusterrole custom_role --verb=patch --resource=configmaps --resource-name=app-worker-1 --resource-name=app-worker-1
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=27017:9091
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/scheduler-app-deployment JWT_SECRET=your-jwt-secret -o yaml
"Listen on port 5432 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 5432:6379"
Embed certificate authority data for the web-cluster cluster entry,kubectl config set-cluster web-cluster --embed-certs --certificate-authority=~/.kube/dev-cluster/kubernetes.ca.crt
"Get output from running 'dotnet' command from the first pod of the deployment analytics-platform-deployment, using the first container by default",kubectl exec deploy/analytics-platform-deployment -- dotnet
Create a new LoadBalancer service named proxy-server-lb,kubectl create service loadbalancer proxy-server-lb --tcp=8083:9092
Start the wordpress pod using a different command and custom arguments,kubectl run nginx --image=wordpress --command -- <cmd> <arg1> ... <argN>
Get output from running the 'elasticsearch-plugin --list' command in nebula-navigator from pod e-commerce-pod,kubectl exec e-commerce-pod -c nebula-navigator -- elasticsearch-plugin --list
Set deployment proxy-service-deployment's service account to kube-dns,kubectl set serviceaccount deployment proxy-service-deployment kube-dns
"Remove exec auth plugin environment variables for the ""service-account"" entry",kubectl config set-credentials service-account --exec-env=var-to-remove-
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/search-service 5432:https
Remove from node 'edge-node-10' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes edge-node-10 special:NoSchedule-
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8000 8081
Update pod 'security' with the label 'release' and the value 'v2.0',kubectl label pods security release=v2.0
"Listen on port 8888 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8888:9090
Begin streaming the logs of the cosmic-container container in pod chat-app-pod,kubectl logs -f -c cosmic-container chat-app-pod
"Auto scale a deployment ""proxy-server"", with the number of pods between 1 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy-server --min=1 --max=10
"Listen on port 8081 locally, forwarding to 8000 in the pod",kubectl port-forward pod/proxy-server-pod 8081:8000
Get output from astro-container from pod api-service-pod,kubectl attach api-service-pod -c astro-container
"Listen on port 5432 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5432:8888
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/notification-sender-job -n staging
"Update pod 'analytics' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods analytics expiration-date='2024-12-31'
Add a taint with key 'special' on nodes having label app=web-app,kubectl taint node -l app=web-app  special=dev-node-4:PreferNoSchedule
Create a new config map named app-config-prod based on folder properties,kubectl create configmap app-config-prod --from-file=path/to/properties
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-config-dev deployment/cache-cluster-deployment
Update image of all containers of daemonset namespace-2 to 'mongo:5.0.2',kubectl set image daemonset namespace-2 *=mongo:5.0.2
Rename the context 'cluster-1-context' to 'edge-context' in your kubeconfig file,kubectl config rename-context cluster-1-context edge-context
"Update pod 'backend' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods backend app-version='2.5.1'
Add a taint with key 'cpu-type' on nodes having label myLabel,kubectl taint node -l myLabel  cpu-type=edge-node-10:PreferNoSchedule
Update pod 'analytics' with the label 'tier' and the value 'database',kubectl label pods analytics tier=database
Remove from node 'k8s-node-1' all the taints with key 'workload',kubectl taint nodes k8s-node-1 workload-
"Listen on port 8080 locally, forwarding to 5432 in the pod",kubectl port-forward pod/proxy-server-pod 8080:5432
Apply the configuration in settings.json to a pod,kubectl apply -f ./settings.json
Add a taint with key 'environment' on nodes having label component=proxy,kubectl taint node -l component=proxy  environment=app-node-6:PreferNoSchedule
Mark the nginx deployment as paused # Any current state of the deployment will continue its function; new updates # to the deployment will not have an effect as long as the deployment is paused,kubectl rollout pause deployment/nginx
Create a copy of email-service-pod changing all container images to confluentinc/cp-kafka,kubectl debug email-service-pod --copy-to=my-debugger --set-image=*=confluentinc/cp-kafka
Create a copy of proxy-service-pod changing all container images to postgres,kubectl debug proxy-service-pod --copy-to=debug-image-1 --set-image=*=postgres
Start a ubuntu pod and let the container expose port 6379,kubectl run hazelcast --image=ubuntu --port=6379
Get output from running the 'redis-server' command in nano-bot from pod media-stream-pod,kubectl exec media-stream-pod -c nano-bot -- redis-server
"List deployments in YAML output format, in the ""custom-version"" version of the ""custom-deployments"" API group",kubectl get deployments.custom-version.custom-deployments -o yaml
"Listen on port 3000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/search-service 3000:https
Create a job with a command,kubectl create job report-generation-job --image=postgres -- psql
Create a deployment named gitlab that runs the mongo image and expose port 9090,kubectl create deployment gitlab --image=mongo --port=9090
"Update pod 'payment' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment team='frontend team'
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/env-vars deployment/cache-cluster-deployment
Add a taint with key 'datacenter' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  datacenter=monitoring-node-15:PreferNoSchedule
Return snapshot logs from container proxy-service-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/proxy-service-deployment -c e-commerce-pod-1
Create a new ExternalName service named external-analytics-service,kubectl create service externalname external-analytics-service --external-name governmental-demo.gov
Create a new secret named gcp-service-account-secret from an env file,kubectl create secret generic gcp-service-account-secret --from-env-file=path/to/properties.env
"Listen on port 8081 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8081:8088
Begin streaming the logs of the mycontainer container in pod proxy-server-pod,kubectl logs -f -c mycontainer proxy-server-pod
"Listen on port 8080 locally, forwarding to 9090 in the pod",kubectl port-forward pod/e-commerce-pod 8080:9090
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=e2e
Create a new service account named kube-controller-manager,kubectl create serviceaccount kube-controller-manager
Set deployment search-engine-deployment's service account to prometheus,kubectl set serviceaccount deployment search-engine-deployment prometheus
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/mypod 8088:8000
"Update pod 'cdn' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn release-notes='https://example.com/release-notes/v2.5.1'
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/log-config deployment/email-server-deployment
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=8443 --target-port=909100
"Delete pods and services with same names ""chat-app"" and ""analytics""","kubectl delete pod,service chat-app analytics"
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod 8080:8088
Create a job with a command,kubectl create job log-processing-job --image=postgres -- postgres
"Scale a resource identified by type and name specified in ""docker-registry.yaml"" to 5",kubectl scale --replicas=5 -f docker-registry.yaml
Create a cron job with a command,"kubectl create cronjob data-sync --image=wordpress --schedule=""*/1 * * * *"" -- apache2ctl -D FOREGROUND"
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/email-server-deployment CACHE_SIZE=64MB -o yaml
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8000 8000
Set deployment backend-microservice-deployment's service account to default,kubectl set serviceaccount deployment backend-microservice-deployment default
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=web-cluster
Create a job with a command,kubectl create job testing --image=mongo -- mongod
Remove from node 'worker-node-3' all the taints with key 'dedicated',kubectl taint nodes worker-node-3 dedicated-
Update deployment 'load-balancer-deployment' with a new environment variable,kubectl set env deployment/load-balancer-deployment DEBUG=true
Return snapshot logs from pod proxy-service-pod with multi containers,kubectl logs proxy-service-pod --all-containers=true
Create a new ExternalName service named external-dns-service,kubectl create service externalname external-dns-service --external-name documentation-tech.tech
Add a taint with key 'special' on nodes having label myLabel,kubectl taint node -l myLabel  special=prod-node-5:PreferNoSchedule
"Listen on port 9090 locally, forwarding to 5432 in the pod",kubectl port-forward pod/web-app-pod 9090:5432
Start a alpine pod and let the container expose port 8082,kubectl run hazelcast --image=alpine --port=8082
Update all deployments' and rc's nginx container's image to 'java:11.0.12',"kubectl set image deployments,rc java=java:11.0.12 --all"
Create a new secret named aws-credentials-secret from an env file,kubectl create secret generic aws-credentials-secret --from-env-file=path/to/options.env
Update image of all containers of daemonset namespace-2 to 'postgres:13.4',kubectl set image daemonset namespace-2 *=postgres:13.4
Create a new secret named ldap-credentials-secret with keys for each file in folder bar,kubectl create secret generic ldap-credentials-secret --from-file=path/to/configurations
"Listen on port 8088 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8088:5432
"Set a deployments go container cpu limits to ""50m"" and memory to ""128Mi""","kubectl set resources deployment go -c=nginx --limits=cpu=50m,memory=128Mi"
"Create a single ingress called 'app-loadbalancer-ingress' that directs requests to testing.com/module to svc # svc1:8081 with a tls secret ""my-cert""","kubectl create ingress app-loadbalancer-ingress --rule=""testing.com/module=svc1:8081,tls=my-cert"""
Create a job with a command,kubectl create job log-processing-job --image=php -- composer --version
Get output from running the 'nginx -t' command in stardust-shuttle from pod analytics-pod,kubectl exec analytics-pod -c stardust-shuttle -- nginx -t
"If the deployment named db-migration-replicaset's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/db-migration-replicaset
Start a postgres pod and let the container expose port 8080,kubectl run hazelcast --image=postgres --port=8080
Create a new secret named my-secret from an env file,kubectl create secret generic my-secret --from-env-file=path/to/options.env
Approve CSR 'csr-controller-6',kubectl certificate approve csr-controller-6
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n kube-system
Add a taint with key 'datacenter' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  datacenter=db-node-7:PreferNoSchedule
"If the deployment named prod-app-rs's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/prod-app-rs
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/monitoring-stack-deployment -c frontend-pod-1
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8082 --target-port=808200
"Listen on port 8080 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/web-service 8080:https
"Listen on port 5432 locally, forwarding to 8080 in the pod",kubectl port-forward pod/api-service-pod 5432:8080
Get output from running the 'geth attach' command in quantum-quark from pod media-stream-pod,kubectl exec media-stream-pod -c quantum-quark -- geth attach
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/log-rotation-job -n production
Remove from node 'gpu-node-12' all the taints with key 'cpu-type',kubectl taint nodes gpu-node-12 cpu-type-
Delete the context for the local-context cluster,kubectl config delete-context local-context
Remove from node 'worker-node-3' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes worker-node-3 hardware:NoExecute-
"Listen on port 8088 locally, forwarding to 8080 in the pod",kubectl port-forward pod/analytics-pod 8088:8080
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""mobile-apps"" API group",kubectl get deployments.alpha-2.0.mobile-apps -o yaml
Return snapshot of previous terminated cyber-sleuth container logs from pod security-service-pod,kubectl logs -p -c cyber-sleuth security-service-pod
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""external-apps"" API group",kubectl get deployments.alpha-2.0.external-apps -o json
Update image of all containers of daemonset test to 'redis:6.2.5',kubectl set image daemonset test *=redis:6.2.5
Get output from warp-drive from pod web-app-pod,kubectl attach web-app-pod -c warp-drive
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/virus-scan-job -n cert-manager
"Update pod 'media-stream' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream monitoring-tool=Prometheus
"Listen on port 8888 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8888:8080
"Update pod 'cdn' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn deployment-script='https://example.com/deploy.sh'
Return snapshot of previous terminated nebula-navigator container logs from pod chat-app-pod,kubectl logs -p -c nebula-navigator chat-app-pod
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/properties/file2.txt
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-config deployment/payment-processor-deployment
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/backend-pod 3000:6379
Create a copy of vpn-service-pod changing all container images to php,kubectl debug vpn-service-pod --copy-to=debug-image-web --set-image=*=php
Create a new ClusterIP service named ldap-service-clusterip,kubectl create service clusterip ldap-service-clusterip --tcp=8084:8010
Get output from running the 'gem --version' command in warp-drive from pod security-service-pod,kubectl exec security-service-pod -c warp-drive -- gem --version
Diff file read from stdin,cat conf.json | kubectl diff -f -
"Listen on port 9090 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 9090:8888"
"Get output from running 'ruby --version' command from the first pod of the deployment payment-processor-deployment, using the first container by default",kubectl exec deploy/payment-processor-deployment -- ruby --version
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.team-beta-context.cluster edge-cluster
Set the resource request and limits for all containers in go,"kubectl set resources deployment go --limits=cpu=200m,memory=512Mi --requests=cpu=5,memory=128Mi"
Disable cert checking for the dev cluster entry,kubectl config set-cluster cluster-alpha --insecure-skip-tls-verify=true
Approve CSR 'csr-ingress-7',kubectl certificate approve csr-ingress-7
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8081 8081
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kube-server/task-processor-pod-17::/tmp/foo /tmp/bar_dir
"Delete pods and services with same names ""chat-app"" and ""media-stream""","kubectl delete pod,service chat-app media-stream"
Add a taint with key 'cpu-type' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  cpu-type=backup-node-14:PreferNoSchedule
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=settings=/path/to/parameters/file1.txt --from-file=key2=/path/to/preferences/file2.txt
"Listen on port 3000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 3000:8000
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/env-vars deployment/search-engine-deployment
Start a node pod and let the container expose port 5001,kubectl run hazelcast --image=node --port=5001
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name sandbox-site.co
Display only the most recent 31 lines of output in pod proxy-service-pod,kubectl logs --tail=31 proxy-service-pod
Begin streaming the logs of the quantum-quark container in pod web-app-pod,kubectl logs -f -c quantum-quark web-app-pod
"Listen on port 8080 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8080:8000
Create a new secret named password-secret with keys for each file in folder bar,kubectl create secret generic password-secret --from-file=path/to/options
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=galaxy-cluster
Copy :/tmp/foo local file to /tmp/bar_dir in a remote pod in a specific container,kubectl cp :/tmp/foo web-app-pod-1:/tmp/bar_dir -c task-processor
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=star-cluster
"Listen on port 8088 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8088:8888"
"Mark node ""worker-node-3"" as unschedulable",kubectl cordon worker-node-3
Start a ruby pod and let the container expose port 5000,kubectl run hazelcast --image=ruby --port=5000
Show metrics for the pods defined by label app=web-app,kubectl top pod -l app=web-app
"Start a python pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=python --overrides='{ ""apiVersion"": ""dev-2.2.0"", ""spec"": { ... } }'"
Import environment from a secret,kubectl set env --from=secret/password-secret deployment/notification-handler-deployment
"Update pod 'gateway' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods gateway alert-email='alerts@example.com'
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/settings/file2.txt
"Listen on port 8888 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8888:8080
"Update pod 'chat-app' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app deployment-script='https://example.com/deploy.sh'
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod proxy-server-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-server-pod -c nano-bot -i -t
Add to node 'web-node-8' a taint with key 'special' and no value,kubectl taint nodes web-node-8 special:NoSchedule
Create a deployment named logging that runs the alpine image and expose port 8088,kubectl create deployment logging --image=alpine --port=8088
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/node
Embed certificate authority data for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --embed-certs --certificate-authority=~/.kube/data-cluster/kubernetes.ca.crt
"If the deployment named mysql's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/mysql
Return snapshot of previous terminated code-explorer container logs from pod web-app-pod,kubectl logs -p -c code-explorer web-app-pod
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/analytics-pod 8080:8888
View the last-applied-configuration annotations by file in JSON,kubectl apply view-last-applied -f params.yaml -o json
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=star-cluster
Begin streaming the logs of the code-explorer container in pod api-service-pod,kubectl logs -f -c code-explorer api-service-pod
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name bar.com
"Listen on port 5432 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 5432:5000"
"Create a single ingress called 'app-ingress' that directs requests to site.com/bar to svc # svc1:3000 with a tls secret ""my-cert""","kubectl create ingress app-ingress --rule=""site.com/bar=svc1:3000,tls=my-cert"""
"Listen on port 8888 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8888:8888
Create a job with a command,kubectl create job security-scan-job --image=wordpress -- wp
"Listen on port 5432 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5432:8088
Update pod 'security' with the label 'role' and the value 'frontend',kubectl label pods security role=frontend
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/global-config deployment/analytics-platform-deployment
Start a mongo pod and let the container expose port 5001,kubectl run hazelcast --image=mongo --port=5001
"Create a single ingress called 'public-api-ingress' that directs requests to foo.com/example to svc # svc1:8088 with a tls secret ""my-cert""","kubectl create ingress public-api-ingress --rule=""foo.com/example=svc1:8088,tls=my-cert"""
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-caching-service
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8088 8088
Rollback to the previous deployment,kubectl rollout undo deployment/prod
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=9091:8081
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8000 8081
"Delete pods and services with same names ""media-stream"" and ""payment""","kubectl delete pod,service media-stream payment"
Get output from running the 'irb' command in cosmic-container from pod cdn-service-pod,kubectl exec cdn-service-pod -c cosmic-container -- irb
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/order-service"
"Delete pods and services with same names ""media-stream"" and ""api""","kubectl delete pod,service media-stream api"
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/notification-service"
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/analytics-platform-deployment PORT=8080 -o yaml
Add a taint with key 'disktype' on nodes having label component=proxy,kubectl taint node -l component=proxy  disktype=worker-node-3:PreferNoSchedule
"Auto scale a deployment ""email"", with the number of pods between 4 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment email --min=4 --max=13
"Create a single ingress called 'service-ingress' that directs requests to site.com/bar to svc # svc1:8083 with a tls secret ""my-cert""","kubectl create ingress service-ingress --rule=""site.com/bar=svc1:8083,tls=my-cert"""
Begin streaming the logs of the cosmic-container container in pod web-app-pod,kubectl logs -f -c cosmic-container web-app-pod
Update deployment 'proxy-service-deployment' with a new environment variable,kubectl set env deployment/proxy-service-deployment MAX_CONNECTIONS=100
Embed certificate authority data for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
Create a job,kubectl create job log-collection --image=busybox
Get output from quantum-quark from pod chat-app-pod,kubectl attach chat-app-pod -c quantum-quark
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/api-service-pod 8888:3000
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/proxy-server-pod
Update pod 'foo' with the label 'env' and the value 'staging',kubectl label pods foo env=staging
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/payment-service"
Begin streaming the logs of the rocket-ranger container in pod analytics-pod,kubectl logs -f -c rocket-ranger analytics-pod
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod chat-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl exec chat-app-pod -c astro-container -i -t -- bash -il
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-monitoring-service
"Wait for the pod ""chat-app-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/chat-app-pod
"Listen on port 3000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 3000:5432
Apply the configuration in manifest.yaml and delete all the other config maps that are not in the file,kubectl apply --prune -f manifest.yaml --all --prune-whitelist=core/v1/ConfigMap
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/analytics-pod
Get output from running the 'geth attach' command in stardust-shuttle from pod proxy-service-pod,kubectl exec proxy-service-pod -c stardust-shuttle -- geth attach
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/chat-app-pod 8000:5000
Return snapshot logs from container mydeployment-1 of a deployment named gateway-pod,kubectl logs deployment/mydeployment -c gateway-pod-1
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=cluster-alpha
"If the deployment named foo's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/foo
Dump a set of namespaces to /tmp/foo,"kubectl cluster-info dump --namespaces default,kube-system --output-directory=/tmp/foo"
"Delete pods and services with same names ""security"" and ""backend""","kubectl delete pod,service security backend"
"Listen on port 8080 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8080:8000
Create a job with a command,kubectl create job data-migration-job --image=redis -- redis-cli
"Run a proxy to the Kubernetes API server on port 5001, serving static content from ./local/www/",kubectl proxy --port=5001 --www=./local/www/
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/kube-system-config deployment/email-server-deployment
Return only the phase value of the specified pod,kubectl get -o template pod/chat-app-pod --template={{.status.phase}}
"Get output from running 'redis-cli' command from the first pod of the service backend-service, using the first container by default",kubectl exec svc/backend-service -- redis-cli
Get output from running the 'apk add curl' command in nebula-navigator from pod cdn-service-pod,kubectl exec cdn-service-pod -c nebula-navigator -- apk add curl
"Listen on port 5432 locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod 5432:5432
"Create a service for a replication controller identified by type and name specified in ""centos-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f centos-controller.yaml --port=9000 --target-port=330600
Get output from running the 'apache2ctl -D FOREGROUND' command in nano-bot from pod cdn-service-pod,kubectl exec cdn-service-pod -c nano-bot -- apache2ctl -D FOREGROUND
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.user-a-context.cluster testing-cluster
Update pod 'frontend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods frontend tier-
Embed certificate authority data for the app-cluster cluster entry,kubectl config set-cluster app-cluster --embed-certs --certificate-authority=~/.kube/app-cluster/kubernetes.ca.crt
Get output from running the 'jenkins-plugin-cli' command in cyber-sleuth from pod auth-service-pod,kubectl exec auth-service-pod -c cyber-sleuth -- jenkins-plugin-cli
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.cloud-context.cluster on-prem-cluster
"Auto scale a deployment ""media-stream"", with the number of pods between 6 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment media-stream --min=6 --max=15
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/data-synchronization-job -n kube-dns
Create a new service account named prometheus,kubectl create serviceaccount prometheus
Roll back to the previous deployment,kubectl rollout undo deployment/development
Print the supported namespaced resources,kubectl api-resources --versionspaced=true
Return snapshot of previous terminated stardust-shuttle container logs from pod security-service-pod,kubectl logs -p -c stardust-shuttle security-service-pod
"Listen on a random port locally, forwarding to 8000 in the pod",kubectl port-forward pod/e-commerce-pod :8000
Begin streaming the logs of the astro-container container in pod media-stream-pod,kubectl logs -f -c astro-container media-stream-pod
View the rollout history of a deployment,kubectl rollout history deployment/my-deployment
"Start a node pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=node --restart=Never
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""custom-apps"" API group",kubectl get deployments.dev-2.2.0.custom-apps -o yaml
Start a python pod and let the container expose port 9000,kubectl run hazelcast --image=python --port=9000
"Listen on port 8081 locally, forwarding to 8000 in the pod",kubectl port-forward pod/log-aggregator-pod 8081:8000
Update pod 'media-stream' with the label 'env' and the value 'production',kubectl label pods media-stream env=production
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach gateway-pod -c mycontainer -i -t
Create a deployment named gateway that runs the confluentinc/cp-kafka image and expose port 8181,kubectl create deployment gateway --image=confluentinc/cp-kafka --port=8181
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""external-apps"" API group",kubectl get deployments.hotfix-1.1.2.external-apps -o yaml
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/vpn-service-pod
"Listen on port 8088 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8088:5000"
Begin streaming the logs of the warp-drive container in pod media-stream-pod,kubectl logs -f -c warp-drive media-stream-pod
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-config deployment/gateway-deployment
Begin streaming the logs of the nebula-navigator container in pod vpn-service-pod,kubectl logs -f -c nebula-navigator vpn-service-pod
Get output from running the 'python' command in time-machine from pod monitoring-pod,kubectl exec monitoring-pod -c time-machine -- python
"Delete pods and services with same names ""backend"" and ""chat-app""","kubectl delete pod,service backend chat-app"
"List deployments in YAML output format, in the ""custom-version"" version of the ""third-party-apps"" API group",kubectl get deployments.custom-version.third-party-apps -o yaml
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node app-node-6 -p '{""spec"":{""rules"":[{""http"":{""paths"":[{""path"":""/"",""backend"":{""service"": {""name"": ""new-service""}}}]}}'"
Add a taint with key 'zone' on nodes having label release=beta,kubectl taint node -l release=beta  zone=worker-node-3:PreferNoSchedule
"Start the python pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=python -- <arg1> <arg2> ... <argN>
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json backup-strategy='daily backups'
Add to node 'backup-node-14' a taint with key 'app' and no value,kubectl taint nodes backup-node-14 app:NoSchedule
Create a deployment named ingress that runs the ruby image and expose port 8000,kubectl create deployment ingress --image=ruby --port=8000
Return snapshot of previous terminated astro-container container logs from pod proxy-service-pod,kubectl logs -p -c astro-container proxy-service-pod
Add a taint with key 'datacenter' on nodes having label team=devops,kubectl taint node -l team=devops  datacenter=testing-node-11:PreferNoSchedule
Update pod 'web' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods web app-
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=8083 --target-port=300100
Get output from running the 'dotnet --list-sdks' command in cyber-sleuth from pod analytics-pod,kubectl exec analytics-pod -c cyber-sleuth -- dotnet --list-sdks
"Set a deployments nginx container cpu limits to ""50m"" and memory to ""2Gi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=50m,memory=2Gi"
Get output from running the 'docker run -it ubuntu' command in cosmic-container from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c cosmic-container -- docker run -it ubuntu
Create a copy of media-stream-pod adding a debug container and changing container images,"kubectl debug media-stream-pod -it --copy-to=debug-image-web --image=debian --set-image=cache=redis:alpine,scheduler=my-scheduler:1.0"
Get output from running the 'postgres' command in astro-container from pod gateway-pod,kubectl exec gateway-pod -c astro-container -- postgres
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod 8000:5000
Get output from running the 'mongod' command in time-machine from pod backend-pod,kubectl exec backend-pod -c time-machine -- mongod
Update pod 'email' with the label 'tier' and the value 'frontend',kubectl label pods email tier=frontend
Describe one context in your kubeconfig file,kubectl config get-contexts staging-context
Set only the server field on the web-cluster cluster entry without touching other values,kubectl config set-cluster web-cluster --server=https://1.2.3.4
"Create a service for an python deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment python --port=5432 --target-port=808900
"Listen on port 8081 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8081:9090
Switch to raw terminal mode; sends stdin to 'bash' in cyber-sleuth from pod frontend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach frontend-pod -c cyber-sleuth -i -t
Display only the most recent 3 lines of output in pod e-commerce-pod,kubectl logs --tail=3 e-commerce-pod
Update deployment 'user-management-deployment' with a new environment variable,kubectl set env deployment/user-management-deployment SMTP_PASSWORD=your-password
Copy /tmp/foo_dir_dir local directory to /tmp/bar_dir_dir in a remote pod in the default namespace,kubectl cp /tmp/foo_dir_dir task-processor-pod-17:/tmp/bar_dir_dir
Return snapshot logs from container proxy-service-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/proxy-service-deployment -c analytics-pod-1
Update pod 'email' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods email component-
"Listen on port 9090 locally, forwarding to 6379 in the pod",kubectl port-forward pod/security-service-pod 9090:6379
Start a ruby pod and let the container expose port 8082,kubectl run hazelcast --image=ruby --port=8082
"Start a mysql pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mysql --overrides='{ ""apiVersion"": ""v1.1.0"", ""spec"": { ... } }'"
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/db-config deployment/log-aggregator-deployment
"Create a single ingress called 'public-api-ingress' that directs requests to site.com/bar to svc # svc1:7000 with a tls secret ""my-cert""","kubectl create ingress public-api-ingress --rule=""site.com/bar=svc1:7000,tls=my-cert"""
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8080 3000
Create a job with a command,kubectl create job scaling-job --image=wordpress -- wp
Create a new service account named tiller,kubectl create serviceaccount tiller
Display only the most recent 31 lines of output in pod media-stream-pod,kubectl logs --tail=31 media-stream-pod
"Update pod 'proxy-server' with the annotation 'contact-email' and the value 'support@example.com', overwriting any existing value",kubectl annotate --overwrite pods proxy-server contact-email='support@example.com'
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod 8888:5000
"Listen on port 9090 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 9090:8888"
Import environment from a secret,kubectl set env --from=secret/jwt-secret deployment/mydeployment
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-config deployment/mydeployment
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-config-dev deployment/frontend-deployment
"Listen on port 8888 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8888:8080
Display only the most recent 23 lines of output in pod email-service-pod,kubectl logs --tail=23 email-service-pod
Start a centos pod and let the container expose port 9092,kubectl run hazelcast --image=centos --port=9092
Set deployment authentication-service-deployment's service account to fluentd,kubectl set serviceaccount deployment authentication-service-deployment fluentd
"Listen on port 8088 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8088:5000
Return snapshot logs from container notification-handler-deployment-1 of a deployment named database-pod,kubectl logs deployment/notification-handler-deployment -c database-pod-1
Create a deployment named my-dep that runs the golang image and expose port 3306,kubectl create deployment my-dep --image=golang --port=3306
Create a deployment named worker that runs the mongo image and expose port 8088,kubectl create deployment worker --image=mongo --port=8088
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod 9090:8080
Add a taint with key 'workload' on nodes having label service=auth,kubectl taint node -l service=auth  workload=kube-master-9:PreferNoSchedule
"Update pod 'media-stream' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream description='Web server for marketing site'
Update pod 'gateway' with the label 'env' and the value 'development',kubectl label pods gateway env=development
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/chat-app-pod
Get output from running the 'redis-cli' command in rocket-ranger from pod auth-service-pod,kubectl exec auth-service-pod -c rocket-ranger -- redis-cli
Delete the operator user,kubectl config delete-user operator
Create a deployment named sonarqube that runs the ruby image and expose port 8088,kubectl create deployment sonarqube --image=ruby --port=8088
"Delete pods and services with same names ""monitoring"" and ""auth""","kubectl delete pod,service monitoring auth"
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod 3000:8000
Edit the job 'image-processing-job' in JSON using the v1 API format,kubectl edit job.v1.batch/image-processing-job -o json
"Listen on port 8080 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8080:5432
"Listen on port 8088 locally, forwarding to 8080 in the pod",kubectl port-forward pod/log-aggregator-pod 8088:8080
"Run a proxy to the Kubernetes API server on port 9091, serving static content from ./local/www/",kubectl proxy --port=9091 --www=./local/www/
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=8089 --target-port=300000
Create a new secret named app-config-secret with keys for each file in folder bar,kubectl create secret generic app-config-secret --from-file=path/to/profiles
Check the rollout status of a daemonset,kubectl rollout status daemonset/namespace-1
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/e-commerce-pod
Start a mysql pod and let the container expose port 9091,kubectl run hazelcast --image=mysql --port=9091
"Create a second service based on the above service, exposing the container port 8443 as port 443 with the name ""nginx-https""",kubectl expose service nginx --port=443 --target-port=9090 --name=nginx-https
Copy ~/.config/kube local file to :/tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube kube-system/web-app-pod-1::/tmp/bar
Create a new secret named gcp-service-account-secret with keys for each file in folder bar,kubectl create secret generic gcp-service-account-secret --from-file=path/to/configurations
Import environment from a secret,kubectl set env --from=secret/jwt-secret deployment/log-aggregator-deployment
Return snapshot of previous terminated lunar-launcher container logs from pod security-service-pod,kubectl logs -p -c lunar-launcher security-service-pod
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.testing-context.cluster edge-cluster
Return snapshot of previous terminated code-explorer container logs from pod mypod,kubectl logs -p -c code-explorer mypod
Update deployment 'proxy-service-deployment' with a new environment variable,kubectl set env deployment/proxy-service-deployment SMTP_HOST=smtp.example.com
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=9090:8443
List resources from a directory with kustomization.yaml - e.g. params/kustomization.yaml,kubectl get -k params/
Update pod 'analytics' with the label 'tier' and the value 'frontend',kubectl label pods analytics tier=frontend
"Listen on port 5432 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 5432:5000
Return snapshot logs from container database-deployment-1 of a deployment named database-pod,kubectl logs deployment/database-deployment -c database-pod-1
"List deployments in YAML output format, in the ""custom-version"" version of the ""beta-apps"" API group",kubectl get deployments.custom-version.beta-apps -o yaml
Unset namespace in edge-context context,kubectl config unset contexts.edge-context.namespace
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/cache-warming-job -n kube-dns
"Listen on port 9090 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 9090:9090
Import environment from a secret,kubectl set env --from=secret/payment-gateway-secret deployment/order-processing-deployment
Begin streaming the logs of the astro-container container in pod e-commerce-pod,kubectl logs -f -c astro-container e-commerce-pod
Add a taint with key 'app' on nodes having label environment=production,kubectl taint node -l environment=production  app=node-2:PreferNoSchedule
"Listen on port 8081 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8081:8000
Update pod 'email' with the label 'env' and the value 'staging',kubectl label pods email env=staging
"Create a cluster role binding for user1, user2, and group1 using the cluster-admin cluster role",kubectl create clusterrolebinding cluster-admin --clusterrole=cluster-admin --user=user1 --user=user2 --group=group1
"Start a redis pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=redis --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
Start a node pod and let the container expose port 8082,kubectl run hazelcast --image=node --port=8082
"Describe a pod identified by type and name in ""conf.json""",kubectl describe -f conf.json
"Get output from running 'go version' command from the first pod of the deployment load-balancer-deployment, using the first container by default",kubectl exec deploy/load-balancer-deployment -- go version
"Check to see if I can get the job named ""data-migration-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/data-migration-job -n monitoring
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/log-aggregator-deployment -c auth-service-pod-1
"Update pod 'cdn' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods cdn status=unhealthy
"Listen on port 8888 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8888:5000"
Update deployment 'email-server-deployment' with a new environment variable,kubectl set env deployment/email-server-deployment LOG_LEVEL=info
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8088 8088
"Delete pods and services with same names ""backend"" and ""payment""","kubectl delete pod,service backend payment"
Create a job with a command,kubectl create job deployment-rollout-job --image=wordpress -- apache2ctl -D FOREGROUND
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.user-b-context.cluster testing-cluster
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/backend-pod 3000 8000
"Create a role named ""default_role"" that allows user to perform ""exec"", ""list"" and ""delete"" on configmaps",kubectl create role default_role --verb=exec --verb=list --verb=delete --resource=configmaps
"Create a single ingress called 'service-ingress' that directs requests to testing.com/example to svc # svc1:8081 with a tls secret ""my-cert""","kubectl create ingress service-ingress --rule=""testing.com/example=svc1:8081,tls=my-cert"""
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/proxy-service-pod
Return snapshot logs from container email-server-deployment-1 of a deployment named backend-pod,kubectl logs deployment/email-server-deployment -c backend-pod-1
"Listen on port 5432 locally, forwarding to 8080 in the pod",kubectl port-forward pod/e-commerce-pod 5432:8080
Import environment from a secret,kubectl set env --from=secret/tls-certificate-secret deployment/analytics-platform-deployment
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""testing-apps"" API group",kubectl get deployments.alpha-2.0.testing-apps -o json
Update pod 'monitoring' with the label 'app' and the value 'myapp',kubectl label pods monitoring app=myapp
"Listen on port 5000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5000:8080
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""cloud-user"" entry",kubectl config set-credentials cloud-user --auth-provider=oidc --auth-provider-arg=client-secret-
Get output from running the 'nginx' command in rocket-ranger from pod gateway-pod,kubectl exec gateway-pod -c rocket-ranger -- nginx
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/api-server-deployment
"Get output from running 'go run hello.go' command from the first pod of the deployment search-engine-deployment, using the first container by default",kubectl exec deploy/search-engine-deployment -- go run hello.go
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/backend-microservice-deployment -c payment-gateway-pod-1
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-config deployment/api-server-deployment
Create a new secret named monitoring-credentials-secret with keys for each file in folder bar,kubectl create secret generic monitoring-credentials-secret --from-file=path/to/properties
"Update pod 'foo' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo expiration-date='2024-12-31'
"Update a role binding for jane.doe, bob.smith, and developers",kubectl set subject rolebinding admin --user=jane.doe --user=bob.smith --group=developers
"Create a cluster role named ""custom_role"" with ResourceName specified",kubectl create clusterrole custom_role --verb=list --resource=pods --resource-name=file-uploader --resource-name=dev-database
Create a new config map named app-config-dev from the key=value pairs in the file,kubectl create configmap app-config-dev --from-file=path/to/settings
"Start a mongo pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mongo --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
"Update pod 'web' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web owner='alice smith'
"Listen on port 9090 locally, forwarding to 9090 in the pod",kubectl port-forward pod/api-service-pod 9090:9090
Create a new secret named api-key-secret from an env file,kubectl create secret generic api-key-secret --from-env-file=path/to/preferences.env
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8088 8080
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-secrets deployment/api-server-deployment
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=3000 --target-port=808100
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/log-rotation-job -n staging
Add to node 'gpu-node-12' a taint with key 'environment' and no value,kubectl taint nodes gpu-node-12 environment:NoSchedule
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""alpha-apps"" API group",kubectl get deployments.v2.0.0.alpha-apps -o yaml
"Update pod 'log-aggregator' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator app-version=2.5.1
Create a deployment named ingress that runs the ruby image and expose port 8080,kubectl create deployment ingress --image=ruby --port=8080
"Set a deployments nginx container cpu limits to ""3"" and memory to ""4Gi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=3,memory=4Gi"
Copy :/tmp/foo local file to /etc/kubernetes in a remote pod in a specific container,kubectl cp :/tmp/foo image-resizer-pod-20:/etc/kubernetes -c database-container
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/api-service"
"Set only the ""client-key"" field on the ""saas-admin"" # entry, without touching other values",kubectl config set-credentials saas-admin --client-key=~/.kube/admin.key
Get output from running the 'wp' command in time-machine from pod vpn-service-pod,kubectl exec vpn-service-pod -c time-machine -- wp
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""sandbox-apps"" API group",kubectl get deployments.v1.1.1.sandbox-apps -o json
Add a taint with key 'special' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  special=web-node-8:PreferNoSchedule
"Update pod 'cdn' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn alert-email=alerts@example.com
Return snapshot of previous terminated lunar-launcher container logs from pod cdn-service-pod,kubectl logs -p -c lunar-launcher cdn-service-pod
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/app-secrets deployment/order-processing-deployment
"Listen on port 9090 locally, forwarding to 9090 in the pod",kubectl port-forward pod/mypod 9090:9090
"Update pod 'auth' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods auth team='frontend-team'
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-config-dev deployment/cache-cluster-deployment
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/monitoring-pod
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8088 8000
View the details of daemonset revision 1,kubectl rollout history daemonset/development --revision=1
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node gpu-node-12 -p '{""spec"":{""replicas"":3}'"
Create a new config map named app-settings from an env file,kubectl create configmap app-settings --from-env-file=path/to/options.env
Begin streaming the logs of the ruby container in pod vpn-service-pod,kubectl logs -f -c ruby vpn-service-pod
Return snapshot logs from container gateway-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/gateway-deployment -c frontend-pod-1
Get output from cyber-sleuth from pod proxy-service-pod,kubectl attach proxy-service-pod -c cyber-sleuth
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/proxy-server-pod
"Listen on port 8081 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/web-service 8081:https
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=web-cluster
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/proxy-server-pod 8888:8888
Return snapshot logs from container load-balancer-deployment-1 of a deployment named mypod,kubectl logs deployment/load-balancer-deployment -c mypod-1
"Listen on port 8088 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8088:6379
"Listen on port 8081 locally, forwarding to 3000 in the pod",kubectl port-forward pod/security-service-pod 8081:3000
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod log-aggregator-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach log-aggregator-pod -c stardust-shuttle -i -t
Add a taint with key 'disktype' on nodes having label release=beta,kubectl taint node -l release=beta  disktype=worker-node-3:PreferNoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node backup-node-14 -p '{""spec"":{""unschedulable"":true}}'"
"Set basic auth for the ""deploy-bot"" entry",kubectl config set-credentials deploy-bot --username=admin --password=uXFGweU9l35qcif
Return snapshot logs from container api-server-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/api-server-deployment -c email-service-pod-1
Return snapshot of previous terminated astro-container container logs from pod monitoring-pod,kubectl logs -p -c astro-container monitoring-pod
Remove from node 'gpu-node-12' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes gpu-node-12 environment:NoSchedule-
Create a new secret named private-key-secret with keys for each file in folder bar,kubectl create secret generic private-key-secret --from-file=path/to/preferences
"Enable the Google Compute Platform auth provider for the ""operator"" entry",kubectl config set-credentials operator --auth-provider=gcp
Approve CSR 'csr-node-2',kubectl certificate approve csr-node-2
Start a jenkins pod and let the container expose port 3306,kubectl run hazelcast --image=jenkins --port=3306
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/log-config deployment/proxy-service-deployment
Start a ubuntu pod and let the container expose port 8080,kubectl run hazelcast --image=ubuntu --port=8080
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/log-aggregator-pod :8088
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/analytics-pod 5000:9090
Add to node 'db-node-7' a taint with key 'disktype' and no value,kubectl taint nodes db-node-7 disktype:NoSchedule
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/log-aggregator-pod 8888:8080
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/monitoring-config deployment/search-engine-deployment
Create a copy of vpn-service-pod changing the command of nano-bot,kubectl debug vpn-service-pod -it --copy-to=my-custom-dbg --container=nano-bot -- sh
Remove from node 'testing-node-11' all the taints with key 'cpu-type',kubectl taint nodes testing-node-11 cpu-type-
Create a new ExternalName service named external-file-storage-service,kubectl create service externalname external-file-storage-service --external-name travel-sample.travel
Add a taint with key 'hardware' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  hardware=testing-node-11:PreferNoSchedule
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod 9090:8000
Create a copy of cdn-service-pod adding a debug container and changing container images,"kubectl debug cdn-service-pod -it --copy-to=debug-image-web --image=debian --set-image=database=mysql:5.7,proxy=nginx:1.21"
"Start a mcr.microsoft.com/dotnet/core/runtime pod and set environment variables ""DNS_DOMAIN=cluster"" and ""POD_NAMESPACE=default"" in the container","kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --env=""DNS_DOMAIN=cluster"" --env=""POD_NAMESPACE=default"""
"Listen on port 6379 locally, forwarding to 8080 in the pod",kubectl port-forward pod/cdn-service-pod 6379:8080
Get output from running the 'python' command in astro-container from pod chat-app-pod,kubectl exec chat-app-pod -c astro-container -- python
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/log-rotation-job -n kube-ingress
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/docker.elastic.co/elasticsearch/elasticsearch
Add to node 'app-node-6' a taint with key 'workload' and no value,kubectl taint nodes app-node-6 workload:NoSchedule
Create a job with a command,kubectl create job backup --image=ruby -- gem --version
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8888 8888
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/database-pod
"Listen on port 6379 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 6379:9090"
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""beta-apps"" API group",kubectl get deployments.v1.1.0.beta-apps -o json
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/analytics-service"
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.client-2-context.cluster cluster-gamma
Create a copy of chat-app-pod changing the command of warp-drive,kubectl debug chat-app-pod -it --copy-to=debug-image-api --container=warp-drive -- sh
Get output from lunar-launcher from pod media-stream-pod,kubectl attach media-stream-pod -c lunar-launcher
Start a jenkins pod and let the container expose port 5001,kubectl run hazelcast --image=jenkins --port=5001
Set deployment monitoring-stack-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment monitoring-stack-deployment kube-scheduler
"Listen on port 3000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/proxy-server-pod 3000:8080
Create a deployment named registry that runs the mysql image and expose port 5000,kubectl create deployment registry --image=mysql --port=5000
Diff file read from stdin,cat docker-registry.yaml | kubectl diff -f -
Check to see if I can list deployments in my current namespace,kubectl auth can-i list deployments.apps
Create a new secret named password-secret from an env file,kubectl create secret generic password-secret --from-env-file=path/to/preferences.env
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.user-b-context.cluster kube-cluster-1
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n production
Display only the most recent 43 lines of output in pod vpn-service-pod,kubectl logs --tail=43 vpn-service-pod
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=8010:8000
Get output from running the 'irb' command in time-machine from pod gateway-pod,kubectl exec gateway-pod -c time-machine -- irb
Create a deployment named jenkins-x that runs the node image,kubectl create deployment jenkins-x --image=node
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/backend-pod 6379:8888
Add a taint with key 'special' on nodes having label service=auth,kubectl taint node -l service=auth  special=worker-node-3:PreferNoSchedule
Display the current-context,kubectl config current-context
Create a deployment named worker that runs the hazelcast image and expose port 6379,kubectl create deployment worker --image=hazelcast/hazelcast --port=6379
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kube-dns/front-end-pod-12::/tmp/foo /tmp/bar
Add to node 'app-node-6' a taint with key 'environment' and no value,kubectl taint nodes app-node-6 environment:NoSchedule
Get output from running the 'nginx -t' command in time-machine from pod cdn-service-pod,kubectl exec cdn-service-pod -c time-machine -- nginx -t
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 5000 8088
Get output from running the 'python --version' command in cyber-sleuth from pod web-app-pod,kubectl exec web-app-pod -c cyber-sleuth -- python --version
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/properties/file2.txt
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/mypod 8888:8080
Create a deployment named sonarqube that runs the ethereum/client-go image and expose port 8080,kubectl create deployment sonarqube --image=ethereum/client-go --port=8080
"Delete pods and services with same names ""backend"" and ""api""","kubectl delete pod,service backend api"
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""legacy-apps"" API group",kubectl get deployments.stable-2.0.0.legacy-apps -o yaml
Add a taint with key 'app' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  app=gpu-node-12:PreferNoSchedule
"Listen on port 9090 locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod 9090:5000
Embed certificate authority data for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --embed-certs --certificate-authority=~/.kube/cluster-alpha/kubernetes.ca.crt
"Auto scale a replication controller ""email"", with the number of pods between 1 and 8, target CPU utilization at 20%",kubectl autoscale rc email --max=8 --cpu-percent=20
Get output from running the 'bash' command in mycontainer from pod media-stream-pod,kubectl exec media-stream-pod -c mycontainer -- bash
"Get output from running the 'jenkins-plugin-cli' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- jenkins-plugin-cli
"Update node 'storage-node-13' with a taint with key 'datacenter' and value 'dc-1' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes storage-node-13 datacenter=dc-1:NoExecute
Start a golang pod and let the container expose port 9000,kubectl run hazelcast --image=golang --port=9000
List a single pod in JSON output format,kubectl get -o json pod frontend-pod
Create a new secret named oauth-secret from an env file,kubectl create secret generic oauth-secret --from-env-file=path/to/properties.env
"Set a deployments mongo container cpu limits to ""500m"" and memory to ""2Gi""","kubectl set resources deployment mongo -c=nginx --limits=cpu=500m,memory=2Gi"
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.client-1-context.cluster staging-cluster
Import environment from a config map with a prefix,kubectl set env --from=configmap/ui-config --prefix=MYSQL_ deployment/notification-handler-deployment
Add to node 'k8s-node-1' a taint with key 'environment' and no value,kubectl taint nodes k8s-node-1 environment:NoSchedule
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/auth-service-pod
"Create a service for a replicated wordpress using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs wordpress --port=8000 --target-port=808000
Create a new ExternalName service named external-database-service,kubectl create service externalname external-database-service --external-name dummy-website.io
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/e-commerce-pod 8000:8080
Get output from running the 'redis-server' command in lunar-launcher from pod chat-app-pod,kubectl exec chat-app-pod -c lunar-launcher -- redis-server
"Set a deployments elasticsearch container cpu limits to ""100m"" and memory to ""512Mi""","kubectl set resources deployment elasticsearch -c=nginx --limits=cpu=100m,memory=512Mi"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node app-node-6 -p '{""spec"":{""someField"":""newValue""}'"
Get output from running the 'jenkins --version' command in nebula-navigator from pod frontend-pod,kubectl exec frontend-pod -c nebula-navigator -- jenkins --version
Create a new ExternalName service named external-caching-service,kubectl create service externalname external-caching-service --external-name placeholder-app.app
Get output from running the 'redis-cli' command in astro-container from pod monitoring-pod,kubectl exec monitoring-pod -c astro-container -- redis-cli
Set deployment search-engine-deployment's service account to argocd,kubectl set serviceaccount deployment search-engine-deployment argocd
"Run a proxy to the Kubernetes API server on port 3001, serving static content from ./local/www/",kubectl proxy --port=3001 --www=./local/www/
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=core
Create a new secret named cert-manager-secret from an env file,kubectl create secret generic cert-manager-secret --from-env-file=path/to/properties.env
Return snapshot logs from container search-engine-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/search-engine-deployment -c security-service-pod-1
Create a deployment named scheduler that runs the centos image with 5 replicas,kubectl create deployment scheduler --image=centos --replicas=5
Remove from node 'node-2' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes node-2 environment:NoSchedule-
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=cluster-gamma
"Listen on port 8000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/backend-service 8000:https
Set deployment analytics-platform-deployment's service account to tiller,kubectl set serviceaccount deployment analytics-platform-deployment tiller
Update deployment 'scheduler-app-deployment' with a new environment variable,kubectl set env deployment/scheduler-app-deployment MAX_CONNECTIONS=100
"Get output from running the 'pg_dump --version' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- pg_dump --version
Get output from running the 'yum install -y wget' command in warp-drive from pod monitoring-pod,kubectl exec monitoring-pod -c warp-drive -- yum install -y wget
"Update pod 'api' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods api env='staging'
Get output from rocket-ranger from pod frontend-pod,kubectl attach frontend-pod -c rocket-ranger
Start a nginx pod and let the container expose port 9091,kubectl run hazelcast --image=nginx --port=9091
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/backend-pod 8080:8081
Return snapshot logs from container search-engine-deployment-1 of a deployment named backend-pod,kubectl logs deployment/search-engine-deployment -c backend-pod-1
Create a new ClusterIP service named billing-service-clusterip,kubectl create service clusterip billing-service-clusterip --tcp=8080:8000
Describe one context in your kubeconfig file,kubectl config get-contexts dev-context
Create a new secret named ldap-credentials-secret with specified keys instead of names on disk,kubectl create secret generic ldap-credentials-secret --from-file=ssh-privatekey=path/to/id_rsa --from-file=ssh-publickey=path/to/id_rsa.pub
Begin streaming the logs of the quantum-quark container in pod email-service-pod,kubectl logs -f -c quantum-quark email-service-pod
"If the deployment named dev-environment-rs's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/dev-environment-rs
Get output from running the 'mysql --version' command in nebula-navigator from pod proxy-server-pod,kubectl exec proxy-server-pod -c nebula-navigator -- mysql --version
"List deployments in JSON output format, in the ""custom-version"" version of the ""third-party-apps"" API group",kubectl get deployments.custom-version.third-party-apps -o json
"Listen on port 6379 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 6379:5432"
"Wait for the pod ""e-commerce-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/e-commerce-pod
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=apps
Start a docker.elastic.co/elasticsearch/elasticsearch pod,kubectl run nginx --image=docker.elastic.co/elasticsearch/elasticsearch
Get output from running the 'node' command in quantum-quark from pod proxy-service-pod,kubectl exec proxy-service-pod -c quantum-quark -- node
Set the server field on the kube-cluster-1 cluster to https://1.2.3.4,kubectl config set clusters.kube-cluster-1.server https://1.2.3.4
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=staging-cluster
Begin streaming the logs of the warp-drive container in pod proxy-server-pod,kubectl logs -f -c warp-drive proxy-server-pod
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/proxy-server-pod 8081:5432
Begin streaming the logs of the astro-container container in pod database-pod,kubectl logs -f -c astro-container database-pod
Add a taint with key 'environment' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  environment=dev-node-4:PreferNoSchedule
Update deployment 'api-server-deployment' with a new environment variable,kubectl set env deployment/api-server-deployment JWT_SECRET=your-jwt-secret
Scale a replica set named 'payment-service-rs' to 5,kubectl scale --replicas=5 rs/payment-service-rs
Return snapshot logs from container frontend-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/frontend-deployment -c log-aggregator-pod-1
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/global-config deployment/log-aggregator-deployment
Create a deployment named wordpress that runs the wordpress image with 7 replicas,kubectl create deployment wordpress --image=wordpress --replicas=7
Create a deployment named prometheus that runs the ubuntu image,kubectl create deployment prometheus --image=ubuntu
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=dev-cluster
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=galaxy-cluster
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=properties=/path/to/data/file1.txt --from-file=key1=/path/to/profiles/file2.txt
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node db-node-7 -p '{""stringData"":{""password"":""new-password""}'"
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod security-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach security-service-pod -c code-explorer -i -t
Start a wordpress pod and let the container expose port 8000,kubectl run hazelcast --image=wordpress --port=8000
Create a job with a command,kubectl create job scaling-job --image=mongo -- mongo
Update pod 'chat-app' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods chat-app role-
"Listen on port 8888 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8888:8081
Create a new ExternalName service named external-analytics-service,kubectl create service externalname external-analytics-service --external-name education-edu.edu
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""prod-apps"" API group",kubectl get deployments.feature-branch-2.3.0.prod-apps -o json
Create a new secret named azure-storage-secret with keys for each file in folder bar,kubectl create secret generic azure-storage-secret --from-file=path/to/configurations
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube kube-node-lease/worker-pod-4:/tmp/bar
Create a copy of media-stream-pod adding a debug container and changing container images,"kubectl debug media-stream-pod -it --copy-to=debug-image-app --image=debian --set-image=web=nginx:latest,proxy=nginx:1.21"
"Listen on port 8080 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8080:8088
"Listen on port 9090 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 9090:5000
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=properties=/path/to/settings/file1.txt --from-file=key1=/path/to/options/file2.txt
"Listen on port 8081 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/analytics-service 8081:https
Rename the context 'testing-context' to 'service-account-context' in your kubeconfig file,kubectl config rename-context testing-context service-account-context
Set the resource request and limits for all containers in ubuntu,"kubectl set resources deployment ubuntu --limits=cpu=200m,memory=512Mi --requests=cpu=50m,memory=128Mi"
Get output from time-machine from pod e-commerce-pod,kubectl attach e-commerce-pod -c time-machine
Create a copy of mypod changing all container images to mongo,kubectl debug mypod --copy-to=debug-image-api --set-image=*=mongo
Get output from running the 'yum install -y wget' command in nano-bot from pod email-service-pod,kubectl exec email-service-pod -c nano-bot -- yum install -y wget
Start a postgres pod and let the container expose port 7000,kubectl run hazelcast --image=postgres --port=7000
Get the documentation of a specific field of a resource,kubectl explain resource=pods.status.phase
"Check to see if I can get the job named ""report-generation-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/report-generation-job -n kube-dns
Get output from mycontainer from pod database-pod,kubectl attach database-pod -c mycontainer
Get output from running the 'kafka-topics --list' command in astro-container from pod media-stream-pod,kubectl exec media-stream-pod -c astro-container -- kafka-topics --list
Get output from running the 'geth' command in time-machine from pod mypod,kubectl exec mypod -c time-machine -- geth
"Listen on port 9090 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 9090:8000"
"Listen on port 6379 locally, forwarding to 5432 in the pod",kubectl port-forward pod/chat-app-pod 6379:5432
"Delete pods and services with same names ""api"" and ""backend""","kubectl delete pod,service api backend"
"Set a deployments golang container cpu limits to ""5"" and memory to ""64Mi""","kubectl set resources deployment golang -c=nginx --limits=cpu=5,memory=64Mi"
Update pod 'vpn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods vpn unhealthy-
Import environment from a secret,kubectl set env --from=secret/docker-registry-secret deployment/mydeployment
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod :8081
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.service-account-context.cluster dev-cluster
Return snapshot logs from container load-balancer-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/load-balancer-deployment -c log-aggregator-pod-1
"Listen on port 8081 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8081:8081"
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8888 5432
Create a new secret named oauth-secret from an env file,kubectl create secret generic oauth-secret --from-env-file=path/to/configs.env
"If the deployment named frontend-rs's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/frontend-rs
Create a new ExternalName service named external-authentication-service,kubectl create service externalname external-authentication-service --external-name bar.com
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/mypod 8080:8081
Return snapshot of previous terminated code-explorer container logs from pod e-commerce-pod,kubectl logs -p -c code-explorer e-commerce-pod
"Listen on port 5000 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 5000:8080"
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/configurations/file2.txt
"List deployments in JSON output format, in the ""custom-version"" version of the ""sandbox-apps"" API group",kubectl get deployments.custom-version.sandbox-apps -o json
"Listen on port 3000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 3000:8000
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod 8080:8888
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=prod-cluster
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""web-apps"" API group",kubectl get deployments.alpha-2.0.web-apps -o json
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/analytics-pod :8080
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/mysql
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/ubuntu
Create a job with a command,kubectl create job audit-job --image=ubuntu -- docker run -it ubuntu
"Create a role named ""bar"" with ResourceName specified",kubectl create role bar --verb=delete --resource=pods --resource-name=cache-redis --resource-name=app-worker-2
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/analytics-pod 8081:5432
"Auto scale a replication controller ""security"", with the number of pods between 1 and 5, target CPU utilization at 60%",kubectl autoscale rc security --max=5 --cpu-percent=60
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-secrets deployment/web-app-deployment
Return only the phase value of the specified pod,kubectl get -o template pod/proxy-service-pod --template={{.status.phase}}
Embed certificate authority data for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
Get output from running the 'pip --version' command in lunar-launcher from pod database-pod,kubectl exec database-pod -c lunar-launcher -- pip --version
"If the deployment named web's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/web
Update pod 'security' with the label 'component' and the value 'worker',kubectl label pods security component=worker
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml last-deployment=2023-03-15
"Update pod 'payment' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment monitoring-tool=Prometheus
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/parameters/file2.txt
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 6379 3000
Use the context for the cluster-beta cluster,kubectl config use-context cluster-beta
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/env-vars deployment/frontend-deployment
Get output from cosmic-container from pod frontend-pod,kubectl attach frontend-pod -c cosmic-container
"Check to see if I can get the job named ""load-testing-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/load-testing-job -n kube-public
Create a job with a command,kubectl create job certificate-renewal --image=ruby -- irb
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node monitoring-node-15 -p '{""spec"":{""containers"":[{""name"":""container-name"", ""resources"":{""limits"":{""cpu"":""200m""}}}]}'"
Create a new secret named ldap-credentials-secret with keys for each file in folder bar,kubectl create secret generic ldap-credentials-secret --from-file=path/to/data
"Listen on port 9090 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 9090:8888
Create a new secret named payment-gateway-secret with keys for each file in folder bar,kubectl create secret generic payment-gateway-secret --from-file=path/to/settings
Create a job with a command,kubectl create job backup --image=jenkins -- jenkins-plugin-cli
Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo kube-node-lease/logging-agent-pod-7:/tmp/bar
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/global-config deployment/analytics-platform-deployment
"Listen on port 8888 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8888:5000
Return snapshot logs from container search-engine-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/search-engine-deployment -c vpn-service-pod-1
"If the deployment named backend-service-replicaset's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/backend-service-replicaset
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod 5000:8081
Describe pods by label environment=production,kubectl describe po -l environment=production
"Set a deployments mysql container cpu limits to ""1"" and memory to ""64Mi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=1,memory=64Mi"
Switch to raw terminal mode; sends stdin to 'bash' in cyber-sleuth from pod chat-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach chat-app-pod -c cyber-sleuth -i -t
"Delete pods and services with same names ""monitoring"" and ""vpn""","kubectl delete pod,service monitoring vpn"
Get output from code-explorer from pod api-service-pod,kubectl attach api-service-pod -c code-explorer
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=5001 --target-port=909100
Update pod 'monitoring' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods monitoring tier-
Start a ruby pod and let the container expose port 3306,kubectl run hazelcast --image=ruby --port=3306
"Create a service for a replicated ruby using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ruby --port=80 --target-port=330600
"Listen on port 9090 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 9090:9090"
Return snapshot logs from container mydeployment-1 of a deployment named email-service-pod,kubectl logs deployment/mydeployment -c email-service-pod-1
"Auto scale a deployment ""frontend"", with the number of pods between 5 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=5 --max=8
Create a deployment named nats that runs the python image and expose port 9090,kubectl create deployment nats --image=python --port=9090
Start a golang pod and let the container expose port 8443,kubectl run hazelcast --image=golang --port=8443
Get output from running the 'composer --version' command in code-explorer from pod vpn-service-pod,kubectl exec vpn-service-pod -c code-explorer -- composer --version
Create a new NodePort service named web-app-nodeport,kubectl create service nodeport web-app-nodeport --tcp=9091:8010
Return snapshot of previous terminated cyber-sleuth container logs from pod web-app-pod,kubectl logs -p -c cyber-sleuth web-app-pod
Begin streaming the logs of the lunar-launcher container in pod media-stream-pod,kubectl logs -f -c lunar-launcher media-stream-pod
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/log-aggregator-pod
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-name-config deployment/load-balancer-deployment
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/analytics-pod 9090:8088
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8000 8081
Edit the service named 'proxy-service',kubectl edit svc/proxy-service
Update pod 'cdn' with the label 'role' and the value 'frontend',kubectl label pods cdn role=frontend
Create a new ClusterIP service named backend-service-clusterip,kubectl create service clusterip backend-service-clusterip --tcp=5432:5000
Remove from node 'monitoring-node-15' all the taints with key 'datacenter',kubectl taint nodes monitoring-node-15 datacenter-
"Get output from running the 'kafka-topics --list' command from pod database-pod, using the first container by default",kubectl exec database-pod -- kafka-topics --list
"Create a single ingress called 'api-ingress' that directs requests to site.com/input to svc # svc1:3000 with a tls secret ""my-cert""","kubectl create ingress api-ingress --rule=""site.com/input=svc1:3000,tls=my-cert"""
Dump a set of namespaces to :/tmp/foo,"kubectl cluster-info dump --namespaces default,kube-system --output-directory=:/tmp/foo"
Set deployment log-aggregator-deployment's service account to tekton,kubectl set serviceaccount deployment log-aggregator-deployment tekton
"Get output from running the 'nginx -t' command from pod mypod, using the first container by default",kubectl exec mypod -- nginx -t
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/log-rotation-job -n logging
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/chat-app-pod 8080:6379
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=data-cluster
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=3001 --target-port=330600
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/e-commerce-pod
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/api-service-pod 3000 8888
Show all logs from pod cdn-service-pod written in the last hour,kubectl logs --since=1h cdn-service-pod
Begin streaming the logs of the nano-bot container in pod api-service-pod,kubectl logs -f -c nano-bot api-service-pod
"Listen on port 9090 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 9090:3000
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""prod-apps"" API group",kubectl get deployments.rc-1.1.0.prod-apps -o json
Embed certificate authority data for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --embed-certs --certificate-authority=~/.kube/sun-cluster/kubernetes.ca.crt
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/env-vars deployment/monitoring-stack-deployment
"Auto scale a deployment ""frontend"", with the number of pods between 1 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=1 --max=15
"Listen on port 3000 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 3000:5432"
Start a nginx pod and let the container expose port 8088,kubectl run hazelcast --image=nginx --port=8088
"Listen on port 8000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/cdn-service-pod 8000:8000
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/env-vars deployment/payment-processor-deployment
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=web-cluster
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=cluster-gamma
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod 3000:3000
Get output from running the 'nginx' command in lunar-launcher from pod gateway-pod,kubectl exec gateway-pod -c lunar-launcher -- nginx
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/settings/file2.txt
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-config-dev deployment/backend-microservice-deployment
Get output from cyber-sleuth from pod api-service-pod,kubectl attach api-service-pod -c cyber-sleuth
"Auto scale a deployment ""chat-app"", with the number of pods between 7 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment chat-app --min=7 --max=12
Create a new resource quota named pod-count-quota,kubectl create quota pod-count-quota --hard=pods=10
"Auto scale a deployment ""analytics"", with the number of pods between 7 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment analytics --min=7 --max=11
Embed certificate authority data for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 9090 8088
"Listen on port 5000 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 5000:6379"
"Set a deployments redis container cpu limits to ""5"" and memory to ""256Mi""","kubectl set resources deployment redis -c=nginx --limits=cpu=5,memory=256Mi"
Create a copy of proxy-service-pod changing all container images to amazonlinux,kubectl debug proxy-service-pod --copy-to=debug-image-1 --set-image=*=amazonlinux
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/log-config deployment/backend-microservice-deployment
Remove from node 'storage-node-13' all the taints with key 'special',kubectl taint nodes storage-node-13 special-
Add to node 'node-1' a taint with key 'dedicated' and no value,kubectl taint nodes node-1 dedicated:NoSchedule
"Listen on port 6379 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 6379:8081
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 8000 8888
Start a redis pod and let the container expose port 6379,kubectl run hazelcast --image=redis --port=6379
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/search-service 9090:https
Update pod 'email' with the label 'role' and the value 'cache',kubectl label pods email role=cache
"Listen on port 8000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8000:8080
Get the documentation of a specific field of a resource,kubectl explain resource=services.metadata.annotations
Set deployment api-server-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment api-server-deployment kube-controller-manager
Disable cert checking for the dev cluster entry,kubectl config set-cluster my-k8s-cluster --insecure-skip-tls-verify=true
Display only the most recent 53 lines of output in pod frontend-pod,kubectl logs --tail=53 frontend-pod
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in a specific container,kubectl cp /tmp/foo_dir backend-pod-13::/tmp/bar -c security-scanner
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp velero/api-server-pod-3:/tmp/foo /tmp/bar
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.team-alpha-context.cluster app-cluster
Set the user field on the prod-context context entry without touching other values,kubectl config set-context prod-context --user=cluster-admin
Deny CSR 'csr-redis-11',kubectl certificate deny csr-redis-11
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.staging-context.cluster galaxy-cluster
Create a copy of proxy-service-pod adding a debug container and changing container images,"kubectl debug proxy-service-pod -it --copy-to=my-debugger --image=debian --set-image=mailer=mailer:latest,api=api:v2"
Create a deployment named app that runs the mongo image with 7 replicas,kubectl create deployment app --image=mongo --replicas=7
"Update pod 'database' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database compliance-level=PCI-DSS
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod analytics-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach analytics-pod -c mycontainer -i -t
Create a job,kubectl create job database-seeding-job --image=busybox
Create a job with a command,kubectl create job security-scan-job --image=jenkins -- jenkins-plugin-cli
Start a redis pod and let the container expose port 8010,kubectl run hazelcast --image=redis --port=8010
"Update pod 'vpn' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn description='Web server for marketing site'
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/frontend-deployment DB_HOST=localhost -o yaml
"Update pod 'backend' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods backend status=unhealthy
Create a new secret named encryption-key-secret from an env file,kubectl create secret generic encryption-key-secret --from-env-file=path/to/preferences.env
"Listen on port 8081 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8081:8000
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 6379 3000
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8089 --target-port=700000
"Get output from running 'redis-cli' command from the first pod of the service user-service, using the first container by default",kubectl exec svc/user-service -- redis-cli
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir argocd/worker-pod-4:/tmp/bar
Add a taint with key 'workload' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  workload=edge-node-10:PreferNoSchedule
Set deployment api-server-deployment's service account to vault,kubectl set serviceaccount deployment api-server-deployment vault
"Create a single ingress called 'app-loadbalancer-ingress' that directs requests to testing.com/input to svc # svc1:8443 with a tls secret ""my-cert""","kubectl create ingress app-loadbalancer-ingress --rule=""testing.com/input=svc1:8443,tls=my-cert"""
"Remove exec auth plugin environment variables for the ""k8s-admin"" entry",kubectl config set-credentials k8s-admin --exec-env=var-to-remove-
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/web-app-pod 8000:5000
"Listen on port 6379 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 6379:6379"
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=5001 --target-port=808400
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=kube-cluster-1
Get output from running the 'mysql' command in astro-container from pod chat-app-pod,kubectl exec chat-app-pod -c astro-container -- mysql
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.team-alpha-context.cluster galaxy-cluster
Create a new ClusterIP service named log-service-clusterip,kubectl create service clusterip log-service-clusterip --tcp=5432:8084
Add a taint with key 'environment' on nodes having label app=web-app,kubectl taint node -l app=web-app  environment=dev-node-4:PreferNoSchedule
"Get output from running 'java -jar /usr/share/jenkins/jenkins.war' command from the first pod of the deployment analytics-platform-deployment, using the first container by default",kubectl exec deploy/analytics-platform-deployment -- java -jar /usr/share/jenkins/jenkins.war
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.service-account-context.cluster cluster-gamma
Rename the context 'cluster-2-context' to 'client-2-context' in your kubeconfig file,kubectl config rename-context cluster-2-context client-2-context
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.app-1-context.cluster cluster-gamma
"Start the ruby pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=ruby -- <arg1> <arg2> ... <argN>
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=8084 --target-port=909200
Create a deployment named proxy that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 9090,kubectl create deployment proxy --image=docker.elastic.co/elasticsearch/elasticsearch --port=9090
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.cloud-context.cluster cluster-beta
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/backend-pod
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/web-app-pod
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""api-v2"" API group",kubectl get deployments.alpha-2.0.api-v2 -o yaml
"Listen on port 5432 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5432:6379
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/global-config deployment/order-processing-deployment
"Auto scale a replication controller ""security"", with the number of pods between 1 and 7, target CPU utilization at 90%",kubectl autoscale rc security --max=7 --cpu-percent=90
Begin streaming the logs from all containers in pods defined by label service=auth,kubectl logs -f -l service=auth --all-containers=true
Add a taint with key 'disktype' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  disktype=app-node-6:PreferNoSchedule
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/frontend-pod
"Update pod 'email' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email backup-strategy='daily backups'
Create a deployment named jenkins that runs the node image,kubectl create deployment jenkins --image=node
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kube-proxy/cache-pod-5::/tmp/foo :/tmp/bar
Get output from nano-bot from pod backend-pod,kubectl attach backend-pod -c nano-bot
Get output from running the 'kafka-server-start /etc/kafka/server.properties' command in mycontainer from pod gateway-pod,kubectl exec gateway-pod -c mycontainer -- kafka-server-start /etc/kafka/server.properties
Create a new ClusterIP service named analytics-service-clusterip,kubectl create service clusterip analytics-service-clusterip --tcp=8181:9091
Create a new ExternalName service named external-cloud-storage-service,kubectl create service externalname external-cloud-storage-service --external-name placeholder-app.app
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/batch-processing-job -n default
Display only the most recent 23 lines of output in pod api-service-pod,kubectl logs --tail=23 api-service-pod
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f kubelet-config.yaml -p '{""stringData"":{""password"":""new-password""}'"
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/log-aggregator-deployment -c log-aggregator-pod-1
Create a new secret named email-credentials-secret with keys for each file in folder bar,kubectl create secret generic email-credentials-secret --from-file=path/to/profiles
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node node-1 -p '{""spec"":{""unschedulable"":true}}'"
Add a taint with key 'environment' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  environment=node-2:PreferNoSchedule
"Listen on port 8888 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8888:8081
Create a new NodePort service named analytics-nodeport,kubectl create service nodeport analytics-nodeport --tcp=9092:9092
"Set a deployments redis container cpu limits to ""50m"" and memory to ""512Mi""","kubectl set resources deployment redis -c=nginx --limits=cpu=50m,memory=512Mi"
Set deployment authentication-service-deployment's service account to argocd,kubectl set serviceaccount deployment authentication-service-deployment argocd
Create a job with a command,kubectl create job monitoring-job --image=docker.elastic.co/elasticsearch/elasticsearch -- elasticsearch --version
Set deployment api-server-deployment's service account to fluentd,kubectl set serviceaccount deployment api-server-deployment fluentd
"Force replace, delete and then re-create the resource",kubectl replace --force -f ./preferences.yaml
Remove the environment variable ENV from container 'quantum-quark' in all deployment configs,"kubectl set env deployments --all --containers=""quantum-quark"" ENV-"
Create a deployment named logging that runs the python image and expose port 8888,kubectl create deployment logging --image=python --port=8888
"Auto scale a deployment ""gateway"", with the number of pods between 4 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=4 --max=15
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kube-server/front-end-pod-12::/tmp/foo :/tmp/bar
Create a job with a command,"kubectl create job image-build-job --image=ubuntu -- docker run ubuntu echo ""Hello"
Import environment from a secret,kubectl set env --from=secret/gcp-service-account-secret deployment/web-app-deployment
Return snapshot logs from container notification-handler-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/notification-handler-deployment -c auth-service-pod-1
Add to node 'node-2' a taint with key 'cpu-type' and no value,kubectl taint nodes node-2 cpu-type:NoSchedule
Add a taint with key 'hardware' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  hardware=backup-node-14:PreferNoSchedule
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp argocd/auth-service-pod-11:/tmp/foo /tmp/bar
"Create a service for a replicated ubuntu, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ubuntu --port=9091 --target-port=909200
Create a new ExternalName service named external-payment-gateway-service,kubectl create service externalname external-payment-gateway-service --external-name demo-service.dev
Get output from running the 'ash' command in quantum-quark from pod security-service-pod,kubectl exec security-service-pod -c quantum-quark -- ash
"Create a single ingress called 'app-ingress' that directs requests to foo.com/module to svc # svc1:27017 with a tls secret ""my-cert""","kubectl create ingress app-ingress --rule=""foo.com/module=svc1:27017,tls=my-cert"""
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/frontend-service"
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8088 8000
Update deployment 'api-server-deployment' with a new environment variable,kubectl set env deployment/api-server-deployment SMTP_HOST=smtp.example.com
Set the server field on the data-cluster cluster to https://1.2.3.4,kubectl config set clusters.data-cluster.server https://1.2.3.4
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 5000 8081
"Update pod 'monitoring' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring team='frontend team'
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod 8088:8081
"Auto scale a deployment ""security"", with the number of pods between 3 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=3 --max=14
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=on-prem-cluster
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json custom-label=my-custom-value
"Update pod 'media-stream' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods media-stream app-version='2.5.1'
Get output from running the 'mysql --version' command in time-machine from pod web-app-pod,kubectl exec web-app-pod -c time-machine -- mysql --version
Display only the most recent 3 lines of output in pod proxy-service-pod,kubectl logs --tail=3 proxy-service-pod
"Listen on port 5000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/proxy-server-pod 5000:5000
Copy /tmp/foo_dir from a remote pod to /etc/kubernetes locally,kubectl cp kube-flannel/worker-pod-4:/tmp/foo_dir /etc/kubernetes
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/e-commerce-pod
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/settings/file2.txt
Create a deployment named jenkins-x that runs the mcr.microsoft.com/dotnet/core/runtime image and expose port 7000,kubectl create deployment jenkins-x --image=mcr.microsoft.com/dotnet/core/runtime --port=7000
Get output from quantum-quark from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c quantum-quark
Create a deployment named wordpress that runs the redis image and expose port 8181,kubectl create deployment wordpress --image=redis --port=8181
"Auto scale a deployment ""gateway"", with the number of pods between 4 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=4 --max=9
Start a ruby pod and let the container expose port 7000,kubectl run hazelcast --image=ruby --port=7000
Return snapshot logs from container user-management-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/user-management-deployment -c web-app-pod-1
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json criticality=high
Start a amazonlinux pod and let the container expose port 5432,kubectl run hazelcast --image=amazonlinux --port=5432
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/chat-app-pod 5000:8000
Get output from running the 'redis-cli' command in warp-drive from pod chat-app-pod,kubectl exec chat-app-pod -c warp-drive -- redis-cli
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/api-service-pod
Get output from the first pod of a replica set named postgres,kubectl attach rs/postgres
"Listen on port 9090 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 9090:6379"
"Auto scale a deployment ""backend"", with the number of pods between 1 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment backend --min=1 --max=13
Remove from node 'testing-node-11' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes testing-node-11 workload:NoSchedule-
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=testing-cluster
Add a taint with key 'hardware' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  hardware=dev-node-4:PreferNoSchedule
"Listen on port 8081 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8081:8088
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/log-aggregator-pod 8000:8081
Remove from node 'k8s-node-1' all the taints with key 'disktype',kubectl taint nodes k8s-node-1 disktype-
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=settings=/path/to/options/file1.txt --from-file=key2=/path/to/data/file2.txt
"Listen on port 8888 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8888:5000
"Set only the ""client-key"" field on the ""web-app"" # entry, without touching other values",kubectl config set-credentials web-app --client-key=~/.kube/admin.key
Get output from running the 'ruby --version' command in rocket-ranger from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c rocket-ranger -- ruby --version
"Listen on port 6379 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 6379:8000"
Remove from node 'backup-node-14' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes backup-node-14 special:NoSchedule-
"Update pod 'proxy-server' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server alert-email=alerts@example.com
Return snapshot logs from first container of a job named virus-scan-job,kubectl logs job/virus-scan-job
"Delete pods and services with same names ""frontend"" and ""security""","kubectl delete pod,service frontend security"
Update image of all containers of daemonset app-v2 to 'wordpress:5.8.1',kubectl set image daemonset app-v2 *=wordpress:5.8.1
"Delete pods and services with same names ""log-aggregator"" and ""gateway""","kubectl delete pod,service log-aggregator gateway"
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/frontend-pod 8080:6379
Import environment from a secret,kubectl set env --from=secret/api-secret-key deployment/analytics-platform-deployment
Create an ingress with TLS enabled using a specific secret and pathType as Prefix,"kubectl create ingress ingsecret --class=default \
--rule=""testing.com/*=svc:8080,tls=secret1"""
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""extensions"" API group",kubectl get deployments.hotfix-1.1.2.extensions -o json
"Listen on port 9090 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 9090:5432"
Create a new NodePort service named monitoring-nodeport,kubectl create service nodeport monitoring-nodeport --tcp=6379:5000
Update pod 'frontend' with the label 'tier' and the value 'backend',kubectl label pods frontend tier=backend
Create a new secret named api-secret-key with keys for each file in folder bar,kubectl create secret generic api-secret-key --from-file=path/to/parameters
Add a taint with key 'cpu-type' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  cpu-type=db-node-7:PreferNoSchedule
"Delete pods and services with same names ""api"" and ""monitoring""","kubectl delete pod,service api monitoring"
"Listen on port 8888 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8888:3000"
"Delete pods and services with same names ""auth"" and ""foo""","kubectl delete pod,service auth foo"
"Start a hazelcast pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=hazelcast/hazelcast --overrides='{ ""apiVersion"": ""custom-version"", ""spec"": { ... } }'"
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp velero/cache-pod-5:/tmp/foo /tmp/bar_dir
List the environment variables defined on a deployments 'proxy-service-deployment',kubectl set env deployment/proxy-service-deployment --list
"Set a deployment's redis:6.2.5 container image to 'redis', and its busybox container image to 'busybox'",kubectl set image deployment/redis busybox=busybox redis=redis:6.2.5
"Wait for the pod ""proxy-server-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/proxy-server-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/monitoring-pod
Create a new secret named ldap-credentials-secret with keys for each file in folder bar,kubectl create secret generic ldap-credentials-secret --from-file=path/to/properties
"Listen on port 6379 locally, forwarding to 5000 in the pod",kubectl port-forward pod/proxy-server-pod 6379:5000
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.service-account-context.cluster star-cluster
"Update pod 'database' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database last-deployment=2023-03-15
Create a copy of database-pod adding a debug container and changing container images,"kubectl debug database-pod -it --copy-to=debug-image-web --image=debian --set-image=logger=logging-app:debug,scheduler=my-scheduler:1.0"
Update pod 'gateway' only if the resource is unchanged from version 1,kubectl label pods gateway status=unhealthy --resource-version=1
Update deployment 'order-processing-deployment' with a new environment variable,kubectl set env deployment/order-processing-deployment API_KEY=your-api-key
Add to node 'web-node-8' a taint with key 'zone' and no value,kubectl taint nodes web-node-8 zone:NoSchedule
Import environment from a secret,kubectl set env --from=secret/aws-credentials-secret deployment/frontend-deployment
Remove from node 'backup-node-14' all the taints with key 'zone',kubectl taint nodes backup-node-14 zone-
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=cloud-cluster
Get output from running the 'geth' command in cyber-sleuth from pod frontend-pod,kubectl exec frontend-pod -c cyber-sleuth -- geth
"Listen on port 8000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/chat-app-pod 8000:8888
"Set a deployments postgres container cpu limits to ""3"" and memory to ""128Mi""","kubectl set resources deployment postgres -c=nginx --limits=cpu=3,memory=128Mi"
Get output from running the 'mysql' command in nebula-navigator from pod monitoring-pod,kubectl exec monitoring-pod -c nebula-navigator -- mysql
Get output from cyber-sleuth from pod chat-app-pod,kubectl attach chat-app-pod -c cyber-sleuth
"Get output from running the 'nginx -t' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- nginx -t
Begin streaming the logs of the rocket-ranger container in pod chat-app-pod,kubectl logs -f -c rocket-ranger chat-app-pod
Create a copy of security-service-pod changing all container images to php,kubectl debug security-service-pod --copy-to=debug-image-1 --set-image=*=php
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8081 8081
Create a job with a command,kubectl create job certificate-renewal --image=alpine -- ash
Add a taint with key 'app' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  app=web-node-8:PreferNoSchedule
Get output from running the 'jenkins-plugin-cli' command in quantum-quark from pod auth-service-pod,kubectl exec auth-service-pod -c quantum-quark -- jenkins-plugin-cli
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""legacy-apps"" API group",kubectl get deployments.rc-1.1.0.legacy-apps -o yaml
Create a copy of backend-pod changing all container images to mongo,kubectl debug backend-pod --copy-to=debug-image-memcached --set-image=*=mongo
"Listen on port 3000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 3000:8088"
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=moon-cluster
"Delete pods and services with same names ""vpn"" and ""log-aggregator""","kubectl delete pod,service vpn log-aggregator"
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=conf=/path/to/settings/file1.txt --from-file=data=/path/to/options/file2.txt
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node prod-node-5 -p $'spec:\n replicas: 3'
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""api-v2"" API group",kubectl get deployments.v2.1.0.api-v2 -o yaml
Get output from running the 'bash' command in code-explorer from pod gateway-pod,kubectl exec gateway-pod -c code-explorer -- bash
Create a new secret named app-config-secret with keys for each file in folder bar,kubectl create secret generic app-config-secret --from-file=path/to/configurations
Get output from astro-container from pod backend-pod,kubectl attach backend-pod -c astro-container
"Listen on port 8080 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8080:8080
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name placeholder-app.app
"Set a deployments mongo container cpu limits to ""500m"" and memory to ""4Gi""","kubectl set resources deployment mongo -c=nginx --limits=cpu=500m,memory=4Gi"
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 6379 8888
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""mobile-apps"" API group",kubectl get deployments.rc-1.1.0.mobile-apps -o json
"Listen on port 8080 locally, forwarding to 5432 in the pod",kubectl port-forward pod/log-aggregator-pod 8080:5432
Create a job with a command,kubectl create job indexing --image=docker.elastic.co/elasticsearch/elasticsearch -- elasticsearch
Add a taint with key 'hardware' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  hardware=gpu-node-12:PreferNoSchedule
Describe pods by label zone=us-east-1,kubectl describe po -l zone=us-east-1
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/cdn-service-pod 5432:9090
Start a php pod and let the container expose port 27017,kubectl run hazelcast --image=php --port=27017
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=testing-cluster
"Listen on port 5432 locally, forwarding to 6379 in the pod",kubectl port-forward pod/chat-app-pod 5432:6379
Create a deployment named logging that runs the docker.elastic.co/elasticsearch/elasticsearch image with 5 replicas,kubectl create deployment logging --image=docker.elastic.co/elasticsearch/elasticsearch --replicas=5
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/api-service-pod 8080:3000
Get output from warp-drive from pod vpn-service-pod,kubectl attach vpn-service-pod -c warp-drive
Set deployment monitoring-stack-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment monitoring-stack-deployment gitlab-runner
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/global-config deployment/database-deployment
Update image of all containers of daemonset staging to 'php:7.4.22',kubectl set image daemonset staging *=php:7.4.22
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/ui-config deployment/payment-processor-deployment
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8888 8888
"Delete pods and services with same names ""media-stream"" and ""security""","kubectl delete pod,service media-stream security"
"Get output from running 'elasticsearch --version' command from the first pod of the service gateway-service, using the first container by default",kubectl exec svc/gateway-service -- elasticsearch --version
Create a copy of frontend-pod changing all container images to node,kubectl debug frontend-pod --copy-to=debug-image-memcached --set-image=*=node
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-name-config deployment/frontend-deployment
Return snapshot logs from container payment-processor-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/payment-processor-deployment -c chat-app-pod-1
Create a new secret named api-secret-key from an env file,kubectl create secret generic api-secret-key --from-env-file=path/to/data.env
Set deployment load-balancer-deployment's service account to argocd,kubectl set serviceaccount deployment load-balancer-deployment argocd
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod 8000:5432
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/email-service-pod
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""backup-apps"" API group",kubectl get deployments.v2.1.0.backup-apps -o yaml
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8088 6379
Remove from node 'node-1' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes node-1 cpu-type:NoSchedule-
"Update pod 'chat-app' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app backup-strategy='daily backups'
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod 8080:8088
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/ui-config deployment/order-processing-deployment
"Update pod 'frontend' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods frontend last-deployment='2023-03-15'
Create a pod disruption budget named replica-set-pdb that will select all pods with the tier=frontend label # and require minimum one of them being available at any point in time,kubectl create poddisruptionbudget replica-set-pdb --selector=tier=frontend --min-available=1
Create a new config map named global-config based on folder preferences,kubectl create configmap global-config --from-file=path/to/preferences
"Get output from running the 'nginx' command from pod media-stream-pod, using the first container by default",kubectl exec media-stream-pod -- nginx
"Create a role binding for developer3, k8s-admin, and qa-engineers using the default_role cluster role",kubectl create rolebinding default_role --clusterrole=default_role --user=developer3 --user=k8s-admin --group=qa-engineers
"Print result (in yaml format) of updating nginx container image from local file, without hitting the server",kubectl set image -f path/to/file.yaml centos=centos:8.4.2105 --local -o yaml
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""api-v2"" API group",kubectl get deployments.v3.0.0.api-v2 -o yaml
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/api-service-pod 3000:5000
Add a taint with key 'workload' on nodes having label component=proxy,kubectl taint node -l component=proxy  workload=app-node-6:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/monitoring-config deployment/web-app-deployment
Add a taint with key 'disktype' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  disktype=backup-node-14:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/api-config deployment/email-server-deployment
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=prod-cluster
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/mypod 6379:8000
Import environment from a secret,kubectl set env --from=secret/gcp-service-account-secret deployment/monitoring-stack-deployment
Set the resource request and limits for all containers in centos,"kubectl set resources deployment centos --limits=cpu=200m,memory=512Mi --requests=cpu=500m,memory=1Gi"
Set deployment log-aggregator-deployment's service account to elasticsearch,kubectl set serviceaccount deployment log-aggregator-deployment elasticsearch
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/web-app-pod
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=kube-cluster-2
"Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment nginx --port=8082 --target-port=808400
"If the deployment named bar's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/bar
Unset namespace in foo context,kubectl config unset contexts.foo.namespace
Update image of all containers of daemonset nginx to 'mongo:5.0.2',kubectl set image daemonset nginx *=mongo:5.0.2
"Mark node ""db-node-7"" as schedulable",kubectl uncordon db-node-7
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/db-config deployment/scheduler-app-deployment
"Auto scale a replication controller ""cdn"", with the number of pods between 1 and 8, target CPU utilization at 60%",kubectl autoscale rc cdn --max=8 --cpu-percent=60
Display only the most recent 31 lines of output in pod backend-pod,kubectl logs --tail=31 backend-pod
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""api-v1"" API group",kubectl get deployments.legacy-1.0.0.api-v1 -o json
Set deployment proxy-service-deployment's service account to cert-manager,kubectl set serviceaccount deployment proxy-service-deployment cert-manager
Update pod 'email' with the label 'tier' and the value 'backend',kubectl label pods email tier=backend
"Update pod 'frontend' with the annotation 'contact-email' and the value 'support@example.com', overwriting any existing value",kubectl annotate --overwrite pods frontend contact-email='support@example.com'
"Get output from running 'postgres' command from the first pod of the service web-service, using the first container by default",kubectl exec svc/web-service -- postgres
"Update pod 'proxy-server' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server SLA='99.9% uptime'
"Delete pods and services with same names ""log-aggregator"" and ""frontend""","kubectl delete pod,service log-aggregator frontend"
Create a cron job,"kubectl create cronjob report-generation --image=busybox --schedule=""*/1 * * * *"""
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=e2e
Approve CSR 'csr-prometheus-8',kubectl certificate approve csr-prometheus-8
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""third-party-apps"" API group",kubectl get deployments.v1.1.0.third-party-apps -o yaml
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/analytics-pod 5000 3000
"Set a deployments jenkins container cpu limits to ""50m"" and memory to ""512Mi""","kubectl set resources deployment jenkins -c=nginx --limits=cpu=50m,memory=512Mi"
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 8084,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=8084
"Update pod 'media-stream' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods media-stream backup-strategy='daily-backups'
"Get output from running the 'node' command from pod media-stream-pod, using the first container by default",kubectl exec media-stream-pod -- node
Create a job with a command,kubectl create job data-migration-job --image=postgres -- postgres
Start a ubuntu pod and let the container expose port 9091,kubectl run hazelcast --image=ubuntu --port=9091
Import environment from a secret,kubectl set env --from=secret/ssh-key-secret deployment/frontend-deployment
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 8000 6379
"Listen on port 9090 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 9090:8088"
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""internal-apps"" API group",kubectl get deployments.alpha-2.0.internal-apps -o json
Set deployment load-balancer-deployment's service account to spinnaker,kubectl set serviceaccount deployment load-balancer-deployment spinnaker
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.local-context.cluster kube-cluster-1
"Update pod 'backend' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend criticality=high
Add to node 'edge-node-10' a taint with key 'environment' and no value,kubectl taint nodes edge-node-10 environment:NoSchedule
"Get output from running 'go' command from the first pod of the deployment web-app-deployment, using the first container by default",kubectl exec deploy/web-app-deployment -- go
Add to node 'monitoring-node-15' a taint with key 'disktype' and no value,kubectl taint nodes monitoring-node-15 disktype:NoSchedule
"Listen on port 8888 locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod 8888:8081
Rename the context 'old-name' to 'client-2-context' in your kubeconfig file,kubectl config rename-context old-name client-2-context
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/api-service-pod 8000:5000
Add a taint with key 'environment' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  environment=kube-master-9:PreferNoSchedule
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/log-aggregator-pod 5000:8000
Update pod 'log-aggregator' with the label 'release' and the value 'v1.0',kubectl label pods log-aggregator release=v1.0
"Listen on port 6379 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 6379:8080"
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8888 5432
Edit the data in settings.json in JSON then create the resource using the edited data,kubectl create -f settings.json --edit -o json
"Update pod 'auth' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth contact-email=support@example.com
Update image of all containers of daemonset nginx to 'java:11.0.12',kubectl set image daemonset nginx *=java:11.0.12
"Delete pods and services with same names ""security"" and ""email""","kubectl delete pod,service security email"
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=star-cluster
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n logging
Create a copy of media-stream-pod adding a debug container and changing container images,"kubectl debug media-stream-pod -it --copy-to=debug-image-api --image=debian --set-image=cache=redis:alpine,database=mysql:5.7"
Set the resource request and limits for all containers in mysql,"kubectl set resources deployment mysql --limits=cpu=200m,memory=512Mi --requests=cpu=500m,memory=64Mi"
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.team-alpha-context.cluster data-cluster
Import environment from a secret,kubectl set env --from=secret/app-config-secret deployment/frontend-deployment
"Create a cluster role name ""view"" with NonResourceURL specified","kubectl create clusterrole ""view"" --verb=list --non-resource-url=/port-forward"
Return snapshot logs from container api-server-deployment-1 of a deployment named backend-pod,kubectl logs deployment/api-server-deployment -c backend-pod-1
Start a ruby pod and let the container expose port 3000,kubectl run hazelcast --image=ruby --port=3000
Update image of all containers of daemonset namespace- to 'wordpress:5.8.1',kubectl set image daemonset namespace-3 *=wordpress:5.8.1
Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo kube-dns/backend-pod-13:/tmp/bar
Add a taint with key 'environment' on nodes having label myLabel,kubectl taint node -l myLabel  environment=db-node-7:PreferNoSchedule
"Delete pods and services with same names ""api"" and ""proxy-server""","kubectl delete pod,service api proxy-server"
"Update pod 'cdn' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn env=staging
"Update pod 'web' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods web backup-strategy='daily-backups'
"Listen on port 6379 locally, forwarding to 6379 in the pod",kubectl port-forward pod/api-service-pod 6379:6379
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.service-account-context.cluster sun-cluster
Add to node 'db-node-7' a taint with key 'dedicated' and no value,kubectl taint nodes db-node-7 dedicated:NoSchedule
Rename the context 'on-prem-context' to 'app-1-context' in your kubeconfig file,kubectl config rename-context on-prem-context app-1-context
Begin streaming the logs of the nebula-navigator container in pod e-commerce-pod,kubectl logs -f -c nebula-navigator e-commerce-pod
Create a new config map named namespace-config from an env file,kubectl create configmap namespace-config --from-env-file=path/to/configurations.env
"Get output from running the 'mongod' command from pod proxy-server-pod, using the first container by default",kubectl exec proxy-server-pod -- mongod
Begin streaming the logs of the mycontainer container in pod email-service-pod,kubectl logs -f -c mycontainer email-service-pod
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/docker-registry"
"Listen on port 6379 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 6379:8080"
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/db-config deployment/notification-handler-deployment
Embed certificate authority data for the e2e cluster entry,kubectl config set-cluster e2e --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
"Listen on port 3000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 3000:5432
"Delete pods and services with same names ""foo"" and ""frontend""","kubectl delete pod,service foo frontend"
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/namespace-config deployment/authentication-service-deployment
"Listen on port 5432 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5432:8088
"Start a python pod and set labels ""app=python"" and ""env=prod"" in the container","kubectl run hazelcast --image=python --labels=""app=python,env=prod"""
"Auto scale a deployment ""gateway"", with the number of pods between 1 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=1 --max=8
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod 8080:6379
"List all allowed actions in namespace ""namespace-1""",kubectl auth can-i --list --namespace=namespace-1
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/mypod 3000 5000
Update deployment 'monitoring-stack-deployment' with a new environment variable,kubectl set env deployment/monitoring-stack-deployment REDIS_HOST=redis-server
Get output from warp-drive from pod security-service-pod,kubectl attach security-service-pod -c warp-drive
"Auto scale a deployment ""security"", with the number of pods between 7 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=7 --max=14
"Delete pods and services with same names ""auth"" and ""log-aggregator""","kubectl delete pod,service auth log-aggregator"
Add to node 'edge-node-10' a taint with key 'disktype' and no value,kubectl taint nodes edge-node-10 disktype:NoSchedule
"Auto scale a replication controller ""vpn"", with the number of pods between 1 and 4, target CPU utilization at 20%",kubectl autoscale rc vpn --max=4 --cpu-percent=20
Add a taint with key 'dedicated' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  dedicated=storage-node-13:PreferNoSchedule
"Start a wordpress pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=wordpress --overrides='{ ""apiVersion"": ""stable-2.0.0"", ""spec"": { ... } }'"
Rename the context 'cloud-context' to 'client-2-context' in your kubeconfig file,kubectl config rename-context cloud-context client-2-context
"Update pod 'gateway' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods gateway expiration-date='2024-12-31'
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json security-scan-status=pass
"Create a service for a replicated python, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc python --port=9091 --target-port=808000
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node web-node-8 -p $'spec:\n containers:\n- name: container-name\n  resources:\n    limits:\n      cpu: 200m'
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=5432 --target-port=808200
"Update pod 'monitoring' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods monitoring team='frontend-team'
Rename the context 'on-prem-context' to 'admin-context' in your kubeconfig file,kubectl config rename-context on-prem-context admin-context
Return snapshot of previous terminated quantum-quark container logs from pod frontend-pod,kubectl logs -p -c quantum-quark frontend-pod
"Listen on port 8080 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8080:8888
Start a amazonlinux pod and let the container expose port 7000,kubectl run hazelcast --image=amazonlinux --port=7000
Add to node 'node-1' a taint with key 'environment' and no value,kubectl taint nodes node-1 environment:NoSchedule
Embed certificate authority data for the e2e cluster entry,kubectl config set-cluster e2e --embed-certs --certificate-authority=~/.kube/data-cluster/kubernetes.ca.crt
Return snapshot of previous terminated ruby container logs from pod gateway-pod,kubectl logs -p -c ruby gateway-pod
"Create a cluster role name ""view"" with NonResourceURL specified","kubectl create clusterrole ""view"" --verb=watch --non-resource-url=/swagger-ui/*"
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/monitoring-config deployment/web-app-deployment
Get output from running the 'mongod' command in code-explorer from pod vpn-service-pod,kubectl exec vpn-service-pod -c code-explorer -- mongod
Delete the context for the app-2-context cluster,kubectl config delete-context app-2-context
Switch to raw terminal mode; sends stdin to 'bash' in cyber-sleuth from pod auth-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach auth-service-pod -c cyber-sleuth -i -t
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-payment-gateway-service
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.service-account-context.cluster kube-cluster-2
"Define new exec auth plugin args for the ""robot-user"" entry",kubectl config set-credentials robot-user --exec-arg=arg1 --exec-arg=arg2
Create a copy of cdn-service-pod changing all container images to mongo,kubectl debug cdn-service-pod --copy-to=debug-image-1 --set-image=*=mongo
Begin streaming the logs of the mycontainer container in pod analytics-pod,kubectl logs -f -c mycontainer analytics-pod
Start a mysql pod and let the container expose port 8888,kubectl run hazelcast --image=mysql --port=8888
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/mypod 8080 5432
Start a wordpress pod and let the container expose port 9000,kubectl run hazelcast --image=wordpress --port=9000
Import environment from a secret,kubectl set env --from=secret/git-credentials-secret deployment/api-server-deployment
"Auto scale a replication controller ""backend"", with the number of pods between 1 and 6, target CPU utilization at 90%",kubectl autoscale rc backend --max=6 --cpu-percent=90
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/analytics-pod 8080:3000
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp logging/web-app-pod-1:~/.config/kube :/tmp/bar
Update pod 'database' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods database unhealthy-
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8088 6379
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json scaling-policy=auto-horizontal-scaling
"Listen on port 5000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/backend-pod 5000:5432
Add a taint with key 'zone' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  zone=gpu-node-12:PreferNoSchedule
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/analytics-pod 3000:5432
"Create a role named ""default_role"" with API Group specified","kubectl create role default_role --verb=create,list,delete --resource=persistentvolumes.storage.k8s.io"
Create a copy of media-stream-pod adding a debug container and changing container images,"kubectl debug media-stream-pod -it --copy-to=debug-image-app --image=debian --set-image=mailer=mailer:latest,api=api:v2"
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=extensions
"Listen on port 5000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5000:8088
Copy :/tmp/foo local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp :/tmp/foo openfaas/monitoring-agent-pod-6:/tmp/bar_dir
Set deployment payment-processor-deployment's service account to kube-dns,kubectl set serviceaccount deployment payment-processor-deployment kube-dns
Get output from running the 'yum install -y wget' command in time-machine from pod frontend-pod,kubectl exec frontend-pod -c time-machine -- yum install -y wget
Return snapshot of previous terminated nano-bot container logs from pod frontend-pod,kubectl logs -p -c nano-bot frontend-pod
Load the kubectl completion code for zsh[1] into the current shell,source <(kubectl completion zsh)
Update deployment 'web-app-deployment' with a new environment variable,kubectl set env deployment/web-app-deployment SECRET_KEY=your-secret-key
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/db-config deployment/monitoring-stack-deployment
"Update pod 'cdn' with the annotation 'release-notes' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods cdn release-notes='https://example.com/release-notes/v2.5.1'
Rename the context 'local-context' to 'service-account-context' in your kubeconfig file,kubectl config rename-context local-context service-account-context
Set deployment notification-handler-deployment's service account to istio,kubectl set serviceaccount deployment notification-handler-deployment istio
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c code-explorer -i -t
Return snapshot of previous terminated code-explorer container logs from pod frontend-pod,kubectl logs -p -c code-explorer frontend-pod
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""web-apps"" API group",kubectl get deployments.v1.1.0.web-apps -o json
Create a job with a command,kubectl create job security-scan-job --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
"Listen on port 8000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8000:8088
Create a new ClusterIP service named catalog-service-clusterip,kubectl create service clusterip catalog-service-clusterip --tcp=6379:8082
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 5000 8000
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod 9090:8088
Get output from running the 'elasticsearch' command in cyber-sleuth from pod email-service-pod,kubectl exec email-service-pod -c cyber-sleuth -- elasticsearch
"Get output from running 'geth version' command from the first pod of the service backend-service, using the first container by default",kubectl exec svc/backend-service -- geth version
Add a taint with key 'zone' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  zone=backup-node-14:PreferNoSchedule
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8080 5432
Import environment from a secret,kubectl set env --from=secret/aws-credentials-secret deployment/user-management-deployment
Create a copy of e-commerce-pod adding a debug container and changing container images,"kubectl debug e-commerce-pod -it --copy-to=my-debugger --image=debian --set-image=logger=logging-app:debug,mailer=mailer:latest"
"Create a role binding for user1, user2, and group1 using the bar cluster role",kubectl create rolebinding bar --clusterrole=bar --user=user1 --user=user2 --group=group1
Begin streaming the logs of the rocket-ranger container in pod proxy-service-pod,kubectl logs -f -c rocket-ranger proxy-service-pod
Update pod 'foo' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods foo description-
Start a ruby pod and let the container expose port 8000,kubectl run hazelcast --image=ruby --port=8000
"Listen on port 8000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/web-app-pod 8000:9090
"Listen on port 8088 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8088:8088"
"Listen on port 6379 locally, forwarding to 8080 in the pod",kubectl port-forward pod/proxy-server-pod 6379:8080
Start a php pod and let the container expose port 9091,kubectl run hazelcast --image=php --port=9091
"Create a service for a replicated ruby using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ruby --port=9090 --target-port=818100
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/backend-pod
Create a new ExternalName service named external-messaging-service,kubectl create service externalname external-messaging-service --external-name placeholder-app.app
"Delete pods and services with same names ""media-stream"" and ""web""","kubectl delete pod,service media-stream web"
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node db-node-7 -p $'data:\n key: new-value'
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/log-aggregator-pod 5000:9090
Set deployment proxy-service-deployment's service account to tiller,kubectl set serviceaccount deployment proxy-service-deployment tiller
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f node-config.toml -p '{""spec"":{""unschedulable"":true}}'"
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/log-config deployment/email-server-deployment
"Start a redis pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=redis --overrides='{ ""apiVersion"": ""v2.0.0"", ""spec"": { ... } }'"
"Create or update exec auth plugin environment variables for the ""api-user"" entry",kubectl config set-credentials api-user --exec-env=key1=val1 --exec-env=key2=val2
"Listen on port 5432 locally, forwarding to 6379 in the pod",kubectl port-forward pod/e-commerce-pod 5432:6379
Create a copy of auth-service-pod adding a debug container and changing container images,"kubectl debug auth-service-pod -it --copy-to=debug-image-api --image=debian --set-image=web=nginx:latest,proxy=nginx:1.21"
Create a deployment named monitoring that runs the ethereum/client-go image and expose port 5001,kubectl create deployment monitoring --image=ethereum/client-go --port=5001
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.cloud-context.cluster cluster-alpha
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/cdn-service-pod 8888:8080
Create a job with a command,kubectl create job database-seeding-job --image=mongo -- mongo
"Listen on port 5000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/proxy-server-pod 5000:8080
"Update pod 'log-aggregator' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator criticality=high
"Listen on port 9090 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 9090:8888
Create a job with a command,kubectl create job log-collection --image=ruby -- irb
Return snapshot logs from container user-management-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/user-management-deployment -c cdn-service-pod-1
Add a taint with key 'workload' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  workload=node-1:PreferNoSchedule
Create a copy of analytics-pod changing the command of mycontainer,kubectl debug analytics-pod -it --copy-to=my-debugger --container=mycontainer -- sh
"Start a mcr.microsoft.com/dotnet/core/runtime pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mcr.microsoft.com/dotnet/core/runtime --overrides='{ ""apiVersion"": ""rc-1.1.0"", ""spec"": { ... } }'"
Update all deployments' and rc's nginx container's image to 'ruby:3.0.2',"kubectl set image deployments,rc ruby=ruby:3.0.2 --all"
Add a taint with key 'cpu-type' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  cpu-type=node-1:PreferNoSchedule
Get output from running the 'geth attach' command in nebula-navigator from pod media-stream-pod,kubectl exec media-stream-pod -c nebula-navigator -- geth attach
"Listen on port 3000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 3000:8081
Set only the server field on the data-cluster cluster entry without touching other values,kubectl config set-cluster data-cluster --server=https://1.2.3.4
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.team-alpha-context.cluster staging-cluster
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-config deployment/proxy-service-deployment
Return snapshot of previous terminated ruby container logs from pod frontend-pod,kubectl logs -p -c ruby frontend-pod
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.prod-context.cluster star-cluster
Roll back to daemonset revision 7,kubectl rollout undo daemonset/staging --to-revision=7
"Create a service for a replicated ruby using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ruby --port=5000 --target-port=300000
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/db-service"
Create a new secret named my-secret with keys for each file in folder bar,kubectl create secret generic my-secret --from-file=path/to/profiles
Return snapshot of previous terminated code-explorer container logs from pod vpn-service-pod,kubectl logs -p -c code-explorer vpn-service-pod
Create a new ClusterIP service named auth-service-clusterip,kubectl create service clusterip auth-service-clusterip --tcp=3000:8083
Create a new ClusterIP service named shipping-service-clusterip,kubectl create service clusterip shipping-service-clusterip --tcp=3000:8181
Update deployment 'search-engine-deployment' with a new environment variable,kubectl set env deployment/search-engine-deployment LOG_LEVEL=info
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/kube-system-config deployment/notification-handler-deployment
"Start a alpine pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=alpine --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
"If the deployment named api-service-rs's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/api-service-rs
Update pod 'email' with the label 'release' and the value 'v2.0',kubectl label pods email release=v2.0
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/analytics-pod 6379 5432
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.client-1-context.cluster galaxy-cluster
"Set a deployments hazelcast container cpu limits to ""50m"" and memory to ""2Gi""","kubectl set resources deployment hazelcast -c=nginx --limits=cpu=50m,memory=2Gi"
"Get output from running 'mongo' command from the first pod of the deployment load-balancer-deployment, using the first container by default",kubectl exec deploy/load-balancer-deployment -- mongo
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/api-service-pod
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node k8s-node-1 -p '{""stringData"":{""password"":""new-password""}'"
Create a new secret named private-key-secret from an env file,kubectl create secret generic private-key-secret --from-env-file=path/to/configurations.env
Import environment from a secret,kubectl set env --from=secret/app-config-secret deployment/authentication-service-deployment
Update pod 'gateway' with the label 'tier' and the value 'database',kubectl label pods gateway tier=database
"If the deployment named app-v2-replicaset's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/app-v2-replicaset
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=3001 --target-port=909200
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/user-service 9090:https
Return snapshot of previous terminated lunar-launcher container logs from pod monitoring-pod,kubectl logs -p -c lunar-launcher monitoring-pod
Update pod 'payment' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods payment role-
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/gateway-pod
"Create a service for a pod security-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod security-service-pod --port=3001 --name=frontend
Return snapshot logs from container gateway-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/gateway-deployment -c vpn-service-pod-1
"Listen on port 9090 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 9090:3000
"Get output from running the 'ash' command from pod api-service-pod, using the first container by default",kubectl exec api-service-pod -- ash
Create a deployment named prometheus that runs the jenkins image and expose port 7000,kubectl create deployment prometheus --image=jenkins --port=7000
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp prometheus/task-processor-pod-17:/tmp/foo_dir /tmp/bar_dir
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=settings=/path/to/configurations/file1.txt --from-file=key2=/path/to/parameters/file2.txt
Update all containers in all replication controllers in the project to have ENV=prod,kubectl set env rc --all SMTP_HOST=smtp.example.com
Return snapshot of previous terminated lunar-launcher container logs from pod log-aggregator-pod,kubectl logs -p -c lunar-launcher log-aggregator-pod
"Update pod 'analytics' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics compliance-level=PCI-DSS
Deny CSR 'csr-controller-6',kubectl certificate deny csr-controller-6
"Listen on port 3000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 3000:8081"
Get output from running the 'psql' command in quantum-quark from pod media-stream-pod,kubectl exec media-stream-pod -c quantum-quark -- psql
Return snapshot logs from container web-app-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/web-app-deployment -c chat-app-pod-1
Display only the most recent 5 lines of output in pod auth-service-pod,kubectl logs --tail=5 auth-service-pod
"Listen on port 8000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8000:9090
Return snapshot logs from container mydeployment-1 of a deployment named security-service-pod,kubectl logs deployment/mydeployment -c security-service-pod-1
Create a new secret named database-secret from an env file,kubectl create secret generic database-secret --from-env-file=path/to/options.env
Create a cron job with a command,"kubectl create cronjob log-rotation --image=amazonlinux --schedule=""*/1 * * * *"" -- /bin/bash -c ""echo 'Hello"
Return snapshot of previous terminated ruby container logs from pod log-aggregator-pod,kubectl logs -p -c ruby log-aggregator-pod
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/monitoring-stack-deployment SMTP_HOST=smtp.example.com -o yaml
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/email-service-pod
Get output from nano-bot from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c nano-bot
"Listen on port 3000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/backend-pod 3000:8088
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=galaxy-cluster
"Listen on a random port locally, forwarding to 6379 in the pod",kubectl port-forward pod/backend-pod :6379
"Update pod 'log-aggregator' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator env=staging
Create a pod disruption budget named critical-services-pdb that will select all pods with the tier=frontend label # and require minumum 9 of them being available at any point in time,kubectl create poddisruptionbudget critical-services-pdb --selector=tier=frontend --min-available=9
Set deployment database-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment database-deployment gitlab-runner
Rename the context 'dev-context' to 'service-account-context' in your kubeconfig file,kubectl config rename-context dev-context service-account-context
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node storage-node-13 -p $'stringData:\n password: new-password'
Scale a replica set named 'db-migration-replicaset' to 5,kubectl scale --replicas=5 rs/db-migration-replicaset
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.user-a-context.cluster cluster-alpha
Create a job with a command,kubectl create job audit-job --image=amazonlinux -- yum install -y aws-cli
Show all logs from pod web-app-pod written in the last hour,kubectl logs --since=1h web-app-pod
Add a taint with key 'dedicated' on nodes having label team=devops,kubectl taint node -l team=devops  dedicated=kube-master-9:PreferNoSchedule
Create a new ExternalName service named external-messaging-service,kubectl create service externalname external-messaging-service --external-name sample-domain.net
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=settings=/path/to/parameters/file1.txt --from-file=key2=/path/to/parameters/file2.txt
Create a new config map named app-config-dev from an env file,kubectl create configmap app-config-dev --from-env-file=path/to/preferences.env
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to /etc/kubernetes locally,kubectl cp kube-proxy/web-app-pod-1:/var/run/secrets/kubernetes.io/serviceaccount/ /etc/kubernetes
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-config-prod deployment/proxy-service-deployment
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/email-service-pod
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/backend-microservice-deployment -c api-service-pod-1
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 5432 8088
Create a new secret named git-credentials-secret from an env file,kubectl create secret generic git-credentials-secret --from-env-file=path/to/preferences.env
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/db-config deployment/authentication-service-deployment
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-config-dev --prefix=MYSQL_ deployment/notification-handler-deployment
Delete the jane.smith user,kubectl config delete-user jane.smith
"Start a jenkins pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=jenkins --overrides='{ ""apiVersion"": ""v1.0.0"", ""spec"": { ... } }'"
Remove from node 'backup-node-14' all the taints with key 'datacenter',kubectl taint nodes backup-node-14 datacenter-
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/api-config deployment/order-processing-deployment
Delete pods and services with label role=database,"kubectl delete pods,services -l role=database"
Create a deployment named logging that runs the postgres image and expose port 8084,kubectl create deployment logging --image=postgres --port=8084
Add a taint with key 'zone' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  zone=k8s-node-1:PreferNoSchedule
Add to node 'k8s-node-1' a taint with key 'special' and no value,kubectl taint nodes k8s-node-1 special:NoSchedule
"Listen on port 5000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/log-aggregator-pod 5000:8888
"Listen on port 8088 locally, forwarding to 6379 in the pod",kubectl port-forward pod/log-aggregator-pod 8088:6379
"Mark node ""backup-node-14"" as unschedulable",kubectl cordon backup-node-14
"Delete pods and services with same names ""analytics"" and ""auth""","kubectl delete pod,service analytics auth"
Edit the deployment 'notification-handler-deployment' in YAML and save the modified config in its annotation,kubectl edit deployment/notification-handler-deployment -o yaml --save-config
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/log-aggregator-pod 8888:3000
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/authentication-service"
Set deployment monitoring-stack-deployment's service account to dashboard,kubectl set serviceaccount deployment monitoring-stack-deployment dashboard
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name mockup-cloud.cloud
Return snapshot logs from container database-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/database-deployment -c api-service-pod-1
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=kube-cluster-2
Create a new ExternalName service named external-logging-service,kubectl create service externalname external-logging-service --external-name sandbox-site.co
Update pod 'auth' with the label 'env' and the value 'staging',kubectl label pods auth env=staging
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-settings deployment/frontend-deployment
"Get output from running the 'nginx' command from pod payment-gateway-pod, using the first container by default",kubectl exec payment-gateway-pod -- nginx
Add a taint with key 'hardware' on nodes having label app=web-app,kubectl taint node -l app=web-app  hardware=edge-node-10:PreferNoSchedule
Import environment from a secret,kubectl set env --from=secret/jwt-secret deployment/notification-handler-deployment
Create a new ExternalName service named external-monitoring-service,kubectl create service externalname external-monitoring-service --external-name tutorial-ai.ai
"Get output from running 'redis-server' command from the first pod of the service analytics-service, using the first container by default",kubectl exec svc/analytics-service -- redis-server
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/cache-service"
Create a new secret named ldap-credentials-secret using a combination of a file and a literal,kubectl create secret generic ldap-credentials-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
"Create a cluster role named ""admin_role"" with API Group specified","kubectl create clusterrole admin_role --verb=use,proxy,delete --resource=deployments.apps"
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=moon-cluster
Add a taint with key 'app' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  app=gpu-node-12:PreferNoSchedule
Return snapshot of previous terminated nano-bot container logs from pod analytics-pod,kubectl logs -p -c nano-bot analytics-pod
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/backend-pod 8080 3000
Set deployment cache-cluster-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment cache-cluster-deployment kube-controller-manager
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kube-flannel/worker-pod-4::/tmp/foo /tmp/bar
"Scale a resource identified by type and name specified in ""parameters.yaml"" to 5",kubectl scale --replicas=5 -f parameters.yaml
Set deployment search-engine-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment search-engine-deployment kube-controller-manager
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/analytics-platform-deployment -c security-service-pod-1
Add a taint with key 'special' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  special=worker-node-3:PreferNoSchedule
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5000:9090
Roll back to daemonset revision 5,kubectl rollout undo daemonset/app-v2 --to-revision=5
Add a taint with key 'cpu-type' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  cpu-type=app-node-6:PreferNoSchedule
Update pod 'media-stream' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods media-stream release-
Get output from time-machine from pod media-stream-pod,kubectl attach media-stream-pod -c time-machine
"Delete pods and services with same names ""proxy"" and ""log-aggregator""","kubectl delete pod,service proxy log-aggregator"
"Delete pods and services with same names ""vpn"" and ""email""","kubectl delete pod,service vpn email"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/frontend-pod 5000 5000
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/email-server-deployment API_KEY=your-api-key -o yaml
Show metrics for a given node,kubectl top node monitoring-node-15
"Create a single ingress called 'www-ingress' that directs requests to foo.com/example to svc # svc1:8089 with a tls secret ""my-cert""","kubectl create ingress www-ingress --rule=""foo.com/example=svc1:8089,tls=my-cert"""
Set deployment notification-handler-deployment's service account to prometheus,kubectl set serviceaccount deployment notification-handler-deployment prometheus
Get output from lunar-launcher from pod cdn-service-pod,kubectl attach cdn-service-pod -c lunar-launcher
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""api-v1"" API group",kubectl get deployments.beta-1.0.api-v1 -o yaml
Get output from running the 'mongo --version' command in rocket-ranger from pod analytics-pod,kubectl exec analytics-pod -c rocket-ranger -- mongo --version
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/cdn-service-pod
Create a job with a command,kubectl create job log-processing-job --image=python -- python --version
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/proxy-server-pod
"Get output from running the 'kafka-topics --list' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- kafka-topics --list
"Update pod 'proxy' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy env=staging
Return snapshot of previous terminated warp-drive container logs from pod analytics-pod,kubectl logs -p -c warp-drive analytics-pod
Update pod 'cdn' with the label 'release' and the value 'v2.0',kubectl label pods cdn release=v2.0
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/proxy-server-pod 8080:6379
Create a new ExternalName service named external-metrics-service,kubectl create service externalname external-metrics-service --external-name news-demo.news
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8088 6379
Add to node 'node-2' a taint with key 'dedicated' and no value,kubectl taint nodes node-2 dedicated:NoSchedule
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=7000:5000
"Start a redis pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=redis --overrides='{ ""apiVersion"": ""v2.1.0"", ""spec"": { ... } }'"
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=9091:8181
Add a taint with key 'app' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  app=edge-node-10:PreferNoSchedule
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/api-service-pod 6379 8081
Create a pod disruption budget named api-service-pdb that will select all pods with the project=my-project label # and require at least one of them being available at any point in time,kubectl create poddisruptionbudget api-service-pdb --selector=project=my-project --min-available=1
Create a new ClusterIP service named security-service-clusterip,kubectl create service clusterip security-service-clusterip --tcp=8080:9000
Add a taint with key 'special' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  special=web-node-8:PreferNoSchedule
Get output from running the 'kafka-topics --list' command in stardust-shuttle from pod chat-app-pod,kubectl exec chat-app-pod -c stardust-shuttle -- kafka-topics --list
"Set a deployments python container cpu limits to ""200m"" and memory to ""64Mi""","kubectl set resources deployment python -c=nginx --limits=cpu=200m,memory=64Mi"
"Get output from running 'npm --version' command from the first pod of the deployment backend-microservice-deployment, using the first container by default",kubectl exec deploy/backend-microservice-deployment -- npm --version
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 9090 8000
Add a taint with key 'environment' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  environment=storage-node-13:PreferNoSchedule
"Auto scale a replication controller ""backend"", with the number of pods between 1 and 4, target CPU utilization at 50%",kubectl autoscale rc backend --max=4 --cpu-percent=50
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/data/file2.txt
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/web-app-pod 5432 5432
Create a deployment named cache that runs the mcr.microsoft.com/dotnet/core/runtime image,kubectl create deployment cache --image=mcr.microsoft.com/dotnet/core/runtime
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod api-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach api-service-pod -c rocket-ranger -i -t
List a single pod in JSON output format,kubectl get -o json pod web-app-pod
Create a new secret named jwt-secret with keys for each file in folder bar,kubectl create secret generic jwt-secret --from-file=path/to/preferences
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
Remove from node 'app-node-6' all the taints with key 'workload',kubectl taint nodes app-node-6 workload-
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""apps"" API group",kubectl get deployments.v2.1.0.apps -o json
Get output from running the 'ash' command in nano-bot from pod mypod,kubectl exec mypod -c nano-bot -- ash
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod vpn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach vpn-service-pod -c stardust-shuttle -i -t
Roll back to the previous deployment with dry-run,kubectl rollout undo --dry-run=server deployment/namespace-2
Create a new ExternalName service named external-caching-service,kubectl create service externalname external-caching-service --external-name demo-service.dev
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.dev-context.cluster app-cluster
Start a hazelcast pod and let the container expose port 8088,kubectl run hazelcast --image=hazelcast/hazelcast --port=8088
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/mypod 9090:8080
"Set a deployments jenkins container cpu limits to ""100m"" and memory to ""2Gi""","kubectl set resources deployment jenkins -c=nginx --limits=cpu=100m,memory=2Gi"
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/cdn-service-pod 3000:8081
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""third-party-apps"" API group",kubectl get deployments.legacy-1.0.0.third-party-apps -o yaml
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/log-analysis-job -n staging
Add a taint with key 'dedicated' on nodes having label release=beta,kubectl taint node -l release=beta  dedicated=worker-node-3:PreferNoSchedule
Display only the most recent 31 lines of output in pod email-service-pod,kubectl logs --tail=31 email-service-pod
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/cdn-service-pod :5000
Import environment from a secret,kubectl set env --from=secret/tls-certificate-secret deployment/web-app-deployment
Print the supported API resources sorted by a column,kubectl api-resources --sort-by=scope
Get output from running the 'redis-server' command in astro-container from pod database-pod,kubectl exec database-pod -c astro-container -- redis-server
Display only the most recent 23 lines of output in pod proxy-service-pod,kubectl logs --tail=23 proxy-service-pod
Return snapshot of previous terminated mycontainer container logs from pod proxy-service-pod,kubectl logs -p -c mycontainer proxy-service-pod
Update pod 'payment' with the label 'env' and the value 'staging',kubectl label pods payment env=staging
Get output from nebula-navigator from pod proxy-server-pod,kubectl attach proxy-server-pod -c nebula-navigator
Update image of all containers of daemonset namespace-2 to 'amazonlinux:2',kubectl set image daemonset namespace-2 *=amazonlinux:2
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kube-dns/worker-pod-4::/tmp/foo /tmp/bar_dir
Set deployment scheduler-app-deployment's service account to tiller,kubectl set serviceaccount deployment scheduler-app-deployment tiller
Begin streaming the logs of the nebula-navigator container in pod proxy-service-pod,kubectl logs -f -c nebula-navigator proxy-service-pod
"Update pod 'backend' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend monitoring-tool=Prometheus
Scale a replica set named 'webapp-replicaset' to 7,kubectl scale --replicas=7 rs/webapp-replicaset
Create a new config map named env-vars from an env file,kubectl create configmap env-vars --from-env-file=path/to/parameters.env
"Listen on port 8080 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8080:3000"
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/nginx
Get output from running the 'postgres' command in rocket-ranger from pod frontend-pod,kubectl exec frontend-pod -c rocket-ranger -- postgres
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.admin-context.cluster on-prem-cluster
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 3001,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=3001
"List deployments in YAML output format, in the ""custom-version"" version of the ""api-v2"" API group",kubectl get deployments.custom-version.api-v2 -o yaml
Create a deployment with a command,kubectl create deployment drupal --image=wordpress -- apache2ctl -D FOREGROUND
Update deployment 'api-server-deployment' with a new environment variable,kubectl set env deployment/api-server-deployment DB_HOST=localhost
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""extensions"" API group",kubectl get deployments.v1.1.0.extensions -o json
Start a nginx pod and let the container expose port 8089,kubectl run hazelcast --image=nginx --port=8089
Add a taint with key 'disktype' on nodes having label team=devops,kubectl taint node -l team=devops  disktype=gpu-node-12:PreferNoSchedule
"Create a single ingress called 'public-ingress' that directs requests to website.com/module to svc # svc1:8000 with a tls secret ""my-cert""","kubectl create ingress public-ingress --rule=""website.com/module=svc1:8000,tls=my-cert"""
Set deployment monitoring-stack-deployment's service account to spinnaker,kubectl set serviceaccount deployment monitoring-stack-deployment spinnaker
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.service-account-context.cluster cluster-beta
"Auto scale a deployment ""chat-app"", with the number of pods between 4 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment chat-app --min=4 --max=14
Return snapshot logs from container load-balancer-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/load-balancer-deployment -c proxy-service-pod-1
"Delete pods and services with same names ""proxy-server"" and ""security""","kubectl delete pod,service proxy-server security"
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp logging/load-balancer-pod-9:/tmp/foo :/tmp/bar
Disable cert checking for the dev cluster entry,kubectl config set-cluster edge-cluster --insecure-skip-tls-verify=true
"Listen on port 8081 locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod 8081:6379
Create a job with a command,kubectl create job log-processing-job --image=mysql -- mysql --version
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=9000:8083
Create a job with a command,kubectl create job log-processing-job --image=ruby -- gem --version
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/analytics-pod 6379:8888
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/frontend-deployment
"Update pod 'vpn' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn release-notes='https://example.com/release-notes/v2.5.1'
Add a taint with key 'environment' on nodes having label team=devops,kubectl taint node -l team=devops  environment=dev-node-4:PreferNoSchedule
"Listen on port 5432 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 5432:9090"
"Listen on port 9090 locally, forwarding to 5000 in the pod",kubectl port-forward pod/frontend-pod 9090:5000
"Listen on port 5432 locally, forwarding to 3000 in the pod",kubectl port-forward pod/backend-pod 5432:3000
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=3001:8080
"List deployments in JSON output format, in the ""custom-version"" version of the ""experimental-apps"" API group",kubectl get deployments.custom-version.experimental-apps -o json
Create a new secret named docker-registry-secret from an env file,kubectl create secret generic docker-registry-secret --from-env-file=path/to/parameters.env
List all configmaps in ps output format with more information (such as node name),kubectl get configmaps -o wide
"Run a proxy to the Kubernetes API server on port 5000, serving static content from ./local/www/",kubectl proxy --port=5000 --www=./local/www/
Set the certificate-authority-data field on the dev-cluster cluster,"kubectl config set clusters.dev-cluster.certificate-authority-data $(echo ""cert_data_here"" | base64 -i -)"
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/log-aggregator-pod 8088:8888
Return snapshot logs from container mydeployment-1 of a deployment named frontend-pod,kubectl logs deployment/mydeployment -c frontend-pod-1
Update pod 'media-stream' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods media-stream app-
"Delete pods and services with same names ""vpn"" and ""api""","kubectl delete pod,service vpn api"
Set deployment order-processing-deployment's service account to jenkins,kubectl set serviceaccount deployment order-processing-deployment jenkins
Update pod 'database' with the label 'role' and the value 'backend',kubectl label pods database role=backend
Set deployment load-balancer-deployment's service account to metrics-server,kubectl set serviceaccount deployment load-balancer-deployment metrics-server
Set deployment authentication-service-deployment's service account to default,kubectl set serviceaccount deployment authentication-service-deployment default
"Listen on port 8088 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8088:8888
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node kube-master-9 -p '{""spec"":{""replicas"":3}'"
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json contact-email=support@example.com
"Mark node ""web-node-8"" as unschedulable",kubectl cordon web-node-8
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/database-indexing-job -n monitoring
"Listen on port 8080 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8080:8081"
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/api-service-pod
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node app-node-6 -p '{""spec"":{""type"":""LoadBalancer""}'"
"Start a mcr.microsoft.com/dotnet/core/runtime pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mcr.microsoft.com/dotnet/core/runtime --overrides='{ ""apiVersion"": ""feature-branch-2.3.0"", ""spec"": { ... } }'"
Check the rollout status of a daemonset,kubectl rollout status daemonset/development
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod web-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach web-app-pod -c quantum-quark -i -t
To proxy the entire Kubernetes API at a different root # You can get pods info with 'curl localhost:8001/custom/api/v1/pods',kubectl proxy --api-prefix=/custom/
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.staging-context.cluster dev-cluster
Remove from node 'db-node-7' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes db-node-7 zone:PreferNoSchedule-
Start a alpine pod and let the container expose port 7000,kubectl run hazelcast --image=alpine --port=7000
Start a confluentinc/cp-kafka pod and let the container expose port 3000,kubectl run hazelcast --image=confluentinc/cp-kafka --port=3000
Delete resources from a directory containing kustomization.yaml - e.g. options/kustomization.yaml,kubectl delete -k options/
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 3000 3000
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/backend-pod
Set deployment monitoring-stack-deployment's service account to metrics-server,kubectl set serviceaccount deployment monitoring-stack-deployment metrics-server
"Auto scale a replication controller ""cdn"", with the number of pods between 1 and 3, target CPU utilization at 60%",kubectl autoscale rc cdn --max=3 --cpu-percent=60
"Listen on port 8081 locally, forwarding to 5000 in the pod",kubectl port-forward pod/log-aggregator-pod 8081:5000
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube logging/cache-pod-5:/tmp/bar
"Listen on port 9090 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 9090:8088
Add a taint with key 'hardware' on nodes having label role=database,kubectl taint node -l role=database  hardware=k8s-node-1:PreferNoSchedule
Create a new ClusterIP service named ldap-service-clusterip,kubectl create service clusterip ldap-service-clusterip --tcp=8443:8010
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml description='Web server for marketing site'
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/email-service-pod
"Create a cluster role named ""custom_role"" with ResourceName specified",kubectl create clusterrole custom_role --verb=update --resource=pods --resource-name=backup-service --resource-name=staging-app-server
"Listen on port 8081 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8081:5432
Start a mongo pod and let the container expose port 3306,kubectl run hazelcast --image=mongo --port=3306
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 8088 3000
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.client-1-context.cluster star-cluster
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=sun-cluster
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""external-apps"" API group",kubectl get deployments.alpha-2.0.external-apps -o yaml
Set deployment proxy-service-deployment's service account to prometheus,kubectl set serviceaccount deployment proxy-service-deployment prometheus
"Listen on port 8088 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8088:5432
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/kube-system-config deployment/monitoring-stack-deployment
View the details of daemonset revision 1,kubectl rollout history daemonset/my-deployment --revision=1
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.cluster-2-context.cluster sun-cluster
Add a taint with key 'special' on nodes having label role=database,kubectl taint node -l role=database  special=app-node-6:PreferNoSchedule
"Get output from running 'wp' command from the first pod of the deployment backend-microservice-deployment, using the first container by default",kubectl exec deploy/backend-microservice-deployment -- wp
Set deployment notification-handler-deployment's service account to kube-dns,kubectl set serviceaccount deployment notification-handler-deployment kube-dns
Rollback to the previous deployment,kubectl rollout undo deployment/namespace-2
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-name-config deployment/web-app-deployment
"Listen on port 8081 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8081:8081
Update deployment 'gateway-deployment' with a new environment variable,kubectl set env deployment/gateway-deployment DEBUG=true
Set deployment api-server-deployment's service account to metrics-server,kubectl set serviceaccount deployment api-server-deployment metrics-server
"Create a service for a pod vpn-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod vpn-service-pod --port=8888 --name=frontend
Set deployment backend-microservice-deployment's service account to tekton,kubectl set serviceaccount deployment backend-microservice-deployment tekton
Create a new NodePort service named analytics-nodeport,kubectl create service nodeport analytics-nodeport --tcp=8000:8088
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.admin-context.cluster kube-cluster-2
Start a golang pod and let the container expose port 9091,kubectl run hazelcast --image=golang --port=9091
Update pod 'analytics' with the label 'tier' and the value 'backend',kubectl label pods analytics tier=backend
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""third-party-apps"" API group",kubectl get deployments.alpha-2.0.third-party-apps -o yaml
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=edge-cluster
Add a taint with key 'workload' on nodes having label myLabel,kubectl taint node -l myLabel  workload=worker-node-3:PreferNoSchedule
Start a centos pod and let the container expose port 8010,kubectl run hazelcast --image=centos --port=8010
Add a taint with key 'workload' on nodes having label release=beta,kubectl taint node -l release=beta  workload=app-node-6:PreferNoSchedule
"Check to see if I can get the job named ""content-import-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/content-import-job -n testing
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/proxy-server-pod
"Listen on port 5000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 5000:9090"
Remove from node 'backup-node-14' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes backup-node-14 app:PreferNoSchedule-
Create a job with a command,kubectl create job database-seeding-job --image=ubuntu -- docker run -d ubuntu sleep 3600
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/frontend-pod 6379:3000
"Check to see if I can get the job named ""security-scan-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/security-scan-job -n production
Create a new secret named oauth-secret from an env file,kubectl create secret generic oauth-secret --from-env-file=path/to/data.env
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/api-service 5432:https
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=web-cluster
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=cloud-cluster
Start a ethereum/client-go pod and let the container expose port 7000,kubectl run hazelcast --image=ethereum/client-go --port=7000
Begin streaming the logs of the lunar-launcher container in pod vpn-service-pod,kubectl logs -f -c lunar-launcher vpn-service-pod
Set the cluster field in the my-context context to testing-cluster,kubectl config set contexts.local-context.cluster testing-cluster
Dump current cluster state to /tmp/foo_dir,kubectl cluster-info dump --output-directory=/tmp/foo_dir
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/search-service"
Create a new LoadBalancer service named database-lb,kubectl create service loadbalancer database-lb --tcp=9092:3306
Create a deployment named worker that runs the python image with 2 replicas,kubectl create deployment worker --image=python --replicas=2
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8080 8080
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/cache-service"
Get the documentation of a specific field of a resource,kubectl explain resource=services.spec.selector
"Listen on port 8080 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8080:3000
Delete the sun-cluster cluster,kubectl config delete-cluster sun-cluster
"Scale a resource identified by type and name specified in ""settings.json"" to 7",kubectl scale --replicas=7 -f settings.json
"Listen on port 8081 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8081:8088
Create a deployment named drupal that runs the ubuntu image and expose port 8888,kubectl create deployment drupal --image=ubuntu --port=8888
"Get output from running the 'mysql --version' command from pod api-service-pod, using the first container by default",kubectl exec api-service-pod -- mysql --version
Execute set-last-applied against each configuration file in a directory,kubectl apply set-last-applied -f params/
Display only the most recent 31 lines of output in pod mypod,kubectl logs --tail=31 mypod
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""apps"" API group",kubectl get deployments.beta-1.0.apps -o yaml
"Listen on port 3000 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 3000:6379"
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.admin-context.cluster web-cluster
"Auto scale a deployment ""payment"", with the number of pods between 3 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment payment --min=3 --max=9
"Create a role binding for developer3, k8s-admin, and qa-engineers using the reader cluster role",kubectl create rolebinding reader --clusterrole=reader --user=developer3 --user=k8s-admin --group=qa-engineers
Edit the service named 'payment-service',kubectl edit svc/payment-service
Edit the deployment 'web-app-deployment' in YAML and save the modified config in its annotation,kubectl edit deployment/web-app-deployment -o yaml --save-config
Import environment from a secret,kubectl set env --from=secret/git-credentials-secret deployment/web-app-deployment
Set deployment notification-handler-deployment's service account to kube-proxy,kubectl set serviceaccount deployment notification-handler-deployment kube-proxy
"Listen on port 5000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5000:8088
Return snapshot logs from pod payment-gateway-pod with only one container,kubectl logs payment-gateway-pod
"Listen on port 3000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod 3000:8080
"Create a service for a replication controller identified by type and name specified in ""ubuntu-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f ubuntu-controller.yaml --port=3001 --target-port=900000
Create an ingress with two annotations: ingress.annotation1 and ingress.annotations2,"kubectl create ingress annotated --class=default --rule=""site.com/module=svc:port"" \
--annotation ingress.annotation1=site \
--annotation ingress.annotation2=bla"
Import environment from a secret,kubectl set env --from=secret/aws-credentials-secret deployment/monitoring-stack-deployment
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kube-system/security-scanner-pod-18:/tmp/foo :/tmp/bar
Create a job with a command,kubectl create job log-collection --image=mysql -- mysqld
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/frontend-pod 9090:8080
"Auto scale a replication controller ""web"", with the number of pods between 1 and 4, target CPU utilization at 90%",kubectl autoscale rc web --max=4 --cpu-percent=90
Remove from node 'worker-node-3' all the taints with key 'app',kubectl taint nodes worker-node-3 app-
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 3000 9090
"Force replace, delete and then re-create the resource",kubectl replace --force -f ./docker-registry.yaml
Set the resource request and limits for all containers in python,"kubectl set resources deployment python --limits=cpu=200m,memory=512Mi --requests=cpu=10,memory=64Mi"
Disable cert checking for the dev cluster entry,kubectl config set-cluster cluster-gamma --insecure-skip-tls-verify=true
Create a new secret named aws-credentials-secret using a combination of a file and a literal,kubectl create secret generic aws-credentials-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
"Create a single ingress called 'api-v1-ingress' that directs requests to site.com/bar to svc # svc1:5000 with a tls secret ""my-cert""","kubectl create ingress api-v1-ingress --rule=""site.com/bar=svc1:5000,tls=my-cert"""
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/db-config deployment/analytics-platform-deployment
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-settings deployment/web-app-deployment
"Update pod 'gateway' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods gateway env='staging'
"Get output from running the 'geth attach' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- geth attach
Begin streaming the logs of the ruby container in pod log-aggregator-pod,kubectl logs -f -c ruby log-aggregator-pod
Update pod 'gateway' with the label 'component' and the value 'web',kubectl label pods gateway component=web
Get the documentation of a specific field of a resource,kubectl explain resource=services.metadata.labels
"Listen on port 8088 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8088:6379
Add a taint with key 'datacenter' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  datacenter=app-node-6:PreferNoSchedule
Set deployment user-management-deployment's service account to metrics-server,kubectl set serviceaccount deployment user-management-deployment metrics-server
"Get output from running 'psql' command from the first pod of the service monitoring-service, using the first container by default",kubectl exec svc/monitoring-service -- psql
Add a taint with key 'hardware' on nodes having label team=devops,kubectl taint node -l team=devops  hardware=edge-node-10:PreferNoSchedule
"Delete pods and services with same names ""backend"" and ""backend""","kubectl delete pod,service backend backend"
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp openfaas/ingress-controller-pod-8::/tmp/foo /tmp/bar
"Listen on port 9090 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 9090:5432
"Create a single ingress called 'app2-ingress' that directs requests to website.com/module to svc # svc1:9092 with a tls secret ""my-cert""","kubectl create ingress app2-ingress --rule=""website.com/module=svc1:9092,tls=my-cert"""
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/gateway-pod
Copy :/tmp/foo local file to /tmp/bar_dir in a remote pod in a specific container,kubectl cp :/tmp/foo file-server-pod-14:/tmp/bar_dir -c load-balancer
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=properties=/path/to/parameters/file1.txt --from-file=key1=/path/to/parameters/file2.txt
"Listen on port 8000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8000:6379
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/parameters/file2.txt
Set deployment monitoring-stack-deployment's service account to kube-proxy,kubectl set serviceaccount deployment monitoring-stack-deployment kube-proxy
Create a new ClusterIP service named cache-service-clusterip,kubectl create service clusterip cache-service-clusterip --tcp=3001:3000
"Listen on port 8000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8000:8080
"If the deployment named dev-environment-rs's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/dev-environment-rs
List resources from a directory with kustomization.yaml - e.g. parameters/kustomization.yaml,kubectl get -k parameters/
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod e-commerce-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach e-commerce-pod -c warp-drive -i -t
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/global-config deployment/backend-microservice-deployment
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-config deployment/mydeployment
Update deployment 'load-balancer-deployment' with a new environment variable,kubectl set env deployment/load-balancer-deployment SMTP_PASSWORD=your-password
Display only the most recent 53 lines of output in pod monitoring-pod,kubectl logs --tail=53 monitoring-pod
Create a new NodePort service named proxy-service-nodeport,kubectl create service nodeport proxy-service-nodeport --tcp=5000:7000
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""legacy-apps"" API group",kubectl get deployments.v2.1.0.legacy-apps -o json
Create a new LoadBalancer service named frontend-lb,kubectl create service loadbalancer frontend-lb --tcp=8000:8081
"Auto scale a deployment ""frontend"", with the number of pods between 1 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=1 --max=8
Import environment from a config map with a prefix,kubectl set env --from=configmap/namespace-config --prefix=MYSQL_ deployment/cache-cluster-deployment
Update pod 'monitoring' with the label 'env' and the value 'staging',kubectl label pods monitoring env=staging
Create a new NodePort service named database-nodeport,kubectl create service nodeport database-nodeport --tcp=8088:8010
Update pod 'vpn' with the label 'release' and the value 'v1.0',kubectl label pods vpn release=v1.0
Get output from cosmic-container from pod auth-service-pod,kubectl attach auth-service-pod -c cosmic-container
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 9090 8000
"Get output from running 'mongo --version' command from the first pod of the service email-service, using the first container by default",kubectl exec svc/email-service -- mongo --version
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n kube-public
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/order-processing-deployment DB_PASSWORD=secretpassword -o yaml
Create a deployment named scheduler that runs the hazelcast image with 6 replicas,kubectl create deployment scheduler --image=hazelcast/hazelcast --replicas=6
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/proxy-service-deployment SMTP_HOST=smtp.example.com -o yaml
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.cloud-context.cluster cluster-gamma
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod 8088:8888
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/api-service-pod 8088:5432
"Auto scale a replication controller ""monitoring"", with the number of pods between 1 and 5, target CPU utilization at 60%",kubectl autoscale rc monitoring --max=5 --cpu-percent=60
"Listen on port 3000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 3000:3000"
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod e-commerce-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach e-commerce-pod -c lunar-launcher -i -t
Create a new LoadBalancer service named auth-service-lb,kubectl create service loadbalancer auth-service-lb --tcp=9000:8081
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named database-pod,kubectl logs deployment/backend-microservice-deployment -c database-pod-1
Start a jenkins pod and let the container expose port 27017,kubectl run hazelcast --image=jenkins --port=27017
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node edge-node-10 -p $'spec:\n unschedulable: true'
"Create a cluster role named ""foo"" that allows user to perform ""use"", ""proxy"" and ""delete"" on services","kubectl create clusterrole foo --verb=use,proxy,delete --resource=services"
"Auto scale a deployment ""foo"", with the number of pods between 4 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment foo --min=4 --max=8
Update pod 'chat-app' with the label 'tier' and the value 'backend',kubectl label pods chat-app tier=backend
Roll back to daemonset revision 7,kubectl rollout undo daemonset/namespace-1 --to-revision=7
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 8081 8888
Set the resource request and limits for all containers in elasticsearch,"kubectl set resources deployment elasticsearch --limits=cpu=200m,memory=512Mi --requests=cpu=200m,memory=4Gi"
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-name-config deployment/order-processing-deployment
Set deployment email-server-deployment's service account to tiller,kubectl set serviceaccount deployment email-server-deployment tiller
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp cert-manager/backend-pod-13:/tmp/foo_dir :/tmp/bar
Create a job with a command,kubectl create job testing --image=alpine -- sleep 3600
Create a job with a command,kubectl create job audit-job --image=jenkins -- jenkins-plugin-cli
Add a taint with key 'zone' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  zone=dev-node-4:PreferNoSchedule
Create a new config map named app-secrets from an env file,kubectl create configmap app-secrets --from-env-file=path/to/configurations.env
Display only the most recent 43 lines of output in pod api-service-pod,kubectl logs --tail=43 api-service-pod
"Auto scale a replication controller ""vpn"", with the number of pods between 1 and 8, target CPU utilization at 81%",kubectl autoscale rc vpn --max=8 --cpu-percent=81
Create a new ExternalName service named external-git-service,kubectl create service externalname external-git-service --external-name demo-service.dev
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/api-service-pod 6379 8080
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node monitoring-node-15 -p $'data:\n key: new-value'
Disable cert checking for the dev cluster entry,kubectl config set-cluster staging-cluster --insecure-skip-tls-verify=true
Start a mongo pod and let the container expose port 7000,kubectl run hazelcast --image=mongo --port=7000
"Set a deployments postgres container cpu limits to ""50m"" and memory to ""64Mi""","kubectl set resources deployment postgres -c=nginx --limits=cpu=50m,memory=64Mi"
Create a deployment named wordpress that runs the amazonlinux image and expose port 9090,kubectl create deployment wordpress --image=amazonlinux --port=9090
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/analytics-pod 3000 6379
Create a deployment named proxy that runs the jenkins image and expose port 9091,kubectl create deployment proxy --image=jenkins --port=9091
"Listen on port 8081 locally, forwarding to 5000 in the pod",kubectl port-forward pod/web-app-pod 8081:5000
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/properties/file2.txt
"Scale a resource identified by type and name specified in ""params.json"" to 7",kubectl scale --replicas=7 -f params.json
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/frontend-pod 8088:8000
Copy /tmp/foo_dir from a remote pod to /tmp/bar locally,kubectl cp cert-manager/auth-service-pod-11:/tmp/foo_dir /tmp/bar
"Check to see if I can get the job named ""backup-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/backup-job -n default
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/email-service-pod
Get output from running the 'bash' command in astro-container from pod e-commerce-pod,kubectl exec e-commerce-pod -c astro-container -- bash
"Listen on port 5000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5000:8888
Add a taint with key 'datacenter' on nodes having label app=web-app,kubectl taint node -l app=web-app  datacenter=testing-node-11:PreferNoSchedule
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.cluster-1-context.cluster sun-cluster
Create a new ClusterIP service named security-service-clusterip,kubectl create service clusterip security-service-clusterip --tcp=9090:3306
Add a taint with key 'special' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  special=prod-node-5:PreferNoSchedule
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=9090 --target-port=800000
"Scale a resource identified by type and name specified in ""config.json"" to 1",kubectl scale --replicas=1 -f config.json
Create an ingress with multiple hosts and the pathType as Prefix,"kubectl create ingress ingress1 --class=default \
--rule=""website.com/path*=svc:8080"" \
--rule=""module.com/admin*=svc2:http"""
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node node-2 -p $'spec:\n containers:\n- name: container-name\n  resources:\n    limits:\n      cpu: 200m'
"Get output from running the 'php --version' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- php --version
"Listen on port 5432 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 5432:8080"
"Auto scale a replication controller ""backend"", with the number of pods between 1 and 7, target CPU utilization at 81%",kubectl autoscale rc backend --max=7 --cpu-percent=81
Create a cron job with a command,"kubectl create cronjob report-generation --image=mysql --schedule=""*/1 * * * *"" -- mysql --version"
Set deployment monitoring-stack-deployment's service account to flux,kubectl set serviceaccount deployment monitoring-stack-deployment flux
Return snapshot logs from all containers in pods defined by label namespace=mynamespace,kubectl logs -l namespace=mynamespace --all-containers=true
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-authentication-service
"Delete pods and services with same names ""proxy-server"" and ""database""","kubectl delete pod,service proxy-server database"
Start a centos pod and let the container expose port 8084,kubectl run hazelcast --image=centos --port=8084
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=app-cluster
Create a deployment named prometheus that runs the nginx image,kubectl create deployment prometheus --image=nginx
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/proxy-server-pod :5000
"Listen on port 5432 locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod 5432:8081
Return snapshot logs from container authentication-service-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/authentication-service-deployment -c email-service-pod-1
Set the server field on the cloud-cluster cluster to https://1.2.3.4,kubectl config set clusters.cloud-cluster.server https://1.2.3.4
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/gateway-service"
"Listen on port 8000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 8000:3000"
Set deployment cache-cluster-deployment's service account to prometheus,kubectl set serviceaccount deployment cache-cluster-deployment prometheus
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/order-service"
View the last-applied-configuration annotations by file in JSON,kubectl apply view-last-applied -f setup.yaml -o json
Update deployment 'database-deployment' with a new environment variable,kubectl set env deployment/database-deployment SMTP_USERNAME=your-username
"Enable the OpenID Connect auth provider for the ""app-operator"" entry with additional args",kubectl config set-credentials app-operator --auth-provider=oidc --auth-provider-arg=client-id=foo --auth-provider-arg=client-secret=bar
Restart a deployment,kubectl rollout restart deployment/staging
Create a copy of proxy-service-pod adding a debug container and changing container images,"kubectl debug proxy-service-pod -it --copy-to=debug-image-web --image=debian --set-image=scheduler=my-scheduler:1.0,mailer=mailer:latest"
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""backup-apps"" API group",kubectl get deployments.v1.1.0.backup-apps -o yaml
Copy /tmp/foo_dir local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo_dir kube-dns/metrics-exporter-pod-10:/etc/kubernetes
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/monitoring-pod
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8081 8080
Delete resources from a directory containing kustomization.yaml - e.g. conf/kustomization.yaml,kubectl delete -k conf/
"Get output from running the 'redis-server' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- redis-server
"Set a deployments hazelcast container cpu limits to ""1"" and memory to ""4Gi""","kubectl set resources deployment hazelcast -c=nginx --limits=cpu=1,memory=4Gi"
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=5432 --target-port=808000
Create a new ExternalName service named external-analytics-service,kubectl create service externalname external-analytics-service --external-name test-site.org
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/cdn-service-pod :5432
Set deployment log-aggregator-deployment's service account to dashboard,kubectl set serviceaccount deployment log-aggregator-deployment dashboard
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/monitoring-config deployment/order-processing-deployment
Start a centos pod and let the container expose port 7000,kubectl run hazelcast --image=centos --port=7000
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/queue-processing-job -n kube-ingress
Create a pod using the data in parameters.json,kubectl create -f ./parameters.json
"Get output from running 'go' command from the first pod of the deployment load-balancer-deployment, using the first container by default",kubectl exec deploy/load-balancer-deployment -- go
Roll back to the previous deployment,kubectl rollout undo deployment/namespace-2
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.team-beta-context.cluster app-cluster
Set the resource request and limits for all containers in ubuntu,"kubectl set resources deployment ubuntu --limits=cpu=200m,memory=512Mi --requests=cpu=1,memory=256Mi"
"Listen on port 8088 locally, forwarding to 8080 in the pod",kubectl port-forward pod/api-service-pod 8088:8080
Get output from lunar-launcher from pod auth-service-pod,kubectl attach auth-service-pod -c lunar-launcher
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 8000 8081
Create a pod using the data in settings.json,kubectl create -f ./settings.json
"Get output from running the 'psql' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- psql
Create a new config map named db-config from the key=value pairs in the file,kubectl create configmap db-config --from-file=path/to/data
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/cache-warming-job -n kube-system
"Enable new exec auth plugin for the ""system"" entry",kubectl config set-credentials system --exec-command=/path/to/the/executable --exec-api-version=client.authentication.k8s.io/v1beta1
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=5432:8888
"Print the result (in yaml format) of updating jenkins container limits from a local, without hitting the server","kubectl set resources -f path/to/file.yaml --limits=cpu=200m,memory=512Mi --local -o yaml"
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 9090 8080
Import environment from a secret,kubectl set env --from=secret/payment-gateway-secret deployment/authentication-service-deployment
Add a taint with key 'special' on nodes having label service=auth,kubectl taint node -l service=auth  special=node-1:PreferNoSchedule
Get output from stardust-shuttle from pod proxy-service-pod,kubectl attach proxy-service-pod -c stardust-shuttle
Return snapshot logs from container payment-processor-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/payment-processor-deployment -c payment-gateway-pod-1
"If the deployment named bar's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/bar
Create a job with a command,kubectl create job scaling-job --image=ruby -- irb
Create a deployment with a command,kubectl create deployment registry --image=docker.elastic.co/elasticsearch/elasticsearch -- elasticsearch-plugin --list
Get output from running the 'dotnet' command in nebula-navigator from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c nebula-navigator -- dotnet
Create a deployment named mattermost that runs the docker.elastic.co/elasticsearch/elasticsearch image with 2 replicas,kubectl create deployment mattermost --image=docker.elastic.co/elasticsearch/elasticsearch --replicas=2
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller cdn-service-rc
"Auto scale a deployment ""proxy-server"", with the number of pods between 3 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy-server --min=3 --max=15
Update pod 'proxy' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy release-
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.client-1-context.cluster web-cluster
"Listen on port 3000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 3000:8888"
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/cdn-service-pod 5000:6379
"Create a service for a pod api-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod api-service-pod --port=5432 --name=frontend
Begin streaming the logs of the code-explorer container in pod gateway-pod,kubectl logs -f -c code-explorer gateway-pod
Set deployment monitoring-stack-deployment's service account to default,kubectl set serviceaccount deployment monitoring-stack-deployment default
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.team-beta-context.cluster staging-cluster
"Start a centos pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=centos --overrides='{ ""apiVersion"": ""v1.1.0"", ""spec"": { ... } }'"
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node testing-node-11 -p $'spec:\n type: LoadBalancer'
"Set a deployments php container cpu limits to ""50m"" and memory to ""64Mi""","kubectl set resources deployment php -c=nginx --limits=cpu=50m,memory=64Mi"
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/log-config deployment/search-engine-deployment
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/web-app-deployment LOG_LEVEL=info -o yaml
"Listen on port 8081 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8081:8088
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod analytics-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach analytics-pod -c stardust-shuttle -i -t
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""apps"" API group",kubectl get deployments.v2.1.0.apps -o yaml
Set deployment payment-processor-deployment's service account to my-service-account,kubectl set serviceaccount deployment payment-processor-deployment my-service-account
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/log-aggregator-pod 9090:8088
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/cache-service"
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp openfaas/metrics-exporter-pod-10:/tmp/foo_dir :/tmp/bar
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/frontend-pod
"Create a single ingress called 'api-v1-ingress' that directs requests to foo.com/example to svc # svc1:9090 with a tls secret ""my-cert""","kubectl create ingress api-v1-ingress --rule=""foo.com/example=svc1:9090,tls=my-cert"""
Start a mysql pod,kubectl run nginx --image=mysql
Get output from code-explorer from pod proxy-service-pod,kubectl attach proxy-service-pod -c code-explorer
Create a copy of cdn-service-pod changing all container images to mcr.microsoft.com/dotnet/core/runtime,kubectl debug cdn-service-pod --copy-to=dgb-img --set-image=*=mcr.microsoft.com/dotnet/core/runtime
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=moon-cluster
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/media-stream-pod
"Wait for the pod ""security-service-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/security-service-pod
Set deployment api-server-deployment's service account to tiller,kubectl set serviceaccount deployment api-server-deployment tiller
Create a job with a command,kubectl create job deployment-rollout-job --image=centos -- yum install -y wget
"Set a deployments mysql container cpu limits to ""200m"" and memory to ""256Mi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=200m,memory=256Mi"
Create a new LoadBalancer service named analytics-lb,kubectl create service loadbalancer analytics-lb --tcp=8888:8181
Get output from running the 'gem --version' command in astro-container from pod api-service-pod,kubectl exec api-service-pod -c astro-container -- gem --version
"Listen on port 9090 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 9090:8888
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 8888 6379
"Listen on port 9090 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 9090:5000
"Delete pods and services with same names ""log-aggregator"" and ""monitoring""","kubectl delete pod,service log-aggregator monitoring"
"Get output from running 'go' command from the first pod of the service frontend-service, using the first container by default",kubectl exec svc/frontend-service -- go
"Delete pods and services with same names ""security"" and ""cdn""","kubectl delete pod,service security cdn"
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.team-alpha-context.cluster cloud-cluster
Add a taint with key 'zone' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  zone=node-2:PreferNoSchedule
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=prod-cluster
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/settings/file2.txt
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/web-app-pod 5432 8088
"Get output from running 'postgres' command from the first pod of the deployment cache-cluster-deployment, using the first container by default",kubectl exec deploy/cache-cluster-deployment -- postgres
"Create a single ingress called 'external-ingress' that directs requests to site.com/example to svc # svc1:5432 with a tls secret ""my-cert""","kubectl create ingress external-ingress --rule=""site.com/example=svc1:5432,tls=my-cert"""
Create a copy of backend-pod adding a debug container and changing container images,"kubectl debug backend-pod -it --copy-to=debug-image-1 --image=debian --set-image=worker=my-custom-worker:1.2.3,api=api:v2"
Show all logs from pod log-aggregator-pod written in the last hour,kubectl logs --since=1h log-aggregator-pod
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod media-stream-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach media-stream-pod -c code-explorer -i -t
"Enable the Google Compute Platform auth provider for the ""app-service"" entry",kubectl config set-credentials app-service --auth-provider=gcp
Create a new secret named database-secret from an env file,kubectl create secret generic database-secret --from-env-file=path/to/parameters.env
Create a copy of web-app-pod adding a debug container and changing container images,"kubectl debug web-app-pod -it --copy-to=debug-image-api --image=debian --set-image=web=nginx:latest,app=app:debug"
"Start a jenkins pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=jenkins --restart=Never
Create a copy of proxy-service-pod changing all container images to wordpress,kubectl debug proxy-service-pod --copy-to=debug-image-1 --set-image=*=wordpress
Add a taint with key 'workload' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  workload=kube-master-9:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/monitoring-config deployment/load-balancer-deployment
Set deployment frontend-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment frontend-deployment gitlab-runner
Import environment from a secret,kubectl set env --from=secret/oauth-secret deployment/notification-handler-deployment
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.feature-branch-2.3.0.sandbox-apps -o yaml
Create a new ExternalName service named external-authentication-service,kubectl create service externalname external-authentication-service --external-name blog-test.blog
Add to node 'kube-master-9' a taint with key 'hardware' and no value,kubectl taint nodes kube-master-9 hardware:NoSchedule
Remove from node 'storage-node-13' all the taints with key 'app',kubectl taint nodes storage-node-13 app-
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=8084:9000
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=scheduling.k8s.io
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/db-service"
"Delete pods and services with same names ""security"" and ""security""","kubectl delete pod,service security security"
Add a taint with key 'special' on nodes having label myLabel,kubectl taint node -l myLabel  special=testing-node-11:PreferNoSchedule
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/user-service"
"Set a deployments mysql container cpu limits to ""3"" and memory to ""2Gi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=3,memory=2Gi"
Create a new secret named cert-manager-secret with keys for each file in folder bar,kubectl create secret generic cert-manager-secret --from-file=path/to/data
"List deployments in JSON output format, in the ""custom-version"" version of the ""backup-apps"" API group",kubectl get deployments.custom-version.backup-apps -o json
Create a deployment named drupal that runs the alpine image and expose port 5432,kubectl create deployment drupal --image=alpine --port=5432
Create a new config map named app-config from an env file,kubectl create configmap app-config --from-env-file=path/to/settings.env
Update all deployments' and rc's nginx container's image to 'debian:11.0',"kubectl set image deployments,rc debian=debian:11.0 --all"
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/cdn-service-pod
Create a new ExternalName service named external-notification-service,kubectl create service externalname external-notification-service --external-name education-edu.edu
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/wordpress
Delete a pod based on the type and name in the JSON passed into stdin,cat pod.json | kubectl delete -f -
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""custom-apps"" API group",kubectl get deployments.legacy-1.0.0.custom-apps -o yaml
Add a taint with key 'cpu-type' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  cpu-type=edge-node-10:PreferNoSchedule
"Update pod 'vpn' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods vpn alert-email='alerts@example.com'
Create a new LoadBalancer service named payment-gateway-lb,kubectl create service loadbalancer payment-gateway-lb --tcp=8080:8081
Return snapshot logs from container mydeployment-1 of a deployment named media-stream-pod,kubectl logs deployment/mydeployment -c media-stream-pod-1
"Get output from running the 'node' command from pod api-service-pod, using the first container by default",kubectl exec api-service-pod -- node
Update image of all containers of daemonset nginx to 'ubuntu:20.04',kubectl set image daemonset nginx *=ubuntu:20.04
Create a new secret named encryption-key-secret using a combination of a file and a literal,kubectl create secret generic encryption-key-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
Create a job with a command,kubectl create job report-generation-job --image=golang -- go run hello.go
Set deployment load-balancer-deployment's service account to my-service-account,kubectl set serviceaccount deployment load-balancer-deployment my-service-account
"Delete pods and services with same names ""proxy"" and ""media-stream""","kubectl delete pod,service proxy media-stream"
"Force replace, delete and then re-create the resource",kubectl replace --force -f ./conf.json
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/email-service-pod
Start a amazonlinux pod and let the container expose port 3000,kubectl run hazelcast --image=amazonlinux --port=3000
"Listen on port 3000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/log-aggregator-pod 3000:8888
Update image of all containers of daemonset services to 'openjdk:16.0.2',kubectl set image daemonset services *=openjdk:16.0.2
Get output from running the 'geth attach' command in cosmic-container from pod cdn-service-pod,kubectl exec cdn-service-pod -c cosmic-container -- geth attach
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/logging-service 8088:https
Create a deployment named scheduler that runs the confluentinc/cp-kafka image,kubectl create deployment scheduler --image=confluentinc/cp-kafka
"Listen on port 8080 locally, forwarding to 5432 in the pod",kubectl port-forward pod/web-app-pod 8080:5432
"Auto scale a deployment ""auth"", with the number of pods between 7 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment auth --min=7 --max=10
"Listen on port 5432 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5432:5432
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/docker-registry"
"Auto scale a deployment ""backend"", with the number of pods between 1 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment backend --min=1 --max=9
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=data-cluster
"Update a pod identified by the type and name in ""docker-registry.yaml""",kubectl label -f docker-registry.yaml status=unhealthy
"Listen on port 8088 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8088:8081
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 5000 8888
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/namespace-config deployment/log-aggregator-deployment
Create a job with a command,kubectl create job image-build-job --image=ruby -- ruby --version
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""mobile-apps"" API group",kubectl get deployments.beta-1.0.mobile-apps -o json
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=3306 --target-port=543200
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""legacy-apps"" API group",kubectl get deployments.v2.1.0.legacy-apps -o yaml
"Create or update exec auth plugin environment variables for the ""cluster-admin"" entry",kubectl config set-credentials cluster-admin --exec-env=key1=val1 --exec-env=key2=val2
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/backend-pod
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/queue-processing-job -n development
Set deployment load-balancer-deployment's service account to tekton,kubectl set serviceaccount deployment load-balancer-deployment tekton
Copy ~/.config/kube from a remote pod to /etc/kubernetes locally,kubectl cp metallb-system/database-pod-2:~/.config/kube /etc/kubernetes
"Listen on a random port locally, forwarding to 6379 in the pod",kubectl port-forward pod/log-aggregator-pod :6379
"Listen on port 3000 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 3000:8080"
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8088 --target-port=808800
Set deployment gateway-deployment's service account to my-service-account,kubectl set serviceaccount deployment gateway-deployment my-service-account
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/scheduler-service"
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/log-config deployment/payment-processor-deployment
"Get output from running the 'ash' command from pod mypod, using the first container by default",kubectl exec mypod -- ash
"Listen on port 8000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8000:8000
Get output from running the 'mysql --version' command in time-machine from pod e-commerce-pod,kubectl exec e-commerce-pod -c time-machine -- mysql --version
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/log-config deployment/analytics-platform-deployment
Create a new secret named app-config-secret from an env file,kubectl create secret generic app-config-secret --from-env-file=path/to/properties.env
Create a job with a command,kubectl create job backup --image=ethereum/client-go -- geth version
Create a new secret named oauth-secret with keys for each file in folder bar,kubectl create secret generic oauth-secret --from-file=path/to/options
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/global-config deployment/log-aggregator-deployment
"Get output from running the 'postgres' command from pod proxy-service-pod, using the first container by default",kubectl exec proxy-service-pod -- postgres
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""backup-apps"" API group",kubectl get deployments.legacy-1.0.0.backup-apps -o json
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""alpha-apps"" API group",kubectl get deployments.stable-2.0.0.alpha-apps -o json
Update pod 'database' with the label 'component' and the value 'web',kubectl label pods database component=web
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/namespace-config deployment/order-processing-deployment
Set the resource request and limits for all containers in nginx,"kubectl set resources deployment nginx --limits=cpu=200m,memory=512Mi --requests=cpu=10,memory=512Mi"
Start a mysql pod and let the container expose port 27017,kubectl run hazelcast --image=mysql --port=27017
Add a taint with key 'hardware' on nodes having label service=auth,kubectl taint node -l service=auth  hardware=gpu-node-12:PreferNoSchedule
View the rollout history of a deployment,kubectl rollout history deployment/test
Remove from node 'backup-node-14' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes backup-node-14 disktype:NoSchedule-
Set deployment api-server-deployment's service account to elasticsearch,kubectl set serviceaccount deployment api-server-deployment elasticsearch
Return snapshot logs from container order-processing-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/order-processing-deployment -c security-service-pod-1
"Get output from running the 'jenkins-plugin-cli' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- jenkins-plugin-cli
"Define new exec auth plugin args for the ""app-service"" entry",kubectl config set-credentials app-service --exec-arg=arg1 --exec-arg=arg2
Return snapshot logs from container authentication-service-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/authentication-service-deployment -c proxy-service-pod-1
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.local-context.cluster galaxy-cluster
"Listen on port 5432 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 5432:6379"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 5000 8081
Begin streaming the logs of the nano-bot container in pod security-service-pod,kubectl logs -f -c nano-bot security-service-pod
"Auto scale a replication controller ""log-aggregator"", with the number of pods between 1 and 4, target CPU utilization at 20%",kubectl autoscale rc log-aggregator --max=4 --cpu-percent=20
"Update pod 'analytics' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics backup-strategy='daily backups'
Create a job with a command,kubectl create job cleanup --image=mysql -- mysqld
Create a new config map named api-config from the key=value pairs in the file,kubectl create configmap api-config --from-file=path/to/options
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/db-config deployment/analytics-platform-deployment
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.cluster-2-context.cluster prod-cluster
Show metrics for all pods in the default namespace,kubectl top pod
Set deployment order-processing-deployment's service account to fluentd,kubectl set serviceaccount deployment order-processing-deployment fluentd
"Update pod 'vpn' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods vpn status=unhealthy
Update image of all containers of daemonset prod to 'postgres:13.4',kubectl set image daemonset prod *=postgres:13.4
Get output from running the 'nginx -t' command in mycontainer from pod web-app-pod,kubectl exec web-app-pod -c mycontainer -- nginx -t
Roll back to daemonset revision 1,kubectl rollout undo daemonset/services --to-revision=1
"Check to see if I can get the job named ""data-migration-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/data-migration-job -n staging
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/authentication-service"
Print the supported API resources with a specific APIGroup,kubectl api-resources --api-group=coordination.k8s.io
Get output from running the 'elasticsearch --version' command in nano-bot from pod backend-pod,kubectl exec backend-pod -c nano-bot -- elasticsearch --version
"Describe a pod identified by type and name in ""params.json""",kubectl describe -f params.json
Return snapshot logs from container user-management-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/user-management-deployment -c log-aggregator-pod-1
Return snapshot logs from container user-management-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/user-management-deployment -c security-service-pod-1
"Listen on a random port locally, forwarding to 3000 in the pod",kubectl port-forward pod/proxy-server-pod :3000
"Listen on port 9090 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 9090:5000"
"Create a service for a replication controller identified by type and name specified in ""python-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f python-controller.yaml --port=8082 --target-port=800000
"Set a deployments hazelcast container cpu limits to ""100m"" and memory to ""256Mi""","kubectl set resources deployment hazelcast -c=nginx --limits=cpu=100m,memory=256Mi"
Create a new ClusterIP service named inventory-service-clusterip,kubectl create service clusterip inventory-service-clusterip --tcp=9090:8081
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/namespace-config deployment/frontend-deployment
"Update pod 'database' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods database app-version='2.5.1'
Start a nginx pod and let the container expose port 5432,kubectl run hazelcast --image=nginx --port=5432
Describe one context in your kubeconfig file,kubectl config get-contexts cluster-1-context
Get output from running the 'redis-cli' command in stardust-shuttle from pod chat-app-pod,kubectl exec chat-app-pod -c stardust-shuttle -- redis-cli
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.testing-context.cluster moon-cluster
"If the deployment named app-v2-replicaset's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/app-v2-replicaset
Start a postgres pod and let the container expose port 8181,kubectl run hazelcast --image=postgres --port=8181
"Listen on port 5432 locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod 5432:8888
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json description='Web server for marketing site'
Create a new secret named docker-registry-secret with keys for each file in folder bar,kubectl create secret generic docker-registry-secret --from-file=path/to/configs
Update pod 'auth' with the label 'release' and the value 'v2.0',kubectl label pods auth release=v2.0
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=star-cluster
Return snapshot logs from container mydeployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/mydeployment -c e-commerce-pod-1
Update pod 'log-aggregator' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods log-aggregator app-
Display only the most recent 23 lines of output in pod media-stream-pod,kubectl logs --tail=23 media-stream-pod
Get output from stardust-shuttle from pod security-service-pod,kubectl attach security-service-pod -c stardust-shuttle
Start a alpine pod and let the container expose port 8081,kubectl run hazelcast --image=alpine --port=8081
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=8082 --target-port=500100
Update pod 'gateway' with the label 'component' and the value 'api',kubectl label pods gateway component=api
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/api-server-deployment S3_BUCKET=my-s3-bucket -o yaml
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8088 5000
Add a taint with key 'special' on nodes having label team=devops,kubectl taint node -l team=devops  special=db-node-7:PreferNoSchedule
Start a mysql pod and let the container expose port 8084,kubectl run hazelcast --image=mysql --port=8084
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp openfaas/worker-pod-4:~/.config/kube /tmp/bar_dir
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""alpha-apps"" API group",kubectl get deployments.beta-1.0.alpha-apps -o json
Add a taint with key 'datacenter' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  datacenter=k8s-node-1:PreferNoSchedule
"Check to see if I can get the job named ""data-migration-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/data-migration-job -n kube-dns
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/log-aggregator-pod 8000:8080
Return snapshot logs from container frontend-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/frontend-deployment -c security-service-pod-1
Update image of all containers of daemonset namespace-2 to 'golang:1.17',kubectl set image daemonset namespace-2 *=golang:1.17
"Listen on port 9090 locally, forwarding to 9090 in the pod",kubectl port-forward pod/web-app-pod 9090:9090
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=cluster-alpha
"Get output from running the 'wp' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- wp
Display only the most recent 43 lines of output in pod web-app-pod,kubectl logs --tail=43 web-app-pod
Create a copy of chat-app-pod changing the command of code-explorer,kubectl debug chat-app-pod -it --copy-to=my-custom-dbg --container=code-explorer -- sh
Create a job with a command,kubectl create job cleanup --image=wordpress -- mysql --version
Update image of all containers of daemonset staging to 'python:3.9.7',kubectl set image daemonset staging *=python:3.9.7
"Start a centos pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=centos --overrides='{ ""apiVersion"": ""dev-2.2.0"", ""spec"": { ... } }'"
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod 6379:8888
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kubeapps/auth-service-pod-11::/tmp/foo /tmp/bar_dir
"Listen on port 5432 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5432:6379
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/notification-sender-job -n monitoring
"Update pod 'frontend' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend deployment-script='https://example.com/deploy.sh'
"If the deployment named api-service-rs's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/api-service-rs
Update deployment 'analytics-platform-deployment' with a new environment variable,kubectl set env deployment/analytics-platform-deployment DB_PASSWORD=secretpassword
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.on-prem-context.cluster on-prem-cluster
"Create a cluster role named ""bar"" with ResourceName specified",kubectl create clusterrole bar --verb=watch --resource=pods --resource-name=log-aggregator --resource-name=document-storage
Add to node 'db-node-7' a taint with key 'workload' and no value,kubectl taint nodes db-node-7 workload:NoSchedule
Import environment from a secret,kubectl set env --from=secret/password-secret deployment/scheduler-app-deployment
Add a taint with key 'zone' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  zone=kube-master-9:PreferNoSchedule
Start a mongo pod and let the container expose port 9000,kubectl run hazelcast --image=mongo --port=9000
Create a new secret named ssh-key-secret from an env file,kubectl create secret generic ssh-key-secret --from-env-file=path/to/profiles.env
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/gateway-pod
Create a deployment named jenkins that runs the hazelcast image,kubectl create deployment jenkins --image=hazelcast/hazelcast
"Remove exec auth plugin environment variables for the ""prod-user"" entry",kubectl config set-credentials prod-user --exec-env=var-to-remove-
Add a taint with key 'special' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  special=worker-node-3:PreferNoSchedule
Create a copy of proxy-server-pod adding a debug container and changing container images,"kubectl debug proxy-server-pod -it --copy-to=debug-image-app --image=debian --set-image=database=mysql:5.7,app=app:debug"
"Listen on port 8080 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8080:6379
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.dev-context.cluster kube-cluster-2
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 5000 8081
"Listen on port 6379 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 6379:3000"
Update pod 'log-aggregator' only if the resource is unchanged from version 1,kubectl label pods log-aggregator status=unhealthy --resource-version=1
Return snapshot logs from container order-processing-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/order-processing-deployment -c log-aggregator-pod-1
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8081 8081
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=80 --target-port=888800
Add a taint with key 'zone' on nodes having label release=beta,kubectl taint node -l release=beta  zone=web-node-8:PreferNoSchedule
"Set a deployments elasticsearch container cpu limits to ""1"" and memory to ""128Mi""","kubectl set resources deployment elasticsearch -c=nginx --limits=cpu=1,memory=128Mi"
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""alpha-apps"" API group",kubectl get deployments.stable-2.0.0.alpha-apps -o yaml
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=cluster-gamma
"Listen on port 3000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 3000:5000"
Delete pods and services with label service=auth,"kubectl delete pods,services -l service=auth"
Update pod 'backend' with the label 'component' and the value 'api',kubectl label pods backend component=api
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=on-prem-cluster
Add a taint with key 'disktype' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  disktype=node-1:PreferNoSchedule
Display only the most recent 53 lines of output in pod payment-gateway-pod,kubectl logs --tail=53 payment-gateway-pod
"Listen on port 8000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8000:3000
"Update pod 'foo' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods foo status=unhealthy
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/namespace-config deployment/cache-cluster-deployment
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8888 8000
"Listen on port 8088 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8088:8000"
Create a new ClusterIP service named payment-service-clusterip,kubectl create service clusterip payment-service-clusterip --tcp=5001:5000
"Auto scale a deployment ""gateway"", with the number of pods between 2 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=2 --max=9
Create a new ExternalName service named external-caching-service,kubectl create service externalname external-caching-service --external-name education-edu.edu
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""saas-admin"" entry",kubectl config set-credentials saas-admin --auth-provider=oidc --auth-provider-arg=client-secret-
Return snapshot of previous terminated mycontainer container logs from pod monitoring-pod,kubectl logs -p -c mycontainer monitoring-pod
Return snapshot of previous terminated quantum-quark container logs from pod gateway-pod,kubectl logs -p -c quantum-quark gateway-pod
Create a new secret named docker-registry-secret from an env file,kubectl create secret generic docker-registry-secret --from-env-file=path/to/options.env
"Listen on port 5000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 5000:5000
"Auto scale a deployment ""analytics"", with the number of pods between 7 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment analytics --min=7 --max=14
Create a cron job with a command,"kubectl create cronjob email-notifications --image=python --schedule=""*/1 * * * *"" -- python"
"Listen on port 3000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 3000:8000
Create a new ExternalName service named external-caching-service,kubectl create service externalname external-caching-service --external-name sample-domain.net
"Start a wordpress pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=wordpress --restart=Never
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod security-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach security-service-pod -c rocket-ranger -i -t
"Update pod 'api' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api contact-email=support@example.com
Add a taint with key 'datacenter' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  datacenter=monitoring-node-15:PreferNoSchedule
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json expiration-date='2024-12-31'
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/ui-config deployment/notification-handler-deployment
"Listen on port 5000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/security-service-pod 5000:8888
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/e-commerce-pod 8888:5000
Begin streaming the logs of the stardust-shuttle container in pod mypod,kubectl logs -f -c stardust-shuttle mypod
Create a copy of api-service-pod changing all container images to mongo,kubectl debug api-service-pod --copy-to=debug-image-app --set-image=*=mongo
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/order-processing-deployment REDIS_HOST=redis-server -o yaml
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/global-config deployment/order-processing-deployment
Create a copy of api-service-pod adding a debug container and changing container images,"kubectl debug api-service-pod -it --copy-to=debug-image-app --image=debian --set-image=mailer=mailer:latest,mailer=mailer:latest"
Start a jenkins pod and let the container expose port 8081,kubectl run hazelcast --image=jenkins --port=8081
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=dev-cluster
Set deployment monitoring-stack-deployment's service account to elasticsearch,kubectl set serviceaccount deployment monitoring-stack-deployment elasticsearch
"If the deployment named mysql's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/mysql
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/monitoring-service"
"Listen on port 8000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8000:8080
Set deployment email-server-deployment's service account to my-service-account,kubectl set serviceaccount deployment email-server-deployment my-service-account
"Listen on port 8000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/log-aggregator-pod 8000:6379
Update deployment 'authentication-service-deployment' with a new environment variable,kubectl set env deployment/authentication-service-deployment DB_HOST=localhost
"If the deployment named db-migration-replicaset's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/db-migration-replicaset
"Create a role named ""bar"" with ResourceName specified",kubectl create role bar --verb=list --resource=pods --resource-name=app-analytics --resource-name=prod-api-gateway
Apply the configuration in config.json to a pod,kubectl apply -f ./config.json
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.staging-context.cluster staging-cluster
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.user-b-context.cluster web-cluster
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/database-indexing-job -n namespace-1
"Update pod 'gateway' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway env=staging
Create a new LoadBalancer service named proxy-server-lb,kubectl create service loadbalancer proxy-server-lb --tcp=8000:9091
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/cache-cluster-deployment -c frontend-pod-1
Start a ruby pod and let the container expose port 8888,kubectl run hazelcast --image=ruby --port=8888
Update image of all containers of daemonset prod to 'php:7.4.22',kubectl set image daemonset prod *=php:7.4.22
"Listen on port 8088 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8088:9090"
"Listen on port 8000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8000:8088
"Listen on port 8000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/api-service-pod 8000:8000
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=8080 --target-port=909200
"Delete pods and services with same names ""foo"" and ""database""","kubectl delete pod,service foo database"
"Start a postgres pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=postgres --overrides='{ ""apiVersion"": ""alpha-2.0"", ""spec"": { ... } }'"
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod api-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach api-service-pod -c warp-drive -i -t
Update image of all containers of daemonset services to 'mysql:5.7.35',kubectl set image daemonset services *=mysql:5.7.35
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8888 8000
"Listen on port 3000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 3000:3000
Start a nginx pod and let the container expose port 27017,kubectl run hazelcast --image=nginx --port=27017
Create a deployment with a command,"kubectl create deployment jenkins-x --image=nginx -- nginx -g ""daemon off;"""
Return snapshot logs from pod web-app-pod with multi containers,kubectl logs web-app-pod --all-containers=true
"Listen on port 3000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 3000:5432
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/log-aggregator-pod 9090:8000
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-secrets deployment/user-management-deployment
Create a new secret named jwt-secret with keys for each file in folder bar,kubectl create secret generic jwt-secret --from-file=path/to/properties
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/notification-service"
Get output from running the 'go run hello.go' command in rocket-ranger from pod vpn-service-pod,kubectl exec vpn-service-pod -c rocket-ranger -- go run hello.go
Create a job with a command,kubectl create job certificate-renewal --image=centos -- sleep 3600
Begin streaming the logs of the stardust-shuttle container in pod media-stream-pod,kubectl logs -f -c stardust-shuttle media-stream-pod
Update pod 'database' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods database tier-
Create a copy of vpn-service-pod adding a debug container and changing container images,"kubectl debug vpn-service-pod -it --copy-to=dgb-img --image=debian --set-image=cache=redis:alpine,api=api:v2"
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.team-alpha-context.cluster kube-cluster-1
Start a mysql pod and let the container expose port 8010,kubectl run hazelcast --image=mysql --port=8010
Create a new secret named docker-registry-secret from an env file,kubectl create secret generic docker-registry-secret --from-env-file=path/to/preferences.env
Create a deployment with a command,kubectl create deployment jenkins --image=jenkins -- jenkins --version
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/log-rotation-job -n kube-dns
"Listen on port 6379 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 6379:6379
"Delete pods and services with same names ""database"" and ""foo""","kubectl delete pod,service database foo"
Get output from running the 'kafka-server-start /etc/kafka/server.properties' command in cosmic-container from pod cdn-service-pod,kubectl exec cdn-service-pod -c cosmic-container -- kafka-server-start /etc/kafka/server.properties
Update image of all containers of daemonset namespace-2 to 'alpine:3.14',kubectl set image daemonset namespace-2 *=alpine:3.14
Update image of all containers of daemonset namespace- to 'ruby:3.0.2',kubectl set image daemonset namespace-3 *=ruby:3.0.2
"Update pod 'monitoring' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring description='Web server for marketing site'
"Listen on port 8000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8000:8081"
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/ethereum/client-go
"Update pod 'monitoring' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring git-repo='https://github.com/example/my-app'
Update image of all containers of daemonset namespace- to 'nginx:1.21.3',kubectl set image daemonset namespace-3 *=nginx:1.21.3
List resources from a directory with kustomization.yaml - e.g. conf/kustomization.yaml,kubectl get -k conf/
List a single pod in JSON output format,kubectl get -o json pod analytics-pod
"Listen on port 8080 locally, forwarding to 8080 in the pod",kubectl port-forward pod/api-service-pod 8080:8080
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n monitoring
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""testing-apps"" API group",kubectl get deployments.v1.1.1.testing-apps -o json
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""api-v2"" API group",kubectl get deployments.hotfix-1.1.2.api-v2 -o yaml
Return snapshot logs from container proxy-service-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/proxy-service-deployment -c security-service-pod-1
Edit the service named 'frontend-service',kubectl edit svc/frontend-service
Add a taint with key 'cpu-type' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  cpu-type=testing-node-11:PreferNoSchedule
Copy ~/.config/kube local file to /etc/kubernetes in a remote pod in a specific container,kubectl cp ~/.config/kube worker-pod-4:/etc/kubernetes -c worker-container
"Scale a resource identified by type and name specified in ""conf.json"" to 1",kubectl scale --replicas=1 -f conf.json
Start a ethereum/client-go pod and let the container expose port 8082,kubectl run hazelcast --image=ethereum/client-go --port=8082
Add to node 'node-2' a taint with key 'disktype' and no value,kubectl taint nodes node-2 disktype:NoSchedule
"Update pod 'analytics' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics scaling-policy=auto-horizontal-scaling
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=settings=/path/to/configs/file1.txt --from-file=key2=/path/to/options/file2.txt
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=8082 --target-port=300000
Print the supported API resources sorted by a column,kubectl api-resources --sort-by=group
"If the deployment named mysql's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/mysql
Begin streaming the logs of the cyber-sleuth container in pod database-pod,kubectl logs -f -c cyber-sleuth database-pod
"Listen on port 8081 locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod 8081:8088
Create an ingress with a default backend,"kubectl create ingress ingdefault --class=default \
--default-backend=defaultsvc:http \
--rule=""site.com/*=svc:8181,tls=secret1"""
Update pod 'media-stream' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods media-stream component-
Display only the most recent 53 lines of output in pod proxy-server-pod,kubectl logs --tail=53 proxy-server-pod
"List contents of /usr from the first container of pod e-commerce-pod and sort by modification time # If the command you want to execute in the pod has any flags in common (e.g. -i), # you must use two dashes (--) to separate your command's flags/arguments # Also note, do not surround your command and its flags/arguments with quotes # unless that is how you would execute it normally (i.e., do ls -t /usr, not ""ls -t /usr"")",kubectl exec e-commerce-pod -i -t -- ls -t /usr
"Listen on port 5000 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 5000:5432"
Return snapshot logs from container api-server-deployment-1 of a deployment named database-pod,kubectl logs deployment/api-server-deployment -c database-pod-1
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/monitoring-config deployment/search-engine-deployment
Begin streaming the logs of the stardust-shuttle container in pod proxy-service-pod,kubectl logs -f -c stardust-shuttle proxy-service-pod
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 9090 5000
"Delete pods and services with same names ""payment"" and ""email""","kubectl delete pod,service payment email"
Delete pods and services with label owner=john-doe,"kubectl delete pods,services -l owner=john-doe"
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir kube-server/database-pod-2::/tmp/bar
Create a new service account named spinnaker,kubectl create serviceaccount spinnaker
Create a job with a command,kubectl create job scaling-job --image=golang -- go
Update deployment 'email-server-deployment' with a new environment variable,kubectl set env deployment/email-server-deployment API_KEY=your-api-key
"Update pod 'api' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods api team='frontend-team'
"Set a deployments nginx container cpu limits to ""100m"" and memory to ""2Gi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=100m,memory=2Gi"
Add to node 'k8s-node-1' a taint with key 'dedicated' and no value,kubectl taint nodes k8s-node-1 dedicated:NoSchedule
"Update node 'db-node-7' with a taint with key 'cpu-type' and value 'x86' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes db-node-7 cpu-type=x86:NoSchedule
Get output from stardust-shuttle from pod analytics-pod,kubectl attach analytics-pod -c stardust-shuttle
Roll back to daemonset revision 3,kubectl rollout undo daemonset/nginx --to-revision=3
Delete a pod using the type and name specified in config.json,kubectl delete -f ./config.json
Begin streaming the logs of the cyber-sleuth container in pod gateway-pod,kubectl logs -f -c cyber-sleuth gateway-pod
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""backup-apps"" API group",kubectl get deployments.beta-1.0.backup-apps -o yaml
Create a job with a command,kubectl create job indexing --image=ruby -- gem --version
Add a taint with key 'hardware' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  hardware=k8s-node-1:PreferNoSchedule
Create a copy of proxy-service-pod changing all container images to postgres,kubectl debug proxy-service-pod --copy-to=my-custom-dbg --set-image=*=postgres
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/payment-gateway-pod
Update pod 'analytics' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods analytics unhealthy-
Get output from running the 'php --version' command in nebula-navigator from pod gateway-pod,kubectl exec gateway-pod -c nebula-navigator -- php --version
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8081 8000
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/data-synchronization-job -n namespace-1
Set custom TLS server name to use for validation for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --tls-server-name=kube-cluster-1
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""api-v2"" API group",kubectl get deployments.dev-2.2.0.api-v2 -o yaml
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/cdn-service-pod 8000:5000
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/namespace-config deployment/analytics-platform-deployment
Start a centos pod and let the container expose port 3306,kubectl run hazelcast --image=centos --port=3306
Create a copy of chat-app-pod changing all container images to postgres,kubectl debug chat-app-pod --copy-to=debug-image-app --set-image=*=postgres
"Get output from running the 'jenkins-plugin-cli' command from pod log-aggregator-pod, using the first container by default",kubectl exec log-aggregator-pod -- jenkins-plugin-cli
Return snapshot logs from container frontend-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/frontend-deployment -c e-commerce-pod-1
Return snapshot logs from container database-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/database-deployment -c vpn-service-pod-1
Display only the most recent 43 lines of output in pod email-service-pod,kubectl logs --tail=43 email-service-pod
Update pod 'analytics' with the label 'env' and the value 'production',kubectl label pods analytics env=production
Get output from running the 'node' command in lunar-launcher from pod api-service-pod,kubectl exec api-service-pod -c lunar-launcher -- node
Update pod 'cdn' with the label 'release' and the value 'v1.0',kubectl label pods cdn release=v1.0
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/cache-cluster-deployment -c api-service-pod-1
Get output from running the 'redis-server' command in nano-bot from pod email-service-pod,kubectl exec email-service-pod -c nano-bot -- redis-server
"Update pod 'database' with the annotation 'git-repo' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods database git-repo='https://github.com/example/my-app'
Delete the context for the team-beta-context cluster,kubectl config delete-context team-beta-context
View the details of daemonset revision 5,kubectl rollout history daemonset/app-v2 --revision=5
"Update pod 'payment' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment compliance-level=PCI-DSS
Set the server field on the dev-cluster cluster to https://1.2.3.4,kubectl config set clusters.dev-cluster.server https://1.2.3.4
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json last-deployment=2023-03-15
Start a centos pod and let the container expose port 8081,kubectl run hazelcast --image=centos --port=8081
Create a job with a command,kubectl create job testing --image=mongo -- mongo --version
"If the deployment named app-v2-replicaset's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/app-v2-replicaset
Roll back to the previous deployment with dry-run,kubectl rollout undo --dry-run=server deployment/services
Create a new config map named app-config-dev based on folder properties,kubectl create configmap app-config-dev --from-file=path/to/properties
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""alpha-apps"" API group",kubectl get deployments.v1.0.0.alpha-apps -o yaml
"Set basic auth for the ""app-operator"" entry",kubectl config set-credentials app-operator --username=admin --password=uXFGweU9l35qcif
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/namespace-config deployment/email-server-deployment
"Listen on port 5000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/chat-app-pod 5000:5000
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/mypod 3000:6379
Return snapshot of previous terminated warp-drive container logs from pod payment-gateway-pod,kubectl logs -p -c warp-drive payment-gateway-pod
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=edge-cluster
"Update pod 'gateway' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods gateway criticality='high'
"Create a cluster role named ""custom_role"" with ResourceName specified",kubectl create clusterrole custom_role --verb=use --resource=pods --resource-name=report-generator --resource-name=file-uploader
Return snapshot of previous terminated rocket-ranger container logs from pod monitoring-pod,kubectl logs -p -c rocket-ranger monitoring-pod
Start a confluentinc/cp-kafka pod and let the container expose port 8089,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8089
Create a new config map named monitoring-config based on folder data,kubectl create configmap monitoring-config --from-file=path/to/data
Create a deployment named scheduler that runs the php image and expose port 8083,kubectl create deployment scheduler --image=php --port=8083
List the environment variables defined on a deployments 'payment-processor-deployment',kubectl set env deployment/payment-processor-deployment --list
Get output from nano-bot from pod proxy-server-pod,kubectl attach proxy-server-pod -c nano-bot
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8081 3000
Add a taint with key 'app' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  app=node-2:PreferNoSchedule
"Create a service for a replicated ruby using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ruby --port=8010 --target-port=909100
Create a job with a command,kubectl create job security-scan-job --image=ethereum/client-go -- geth attach
Create a job with a command,kubectl create job monitoring-job --image=ethereum/client-go -- geth
"Get output from running the 'yum install -y wget' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- yum install -y wget
"Create a role named ""default_role"" with ResourceName specified",kubectl create role default_role --verb=list --resource=pods --resource-name=notification-service --resource-name=dev-database
Return snapshot logs from first container of a job named content-import-job,kubectl logs job/content-import-job
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/api-service-pod 8888:8888
Create a new secret named password-secret with keys for each file in folder bar,kubectl create secret generic password-secret --from-file=path/to/profiles
Start a ubuntu pod and let the container expose port 8000,kubectl run hazelcast --image=ubuntu --port=8000
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/web-app-pod 6379 5432
"Update pod 'proxy-server' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server expiration-date='2024-12-31'
Create a deployment named auth that runs the confluentinc/cp-kafka image with 5 replicas,kubectl create deployment auth --image=confluentinc/cp-kafka --replicas=5
Get output from lunar-launcher from pod chat-app-pod,kubectl attach chat-app-pod -c lunar-launcher
"Update pod 'backend' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend team='frontend team'
Start a node pod and let the container expose port 3001,kubectl run hazelcast --image=node --port=3001
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/docker-registry"
Import environment from a secret,kubectl set env --from=secret/azure-storage-secret deployment/web-app-deployment
Rename the context 'cluster-2-context' to 'admin-context' in your kubeconfig file,kubectl config rename-context cluster-2-context admin-context
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 9090 8888
"Installing bash completion on Linux ## If bash-completion is not installed on Linux, install the 'bash-completion' package ## via your distribution's package manager. ## Load the kubectl completion code for bash into the current shell",source <(kubectl completion bash)
Return snapshot of previous terminated quantum-quark container logs from pod monitoring-pod,kubectl logs -p -c quantum-quark monitoring-pod
Create a deployment named wordpress that runs the redis image with 4 replicas,kubectl create deployment wordpress --image=redis --replicas=4
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod web-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach web-app-pod -c rocket-ranger -i -t
Update pod 'frontend' with the label 'env' and the value 'development',kubectl label pods frontend env=development
Show metrics for a given pod and its containers,kubectl top pod media-stream-pod --containers
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/payment-gateway-pod
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/proxy-service-deployment PORT=8080 -o yaml
Create a deployment named wordpress that runs the wordpress image and expose port 8888,kubectl create deployment wordpress --image=wordpress --port=8888
"Enable new exec auth plugin for the ""john.doe"" entry",kubectl config set-credentials john.doe --exec-command=/path/to/the/executable --exec-api-version=client.authentication.k8s.io/v1beta1
Set deployment monitoring-stack-deployment's service account to cert-manager,kubectl set serviceaccount deployment monitoring-stack-deployment cert-manager
"Check to see if I can get the job named ""security-scan-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/security-scan-job -n cert-manager
"Start the mongo pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=mongo -- <arg1> <arg2> ... <argN>
"Listen on port 8081 locally, forwarding to 8888 in the pod",kubectl port-forward pod/security-service-pod 8081:8888
"Update pod 'security' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods security env='staging'
Return snapshot logs from container order-processing-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/order-processing-deployment -c cdn-service-pod-1
"Listen on port 8088 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8088:8888
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 8000,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=8000
"Create a service for a replicated ubuntu using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs ubuntu --port=3306 --target-port=801000
"Listen on port 8088 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8088:8088
Add a taint with key 'zone' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  zone=node-1:PreferNoSchedule
Update deployment 'order-processing-deployment' with a new environment variable,kubectl set env deployment/order-processing-deployment DB_HOST=localhost
Update image of all containers of daemonset development to 'wordpress:5.8.1',kubectl set image daemonset development *=wordpress:5.8.1
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""my-apps"" API group",kubectl get deployments.v2.1.0.my-apps -o yaml
Delete the context for the cluster-2-context cluster,kubectl config delete-context cluster-2-context
List resource information in custom columns,"kubectl get pod monitoring-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-name-config deployment/user-management-deployment
Create a deployment named gitlab that runs the jenkins image and expose port 5432,kubectl create deployment gitlab --image=jenkins --port=5432
"Update pod 'proxy' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods proxy expiration-date='2024-12-31'
Create a new secret named app-config-secret from an env file,kubectl create secret generic app-config-secret --from-env-file=path/to/configurations.env
Create a priority class named maintenance-priority,"kubectl create priorityclass maintenance-priority --value=30 --description=""Priority for maintenance tasks"""
List a single pod in JSON output format,kubectl get -o json pod database-pod
"Update pod 'proxy-server' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods proxy-server SLA='99.9% uptime'
Create a deployment named grafana that runs the php image and expose port 8181,kubectl create deployment grafana --image=php --port=8181
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node web-node-8 -p $'spec:\n type: LoadBalancer'
Set deployment log-aggregator-deployment's service account to istio,kubectl set serviceaccount deployment log-aggregator-deployment istio
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=conf=/path/to/configurations/file1.txt --from-file=data=/path/to/properties/file2.txt
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-settings --prefix=MYSQL_ deployment/frontend-deployment
"Get output from running 'redis-server' command from the first pod of the deployment api-server-deployment, using the first container by default",kubectl exec deploy/api-server-deployment -- redis-server
Return snapshot of previous terminated cyber-sleuth container logs from pod vpn-service-pod,kubectl logs -p -c cyber-sleuth vpn-service-pod
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/docker-registry"
"Get output from running 'psql' command from the first pod of the deployment order-processing-deployment, using the first container by default",kubectl exec deploy/order-processing-deployment -- psql
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=5001 --target-port=300100
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/backend-pod 8080 9090
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-secrets deployment/database-deployment
Print the supported non-namespaced resources,kubectl api-resources --singularNamespaced=false
Set only the server field on the kube-cluster-2 cluster entry without touching other values,kubectl config set-cluster kube-cluster-2 --server=https://1.2.3.4
Create a new secret named ssh-key-secret with keys for each file in folder bar,kubectl create secret generic ssh-key-secret --from-file=path/to/profiles
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=cluster-beta
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/ui-config deployment/load-balancer-deployment
"List deployments in YAML output format, in the ""custom-version"" version of the ""prod-apps"" API group",kubectl get deployments.custom-version.prod-apps -o yaml
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""alpha-apps"" API group",kubectl get deployments.v3.0.0.alpha-apps -o yaml
Get output from running the 'irb' command in stardust-shuttle from pod vpn-service-pod,kubectl exec vpn-service-pod -c stardust-shuttle -- irb
"Delete pods and services with same names ""log-aggregator"" and ""media-stream""","kubectl delete pod,service log-aggregator media-stream"
Create a job with a command,kubectl create job monitoring-job --image=node -- npm --version
"Delete pods and services with same names ""proxy"" and ""web""","kubectl delete pod,service proxy web"
"Update pod 'api' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api scaling-policy=auto-horizontal-scaling
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/ui-config deployment/search-engine-deployment
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.on-prem-context.cluster staging-cluster
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8088 8080
"Delete pods and services with same names ""cdn"" and ""proxy-server""","kubectl delete pod,service cdn proxy-server"
"Auto scale a replication controller ""analytics"", with the number of pods between 1 and 4, target CPU utilization at 81%",kubectl autoscale rc analytics --max=4 --cpu-percent=81
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/cache-warming-job -n kube-public
Get output from running the 'node --version' command in code-explorer from pod backend-pod,kubectl exec backend-pod -c code-explorer -- node --version
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8088 5432
Update image of all containers of daemonset services to 'golang:1.17',kubectl set image daemonset services *=golang:1.17
Get output from running the 'docker run -d ubuntu sleep 3600' command in rocket-ranger from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c rocket-ranger -- docker run -d ubuntu sleep 3600
"Listen on port 6379 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 6379:8088
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-secrets deployment/mydeployment
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8080 5432
Get output from running the 'apache2ctl -D FOREGROUND' command in nano-bot from pod chat-app-pod,kubectl exec chat-app-pod -c nano-bot -- apache2ctl -D FOREGROUND
Create a deployment named loadbalancer that runs the postgres image and expose port 7000,kubectl create deployment loadbalancer --image=postgres --port=7000
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n kube-ingress
Add a taint with key 'hardware' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  hardware=storage-node-13:PreferNoSchedule
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/web-app-pod
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=8084 --target-port=818100
"Create a cluster role named ""reader"" with ResourceName specified",kubectl create clusterrole reader --verb=connect --resource=services --resource-name=content-delivery --resource-name=dev-database
"Update pod 'analytics' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods analytics backup-strategy='daily-backups'
"Auto scale a replication controller ""chat-app"", with the number of pods between 1 and 3, target CPU utilization at 81%",kubectl autoscale rc chat-app --max=3 --cpu-percent=81
"Listen on port 8888 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8888:8080
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/frontend-pod 8081:8080
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/log-aggregator-pod 8888:8000
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/api-service-pod 8000:8080
Create a job with a command,kubectl create job monitoring-job --image=ruby -- ruby --version
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/monitoring-config deployment/web-app-deployment
Update image of all containers of daemonset prod to 'node:14.17.3',kubectl set image daemonset prod *=node:14.17.3
Start a php pod,kubectl run nginx --image=php
Update pod 'auth' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods auth env-
Start a centos pod and let the container expose port 6379,kubectl run hazelcast --image=centos --port=6379
Return snapshot logs from container authentication-service-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/authentication-service-deployment -c web-app-pod-1
"Listen on port 8081 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8081:5432"
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/proxy-server-pod 8000:8080
Begin streaming the logs of the warp-drive container in pod email-service-pod,kubectl logs -f -c warp-drive email-service-pod
Create a job with a command,kubectl create job certificate-renewal --image=node -- node --version
"Set a deployments ruby container cpu limits to ""100m"" and memory to ""1Gi""","kubectl set resources deployment ruby -c=nginx --limits=cpu=100m,memory=1Gi"
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl exec -n kube-flannel file-server-pod-14 -- tar cf - ~/.config/kube | tar xf - -C /tmp/bar_dir
"Delete pods and services with same names ""log-aggregator"" and ""auth""","kubectl delete pod,service log-aggregator auth"
Create a copy of cdn-service-pod changing all container images to postgres,kubectl debug cdn-service-pod --copy-to=debug-image-1 --set-image=*=postgres
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/notification-service"
Update pod 'proxy' with the label 'release' and the value 'v2.0',kubectl label pods proxy release=v2.0
Add a taint with key 'dedicated' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  dedicated=storage-node-13:PreferNoSchedule
Return snapshot of previous terminated nebula-navigator container logs from pod web-app-pod,kubectl logs -p -c nebula-navigator web-app-pod
Rename the context 'local-context' to 'client-1-context' in your kubeconfig file,kubectl config rename-context local-context client-1-context
Update a single-container pod's image version (tag) to v4,kubectl get pod api-service-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
Set deployment mydeployment's service account to kube-controller-manager,kubectl set serviceaccount deployment mydeployment kube-controller-manager
"Update pod 'foo' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods foo last-deployment='2023-03-15'
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=8181 --target-port=700000
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/web-app-pod
"Set a deployments centos container cpu limits to ""50m"" and memory to ""4Gi""","kubectl set resources deployment centos -c=nginx --limits=cpu=50m,memory=4Gi"
Create a deployment named db that runs the redis image with 4 replicas,kubectl create deployment db --image=redis --replicas=4
Set deployment scheduler-app-deployment's service account to kube-dns,kubectl set serviceaccount deployment scheduler-app-deployment kube-dns
Set deployment gateway-deployment's service account to prometheus,kubectl set serviceaccount deployment gateway-deployment prometheus
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=prod-cluster
Add a taint with key 'environment' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  environment=worker-node-3:PreferNoSchedule
Return snapshot logs from container proxy-service-deployment-1 of a deployment named mypod,kubectl logs deployment/proxy-service-deployment -c mypod-1
Copy :/tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp istio-system/cache-pod-5::/tmp/foo /etc/kubernetes
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/kube-system-config deployment/cache-cluster-deployment
"Get output from running 'jenkins-plugin-cli' command from the first pod of the deployment frontend-deployment, using the first container by default",kubectl exec deploy/frontend-deployment -- jenkins-plugin-cli
Set deployment notification-handler-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment notification-handler-deployment gitlab-runner
Roll back to daemonset revision 5,kubectl rollout undo daemonset/namespace-2 --to-revision=5
Embed certificate authority data for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --embed-certs --certificate-authority=~/.kube/e2e/kubernetes.ca.crt
"Get output from running the 'nginx' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- nginx
Create a copy of backend-pod changing all container images to postgres,kubectl debug backend-pod --copy-to=debug-image-web --set-image=*=postgres
Describe a pod,kubectl describe pods/monitoring-agent-pod-6
Add a taint with key 'workload' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  workload=backup-node-14:PreferNoSchedule
Describe a node,kubectl describe nodes prod-node-3.datacenter1.example.com
"Listen on port 8081 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8081:9090"
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name sandbox-site.co
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8081 8888
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-config deployment/database-deployment
"Listen on port 6379 locally, forwarding to 3000 in the pod",kubectl port-forward pod/cdn-service-pod 6379:3000
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=galaxy-cluster
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod 8088:8081
Create a job with a command,kubectl create job image-build-job --image=mongo -- mongo
Return snapshot of previous terminated rocket-ranger container logs from pod security-service-pod,kubectl logs -p -c rocket-ranger security-service-pod
Create a job with a command,kubectl create job batch-processing --image=golang -- go run hello.go
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-config-prod deployment/user-management-deployment
Copy ~/.config/kube local file to /tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube kube-proxy/web-app-pod-1:/tmp/bar
"Listen on port 8888 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8888:5000
Create a cron job with a command,"kubectl create cronjob database-maintenance --image=centos --schedule=""*/1 * * * *"" -- sleep 3600"
Remove from node 'storage-node-13' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes storage-node-13 workload:NoSchedule-
Set deployment payment-processor-deployment's service account to dashboard,kubectl set serviceaccount deployment payment-processor-deployment dashboard
"Get output from running 'geth version' command from the first pod of the service analytics-service, using the first container by default",kubectl exec svc/analytics-service -- geth version
"If the deployment named staging-app-rs's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/staging-app-rs
"Create a service for a pod security-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod security-service-pod --port=8082 --name=frontend
"Listen on port 5432 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5432:8081
Start a ubuntu pod and let the container expose port 8181,kubectl run hazelcast --image=ubuntu --port=8181
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod proxy-server-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-server-pod -c stardust-shuttle -i -t
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/log-aggregator-pod 8088:9090
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node testing-node-11 -p '{""spec"":{""someField"":""newValue""}'"
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""prod-apps"" API group",kubectl get deployments.v2.1.0.prod-apps -o yaml
"Delete pods and services with same names ""proxy"" and ""vpn""","kubectl delete pod,service proxy vpn"
Add to node 'app-node-6' a taint with key 'special' and no value,kubectl taint nodes app-node-6 special:NoSchedule
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=app-cluster
Add a taint with key 'zone' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  zone=kube-master-9:PreferNoSchedule
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json custom-label=my-custom-value
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node dev-node-4 -p $'spec:\n containers:\n- name: container-name\n  resources:\n    limits:\n      cpu: 200m'
Get output from stardust-shuttle from pod mypod,kubectl attach mypod -c stardust-shuttle
"Get output from running 'node' command from the first pod of the deployment user-management-deployment, using the first container by default",kubectl exec deploy/user-management-deployment -- node
"Create a cluster role named ""view"" with ResourceName specified",kubectl create clusterrole view --verb=get --resource=pods --resource-name=backup-service --resource-name=dashboard-ui
Create a new ClusterIP service named security-service-clusterip,kubectl create service clusterip security-service-clusterip --tcp=3306:9000
"Create a service for a replication controller identified by type and name specified in ""php-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f php-controller.yaml --port=8084 --target-port=909200
"Listen on port 8088 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8088:9090"
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/kube-system-config deployment/user-management-deployment
Begin streaming the logs of the time-machine container in pod monitoring-pod,kubectl logs -f -c time-machine monitoring-pod
"Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment nginx --port=5001 --target-port=801000
"Delete pods and services with same names ""frontend"" and ""cdn""","kubectl delete pod,service frontend cdn"
"If the deployment named backend-service-replicaset's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/backend-service-replicaset
"Delete pods and services with same names ""payment"" and ""media-stream""","kubectl delete pod,service payment media-stream"
Begin streaming the logs of the cyber-sleuth container in pod log-aggregator-pod,kubectl logs -f -c cyber-sleuth log-aggregator-pod
Add a taint with key 'hardware' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  hardware=app-node-6:PreferNoSchedule
"Update pod 'proxy' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy scaling-policy=auto-horizontal-scaling
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/analytics-platform-deployment -c payment-gateway-pod-1
"Listen on port 5000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 5000:5000"
Begin streaming the logs of the quantum-quark container in pod chat-app-pod,kubectl logs -f -c quantum-quark chat-app-pod
Create a deployment named loadbalancer that runs the mongo image with 5 replicas,kubectl create deployment loadbalancer --image=mongo --replicas=5
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/log-config deployment/database-deployment
Create a deployment with a command,kubectl create deployment proxy --image=redis -- redis-cli
Delete pods and services with label tier=frontend,"kubectl delete pods,services -l tier=frontend"
Update pod 'backend' with the label 'unhealthy' and the value 'true',kubectl label pods backend unhealthy=true
Get output from running the 'apk add curl' command in nano-bot from pod web-app-pod,kubectl exec web-app-pod -c nano-bot -- apk add curl
"Get output from running 'kafka-server-start /etc/kafka/server.properties' command from the first pod of the deployment notification-handler-deployment, using the first container by default",kubectl exec deploy/notification-handler-deployment -- kafka-server-start /etc/kafka/server.properties
"Create a cluster role named ""foo"" with ResourceName specified",kubectl create clusterrole foo --verb=patch --resource=configmaps --resource-name=payment-processor --resource-name=document-storage
Get output from stardust-shuttle from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c stardust-shuttle
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-name-config deployment/api-server-deployment
Add a taint with key 'datacenter' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  datacenter=edge-node-10:PreferNoSchedule
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json custom-label=my-custom-value
Update a single-container pod's image version (tag) to v4,kubectl get pod mypod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
"Listen on port 8088 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8088:3000
Create a cron job with a command,"kubectl create cronjob daily-report --image=golang --schedule=""*/1 * * * *"" -- go version"
Set deployment mydeployment's service account to kube-scheduler,kubectl set serviceaccount deployment mydeployment kube-scheduler
"Start a hazelcast pod and keep it in the foreground, don't restart it if it exits",kubectl run -i -t busybox --image=hazelcast/hazelcast --restart=Never
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/media-stream-pod
Update pod 'proxy-server' with the label 'env' and the value 'production',kubectl label pods proxy-server env=production
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json alert-email=alerts@example.com
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 8080 8000
Create a new config map named ui-config from an env file,kubectl create configmap ui-config --from-env-file=path/to/settings.env
Start a hazelcast pod and let the container expose port 9091,kubectl run hazelcast --image=hazelcast/hazelcast --port=9091
Start a centos pod and let the container expose port 9091,kubectl run hazelcast --image=centos --port=9091
"Start a jenkins pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=jenkins --overrides='{ ""apiVersion"": ""alpha-2.0"", ""spec"": { ... } }'"
Create a copy of email-service-pod adding a debug container and changing container images,"kubectl debug email-service-pod -it --copy-to=debug-image-1 --image=debian --set-image=mailer=mailer:latest,logger=logging-app:debug"
Create a job with a command,kubectl create job testing --image=php --
Create a new secret named jwt-secret from an env file,kubectl create secret generic jwt-secret --from-env-file=path/to/settings.env
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/proxy-server-pod 8088:8088
Return snapshot of previous terminated cosmic-container container logs from pod database-pod,kubectl logs -p -c cosmic-container database-pod
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8088 8000
Set the resource request and limits for all containers in mongo,"kubectl set resources deployment mongo --limits=cpu=200m,memory=512Mi --requests=cpu=200m,memory=512Mi"
Set deployment analytics-platform-deployment's service account to argocd,kubectl set serviceaccount deployment analytics-platform-deployment argocd
"Listen on port 6379 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 6379:8088
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""apps"" API group",kubectl get deployments.v1.0.0.apps -o json
"Listen on port 3000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 3000:8000
"Create a service for a replicated centos using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs centos --port=80 --target-port=808200
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/gateway-service"
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/frontend-service"
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=3306 --target-port=888800
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name governmental-demo.gov
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/logging-service"
Create a copy of media-stream-pod changing all container images to mysql,kubectl debug media-stream-pod --copy-to=debug-image-1 --set-image=*=mysql
Create a new LoadBalancer service named auth-service-lb,kubectl create service loadbalancer auth-service-lb --tcp=3306:8888
"Listen on port 8888 locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod 8888:8081
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod log-aggregator-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
"Set a deployments kafka container cpu limits to ""500m"" and memory to ""512Mi""","kubectl set resources deployment kafka -c=nginx --limits=cpu=500m,memory=512Mi"
Set only the server field on the staging-cluster cluster entry without touching other values,kubectl config set-cluster staging-cluster --server=https://1.2.3.4
"Create a service for a replication controller identified by type and name specified in ""centos-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f centos-controller.yaml --port=7000 --target-port=8000
Create a copy of media-stream-pod changing all container images to postgres,kubectl debug media-stream-pod --copy-to=debug-image-web --set-image=*=postgres
"Auto scale a deployment ""gateway"", with the number of pods between 7 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=7 --max=15
Embed certificate authority data for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --embed-certs --certificate-authority=~/.kube/edge-cluster/kubernetes.ca.crt
Create a copy of cdn-service-pod adding a debug container and attach to it,kubectl debug cdn-service-pod -it --image=busybox --copy-to=dgb-img
Get output from running the 'irb' command in time-machine from pod web-app-pod,kubectl exec web-app-pod -c time-machine -- irb
Get output from running the 'redis-cli' command in nano-bot from pod email-service-pod,kubectl exec email-service-pod -c nano-bot -- redis-cli
"Delete pods and services with same names ""gateway"" and ""proxy""","kubectl delete pod,service gateway proxy"
Delete the saas-admin user,kubectl config delete-user saas-admin
Unset namespace in user-a-context context,kubectl config unset contexts.user-a-context.namespace
"Get output from running the 'mysqld' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- mysqld
Begin streaming the logs of the quantum-quark container in pod log-aggregator-pod,kubectl logs -f -c quantum-quark log-aggregator-pod
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=app-cluster
Get output from running the 'jenkins-plugin-cli' command in warp-drive from pod proxy-service-pod,kubectl exec proxy-service-pod -c warp-drive -- jenkins-plugin-cli
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/cluster-alpha/kubernetes.ca.crt
Get output from time-machine from pod mypod,kubectl attach mypod -c time-machine
Update pod 'payment' with the label 'component' and the value 'web',kubectl label pods payment component=web
Return snapshot logs from container email-server-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/email-server-deployment -c proxy-service-pod-1
Create a job with a command,kubectl create job database-seeding-job --image=postgres -- postgres
Embed certificate authority data for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --embed-certs --certificate-authority=~/.kube/kube-cluster-1/kubernetes.ca.crt
"Create a service for a pod proxy-server-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod proxy-server-pod --port=8081 --name=frontend
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=moon-cluster
Get output from code-explorer from pod database-pod,kubectl attach database-pod -c code-explorer
"Get output from running the 'geth' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- geth
"Mark node ""k8s-node-1"" as unschedulable",kubectl cordon k8s-node-1
"Update pod 'analytics' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods analytics status=unhealthy
"Set a deployments postgres container cpu limits to ""10"" and memory to ""4Gi""","kubectl set resources deployment postgres -c=nginx --limits=cpu=10,memory=4Gi"
Create a new secret named jwt-secret from an env file,kubectl create secret generic jwt-secret --from-env-file=path/to/profiles.env
Add a taint with key 'hardware' on nodes having label environment=production,kubectl taint node -l environment=production  hardware=node-1:PreferNoSchedule
"Listen on port 8000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/payment-service 8000:https
List resource information in custom columns,"kubectl get pod security-service-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
"Check to see if I can get the job named ""load-testing-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/load-testing-job -n kube-node-lease
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/e-commerce-pod 8000:8088
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""experimental-apps"" API group",kubectl get deployments.alpha-2.0.experimental-apps -o yaml
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-config-dev deployment/log-aggregator-deployment
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""external-apps"" API group",kubectl get deployments.v1.1.0.external-apps -o json
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 6379 8081
Add a taint with key 'hardware' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  hardware=k8s-node-1:PreferNoSchedule
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/api-service-pod 9090:8000
"If the deployment named backend-service-replicaset's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/backend-service-replicaset
Display only the most recent 12 lines of output in pod mypod,kubectl logs --tail=12 mypod
Reconcile RBAC resources from a file,kubectl auth reconcile -f my-rbac-rules.yaml
"Listen on port 8081 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8081:8888
Return snapshot of previous terminated cosmic-container container logs from pod mypod,kubectl logs -p -c cosmic-container mypod
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/kube-system-config deployment/email-server-deployment
"Listen on port 8888 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8888:5432"
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""internal-apps"" API group",kubectl get deployments.v1.1.1.internal-apps -o yaml
"Start a centos pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=centos --overrides='{ ""apiVersion"": ""beta-1.0"", ""spec"": { ... } }'"
Begin streaming the logs of the mycontainer container in pod gateway-pod,kubectl logs -f -c mycontainer gateway-pod
"Update pod 'backend' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend release-notes='https://example.com/release-notes/v2.5.1'
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=cluster-alpha
Create a deployment with a command,kubectl create deployment wordpress --image=amazonlinux -- yum install -y aws-cli
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=app-cluster
"Listen on port 5432 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 5432:8080"
"If the deployment named prod-app-rs's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/prod-app-rs
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/backend-pod 3000:8081
"Print result (in yaml format) of updating nginx container image from local file, without hitting the server",kubectl set image -f path/to/file.yaml golang=golang:1.17 --local -o yaml
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=e2e
Start a confluentinc/cp-kafka pod and let the container expose port 7000,kubectl run hazelcast --image=confluentinc/cp-kafka --port=7000
Create a copy of proxy-service-pod changing all container images to wordpress,kubectl debug proxy-service-pod --copy-to=my-custom-dbg --set-image=*=wordpress
Embed certificate authority data for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --embed-certs --certificate-authority=~/.kube/sun-cluster/kubernetes.ca.crt
Get output from running the 'wp' command in cosmic-container from pod web-app-pod,kubectl exec web-app-pod -c cosmic-container -- wp
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8888 3000
Begin streaming the logs of the lunar-launcher container in pod chat-app-pod,kubectl logs -f -c lunar-launcher chat-app-pod
"Auto scale a replication controller ""analytics"", with the number of pods between 1 and 7, target CPU utilization at 90%",kubectl autoscale rc analytics --max=7 --cpu-percent=90
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""legacy-apps"" API group",kubectl get deployments.rc-1.1.0.legacy-apps -o json
Replace a pod using the data in settings.json,kubectl replace -f ./settings.json
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 5432 5432
Add a taint with key 'cpu-type' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  cpu-type=kube-master-9:PreferNoSchedule
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.cluster-1-context.cluster my-k8s-cluster
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp rook-ceph/cache-pod-5::/tmp/foo :/tmp/bar
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/kube-system-config deployment/payment-processor-deployment
Scale stateful set named 'web' to 7,kubectl scale --replicas=7 statefulset/web
"Listen on port 8088 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8088:5000
Display only the most recent 31 lines of output in pod security-service-pod,kubectl logs --tail=31 security-service-pod
"Check to see if I can get the job named ""virus-scan-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/virus-scan-job -n testing
"Update pod 'gateway' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway security-scan-status=pass
Replace a pod using the data in parameters.yaml,kubectl replace -f ./parameters.yaml
Create a copy of mypod adding a debug container and changing container images,"kubectl debug mypod -it --copy-to=debug-image-api --image=debian --set-image=scheduler=my-scheduler:1.0,logger=logging-app:debug"
Create a job with a command,kubectl create job testing --image=ethereum/client-go -- geth
Begin streaming the logs of the warp-drive container in pod payment-gateway-pod,kubectl logs -f -c warp-drive payment-gateway-pod
"Update pod 'proxy' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy release-notes='https://example.com/release-notes/v2.5.1'
Add to node 'app-node-6' a taint with key 'cpu-type' and no value,kubectl taint nodes app-node-6 cpu-type:NoSchedule
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=star-cluster
Set deployment analytics-platform-deployment's service account to dashboard,kubectl set serviceaccount deployment analytics-platform-deployment dashboard
Get output from running the 'ash' command in stardust-shuttle from pod mypod,kubectl exec mypod -c stardust-shuttle -- ash
"Delete pods and services with same names ""media-stream"" and ""cdn""","kubectl delete pod,service media-stream cdn"
"Auto scale a replication controller ""cdn"", with the number of pods between 1 and 6, target CPU utilization at 40%",kubectl autoscale rc cdn --max=6 --cpu-percent=40
Add a taint with key 'cpu-type' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  cpu-type=dev-node-4:PreferNoSchedule
"Create a service for an node deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment node --port=80 --target-port=801000
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=8080:9092
Show logs from a kubelet with an expired serving certificate,kubectl logs --insecure-skip-tls-verify-backend nginx
Get the password for the galaxy-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""galaxy-cluster"")].user.password}'"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8081 8081
"Delete pods and services with same names ""chat-app"" and ""auth""","kubectl delete pod,service chat-app auth"
"Update pod 'gateway' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods gateway team='frontend-team'
Return snapshot of previous terminated cyber-sleuth container logs from pod analytics-pod,kubectl logs -p -c cyber-sleuth analytics-pod
Add a taint with key 'special' on nodes having label component=proxy,kubectl taint node -l component=proxy  special=testing-node-11:PreferNoSchedule
Remove from node 'k8s-node-1' all the taints with key 'cpu-type',kubectl taint nodes k8s-node-1 cpu-type-
Get output from running the 'elasticsearch' command in warp-drive from pod database-pod,kubectl exec database-pod -c warp-drive -- elasticsearch
Get output from running the 'python' command in stardust-shuttle from pod auth-service-pod,kubectl exec auth-service-pod -c stardust-shuttle -- python
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/log-config deployment/mydeployment
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-settings deployment/backend-microservice-deployment
"Listen on port 8080 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8080:5000"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 5000 3000
"Delete pods and services with same names ""cdn"" and ""proxy""","kubectl delete pod,service cdn proxy"
"Update pod 'media-stream' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods media-stream last-deployment='2023-03-15'
Add a taint with key 'disktype' on nodes having label component=proxy,kubectl taint node -l component=proxy  disktype=node-1:PreferNoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node prod-node-5 -p $'spec:\n someField: newValue'
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/log-rotation-job -n kube-node-lease
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/app-config-prod deployment/search-engine-deployment
Create a new ExternalName service named external-cloud-storage-service,kubectl create service externalname external-cloud-storage-service --external-name education-edu.edu
List a single pod in YAML output format,kubectl get -o yaml pod vpn-service-pod
Start a amazonlinux pod and let the container expose port 9000,kubectl run hazelcast --image=amazonlinux --port=9000
Edit the data in config.json in JSON then create the resource using the edited data,kubectl create -f config.json --edit -o json
Begin streaming the logs of the nebula-navigator container in pod api-service-pod,kubectl logs -f -c nebula-navigator api-service-pod
Add a taint with key 'zone' on nodes having label environment=production,kubectl taint node -l environment=production  zone=prod-node-5:PreferNoSchedule
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""third-party-apps"" API group",kubectl get deployments.v1.1.1.third-party-apps -o yaml
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c mycontainer -i -t
Update pod 'proxy' with the label 'release' and the value 'v1.0',kubectl label pods proxy release=v1.0
"Get output from running the 'mongo' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- mongo
Update deployment 'analytics-platform-deployment' with a new environment variable,kubectl set env deployment/analytics-platform-deployment ENV=prod
Scale a replica set named 'payment-service-rs' to 1,kubectl scale --replicas=1 rs/payment-service-rs
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json env=staging
Return snapshot logs from container api-server-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/api-server-deployment -c vpn-service-pod-1
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod 3000:8081
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""backup-apps"" API group",kubectl get deployments.feature-branch-2.3.0.backup-apps -o yaml
"Get output from running the 'wp' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- wp
Set deployment load-balancer-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment load-balancer-deployment kube-scheduler
"Create a service for a pod security-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod security-service-pod --port=5001 --name=frontend
Create a deployment named prometheus that runs the ubuntu image with 7 replicas,kubectl create deployment prometheus --image=ubuntu --replicas=7
"Delete pods and services with same names ""database"" and ""backend""","kubectl delete pod,service database backend"
Update all deployments' and rc's nginx container's image to 'node:14.17.3',"kubectl set image deployments,rc node=node:14.17.3 --all"
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json git-repo='https://github.com/example/my-app'
Add a taint with key 'environment' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  environment=backup-node-14:PreferNoSchedule
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir logging/metrics-exporter-pod-10::/tmp/bar
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/settings/file2.txt
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach gateway-pod -c stardust-shuttle -i -t
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named mypod,kubectl logs deployment/scheduler-app-deployment -c mypod-1
"Listen on port 8888 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/payment-service 8888:https
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/cdn-service-pod 8000:8080
"Listen on port 3000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 3000:5432
Get output from running the 'postgres' command in code-explorer from pod chat-app-pod,kubectl exec chat-app-pod -c code-explorer -- postgres
Create a new LoadBalancer service named e-commerce-lb,kubectl create service loadbalancer e-commerce-lb --tcp=8089:8888
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/kube-system-config deployment/proxy-service-deployment
"Update pod 'auth' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth owner='alice smith'
Start a wordpress pod and let the container expose port 8181,kubectl run hazelcast --image=wordpress --port=8181
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.dev-context.cluster sun-cluster
Create a deployment named logging that runs the redis image and expose port 8443,kubectl create deployment logging --image=redis --port=8443
Create a new secret named ldap-credentials-secret with keys for each file in folder bar,kubectl create secret generic ldap-credentials-secret --from-file=path/to/profiles
Start a confluentinc/cp-kafka pod and let the container expose port 8443,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8443
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""backup-apps"" API group",kubectl get deployments.v1.1.1.backup-apps -o json
Return snapshot of previous terminated quantum-quark container logs from pod proxy-server-pod,kubectl logs -p -c quantum-quark proxy-server-pod
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=conf=/path/to/configs/file1.txt --from-file=data=/path/to/profiles/file2.txt
Get output from quantum-quark from pod email-service-pod,kubectl attach email-service-pod -c quantum-quark
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/chat-app-pod
Update pod 'auth' with the label 'release' and the value 'v1.0',kubectl label pods auth release=v1.0
"Listen on port 8000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8000:8081"
"Create a cluster role named ""custom_role"" with ResourceName specified",kubectl create clusterrole custom_role --verb=get --resource=pods --resource-name=database-master --resource-name=keycloak-server
Get output from running the 'psql' command in code-explorer from pod api-service-pod,kubectl exec api-service-pod -c code-explorer -- psql
Get output from running the 'kafka-console-producer --broker-list localhost:9092 --topic test' command in rocket-ranger from pod security-service-pod,kubectl exec security-service-pod -c rocket-ranger -- kafka-console-producer --broker-list localhost:9092 --topic test
Get output from running the 'python' command in cyber-sleuth from pod monitoring-pod,kubectl exec monitoring-pod -c cyber-sleuth -- python
Show metrics for the pods defined by label feature=feature-xyz,kubectl top pod -l feature=feature-xyz
Add a taint with key 'app' on nodes having label environment=production,kubectl taint node -l environment=production  app=db-node-7:PreferNoSchedule
Create a job with a command,kubectl create job database-seeding-job --image=mongo -- mongo --version
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/cdn-service-pod 8000:8088
"Wait for the pod ""api-service-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/api-service-pod
"Listen on a random port locally, forwarding to 9090 in the pod",kubectl port-forward pod/log-aggregator-pod :9090
Add a taint with key 'zone' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  zone=node-1:PreferNoSchedule
Delete the context for the user-a-context cluster,kubectl config delete-context user-a-context
Create a deployment named prometheus that runs the golang image and expose port 8181,kubectl create deployment prometheus --image=golang --port=8181
Display only the most recent 3 lines of output in pod database-pod,kubectl logs --tail=3 database-pod
"Listen on port 8081 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8081:8081
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/cache-warming-job -n kube-node-lease
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/backend-pod 8088:8081
Delete the context for the edge-context cluster,kubectl config delete-context edge-context
"Update pod 'payment' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment scaling-policy=auto-horizontal-scaling
"Listen on port 8888 locally, forwarding to 8081 in the pod",kubectl port-forward pod/log-aggregator-pod 8888:8081
Create a new ExternalName service named external-metrics-service,kubectl create service externalname external-metrics-service --external-name education-edu.edu
Create a new ClusterIP service named ldap-service-clusterip,kubectl create service clusterip ldap-service-clusterip --tcp=8089:9091
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.cluster-2-context.cluster galaxy-cluster
Add a taint with key 'zone' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  zone=storage-node-13:PreferNoSchedule
"Run a proxy to the Kubernetes API server on port 9000, serving static content from ./local/www/",kubectl proxy --port=9000 --www=./local/www/
"Listen on port 8888 locally, forwarding to 8081 in the pod",kubectl port-forward pod/cdn-service-pod 8888:8081
"Update pod 'auth' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth env=staging
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=8088:8888
Create a new config map named app-name-config from the key=value pairs in the file,kubectl create configmap app-name-config --from-file=path/to/configs
"Get output from running 'wp' command from the first pod of the service api-service, using the first container by default",kubectl exec svc/api-service -- wp
"Listen on port 5000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5000:8000
"Create a cluster role binding for user1, user2, and group1 using the view cluster role",kubectl create clusterrolebinding view --clusterrole=view --user=user1 --user=user2 --group=group1
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/notification-service"
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""apps"" API group",kubectl get deployments.beta-1.0.apps -o json
Return snapshot logs from container payment-processor-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/payment-processor-deployment -c log-aggregator-pod-1
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""web-apps"" API group",kubectl get deployments.v1.1.1.web-apps -o yaml
"Scale a resource identified by type and name specified in ""pod.json"" to 1",kubectl scale --replicas=1 -f pod.json
"Listen on port 8000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod 8000:5000
Create a new config map named namespace-config based on folder configurations,kubectl create configmap namespace-config --from-file=path/to/configurations
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-config deployment/analytics-platform-deployment
"Set only the ""client-key"" field on the ""api-user"" # entry, without touching other values",kubectl config set-credentials api-user --client-key=~/.kube/admin.key
"Set a deployments centos container cpu limits to ""50m"" and memory to ""256Mi""","kubectl set resources deployment centos -c=nginx --limits=cpu=50m,memory=256Mi"
"Get output from running the 'elasticsearch' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- elasticsearch
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/mypod 9090 8888
Update pod 'api' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods api description-
Update deployment 'database-deployment' with a new environment variable,kubectl set env deployment/database-deployment DEBUG=true
Create a new secret named jwt-secret using a combination of a file and a literal,kubectl create secret generic jwt-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
Create a new secret named azure-storage-secret with keys for each file in folder bar,kubectl create secret generic azure-storage-secret --from-file=path/to/properties
Remove from node 'node-1' all the taints with key 'datacenter',kubectl taint nodes node-1 datacenter-
Begin streaming the logs of the rocket-ranger container in pod web-app-pod,kubectl logs -f -c rocket-ranger web-app-pod
Create a new LoadBalancer service named frontend-lb,kubectl create service loadbalancer frontend-lb --tcp=7000:9091
Add to node 'kube-master-9' a taint with key 'zone' and no value,kubectl taint nodes kube-master-9 zone:NoSchedule
Display only the most recent 5 lines of output in pod web-app-pod,kubectl logs --tail=5 web-app-pod
Create a copy of monitoring-pod changing all container images to mysql,kubectl debug monitoring-pod --copy-to=debug-image-memcached --set-image=*=mysql
Set deployment load-balancer-deployment's service account to cert-manager,kubectl set serviceaccount deployment load-balancer-deployment cert-manager
"Print the result (in YAML format) of updating rolebinding subjects from a local, without hitting the server",kubectl create rolebinding admin --role=admin --user=admin -o yaml --dry-run=client | kubectl set subject --local -f - --user=foo -o yaml
"Delete pods and services with same names ""log-aggregator"" and ""chat-app""","kubectl delete pod,service log-aggregator chat-app"
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/chat-app-pod 6379:8081
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=on-prem-cluster
Add to node 'web-node-8' a taint with key 'app' and no value,kubectl taint nodes web-node-8 app:NoSchedule
Create a deployment named prometheus that runs the amazonlinux image and expose port 9091,kubectl create deployment prometheus --image=amazonlinux --port=9091
Create a new ClusterIP service named notification-service-clusterip,kubectl create service clusterip notification-service-clusterip --tcp=9092:9092
"Get output from running 'php --version' command from the first pod of the deployment log-aggregator-deployment, using the first container by default",kubectl exec deploy/log-aggregator-deployment -- php --version
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=galaxy-cluster
Create a deployment named scheduler that runs the amazonlinux image with 2 replicas,kubectl create deployment scheduler --image=amazonlinux --replicas=2
"Update pod 'email' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods email security-scan-status='pass'
Get output from running the 'wp' command in cosmic-container from pod database-pod,kubectl exec database-pod -c cosmic-container -- wp
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/mypod 8081:8081
Create a new secret named oauth-secret from an env file,kubectl create secret generic oauth-secret --from-env-file=path/to/settings.env
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/frontend-pod
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/api-service-pod 3000:8000
"Listen on port 5000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5000:3000
"Get output from running the 'sleep 3600' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- sleep 3600
"Update pod 'proxy' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods proxy SLA='99.9% uptime'
Add a taint with key 'disktype' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  disktype=node-2:PreferNoSchedule
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/backend-microservice-deployment -c auth-service-pod-1
Create a copy of mypod adding a debug container and changing container images,"kubectl debug mypod -it --copy-to=my-debugger --image=debian --set-image=database=mysql:5.7,scheduler=my-scheduler:1.0"
Copy /tmp/foo local file to :/tmp/bar in a remote pod in a specific container,kubectl cp /tmp/foo ingress-controller-pod-8::/tmp/bar -c load-balancer
Get output from running the 'mongo --version' command in astro-container from pod email-service-pod,kubectl exec email-service-pod -c astro-container -- mongo --version
"Enable the OpenID Connect auth provider for the ""dev-user"" entry with additional args",kubectl config set-credentials dev-user --auth-provider=oidc --auth-provider-arg=client-id=foo --auth-provider-arg=client-secret=bar
"Set a deployments python container cpu limits to ""3"" and memory to ""1Gi""","kubectl set resources deployment python -c=nginx --limits=cpu=3,memory=1Gi"
"If the deployment named app-v2-replicaset's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/app-v2-replicaset
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/env-vars deployment/web-app-deployment
"List all allowed actions in namespace ""monitoring""",kubectl auth can-i --list --namespace=monitoring
"Get output from running the 'go' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- go
Create a new secret named ssl-key-secret with keys for each file in folder bar,kubectl create secret generic ssl-key-secret --from-file=path/to/settings
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""my-apps"" API group",kubectl get deployments.dev-2.2.0.my-apps -o yaml
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named database-pod,kubectl logs deployment/analytics-platform-deployment -c database-pod-1
Copy ~/.config/kube local file to /etc/kubernetes in a remote pod in namespace,kubectl cp ~/.config/kube kube-dns/admin-dashboard-pod-16:/etc/kubernetes
Switch to raw terminal mode; sends stdin to 'bash' in cyber-sleuth from pod log-aggregator-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach log-aggregator-pod -c cyber-sleuth -i -t
"Update pod 'cdn' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn monitoring-tool=Prometheus
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/ui-config deployment/backend-microservice-deployment
Begin streaming the logs of the code-explorer container in pod proxy-server-pod,kubectl logs -f -c code-explorer proxy-server-pod
"Listen on port 8888 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8888:8888
Add a taint with key 'special' on nodes having label myLabel,kubectl taint node -l myLabel  special=storage-node-13:PreferNoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node node-1 -p '{""stringData"":{""password"":""new-password""}'"
Create a job with a command,kubectl create job backup --image=wordpress -- mysql --version
"Listen on port 5000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/security-service-pod 5000:5000
Update deployment 'web-app-deployment' with a new environment variable,kubectl set env deployment/web-app-deployment REDIS_HOST=redis-server
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""custom-apps"" API group",kubectl get deployments.alpha-2.0.custom-apps -o json
"Delete pods and services with same names ""api"" and ""auth""","kubectl delete pod,service api auth"
"If the deployment named frontend-rs's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/frontend-rs
Create a new ExternalName service named external-database-service,kubectl create service externalname external-database-service --external-name mockup-cloud.cloud
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node worker-node-3 -p '{""data"":{""key"":""new-value""}'"
Create a new ExternalName service named external-caching-service,kubectl create service externalname external-caching-service --external-name bar.com
Set only the server field on the prod-cluster cluster entry without touching other values,kubectl config set-cluster prod-cluster --server=https://1.2.3.4
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/email-service"
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-name-config deployment/analytics-platform-deployment
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 9090 8000
Update pod 'cdn' with the label 'tier' and the value 'backend',kubectl label pods cdn tier=backend
Get output from running the 'geth' command in code-explorer from pod analytics-pod,kubectl exec analytics-pod -c code-explorer -- geth
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=settings=/path/to/options/file1.txt --from-file=key2=/path/to/parameters/file2.txt
Begin streaming the logs of the quantum-quark container in pod e-commerce-pod,kubectl logs -f -c quantum-quark e-commerce-pod
"Set a deployments postgres container cpu limits to ""500m"" and memory to ""128Mi""","kubectl set resources deployment postgres -c=nginx --limits=cpu=500m,memory=128Mi"
"Get output from running 'wp' command from the first pod of the service user-service, using the first container by default",kubectl exec svc/user-service -- wp
Create a new config map named namespace-config from the key=value pairs in the file,kubectl create configmap namespace-config --from-file=path/to/options
Create a new config map named app-config based on folder configs,kubectl create configmap app-config --from-file=path/to/configs
"Listen on port 8081 locally, forwarding to 6379 in the pod",kubectl port-forward pod/proxy-server-pod 8081:6379
"Set only the ""client-key"" field on the ""app-service"" # entry, without touching other values",kubectl config set-credentials app-service --client-key=~/.kube/admin.key
"Update pod 'proxy-server' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods proxy-server backup-strategy='daily-backups'
Set deployment mydeployment's service account to istio,kubectl set serviceaccount deployment mydeployment istio
"Listen on port 6379 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 6379:8088"
Add a taint with key 'cpu-type' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  cpu-type=dev-node-4:PreferNoSchedule
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""extensions"" API group",kubectl get deployments.v2.0.0.extensions -o yaml
"Delete pods and services with same names ""proxy"" and ""backend""","kubectl delete pod,service proxy backend"
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.cluster-2-context.cluster web-cluster
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/log-aggregator-deployment -c frontend-pod-1
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/security-service-pod
Begin streaming the logs of the astro-container container in pod auth-service-pod,kubectl logs -f -c astro-container auth-service-pod
Create a new secret named my-secret from an env file,kubectl create secret generic my-secret --from-env-file=path/to/profiles.env
"Set a deployments node container cpu limits to ""5"" and memory to ""64Mi""","kubectl set resources deployment node -c=nginx --limits=cpu=5,memory=64Mi"
Update pod 'database' with the label 'component' and the value 'worker',kubectl label pods database component=worker
"Listen on port 8888 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8888:8888"
"Create a cluster role named ""default_role"" with ResourceName specified",kubectl create clusterrole default_role --verb=get --resource=services --resource-name=mail-server --resource-name=log-aggregator
Add a taint with key 'dedicated' on nodes having label role=database,kubectl taint node -l role=database  dedicated=node-2:PreferNoSchedule
Update deployment 'load-balancer-deployment' with a new environment variable,kubectl set env deployment/load-balancer-deployment CACHE_SIZE=64MB
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/authentication-service-deployment SMTP_USERNAME=your-username -o yaml
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=kube-cluster-2
Return snapshot of previous terminated astro-container container logs from pod api-service-pod,kubectl logs -p -c astro-container api-service-pod
Create a new secret named monitoring-credentials-secret with specified keys instead of names on disk,kubectl create secret generic monitoring-credentials-secret --from-file=ssh-privatekey=path/to/id_rsa --from-file=ssh-publickey=path/to/id_rsa.pub
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8082 --target-port=637900
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 3001,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=3001
Return snapshot logs from container api-server-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/api-server-deployment -c proxy-service-pod-1
Create a new namespace named development,kubectl create namespace development
Add a taint with key 'hardware' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  hardware=prod-node-5:PreferNoSchedule
Update image of all containers of daemonset services to 'ruby:3.0.2',kubectl set image daemonset services *=ruby:3.0.2
Return snapshot of previous terminated nebula-navigator container logs from pod vpn-service-pod,kubectl logs -p -c nebula-navigator vpn-service-pod
Get output from running the 'irb' command in time-machine from pod analytics-pod,kubectl exec analytics-pod -c time-machine -- irb
Update a cluster role binding for metrics-server,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:metrics-server
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/monitoring-config deployment/load-balancer-deployment
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 9090 8081
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""backup-apps"" API group",kubectl get deployments.v1.1.1.backup-apps -o yaml
Return snapshot of previous terminated stardust-shuttle container logs from pod monitoring-pod,kubectl logs -p -c stardust-shuttle monitoring-pod
Get output from running the 'irb' command in stardust-shuttle from pod api-service-pod,kubectl exec api-service-pod -c stardust-shuttle -- irb
"Check to see if I can get the job named ""cron-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/cron-job -n kube-dns
Create a copy of database-pod changing all container images to hazelcast/hazelcast,kubectl debug database-pod --copy-to=debug-image-1 --set-image=*=hazelcast/hazelcast
"List deployments in JSON output format, in the ""custom-version"" version of the ""alpha-apps"" API group",kubectl get deployments.custom-version.alpha-apps -o json
Return snapshot logs from container notification-handler-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/notification-handler-deployment -c api-service-pod-1
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-database-service
Watch the rollout status of a deployment,kubectl rollout status deployment/prod
"Create a cluster role named ""reader"" with ResourceName specified",kubectl create clusterrole reader --verb=proxy --resource=services --resource-name=cdn-proxy --resource-name=file-uploader
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=kube-cluster-1
Scale a replica set named 'baz' to 1,kubectl scale --replicas=1 rs/baz
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp argocd/file-server-pod-14:~/.config/kube :/tmp/bar
Return snapshot of previous terminated ruby container logs from pod cdn-service-pod,kubectl logs -p -c ruby cdn-service-pod
Deny CSR 'csr-api-server-2',kubectl certificate deny csr-api-server-2
"Listen on port 5000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/user-service 5000:https
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-settings deployment/mydeployment
Remove from node 'node-1' all the taints with key 'zone',kubectl taint nodes node-1 zone-
Describe a node,kubectl describe nodes security-node-13.secure-cluster.local
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""beta-apps"" API group",kubectl get deployments.dev-2.2.0.beta-apps -o json
Start the docker.elastic.co/elasticsearch/elasticsearch pod using a different command and custom arguments,kubectl run nginx --image=docker.elastic.co/elasticsearch/elasticsearch --command -- <cmd> <arg1> ... <argN>
Scale a replica set named 'foo' to 1,kubectl scale --replicas=1 rs/foo
"Listen on port 5432 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5432:8088
Update deployment 'load-balancer-deployment' with a new environment variable,kubectl set env deployment/load-balancer-deployment LOG_LEVEL=info
Rename the context 'local-context' to 'new-context' in your kubeconfig file,kubectl config rename-context local-context new-context
"Create a cluster role name ""reader"" with NonResourceURL specified","kubectl create clusterrole ""reader"" --verb=watch --non-resource-url=/apis/*"
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=on-prem-cluster
"Listen on port 8081 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8081:5432"
"If the deployment named frontend-rs's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/frontend-rs
Update image of all containers of daemonset prod to 'alpine:3.14',kubectl set image daemonset prod *=alpine:3.14
Start a ruby pod and let the container expose port 8088,kubectl run hazelcast --image=ruby --port=8088
"Set basic auth for the ""operator"" entry",kubectl config set-credentials operator --username=admin --password=uXFGweU9l35qcif
"Set a deployments ubuntu container cpu limits to ""1"" and memory to ""2Gi""","kubectl set resources deployment ubuntu -c=nginx --limits=cpu=1,memory=2Gi"
"Update pod 'security' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security scaling-policy=auto-horizontal-scaling
"Update pod 'frontend' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend description='Web server for marketing site'
Create a new secret named git-credentials-secret with keys for each file in folder bar,kubectl create secret generic git-credentials-secret --from-file=path/to/configurations
Update pod 'media-stream' with the label 'env' and the value 'development',kubectl label pods media-stream env=development
"Get output from running the 'nginx' command from pod mypod, using the first container by default",kubectl exec mypod -- nginx
"Listen on port 3000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 3000:8081
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=9092 --target-port=8000
"Update pod 'chat-app' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app owner='alice smith'
Create a new ClusterIP service named log-service-clusterip,kubectl create service clusterip log-service-clusterip --tcp=8010:8088
Add a taint with key 'datacenter' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  datacenter=storage-node-13:PreferNoSchedule
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""custom-apps"" API group",kubectl get deployments.v1.1.0.custom-apps -o json
Remove from node 'node-2' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes node-2 hardware:NoExecute-
"Update pod 'database' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods database compliance-level='PCI-DSS'
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in a specific container,kubectl cp /tmp/foo_dir worker-pod-4:/tmp/bar -c payment-gateway
Rename the context 'staging-context' to 'admin-context' in your kubeconfig file,kubectl config rename-context staging-context admin-context
"Auto scale a replication controller ""backend"", with the number of pods between 1 and 2, target CPU utilization at 60%",kubectl autoscale rc backend --max=2 --cpu-percent=60
Create a new config map named api-config from the key=value pairs in the file,kubectl create configmap api-config --from-file=path/to/preferences
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/e-commerce-pod 5000:6379
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json env=staging
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/payment-service"
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod cdn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach cdn-service-pod -c time-machine -i -t
"Update pod 'security' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security backup-strategy='daily backups'
"Update pod 'frontend' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend app-version=2.5.1
"Set a deployments wordpress container cpu limits to ""100m"" and memory to ""256Mi""","kubectl set resources deployment wordpress -c=nginx --limits=cpu=100m,memory=256Mi"
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""my-apps"" API group",kubectl get deployments.hotfix-1.1.2.my-apps -o json
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""mobile-apps"" API group",kubectl get deployments.v2.0.0.mobile-apps -o yaml
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod frontend-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
Get output from running the 'geth version' command in nano-bot from pod backend-pod,kubectl exec backend-pod -c nano-bot -- geth version
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/loadbalancer-service"
Create a new secret named gcp-service-account-secret from an env file,kubectl create secret generic gcp-service-account-secret --from-env-file=path/to/configurations.env
"Start a node pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=node --overrides='{ ""apiVersion"": ""beta-1.0"", ""spec"": { ... } }'"
Update pod 'analytics' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods analytics description-
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod frontend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach frontend-pod -c warp-drive -i -t
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=moon-cluster
Create a job with a command,kubectl create job batch-processing --image=node -- node
Create a new secret named monitoring-credentials-secret from an env file,kubectl create secret generic monitoring-credentials-secret --from-env-file=path/to/data.env
"Check to see if I can get the job named ""image-processing-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/image-processing-job -n cert-manager
"Listen on port 8088 locally, forwarding to 5000 in the pod",kubectl port-forward pod/analytics-pod 8088:5000
Begin streaming the logs of the cosmic-container container in pod vpn-service-pod,kubectl logs -f -c cosmic-container vpn-service-pod
"Listen on port 8080 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8080:3000
Create a deployment named sonarqube that runs the alpine image with 4 replicas,kubectl create deployment sonarqube --image=alpine --replicas=4
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/frontend-pod 3000:8081
Get output from running the 'mongo --version' command in warp-drive from pod backend-pod,kubectl exec backend-pod -c warp-drive -- mongo --version
Get output from running the 'python' command in nebula-navigator from pod database-pod,kubectl exec database-pod -c nebula-navigator -- python
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""api-v1"" API group",kubectl get deployments.dev-2.2.0.api-v1 -o yaml
Return snapshot logs from container web-app-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/web-app-deployment -c cdn-service-pod-1
Get output from running the 'irb' command in lunar-launcher from pod vpn-service-pod,kubectl exec vpn-service-pod -c lunar-launcher -- irb
"Get output from running the 'pip --version' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- pip --version
"Update pod 'api' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods api app-version='2.5.1'
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.client-1-context.cluster cluster-gamma
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/gateway-pod
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.cluster-1-context.cluster cluster-beta
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8081 8088
Scale a replica set named 'prod-app-rs' to 1,kubectl scale --replicas=1 rs/prod-app-rs
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/search-service"
"Create a single ingress called 'api-gateway-ingress' that directs requests to foo.com/bar to svc # svc1:8080 with a tls secret ""my-cert""","kubectl create ingress api-gateway-ingress --rule=""foo.com/bar=svc1:8080,tls=my-cert"""
Copy /tmp/foo local file to /tmp/bar in a remote pod in a specific container,kubectl cp /tmp/foo api-server-pod-3:/tmp/bar -c file-server
Add a taint with key 'special' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  special=monitoring-node-15:PreferNoSchedule
Create a new secret named my-secret with keys for each file in folder bar,kubectl create secret generic my-secret --from-file=path/to/parameters
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=conf=/path/to/configs/file1.txt --from-file=data=/path/to/options/file2.txt
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/env-vars deployment/analytics-platform-deployment
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=7000 --target-port=808800
Get output from running the 'ash' command in warp-drive from pod e-commerce-pod,kubectl exec e-commerce-pod -c warp-drive -- ash
"List deployments in YAML output format, in the ""custom-version"" version of the ""internal-apps"" API group",kubectl get deployments.custom-version.internal-apps -o yaml
Set deployment scheduler-app-deployment's service account to flux,kubectl set serviceaccount deployment scheduler-app-deployment flux
"Listen on port 5000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5000:8000
Get the documentation of a specific field of a resource,kubectl explain resource=pods.status.serviceName
"Update pod 'payment' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods payment status=unhealthy
Create a deployment with a command,kubectl create deployment nats --image=node -- node
"Embed client certificate data in the ""deploy-bot"" entry",kubectl config set-credentials deploy-bot --client-certificate=~/.kube/admin.crt --embed-certs=true
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.team-beta-context.cluster cluster-beta
Create a job with a command,kubectl create job batch-processing --image=centos -- bash
Add a taint with key 'dedicated' on nodes having label release=beta,kubectl taint node -l release=beta  dedicated=db-node-7:PreferNoSchedule
"Update pod 'security' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security alert-email=alerts@example.com
"Listen on port 8080 locally, forwarding to 5000 in the pod",kubectl port-forward pod/analytics-pod 8080:5000
Create a priority class named low-priority,"kubectl create priorityclass low-priority --value=10 --description=""Minimal resource allocation, lowest priority"""
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.service-account-context.cluster kube-cluster-1
Create a new ExternalName service named external-dns-service,kubectl create service externalname external-dns-service --external-name sandbox-site.co
Set deployment log-aggregator-deployment's service account to kube-proxy,kubectl set serviceaccount deployment log-aggregator-deployment kube-proxy
"Listen on port 8000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/backend-pod 8000:8000
"Listen on port 5000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 5000:8088"
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod vpn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach vpn-service-pod -c quantum-quark -i -t
"Listen on port 8088 locally, forwarding to 8081 in the pod",kubectl port-forward pod/mypod 8088:8081
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=8089 --target-port=300100
Add a taint with key 'zone' on nodes having label release=beta,kubectl taint node -l release=beta  zone=storage-node-13:PreferNoSchedule
Create a job with a command,kubectl create job cleanup --image=golang -- go version
"Update pod 'security' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods security app-version='2.5.1'
"Listen on port 5432 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 5432:3000"
Create a new config map named app-config from the key=value pairs in the file,kubectl create configmap app-config --from-file=path/to/configs
Set deployment order-processing-deployment's service account to default,kubectl set serviceaccount deployment order-processing-deployment default
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.v3.0.0.sandbox-apps -o yaml
Get the documentation of a specific field of a resource,kubectl explain resource=pods.metadata.labels
Get output from running the 'dotnet' command in astro-container from pod frontend-pod,kubectl exec frontend-pod -c astro-container -- dotnet
Add a taint with key 'disktype' on nodes having label team=devops,kubectl taint node -l team=devops  disktype=backup-node-14:PreferNoSchedule
Start a alpine pod and let the container expose port 9092,kubectl run hazelcast --image=alpine --port=9092
Return snapshot of previous terminated nano-bot container logs from pod auth-service-pod,kubectl logs -p -c nano-bot auth-service-pod
"If the deployment named foo's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/foo
Create a new secret named api-key-secret with key1=supersecret and key2=topsecret,kubectl create secret generic api-key-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
"Listen on port 5000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod 5000:8080
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.metadata.namespace
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""mobile-apps"" API group",kubectl get deployments.stable-2.0.0.mobile-apps -o yaml
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json app-version=2.5.1
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 8081 8081
"Listen on port 8081 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8081:6379
Remove from node 'prod-node-5' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes prod-node-5 zone:PreferNoSchedule-
Set deployment scheduler-app-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment scheduler-app-deployment kube-scheduler
"Set only the ""client-key"" field on the ""service-account"" # entry, without touching other values",kubectl config set-credentials service-account --client-key=~/.kube/admin.key
Create a deployment named ingress that runs the amazonlinux image with 6 replicas,kubectl create deployment ingress --image=amazonlinux --replicas=6
"Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment nginx --port=80 --target-port=844300
Update pod 'api' with the label 'tier' and the value 'frontend',kubectl label pods api tier=frontend
Start a centos pod and let the container expose port 8888,kubectl run hazelcast --image=centos --port=8888
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n logging
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/user-service 8088:https
Get output from running the 'redis-server' command in nebula-navigator from pod backend-pod,kubectl exec backend-pod -c nebula-navigator -- redis-server
Create a copy of cdn-service-pod changing all container images to mysql,kubectl debug cdn-service-pod --copy-to=debug-image-web --set-image=*=mysql
Create a job with a command,kubectl create job deployment-rollout-job --image=mongo -- mongo --version
Add a taint with key 'hardware' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  hardware=node-1:PreferNoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node testing-node-11 -p $'spec:\n unschedulable: true'
Create a new ExternalName service named external-git-service,kubectl create service externalname external-git-service --external-name museum-example.museum
Copy /var/run/secrets/kubernetes.io/serviceaccount/ local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp /var/run/secrets/kubernetes.io/serviceaccount/ kube-proxy/database-pod-2:/tmp/bar_dir
Delete a pod using the type and name specified in settings.json,kubectl delete -f ./settings.json
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""testing-apps"" API group",kubectl get deployments.rc-1.1.0.testing-apps -o yaml
"Update pod 'log-aggregator' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator scaling-policy=auto-horizontal-scaling
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/vpn-service-pod
Update pod 'auth' with the label 'component' and the value 'web',kubectl label pods auth component=web
"If the deployment named db-migration-replicaset's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/db-migration-replicaset
Embed certificate authority data for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
"Update pod 'auth' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods auth app-version='2.5.1'
Update image of all containers of daemonset staging to 'amazonlinux:2',kubectl set image daemonset staging *=amazonlinux:2
"Update pod 'foo' with the annotation 'contact-email' and the value 'support@example.com', overwriting any existing value",kubectl annotate --overwrite pods foo contact-email='support@example.com'
Add a taint with key 'disktype' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  disktype=worker-node-3:PreferNoSchedule
Get output from quantum-quark from pod security-service-pod,kubectl attach security-service-pod -c quantum-quark
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 5000 5000
Add a taint with key 'zone' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  zone=node-2:PreferNoSchedule
"Listen on port 5000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 5000:8081"
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=sun-cluster
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=7000 --target-port=844300
Get output from the first pod of a replica set named golang,kubectl attach rs/golang
Get output from stardust-shuttle from pod database-pod,kubectl attach database-pod -c stardust-shuttle
Copy /tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp kube-proxy/database-pod-2:/tmp/foo /etc/kubernetes
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/monitoring-config deployment/gateway-deployment
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/mypod 5000:6379
Set the resource request and limits for all containers in alpine,"kubectl set resources deployment alpine --limits=cpu=200m,memory=512Mi --requests=cpu=3,memory=4Gi"
Delete pods and services with label stack=tech-stack,"kubectl delete pods,services -l stack=tech-stack"
Create a cron job with a command,"kubectl create cronjob email-notifications --image=mcr.microsoft.com/dotnet/core/runtime --schedule=""*/1 * * * *"" -- dotnet --list-sdks"
Scale a replica set named 'staging-app-rs' to 7,kubectl scale --replicas=7 rs/staging-app-rs
Create a new secret named azure-storage-secret from an env file,kubectl create secret generic azure-storage-secret --from-env-file=path/to/profiles.env
Remove from node 'monitoring-node-15' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes monitoring-node-15 cpu-type:NoSchedule-
"Start a ethereum/client-go pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ethereum/client-go --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
Remove from node 'node-2' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes node-2 dedicated:NoSchedule-
"Listen on port 5432 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 5432:8888"
Create a cron job with a command,"kubectl create cronjob log-rotation --image=golang --schedule=""*/1 * * * *"" -- go version"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node worker-node-3 -p '{""spec"":{""rules"":[{""http"":{""paths"":[{""path"":""/"",""backend"":{""service"": {""name"": ""new-service""}}}]}}'"
"Update node 'monitoring-node-15' with a taint with key 'special' and value 'backup' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes monitoring-node-15 special=backup:NoSchedule
"Get output from running the 'nginx -g ""daemon off;""' command in warp-drive from pod api-service-pod","kubectl exec api-service-pod -c warp-drive -- nginx -g ""daemon off;"""
Create a new NodePort service named log-aggregator-nodeport,kubectl create service nodeport log-aggregator-nodeport --tcp=3001:9091
Update deployment 'web-app-deployment' with a new environment variable,kubectl set env deployment/web-app-deployment CACHE_SIZE=64MB
Get the documentation of a specific field of a resource,kubectl explain resource=pods.spec.selector
"Get output from running the 'apk add curl' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- apk add curl
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod 8081:8081
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller web-app-rc
"Listen on port 5432 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 5432:6379"
Embed certificate authority data for the app-cluster cluster entry,kubectl config set-cluster app-cluster --embed-certs --certificate-authority=~/.kube/cluster-alpha/kubernetes.ca.crt
Set deployment cache-cluster-deployment's service account to fluentd,kubectl set serviceaccount deployment cache-cluster-deployment fluentd
"Listen on port 8888 locally, forwarding to 6379 in the pod",kubectl port-forward pod/security-service-pod 8888:6379
Return snapshot logs from container api-server-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/api-server-deployment -c security-service-pod-1
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp kube-server/image-resizer-pod-20:~/.config/kube /tmp/bar_dir
"Listen on port 6379 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 6379:6379
Get output from running the 'pip --version' command in lunar-launcher from pod gateway-pod,kubectl exec gateway-pod -c lunar-launcher -- pip --version
"Delete pods and services with same names ""proxy"" and ""api""","kubectl delete pod,service proxy api"
"Create a single ingress called 'website-ingress' that directs requests to testing.com/bar to svc # svc1:8000 with a tls secret ""my-cert""","kubectl create ingress website-ingress --rule=""testing.com/bar=svc1:8000,tls=my-cert"""
"Delete pods and services with same names ""gateway"" and ""payment""","kubectl delete pod,service gateway payment"
Create a job with a command,kubectl create job audit-job --image=golang -- go
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-config-dev deployment/proxy-service-deployment
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8888 9090
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 8000 8088
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/analytics-platform-deployment DB_HOST=localhost -o yaml
Return only the phase value of the specified pod,kubectl get -o template pod/cdn-service-pod --template={{.status.phase}}
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.app-2-context.cluster sun-cluster
"Scale a resource identified by type and name specified in ""params.json"" to 3",kubectl scale --replicas=3 -f params.json
"Update pod 'backend' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods backend backup-strategy='daily-backups'
Create a job with a command,kubectl create job indexing --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
Unset namespace in cluster-1-context context,kubectl config unset contexts.cluster-1-context.namespace
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/media-stream-pod
Get output from running the 'go' command in lunar-launcher from pod cdn-service-pod,kubectl exec cdn-service-pod -c lunar-launcher -- go
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8000 8088
Get output from the first pod of a replica set named runtime,kubectl attach rs/runtime
Display only the most recent 5 lines of output in pod chat-app-pod,kubectl logs --tail=5 chat-app-pod
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/data-synchronization-job -n logging
Start a ubuntu pod and let the container expose port 9092,kubectl run hazelcast --image=ubuntu --port=9092
"Listen on port 8081 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8081:8081"
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=properties=/path/to/configurations/file1.txt --from-file=key1=/path/to/parameters/file2.txt
Embed certificate authority data for the web-cluster cluster entry,kubectl config set-cluster web-cluster --embed-certs --certificate-authority=~/.kube/edge-cluster/kubernetes.ca.crt
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/api-config deployment/gateway-deployment
Set deployment order-processing-deployment's service account to istio,kubectl set serviceaccount deployment order-processing-deployment istio
Add a taint with key 'special' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  special=app-node-6:PreferNoSchedule
"Get output from running 'docker run ubuntu echo ""Hello, World""' command from the first pod of the service api-service, using the first container by default","kubectl exec svc/api-service -- docker run ubuntu echo ""Hello, World"""
"Print result (in yaml format) of updating nginx container image from local file, without hitting the server",kubectl set image -f path/to/file.yaml debian=debian:11.0 --local -o yaml
Remove from node 'app-node-6' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes app-node-6 special:NoSchedule-
Remove the environment variable ENV from container 'nebula-navigator' in all deployment configs,"kubectl set env deployments --all --containers=""nebula-navigator"" ENV-"
"Start a hazelcast pod and set labels ""app=hazelcast"" and ""env=prod"" in the container","kubectl run hazelcast --hazelcast/hazelcast --labels=""app=hazelcast,env=prod"""
Get output from astro-container from pod auth-service-pod,kubectl attach auth-service-pod -c astro-container
Get output from mycontainer from pod proxy-server-pod,kubectl attach proxy-server-pod -c mycontainer
Get output from running the 'ruby --version' command in time-machine from pod web-app-pod,kubectl exec web-app-pod -c time-machine -- ruby --version
Roll back to daemonset revision 3,kubectl rollout undo daemonset/namespace-1 --to-revision=3
"Get output from running the 'node' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- node
Approve CSR 'csr-kubelet-14',kubectl certificate approve csr-kubelet-14
Set the resource request and limits for all containers in jenkins,"kubectl set resources deployment jenkins --limits=cpu=200m,memory=512Mi --requests=cpu=10,memory=128Mi"
Create a new ClusterIP service named frontend-service-clusterip,kubectl create service clusterip frontend-service-clusterip --tcp=5000:8084
Create a new ExternalName service named external-payment-gateway-service,kubectl create service externalname external-payment-gateway-service --external-name dummy-website.io
"Listen on a random port locally, forwarding to 8000 in the pod",kubectl port-forward pod/proxy-server-pod :8000
Create a new ExternalName service named external-dns-service,kubectl create service externalname external-dns-service --external-name demo-service.dev
"Update pod 'analytics' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics description='Web server for marketing site'
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=settings=/path/to/properties/file1.txt --from-file=key2=/path/to/configs/file2.txt
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/mypod 3000:8081
Get output from warp-drive from pod e-commerce-pod,kubectl attach e-commerce-pod -c warp-drive
Create an ingress with TLS enabled using a specific secret and pathType as Prefix,"kubectl create ingress ingsecret --class=default \
--rule=""site.com/*=svc:8443,tls=secret1"""
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 8083,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=8083
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/data-synchronization-job -n kube-system
Embed certificate authority data for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --embed-certs --certificate-authority=~/.kube/testing-cluster/kubernetes.ca.crt
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=3000:27017
Get output from running the 'bash' command in time-machine from pod api-service-pod,kubectl exec api-service-pod -c time-machine -- bash
Remove from node 'db-node-7' all the taints with key 'zone',kubectl taint nodes db-node-7 zone-
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=prod-cluster
"Listen on port 8088 locally, forwarding to 6379 in the pod",kubectl port-forward pod/proxy-server-pod 8088:6379
Create a new secret named monitoring-credentials-secret with keys for each file in folder bar,kubectl create secret generic monitoring-credentials-secret --from-file=path/to/preferences
Create a new NodePort service named security-service-nodeport,kubectl create service nodeport security-service-nodeport --tcp=8082:3000
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=star-cluster
"Create a cluster role named ""custom_role"" with ResourceName specified",kubectl create clusterrole custom_role --verb=list --resource=pods --resource-name=cdn-proxy --resource-name=file-uploader
Embed certificate authority data for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/namespace-config deployment/search-engine-deployment
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=8084 --target-port=543200
"Listen on port 8888 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8888:8000
Set deployment web-app-deployment's service account to istio,kubectl set serviceaccount deployment web-app-deployment istio
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/cache-cluster-deployment -c payment-gateway-pod-1
Create a new secret named payment-gateway-secret with keys for each file in folder bar,kubectl create secret generic payment-gateway-secret --from-file=path/to/options
Update pod 'security' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods security role-
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp rook-ceph/worker-pod-4:/tmp/foo :/tmp/bar
Copy ~/.config/kube local file to :/tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube velero/backend-pod-13::/tmp/bar
Update image of all containers of daemonset prod to 'openjdk:16.0.2',kubectl set image daemonset prod *=openjdk:16.0.2
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.v1.1.0.sandbox-apps -o json
"Define new exec auth plugin args for the ""john.doe"" entry",kubectl config set-credentials john.doe --exec-arg=arg1 --exec-arg=arg2
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=8088:3306
Approve CSR 'csr-def456',kubectl certificate approve csr-def456
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""custom-deployments"" API group",kubectl get deployments.beta-1.0.custom-deployments -o json
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Start a hazelcast pod and let the container expose port 8888,kubectl run hazelcast --image=hazelcast/hazelcast --port=8888
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=data-cluster
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.team-alpha-context.cluster moon-cluster
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/log-aggregator-pod 8888:8888
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=cluster-beta
Return snapshot logs from container payment-processor-deployment-1 of a deployment named database-pod,kubectl logs deployment/payment-processor-deployment -c database-pod-1
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""my-apps"" API group",kubectl get deployments.dev-2.2.0.my-apps -o json
Update pod 'foo' with the label 'app' and the value 'myapp',kubectl label pods foo app=myapp
"Listen on port 8081 locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod 8081:8888
Create a pod based on the JSON passed into stdin,cat preferences.json | kubectl create -f -
Set deployment authentication-service-deployment's service account to vault,kubectl set serviceaccount deployment authentication-service-deployment vault
List the environment variables defined on a deployments 'email-server-deployment',kubectl set env deployment/email-server-deployment --list
"Update pod 'cdn' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn contact-email=support@example.com
"Listen on port 9090 locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod 9090:8081
"Auto scale a deployment ""gateway"", with the number of pods between 7 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=7 --max=11
Start a centos pod and let the container expose port 8000,kubectl run hazelcast --image=centos --port=8000
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/web-app-pod 3000 8080
"Update pod 'vpn' with the annotation 'release-notes' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods vpn release-notes='https://example.com/release-notes/v2.5.1'
"Update pod 'email' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods email compliance-level='PCI-DSS'
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.staging-context.cluster kube-cluster-1
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/monitoring-service"
"Listen on port 3000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 3000:5000"
