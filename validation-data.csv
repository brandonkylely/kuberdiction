input,target
Update image of all containers of daemonset development to 'node:14.17.3',kubectl set image daemonset development *=node:14.17.3
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/order-service"
Update pod 'proxy-server' with the label 'env' and the value 'staging',kubectl label pods proxy-server env=staging
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node prod-node-5 -p '{""spec"":{""replicas"":3}'"
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/frontend-pod :5000
"Listen on port 5000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5000:8000
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/notification-sender-job -n kube-ingress
Get output from running the 'jenkins-plugin-cli' command in lunar-launcher from pod security-service-pod,kubectl exec security-service-pod -c lunar-launcher -- jenkins-plugin-cli
Create a deployment named gateway that runs the ubuntu image,kubectl create deployment gateway --image=ubuntu
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-name-config deployment/email-server-deployment
Update pod 'cdn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods cdn release-
Update pod 'web' with the label 'release' and the value 'v2.0',kubectl label pods web release=v2.0
Add a taint with key 'workload' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  workload=k8s-node-1:PreferNoSchedule
Create a new service account named default,kubectl create serviceaccount default
"Delete pods and services with same names ""proxy-server"" and ""foo""","kubectl delete pod,service proxy-server foo"
Update image of all containers of daemonset namespace- to 'openjdk:16.0.2',kubectl set image daemonset namespace-3 *=openjdk:16.0.2
Roll back to daemonset revision 5,kubectl rollout undo daemonset/namespace-3 --to-revision=5
Update image of all containers of daemonset nginx to 'ruby:3.0.2',kubectl set image daemonset nginx *=ruby:3.0.2
"Listen on port 8088 locally, forwarding to 3000 in the pod",kubectl port-forward pod/proxy-server-pod 8088:3000
Set deployment web-app-deployment's service account to tekton,kubectl set serviceaccount deployment web-app-deployment tekton
"Listen on port 6379 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 6379:8081
"Listen on port 9090 locally, forwarding to 8081 in the pod",kubectl port-forward pod/chat-app-pod 9090:8081
Update a cluster role binding for default,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:default
"Start a alpine pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=alpine --overrides='{ ""apiVersion"": ""custom-version"", ""spec"": { ... } }'"
Add a taint with key 'datacenter' on nodes having label role=database,kubectl taint node -l role=database  datacenter=prod-node-5:PreferNoSchedule
Create a cron job with a command,"kubectl create cronjob weekly-summary --image=wordpress --schedule=""*/1 * * * *"" -- mysql --version"
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/ui-config deployment/user-management-deployment
"Listen on port 5000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 5000:8088"
Start a mysql pod and let the container expose port 8088,kubectl run hazelcast --image=mysql --port=8088
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 8088,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=8088
"Run a proxy to the Kubernetes API server on port 8443, serving static content from ./local/www/",kubectl proxy --port=8443 --www=./local/www/
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=6379 --target-port=909100
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/data-synchronization-job -n kube-ingress
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.cluster-1-context.cluster galaxy-cluster
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=cloud-cluster
"Run a proxy to the Kubernetes API server on port 7000, serving static content from ./local/www/",kubectl proxy --port=7000 --www=./local/www/
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/db-config deployment/monitoring-stack-deployment
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/monitoring-stack-deployment -c monitoring-pod-1
"Delete pods and services with same names ""analytics"" and ""database""","kubectl delete pod,service analytics database"
"Listen on port 5000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5000:8081
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp ingress-nginx/backend-pod-13:/tmp/foo /tmp/bar
Get output from running the 'mongo' command in nano-bot from pod email-service-pod,kubectl exec email-service-pod -c nano-bot -- mongo
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8080 8081
Begin streaming the logs of the lunar-launcher container in pod web-app-pod,kubectl logs -f -c lunar-launcher web-app-pod
Start a mysql pod and let the container expose port 8080,kubectl run hazelcast --image=mysql --port=8080
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f node-specific.yaml -p '{""spec"":{""unschedulable"":true}}'"
Start a ethereum/client-go pod and let the container expose port 9000,kubectl run hazelcast --image=ethereum/client-go --port=9000
Embed certificate authority data for the data-cluster cluster entry,kubectl config set-cluster data-cluster --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
Start a ethereum/client-go pod and let the container expose port 5432,kubectl run hazelcast --image=ethereum/client-go --port=5432
Begin streaming the logs of the rocket-ranger container in pod proxy-server-pod,kubectl logs -f -c rocket-ranger proxy-server-pod
Create a deployment named worker that runs the python image and expose port 8000,kubectl create deployment worker --image=python --port=8000
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp openfaas/security-scanner-pod-18:~/.config/kube /tmp/bar_dir
Add to node 'node-2' a taint with key 'environment' and no value,kubectl taint nodes node-2 environment:NoSchedule
"Update node 'web-node-8' with a taint with key 'cpu-type' and value 'x86' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes web-node-8 cpu-type=x86:NoSchedule
"Delete pods and services with same names ""backend"" and ""vpn""","kubectl delete pod,service backend vpn"
"Listen on port 8888 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8888:9090
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/search-service"
Execute set-last-applied against each configuration file in a directory,kubectl apply set-last-applied -f conf/
Create a deployment named gateway that runs the confluentinc/cp-kafka image,kubectl create deployment gateway --image=confluentinc/cp-kafka
Create a new ClusterIP service named payment-service-clusterip,kubectl create service clusterip payment-service-clusterip --tcp=9090:7000
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp kube-system/security-scanner-pod-18:/tmp/foo_dir /tmp/bar_dir
Copy /var/run/secrets/kubernetes.io/serviceaccount/ local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp /var/run/secrets/kubernetes.io/serviceaccount/ openfaas/file-server-pod-14:/tmp/bar_dir
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8000 5000
"Update pod 'foo' with the annotation 'backup-strategy' and the value 'daily-backups', overwriting any existing value",kubectl annotate --overwrite pods foo backup-strategy='daily-backups'
Display only the most recent 23 lines of output in pod proxy-server-pod,kubectl logs --tail=23 proxy-server-pod
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/scheduler-app-deployment -c auth-service-pod-1
Copy /tmp/foo_dir from a remote pod to /etc/kubernetes locally,kubectl cp argocd/monitoring-agent-pod-6:/tmp/foo_dir /etc/kubernetes
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json env=staging
"Listen on port 8080 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8080:5432
Get output from running the 'npm --version' command in astro-container from pod api-service-pod,kubectl exec api-service-pod -c astro-container -- npm --version
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=settings=/path/to/configs/file1.txt --from-file=key2=/path/to/data/file2.txt
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=cluster-beta
Add a taint with key 'zone' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  zone=db-node-7:PreferNoSchedule
"Delete pods and services with same names ""media-stream"" and ""media-stream""","kubectl delete pod,service media-stream media-stream"
"Listen on port 3000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod 3000:8088
"Listen on port 5432 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 5432:5432"
"Update pod 'analytics' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics release-notes='https://example.com/release-notes/v2.5.1'
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-secrets deployment/mydeployment
"Auto scale a deployment ""backend"", with the number of pods between 6 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment backend --min=6 --max=15
"Listen on a random port locally, forwarding to 8888 in the pod",kubectl port-forward pod/backend-pod :8888
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""api-v1"" API group",kubectl get deployments.v3.0.0.api-v1 -o yaml
Scale stateful set named 'web' to 5,kubectl scale --replicas=5 statefulset/web
Remove from node 'prod-node-5' all the taints with key 'environment',kubectl taint nodes prod-node-5 environment-
Replace a pod using the data in preferences.yaml,kubectl replace -f ./preferences.yaml
"Get output from running the 'geth attach' command from pod web-app-pod, using the first container by default",kubectl exec web-app-pod -- geth attach
"Set a deployments node container cpu limits to ""500m"" and memory to ""4Gi""","kubectl set resources deployment node -c=nginx --limits=cpu=500m,memory=4Gi"
Display only the most recent 5 lines of output in pod mypod,kubectl logs --tail=5 mypod
Set the resource request and limits for all containers in go,"kubectl set resources deployment go --limits=cpu=200m,memory=512Mi --requests=cpu=50m,memory=2Gi"
Rename the context 'dev-context' to 'app-1-context' in your kubeconfig file,kubectl config rename-context dev-context app-1-context
Return snapshot logs from container web-app-deployment-1 of a deployment named backend-pod,kubectl logs deployment/web-app-deployment -c backend-pod-1
"Listen on port 5432 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5432:9090
Add a taint with key 'workload' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  workload=testing-node-11:PreferNoSchedule
Create a job with a command,kubectl create job monitoring-job --image=redis -- redis-cli
"Create a cluster role named ""reader"" with API Group specified","kubectl create clusterrole reader --verb=update,get,patch --resource=statefulsets.apps"
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.app-2-context.cluster app-cluster
Start a node pod and let the container expose port 8089,kubectl run hazelcast --image=node --port=8089
Add a taint with key 'disktype' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  disktype=dev-node-4:PreferNoSchedule
"Check to see if I can get the job named ""content-import-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/content-import-job -n production
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 5000 8080
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach gateway-pod -c astro-container -i -t
Show all logs from pod frontend-pod written in the last hour,kubectl logs --since=1h frontend-pod
Set deployment proxy-service-deployment's service account to fluentd,kubectl set serviceaccount deployment proxy-service-deployment fluentd
"Get output from running 'php --version' command from the first pod of the service payment-service, using the first container by default",kubectl exec svc/payment-service -- php --version
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/frontend-pod 3000:5000
Remove the resource requests for resources on containers in ubuntu,"kubectl set resources deployment ubuntu --limits=cpu=0,memory=0 --requests=cpu=0,memory=0"
"Update pod 'media-stream' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream owner='alice smith'
Add a taint with key 'workload' on nodes having label environment=production,kubectl taint node -l environment=production  workload=testing-node-11:PreferNoSchedule
"Update pod 'cdn' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn app-version=2.5.1
"Update pod 'proxy' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy git-repo='https://github.com/example/my-app'
Start a node pod,kubectl run nginx --image=node
Add a taint with key 'disktype' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  disktype=backup-node-14:PreferNoSchedule
Start a redis pod and let the container expose port 3000,kubectl run hazelcast --image=redis --port=3000
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/backend-pod
Start a mysql pod and let the container expose port 5000,kubectl run hazelcast --image=mysql --port=5000
"Listen on port 8000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8000:3000"
Create a new config map named app-config-dev from an env file,kubectl create configmap app-config-dev --from-env-file=path/to/parameters.env
Update pod 'database' with the label 'app' and the value 'myapp',kubectl label pods database app=myapp
Copy ~/.config/kube from a remote pod to /tmp/bar locally,kubectl cp prometheus/auth-service-pod-11:~/.config/kube /tmp/bar
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=5432 --target-port=844300
Get output from running the 'mysqld' command in rocket-ranger from pod database-pod,kubectl exec database-pod -c rocket-ranger -- mysqld
Add a taint with key 'zone' on nodes having label myLabel,kubectl taint node -l myLabel  zone=worker-node-3:PreferNoSchedule
Roll back to daemonset revision 7,kubectl rollout undo daemonset/development --to-revision=7
Set deployment user-management-deployment's service account to tiller,kubectl set serviceaccount deployment user-management-deployment tiller
"Update pod 'auth' with the annotation 'custom-label' and the value 'my-custom-value' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth custom-label=my-custom-value
"Listen on port 9090 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 9090:8888
Start the ruby pod using a different command and custom arguments,kubectl run nginx --image=ruby --command -- <cmd> <arg1> ... <argN>
Begin streaming the logs of the nebula-navigator container in pod frontend-pod,kubectl logs -f -c nebula-navigator frontend-pod
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/hazelcast/hazelcast
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=e2e
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/env-vars deployment/database-deployment
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.app-2-context.cluster cloud-cluster
"Create a single ingress called 'app-loadbalancer-ingress' that directs requests to foo.com/input to svc # svc1:8081 with a tls secret ""my-cert""","kubectl create ingress app-loadbalancer-ingress --rule=""foo.com/input=svc1:8081,tls=my-cert"""
Restart a deployment,kubectl rollout restart deployment/nginx
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json criticality=high
Create a new ClusterIP service named backend-service-clusterip,kubectl create service clusterip backend-service-clusterip --tcp=7000:8010
Add a taint with key 'app' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  app=edge-node-10:PreferNoSchedule
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/db-service"
"Listen on port 8088 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8088:9090"
Get output from running the 'ash' command in stardust-shuttle from pod cdn-service-pod,kubectl exec cdn-service-pod -c stardust-shuttle -- ash
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.cluster-2-context.cluster my-k8s-cluster
Create a deployment named sonarqube that runs the php image with 7 replicas,kubectl create deployment sonarqube --image=php --replicas=7
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod web-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach web-app-pod -c nano-bot -i -t
Use the context for the edge-cluster cluster,kubectl config use-context edge-cluster
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/analytics-pod 8888:5000
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.prod-context.cluster edge-cluster
"Delete pods and services with same names ""chat-app"" and ""log-aggregator""","kubectl delete pod,service chat-app log-aggregator"
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-config --prefix=MYSQL_ deployment/scheduler-app-deployment
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/frontend-pod 8088:8088
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/frontend-pod
Create a deployment named db that runs the postgres image and expose port 9092,kubectl create deployment db --image=postgres --port=9092
Set deployment load-balancer-deployment's service account to prometheus,kubectl set serviceaccount deployment load-balancer-deployment prometheus
Begin streaming the logs of the cosmic-container container in pod monitoring-pod,kubectl logs -f -c cosmic-container monitoring-pod
Return snapshot logs from container load-balancer-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/load-balancer-deployment -c web-app-pod-1
"Listen on port 8081 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/order-service 8081:https
Add a taint with key 'special' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  special=k8s-node-1:PreferNoSchedule
"Listen on port 5000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/cdn-service-pod 5000:8888
Create a deployment named api that runs the amazonlinux image and expose port 3001,kubectl create deployment api --image=amazonlinux --port=3001
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.app-1-context.cluster staging-cluster
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c warp-drive -i -t
"Listen on port 9090 locally, forwarding to 6379 in the pod",kubectl port-forward pod/log-aggregator-pod 9090:6379
"If the deployment named foo's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/foo
"Listen on port 6379 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 6379:5432
Create a job with a command,kubectl create job monitoring-job --image=ethereum/client-go -- geth version
Begin streaming the logs of the cosmic-container container in pod media-stream-pod,kubectl logs -f -c cosmic-container media-stream-pod
"Listen on port 5000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5000:8000
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/web-app-pod 5000 5000
Update pod 'cdn' with the label 'env' and the value 'staging',kubectl label pods cdn env=staging
"Create a single ingress called 'app1-ingress' that directs requests to foo.com/example to svc # svc1:8181 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""foo.com/example=svc1:8181,tls=my-cert"""
Get output from running the 'jenkins-plugin-cli' command in nano-bot from pod frontend-pod,kubectl exec frontend-pod -c nano-bot -- jenkins-plugin-cli
Create a deployment named grafana that runs the redis image and expose port 9090,kubectl create deployment grafana --image=redis --port=9090
Update pod 'monitoring' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods monitoring component-
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-config-prod deployment/database-deployment
Create a deployment named ingress that runs the nginx image,kubectl create deployment ingress --image=nginx
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=dev-cluster
"Listen on port 3000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 3000:8088
Return snapshot logs from container database-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/database-deployment -c proxy-server-pod-1
Create a new secret named monitoring-credentials-secret with keys for each file in folder bar,kubectl create secret generic monitoring-credentials-secret --from-file=path/to/settings
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""api-v2"" API group",kubectl get deployments.legacy-1.0.0.api-v2 -o json
Create a new secret named cert-manager-secret with keys for each file in folder bar,kubectl create secret generic cert-manager-secret --from-file=path/to/configs
"Delete pods and services with same names ""security"" and ""foo""","kubectl delete pod,service security foo"
"Create a role named ""view"" with API Group specified","kubectl create role view --verb=proxy,get,update --resource=persistentvolumes.storage.k8s.io"
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""testing-apps"" API group",kubectl get deployments.dev-2.2.0.testing-apps -o json
Get output from running the 'apk add curl' command in lunar-launcher from pod email-service-pod,kubectl exec email-service-pod -c lunar-launcher -- apk add curl
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.dev-context.cluster on-prem-cluster
Return snapshot logs from container api-server-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/api-server-deployment -c web-app-pod-1
Create a new config map named monitoring-config based on folder configs,kubectl create configmap monitoring-config --from-file=path/to/configs
"Update pod 'gateway' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway criticality=high
Create a job with a command,"kubectl create job scaling-job --image=nginx -- nginx -g ""daemon off;"""
Update deployment 'frontend-deployment' with a new environment variable,kubectl set env deployment/frontend-deployment JWT_SECRET=your-jwt-secret
Set deployment payment-processor-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment payment-processor-deployment gitlab-runner
"Listen on port 8081 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8081:8081"
"Create a role named ""custom_role"" with ResourceName specified",kubectl create role custom_role --verb=patch --resource=pods --resource-name=nginx-proxy --resource-name=auth-proxy
Create a deployment named db that runs the ubuntu image and expose port 3000,kubectl create deployment db --image=ubuntu --port=3000
"Listen on port 6379 locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod 6379:5432
Get the documentation of a specific field of a resource,kubectl explain resource=pods.metadata.namespace
"Listen on port 8080 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8080:8888"
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/web-app-pod 5000:8000
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod cdn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach cdn-service-pod -c astro-container -i -t
Create a job with a command,kubectl create job backup --image=centos -- bash
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=on-prem-cluster
Update deployment 'order-processing-deployment' with a new environment variable,kubectl set env deployment/order-processing-deployment SMTP_PASSWORD=your-password
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 9090 8888
"Listen on port 9090 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 9090:6379
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.edge-context.cluster app-cluster
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp ingress-nginx/database-pod-2:~/.config/kube /tmp/bar_dir
Get output from nebula-navigator from pod frontend-pod,kubectl attach frontend-pod -c nebula-navigator
Get output from running the 'psql' command in cosmic-container from pod chat-app-pod,kubectl exec chat-app-pod -c cosmic-container -- psql
Create a new config map named api-config from an env file,kubectl create configmap api-config --from-env-file=path/to/options.env
Return snapshot of previous terminated time-machine container logs from pod api-service-pod,kubectl logs -p -c time-machine api-service-pod
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8888 8000
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/database-indexing-job -n kube-public
"Update pod 'payment' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods payment env='staging'
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node gpu-node-12 -p $'data:\n key: new-value'
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/logging-service 5432:https
Get output from running the 'gem --version' command in warp-drive from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c warp-drive -- gem --version
Create a deployment named mattermost that runs the mcr.microsoft.com/dotnet/core/runtime image with 5 replicas,kubectl create deployment mattermost --image=mcr.microsoft.com/dotnet/core/runtime --replicas=5
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/monitoring-config deployment/log-aggregator-deployment
Start a ruby pod and let the container expose port 9000,kubectl run hazelcast --image=ruby --port=9000
Start a hazelcast pod and let the container expose port 8081,kubectl run hazelcast --image=hazelcast/hazelcast --port=8081
"Check to see if I can get the job named ""image-processing-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/image-processing-job -n testing
"Listen on port 8080 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8080:8000
Create a new ExternalName service named my-ns,kubectl create service externalname my-ns --external-name document-company.com
Start a php pod and let the container expose port 5432,kubectl run hazelcast --image=php --port=5432
Create a job with a command,kubectl create job deployment-rollout-job --image=golang -- go version
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-config-dev deployment/frontend-deployment
"Delete pods and services with same names ""backend"" and ""proxy-server""","kubectl delete pod,service backend proxy-server"
"Listen on port 5432 locally, forwarding to 8000 in the pod",kubectl port-forward pod/mypod 5432:8000
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod mypod # and sends stdout/stderr from 'bash' back to the client,kubectl attach mypod -c lunar-launcher -i -t
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/loadbalancer-service"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8081 5000
"Update pod 'vpn' with the annotation 'env' and the value staging # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn env=staging
Create a new ClusterIP service named ldap-service-clusterip,kubectl create service clusterip ldap-service-clusterip --tcp=5432:8083
"Get output from running the 'go run hello.go' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- go run hello.go
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/scheduler-app-deployment -c analytics-pod-1
Create a new ClusterIP service named inventory-service-clusterip,kubectl create service clusterip inventory-service-clusterip --tcp=3001:3306
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=5432 --target-port=8000
Set custom TLS server name to use for validation for the data-cluster cluster entry,kubectl config set-cluster data-cluster --tls-server-name=kube-cluster-1
View the rollout history of a deployment,kubectl rollout history deployment/prod
"Auto scale a replication controller ""email"", with the number of pods between 1 and 7, target CPU utilization at 40%",kubectl autoscale rc email --max=7 --cpu-percent=40
Create a job with a command,kubectl create job image-build-job --image=ruby -- gem --version
Return snapshot of previous terminated mycontainer container logs from pod proxy-server-pod,kubectl logs -p -c mycontainer proxy-server-pod
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/log-rotation-job -n kube-public
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/env-vars deployment/scheduler-app-deployment
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/options/file2.txt
"Create a role named ""view"" with ResourceName specified",kubectl create role view --verb=watch --resource=pods --resource-name=backup-service --resource-name=identity-provider
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller proxy-service-rc
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=properties=/path/to/configurations/file1.txt --from-file=key1=/path/to/properties/file2.txt
Update pod 'email' with the label 'component' and the value 'api',kubectl label pods email component=api
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=edge-cluster
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=galaxy-cluster
Return snapshot logs from container authentication-service-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/authentication-service-deployment -c frontend-pod-1
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""third-party-apps"" API group",kubectl get deployments.beta-1.0.third-party-apps -o yaml
Update deployment 'database-deployment' with a new environment variable,kubectl set env deployment/database-deployment CACHE_SIZE=64MB
Create a new config map named kube-system-config from the key=value pairs in the file,kubectl create configmap kube-system-config --from-file=path/to/settings
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/kube-system-config deployment/log-aggregator-deployment
Create a deployment named monitoring that runs the jenkins image and expose port 8181,kubectl create deployment monitoring --image=jenkins --port=8181
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config-dev deployment/proxy-service-deployment
Update pod 'api' with the label 'app' and the value 'myapp',kubectl label pods api app=myapp
"Update pod 'backend' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend last-deployment=2023-03-15
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json expiration-date='2024-12-31'
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/analytics-pod 8080:8081
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=8000 --target-port=330600
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""web-apps"" API group",kubectl get deployments.stable-2.0.0.web-apps -o json
"Create a service for a replication controller identified by type and name specified in ""wordpress-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f wordpress-controller.yaml --port=5432 --target-port=818100
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.admin-context.cluster cluster-gamma
"Start a python pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=python --overrides='{ ""apiVersion"": ""v1.1.0"", ""spec"": { ... } }'"
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/loadbalancer-service"
"Listen on port 5000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/analytics-pod 5000:6379
"Listen on port 8000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8000:5432
"Embed client certificate data in the ""admin"" entry",kubectl config set-credentials admin --client-certificate=~/.kube/admin.crt --embed-certs=true
Show metrics for the pods defined by label release=beta,kubectl top pod -l release=beta
Set deployment analytics-platform-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment analytics-platform-deployment kube-controller-manager
"Get output from running the 'postgres' command from pod security-service-pod, using the first container by default",kubectl exec security-service-pod -- postgres
"Listen on port 8888 locally, forwarding to 8081 in the pod",kubectl port-forward pod/analytics-pod 8888:8081
Update pod 'frontend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods frontend release-
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=kube-cluster-2
Copy /tmp/foo local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo argocd/image-resizer-pod-20::/tmp/bar
Create a new config map named app-config from the key=value pairs in the file,kubectl create configmap app-config --from-file=path/to/parameters
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 5432 8088
Begin streaming the logs of the warp-drive container in pod chat-app-pod,kubectl logs -f -c warp-drive chat-app-pod
Update pod 'payment' only if the resource is unchanged from version 1,kubectl annotate pods payment description='my frontend running nginx' --resource-version=1
Create a copy of api-service-pod changing all container images to amazonlinux,kubectl debug api-service-pod --copy-to=debug-image-web --set-image=*=amazonlinux
"If the deployment named app-v2-replicaset's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/app-v2-replicaset
Update pod 'email' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods email app-
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node node-1 -p '{""spec"":{""replicas"":3}'"
Embed certificate authority data for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --embed-certs --certificate-authority=~/.kube/moon-cluster/kubernetes.ca.crt
Update pod 'monitoring' with the label 'component' and the value 'web',kubectl label pods monitoring component=web
"Check to see if I can get the job named ""load-testing-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/load-testing-job -n staging
Print the supported non-namespaced resources,kubectl api-resources --storageVersionHashspaced=false
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-secrets deployment/scheduler-app-deployment
Get output from rocket-ranger from pod chat-app-pod,kubectl attach chat-app-pod -c rocket-ranger
Add a taint with key 'workload' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  workload=db-node-7:PreferNoSchedule
"Listen on port 8081 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8081:8080"
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=9090 --target-port=8000
Start a jenkins pod and let the container expose port 8084,kubectl run hazelcast --image=jenkins --port=8084
Update pod 'api' with the label 'role' and the value 'frontend',kubectl label pods api role=frontend
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8089 --target-port=808000
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.cluster-2-context.cluster staging-cluster
Create a new config map named api-config with key1=config1 and key2=config2,kubectl create configmap api-config --from-literal=settings=config1 --from-literal=key2=config2
"Listen on port 8000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8000:8088
Create a new secret named api-secret-key with keys for each file in folder bar,kubectl create secret generic api-secret-key --from-file=path/to/profiles
Create a deployment with a command,kubectl create deployment wordpress --image=golang -- go run hello.go
Get output from running the 'python --version' command in warp-drive from pod email-service-pod,kubectl exec email-service-pod -c warp-drive -- python --version
Delete the context for the testing-context cluster,kubectl config delete-context testing-context
Return snapshot of previous terminated quantum-quark container logs from pod e-commerce-pod,kubectl logs -p -c quantum-quark e-commerce-pod
Show metrics for the pods defined by label component=proxy,kubectl top pod -l component=proxy
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/backend-service"
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/app-config-dev deployment/backend-microservice-deployment
"Update node 'node-1' with a taint with key 'datacenter' and value 'dc-1' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes node-1 datacenter=dc-1:NoExecute
"Create a service for an ubuntu deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ubuntu --port=8081 --target-port=909000
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/security-service-pod 5432:9090
Get output from running the 'redis-server' command in astro-container from pod proxy-server-pod,kubectl exec proxy-server-pod -c astro-container -- redis-server
Create a new secret named monitoring-credentials-secret with keys for each file in folder bar,kubectl create secret generic monitoring-credentials-secret --from-file=path/to/parameters
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/database-pod
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/kube-system-config deployment/mydeployment
Remove from node 'kube-master-9' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes kube-master-9 dedicated:NoSchedule-
"Wait for the pod ""monitoring-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/monitoring-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
Create a new ClusterIP service named inventory-service-clusterip,kubectl create service clusterip inventory-service-clusterip --tcp=8181:9000
Add a taint with key 'zone' on nodes having label app=web-app,kubectl taint node -l app=web-app  zone=node-1:PreferNoSchedule
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=9090 --target-port=808100
Begin streaming the logs of the cosmic-container container in pod frontend-pod,kubectl logs -f -c cosmic-container frontend-pod
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/proxy-service-pod
"Listen on port 8080 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8080:9090"
Update pod 'proxy-server' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy-server role-
Set deployment user-management-deployment's service account to dashboard,kubectl set serviceaccount deployment user-management-deployment dashboard
Get output from running the 'go run hello.go' command in warp-drive from pod monitoring-pod,kubectl exec monitoring-pod -c warp-drive -- go run hello.go
Get the documentation of a specific field of a resource,kubectl explain resource=pods.status.conditions
Set deployment frontend-deployment's service account to tekton,kubectl set serviceaccount deployment frontend-deployment tekton
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir ingress-nginx/worker-pod-4::/tmp/bar
"Create a single ingress called 'app1-ingress' that directs requests to testing.com/input to svc # svc1:9090 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""testing.com/input=svc1:9090,tls=my-cert"""
"Delete pods and services with same names ""analytics"" and ""security""","kubectl delete pod,service analytics security"
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod chat-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach chat-app-pod -c code-explorer -i -t
"Listen on port 8000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8000:8080
"If the deployment named api-service-rs's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/api-service-rs
Create a job with a command,kubectl create job data-migration-job --image=mongo -- mongo --version
Restart a daemon set,kubectl rollout restart daemonset/my-deployment
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod mypod # and sends stdout/stderr from 'bash' back to the client,kubectl attach mypod -c code-explorer -i -t
"Listen on port 5432 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 5432:8000"
"If the deployment named webapp-replicaset's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/webapp-replicaset
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/monitoring-stack-deployment -c gateway-pod-1
Create a new secret named database-secret using a combination of a file and a literal,kubectl create secret generic database-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
"Create a service for a replication controller identified by type and name specified in ""centos-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f centos-controller.yaml --port=8181 --target-port=808300
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.metadata.name
Create a copy of e-commerce-pod changing all container images to busybox,kubectl debug e-commerce-pod --copy-to=debug-image-1 --set-image=*=busybox
"Wait for the pod ""frontend-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/frontend-pod
Describe one context in your kubeconfig file,kubectl config get-contexts client-2-context
"Delete pods and services with same names ""security"" and ""api""","kubectl delete pod,service security api"
Display only the most recent 43 lines of output in pod chat-app-pod,kubectl logs --tail=43 chat-app-pod
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=6379 --target-port=808900
Update pod 'gateway' with the label 'app' and the value 'myapp',kubectl label pods gateway app=myapp
"Listen on port 8088 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8088:8888
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/cache-cluster-deployment -c vpn-service-pod-1
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 5000 5000
"Create a role named ""foo"" with ResourceName specified",kubectl create role foo --verb=use --resource=pods --resource-name=load-balancer --resource-name=cache-redis
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod security-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach security-service-pod -c warp-drive -i -t
"Start a ubuntu pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ubuntu --overrides='{ ""apiVersion"": ""beta-1.0"", ""spec"": { ... } }'"
Remove from node 'db-node-7' the taint with key 'environment' and effect 'NoSchedule' if one exists,kubectl taint nodes db-node-7 environment:NoSchedule-
"Create a service for a replicated nginx using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs nginx --port=7000 --target-port=808000
Watch the rollout status of a deployment,kubectl rollout status deployment/services
Set the certificate-authority-data field on the kube-cluster-1 cluster,"kubectl config set clusters.kube-cluster-1.certificate-authority-data $(echo ""cert_data_here"" | base64 -i -)"
Add a taint with key 'datacenter' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  datacenter=prod-node-5:PreferNoSchedule
"Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment nginx --port=3306 --target-port=330600
Add a taint with key 'disktype' on nodes having label team=devops,kubectl taint node -l team=devops  disktype=db-node-7:PreferNoSchedule
Set deployment log-aggregator-deployment's service account to tiller,kubectl set serviceaccount deployment log-aggregator-deployment tiller
Import environment from a secret,kubectl set env --from=secret/gcp-service-account-secret deployment/scheduler-app-deployment
"Wait for the pod ""media-stream-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/media-stream-pod
Return snapshot of previous terminated time-machine container logs from pod gateway-pod,kubectl logs -p -c time-machine gateway-pod
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c stardust-shuttle -i -t
Delete the web-cluster cluster,kubectl config delete-cluster web-cluster
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/mypod 9090 3000
"Check to see if I can get the job named ""load-testing-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/load-testing-job -n development
Create a new config map named app-config-dev from the key=value pairs in the file,kubectl create configmap app-config-dev --from-file=path/to/profiles
Unset namespace in client-1-context context,kubectl config unset contexts.client-1-context.namespace
Create a deployment with a command,kubectl create deployment prometheus --image=centos -- sleep 3600
Get output from running the 'redis-server' command in cyber-sleuth from pod frontend-pod,kubectl exec frontend-pod -c cyber-sleuth -- redis-server
Add a taint with key 'disktype' on nodes having label myLabel,kubectl taint node -l myLabel  disktype=k8s-node-1:PreferNoSchedule
Show metrics for a given node,kubectl top node dev-node-4
Update deployment 'frontend-deployment' with a new environment variable,kubectl set env deployment/frontend-deployment CACHE_SIZE=64MB
Import environment from a secret,kubectl set env --from=secret/api-secret-key deployment/web-app-deployment
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/log-config deployment/load-balancer-deployment
"Listen on port 5000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/web-app-pod 5000:5432
Create a deployment named loadbalancer that runs the ethereum/client-go image with 7 replicas,kubectl create deployment loadbalancer --image=ethereum/client-go --replicas=7
Return snapshot logs from container gateway-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/gateway-deployment -c auth-service-pod-1
"Listen on port 5432 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 5432:8081"
Create a deployment named ingress that runs the confluentinc/cp-kafka image,kubectl create deployment ingress --image=confluentinc/cp-kafka
"Update node 'k8s-node-1' with a taint with key 'workload' and value 'high-priority' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes k8s-node-1 workload=high-priority:NoSchedule
Create an ingress with multiple hosts and the pathType as Prefix,"kubectl create ingress ingress1 --class=default \
--rule=""website.com/path*=svc:9091"" \
--rule=""bar.com/admin*=svc2:http"""
"Delete pods and services with same names ""security"" and ""proxy""","kubectl delete pod,service security proxy"
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.user-a-context.cluster sun-cluster
Create a copy of gateway-pod adding a debug container and changing container images,"kubectl debug gateway-pod -it --copy-to=debug-image-api --image=debian --set-image=logger=logging-app:debug,cache=redis:alpine"
"Listen on port 3000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/e-commerce-pod 3000:8080
List resource information in custom columns,"kubectl get pod gateway-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
"Get output from running the 'npm --version' command from pod proxy-service-pod, using the first container by default",kubectl exec proxy-service-pod -- npm --version
"Delete pods and services with same names ""payment"" and ""api""","kubectl delete pod,service payment api"
"Create a service for a replicated ubuntu, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ubuntu --port=8080 --target-port=801000
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.team-beta-context.cluster kube-cluster-1
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=e2e
Create a new ExternalName service named external-authentication-service,kubectl create service externalname external-authentication-service --external-name test-site.org
Update image of all containers of daemonset test to 'node:14.17.3',kubectl set image daemonset test *=node:14.17.3
Create a deployment with a command,kubectl create deployment proxy --image=confluentinc/cp-kafka -- kafka-topics --list
Set the server field on the star-cluster cluster to https://1.2.3.4,kubectl config set clusters.star-cluster.server https://1.2.3.4
Return snapshot logs from container web-app-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/web-app-deployment -c media-stream-pod-1
"Set a deployment's ruby:3.0.2 container image to 'ruby', and its busybox container image to 'busybox'",kubectl set image deployment/ruby busybox=busybox ruby=ruby:3.0.2
"Create a service for a replicated hazelcast, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc hazelcast --port=8082 --target-port=637900
Set the server field on the moon-cluster cluster to https://1.2.3.4,kubectl config set clusters.moon-cluster.server https://1.2.3.4
Rename the context 'testing-context' to 'app-2-context' in your kubeconfig file,kubectl config rename-context testing-context app-2-context
"Update pod 'cdn' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods cdn owner='alice-smith'
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=7000:8000
Roll back to the previous deployment with dry-run,kubectl rollout undo --dry-run=server deployment/app-v2
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/preferences/file2.txt
Return snapshot logs from container mydeployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/mydeployment -c vpn-service-pod-1
Set deployment notification-handler-deployment's service account to cert-manager,kubectl set serviceaccount deployment notification-handler-deployment cert-manager
"Create a service for a replicated hazelcast using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs hazelcast --port=80 --target-port=808400
"Auto scale a replication controller ""payment"", with the number of pods between 1 and 6, target CPU utilization at 81%",kubectl autoscale rc payment --max=6 --cpu-percent=81
"Check to see if I can get the job named ""notification-sender-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/notification-sender-job -n development
Delete the cloud-user user,kubectl config delete-user cloud-user
"Delete pods and services with same names ""monitoring"" and ""cdn""","kubectl delete pod,service monitoring cdn"
"Listen on port 8088 locally, forwarding to 6379 in the pod",kubectl port-forward pod/frontend-pod 8088:6379
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/cache-cluster-deployment -c chat-app-pod-1
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=80 --target-port=808200
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 5000 8888
Set deployment database-deployment's service account to cert-manager,kubectl set serviceaccount deployment database-deployment cert-manager
"Create a single ingress called 'api-v2-ingress' that directs requests to testing.com/input to svc # svc1:8084 with a tls secret ""my-cert""","kubectl create ingress api-v2-ingress --rule=""testing.com/input=svc1:8084,tls=my-cert"""
Create a new config map named kube-system-config from an env file,kubectl create configmap kube-system-config --from-env-file=path/to/configs.env
View the last-applied-configuration annotations by file in JSON,kubectl apply view-last-applied -f conf.yaml -o json
Get output from running the 'wp' command in time-machine from pod email-service-pod,kubectl exec email-service-pod -c time-machine -- wp
Update image of all containers of daemonset development to 'debian:11.0',kubectl set image daemonset development *=debian:11.0
Create a new ClusterIP service named notification-service-clusterip,kubectl create service clusterip notification-service-clusterip --tcp=8083:8082
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/gateway-pod
Add a taint with key 'environment' on nodes having label role=database,kubectl taint node -l role=database  environment=node-1:PreferNoSchedule
Return snapshot logs from container web-app-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/web-app-deployment -c email-service-pod-1
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/frontend-service"
Create a new service account named argocd,kubectl create serviceaccount argocd
Create a copy of api-service-pod changing all container images to redis,kubectl debug api-service-pod --copy-to=debug-image-1 --set-image=*=redis
Update pod 'media-stream' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods media-stream tier-
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/payment-gateway-pod
"Create a single ingress called 'api-v2-ingress' that directs requests to foo.com/bar to svc # svc1:8888 with a tls secret ""my-cert""","kubectl create ingress api-v2-ingress --rule=""foo.com/bar=svc1:8888,tls=my-cert"""
Start a ubuntu pod and let the container expose port 8010,kubectl run hazelcast --image=ubuntu --port=8010
Create a new ExternalName service named my-ns,kubectl create service externalname my-ns --external-name sandbox-site.co
Set the resource request and limits for all containers in jenkins,"kubectl set resources deployment jenkins --limits=cpu=200m,memory=512Mi --requests=cpu=500m,memory=64Mi"
Update pod 'proxy' with the label 'tier' and the value 'backend',kubectl label pods proxy tier=backend
Set deployment log-aggregator-deployment's service account to spinnaker,kubectl set serviceaccount deployment log-aggregator-deployment spinnaker
"Auto scale a deployment ""analytics"", with the number of pods between 2 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment analytics --min=2 --max=14
"Delete pods and services with same names ""frontend"" and ""chat-app""","kubectl delete pod,service frontend chat-app"
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/api-service-pod 8081:5432
Create a deployment named loadbalancer that runs the docker.elastic.co/elasticsearch/elasticsearch image and expose port 6379,kubectl create deployment loadbalancer --image=docker.elastic.co/elasticsearch/elasticsearch --port=6379
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 6379 3000
"Create a service for a replicated nginx using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs nginx --port=8181 --target-port=808000
Create a job with a command,kubectl create job batch-processing --image=python -- python --version
Create a cron job with a command,"kubectl create cronjob daily-report --image=nginx --schedule=""*/1 * * * *"" -- nginx"
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-config-prod deployment/mydeployment
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/global-config deployment/cache-cluster-deployment
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=properties=/path/to/configurations/file1.txt --from-file=key1=/path/to/parameters/file2.txt
Remove from node 'db-node-7' all the taints with key 'dedicated',kubectl taint nodes db-node-7 dedicated-
"Update pod 'api' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods api status=unhealthy
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/analytics-platform-deployment -c vpn-service-pod-1
Return snapshot logs from container frontend-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/frontend-deployment -c monitoring-pod-1
Use an alternative editor,"KUBE_EDITOR=""code"" kubectl edit svc/monitoring-service"
Add a taint with key 'dedicated' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  dedicated=app-node-6:PreferNoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node monitoring-node-15 -p $'spec:\n type: LoadBalancer'
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 5000 9090
"Listen on port 8088 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8088:8000"
Rename the context 'old-name' to 'app-1-context' in your kubeconfig file,kubectl config rename-context old-name app-1-context
Return only the phase value of the specified pod,kubectl get -o template pod/frontend-pod --template={{.status.phase}}
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/configs/file2.txt
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8081 9090
"Update pod 'proxy-server' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server criticality=high
Return snapshot logs from container database-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/database-deployment -c cdn-service-pod-1
Import environment from a secret,kubectl set env --from=secret/private-key-secret deployment/order-processing-deployment
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""beta-apps"" API group",kubectl get deployments.dev-2.2.0.beta-apps -o yaml
Get output from running the 'pip --version' command in stardust-shuttle from pod mypod,kubectl exec mypod -c stardust-shuttle -- pip --version
Create a new ExternalName service named external-database-service,kubectl create service externalname external-database-service --external-name test-site.org
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/settings/file2.txt
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""third-party-apps"" API group",kubectl get deployments.rc-1.1.0.third-party-apps -o json
Create a new config map named ui-config based on folder data,kubectl create configmap ui-config --from-file=path/to/data
Create a copy of security-service-pod changing all container images to ruby,kubectl debug security-service-pod --copy-to=debug-image-web --set-image=*=ruby
Update pod 'frontend' with the label 'env' and the value 'production',kubectl label pods frontend env=production
Create a new NodePort service named my-ns,kubectl create service nodeport my-ns --tcp=3306:8082
Create a job with a command,kubectl create job security-scan-job --image=wordpress -- mysql --version
"Auto scale a replication controller ""foo"", with the number of pods between 1 and 4, target CPU utilization at 20%",kubectl autoscale rc foo --max=4 --cpu-percent=20
"Listen on port 8081 locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod 8081:3000
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""extensions"" API group",kubectl get deployments.rc-1.1.0.extensions -o json
Start a confluentinc/cp-kafka pod and let the container expose port 6379,kubectl run hazelcast --image=confluentinc/cp-kafka --port=6379
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-name-config deployment/scheduler-app-deployment
Roll back to daemonset revision 1,kubectl rollout undo daemonset/development --to-revision=1
Update pod 'email' only if the resource is unchanged from version 1,kubectl label pods email status=unhealthy --resource-version=1
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=5001 --target-port=808300
Copy /tmp/foo_dir local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo_dir openfaas/metrics-exporter-pod-10:/etc/kubernetes
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/queue-processing-job -n cert-manager
Add a taint with key 'special' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  special=node-1:PreferNoSchedule
Edit the data in options.json in JSON then create the resource using the edited data,kubectl create -f options.json --edit -o json
Update pod 'foo' with the label 'role' and the value 'backend',kubectl label pods foo role=backend
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-config-prod deployment/user-management-deployment
"Listen on port 8081 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8081:8000
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=cluster-beta
Create a new ExternalName service named external-payment-gateway-service,kubectl create service externalname external-payment-gateway-service --external-name blog-test.blog
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=moon-cluster
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/email-service"
Create a deployment with a command,kubectl create deployment drupal --image=redis -- redis-cli
Begin streaming the logs from all containers in pods defined by label tier=frontend,kubectl logs -f -l tier=frontend --all-containers=true
"If the deployment named webapp-replicaset's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/webapp-replicaset
"Update pod 'api' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods api monitoring-tool='Prometheus'
Show all logs from pod email-service-pod written in the last hour,kubectl logs --since=1h email-service-pod
Delete a pod using the type and name specified in params.json,kubectl delete -f ./params.json
"Listen on port 5432 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 5432:8000
Update pod 'proxy' with the label 'role' and the value 'cache',kubectl label pods proxy role=cache
Remove from node 'edge-node-10' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes edge-node-10 disktype:NoSchedule-
Start a jenkins pod and let the container expose port 7000,kubectl run hazelcast --image=jenkins --port=7000
"Update pod 'proxy' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods proxy compliance-level='PCI-DSS'
"Delete pods and services with same names ""frontend"" and ""media-stream""","kubectl delete pod,service frontend media-stream"
Add a taint with key 'workload' on nodes having label service=auth,kubectl taint node -l service=auth  workload=web-node-8:PreferNoSchedule
"Create a cluster role named ""reader"" with API Group specified","kubectl create clusterrole reader --verb=use,proxy,delete --resource=persistentvolumeclaims.storage.k8s.io"
"Get output from running the 'redis-server' command from pod database-pod, using the first container by default",kubectl exec database-pod -- redis-server
Begin streaming the logs of the time-machine container in pod mypod,kubectl logs -f -c time-machine mypod
Start a ruby pod and let the container expose port 9092,kubectl run hazelcast --image=ruby --port=9092
Get output from running the 'gem --version' command in nebula-navigator from pod auth-service-pod,kubectl exec auth-service-pod -c nebula-navigator -- gem --version
Add a taint with key 'zone' on nodes having label component=proxy,kubectl taint node -l component=proxy  zone=node-2:PreferNoSchedule
Update pod 'vpn' with the label 'unhealthy' and the value 'true',kubectl label pods vpn unhealthy=true
Get output from running the 'pip --version' command in stardust-shuttle from pod vpn-service-pod,kubectl exec vpn-service-pod -c stardust-shuttle -- pip --version
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""custom-deployments"" API group",kubectl get deployments.dev-2.2.0.custom-deployments -o yaml
Start a ethereum/client-go pod and let the container expose port 8089,kubectl run hazelcast --image=ethereum/client-go --port=8089
Create a deployment named auth that runs the hazelcast image with 7 replicas,kubectl create deployment auth --image=hazelcast/hazelcast --replicas=7
Embed certificate authority data for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --embed-certs --certificate-authority=~/.kube/edge-cluster/kubernetes.ca.crt
Create a cron job with a command,"kubectl create cronjob metrics-collection --image=wordpress --schedule=""*/1 * * * *"" -- wp"
"Check to see if I can get the job named ""data-migration-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/data-migration-job -n kube-ingress
Start a amazonlinux pod and let the container expose port 8443,kubectl run hazelcast --image=amazonlinux --port=8443
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/php
Create a new ClusterIP service named ldap-service-clusterip,kubectl create service clusterip ldap-service-clusterip --tcp=27017:3001
Add a taint with key 'cpu-type' on nodes having label role=database,kubectl taint node -l role=database  cpu-type=node-2:PreferNoSchedule
"Listen on port 8888 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 8888:5432"
Start a alpine pod and let the container expose port 9000,kubectl run hazelcast --image=alpine --port=9000
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/notification-handler-deployment 8081 9090
Start a nginx pod and let the container expose port 8084,kubectl run hazelcast --image=nginx --port=8084
Return snapshot logs from pod proxy-service-pod with only one container,kubectl logs proxy-service-pod
Return snapshot logs from container load-balancer-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/load-balancer-deployment -c media-stream-pod-1
"Create a single ingress called 'api-v2-ingress' that directs requests to foo.com/module to svc # svc1:9091 with a tls secret ""my-cert""","kubectl create ingress api-v2-ingress --rule=""foo.com/module=svc1:9091,tls=my-cert"""
Import environment from a config map with a prefix,kubectl set env --from=configmap/monitoring-config --prefix=MYSQL_ deployment/search-engine-deployment
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""backup-apps"" API group",kubectl get deployments.alpha-2.0.backup-apps -o json
"Listen on port 8088 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8088:6379
Watch the rollout status of a deployment,kubectl rollout status deployment/namespace-1
"Delete pods and services with same names ""gateway"" and ""backend""","kubectl delete pod,service gateway backend"
"Get output from running 'go' command from the first pod of the service monitoring-service, using the first container by default",kubectl exec svc/monitoring-service -- go
Create a deployment named auth that runs the wordpress image,kubectl create deployment auth --image=wordpress
Set deployment gateway-deployment's service account to spinnaker,kubectl set serviceaccount deployment gateway-deployment spinnaker
"Create a service for a replicated nginx using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs nginx --port=8443 --target-port=500100
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""external-apps"" API group",kubectl get deployments.feature-branch-2.3.0.external-apps -o json
"Listen on port 8081 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8081:5432"
Add a taint with key 'hardware' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  hardware=app-node-6:PreferNoSchedule
Add a taint with key 'app' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  app=node-1:PreferNoSchedule
Create a cron job with a command,"kubectl create cronjob monthly-audit --image=node --schedule=""*/1 * * * *"" -- node"
Begin streaming the logs of the rocket-ranger container in pod cdn-service-pod,kubectl logs -f -c rocket-ranger cdn-service-pod
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.testing-context.cluster kube-cluster-2
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/mypod 8000 3000
Update pod 'monitoring' with the label 'component' and the value 'api',kubectl label pods monitoring component=api
Start a golang pod and let the container expose port 9090,kubectl run hazelcast --image=golang --port=9090
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8088 9090
Import environment from a secret,kubectl set env --from=secret/app-config-secret deployment/backend-microservice-deployment
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=properties=/path/to/properties/file1.txt --from-file=key1=/path/to/properties/file2.txt
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/configs/file2.txt
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/auth-service-pod
"Get output from running the 'dotnet --list-runtimes' command from pod mypod, using the first container by default",kubectl exec mypod -- dotnet --list-runtimes
"Update pod 'backend' with the annotation 'security-scan-status' and the value 'pass', overwriting any existing value",kubectl annotate --overwrite pods backend security-scan-status='pass'
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=8181 --target-port=808800
Edit the service named 'email-service',kubectl edit svc/email-service
"Get output from running 'mysql' command from the first pod of the deployment authentication-service-deployment, using the first container by default",kubectl exec deploy/authentication-service-deployment -- mysql
"Set a deployments wordpress container cpu limits to ""200m"" and memory to ""256Mi""","kubectl set resources deployment wordpress -c=nginx --limits=cpu=200m,memory=256Mi"
"Listen on port 8080 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8080:8000"
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/env-vars deployment/scheduler-app-deployment
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/profiles/file2.txt
Remove from node 'storage-node-13' all the taints with key 'dedicated',kubectl taint nodes storage-node-13 dedicated-
"Update pod 'chat-app' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app team='frontend team'
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=cloud-cluster
Edit the job 'data-synchronization-job' in JSON using the v1 API format,kubectl edit job.v1.batch/data-synchronization-job -o json
Create a deployment named scheduler that runs the jenkins image,kubectl create deployment scheduler --image=jenkins
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/proxy-service-pod
Create a new secret named azure-storage-secret with keys for each file in folder bar,kubectl create secret generic azure-storage-secret --from-file=path/to/settings
Display only the most recent 20 lines of output in pod frontend-pod,kubectl logs --tail=20 frontend-pod
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.team-beta-context.cluster moon-cluster
Rename the context 'old-name' to 'client-1-context' in your kubeconfig file,kubectl config rename-context old-name client-1-context
Add to node 'worker-node-3' a taint with key 'datacenter' and no value,kubectl taint nodes worker-node-3 datacenter:NoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node gpu-node-12 -p '{""stringData"":{""password"":""new-password""}'"
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/api-server-deployment SMTP_HOST=smtp.example.com -o yaml
Rename the context 'dev-context' to 'user-b-context' in your kubeconfig file,kubectl config rename-context dev-context user-b-context
Remove from node 'prod-node-5' all the taints with key 'workload',kubectl taint nodes prod-node-5 workload-
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node monitoring-node-15 -p '{""spec"":{""someField"":""newValue""}'"
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""testing-apps"" API group",kubectl get deployments.v2.0.0.testing-apps -o json
Create a new config map named app-config from an env file,kubectl create configmap app-config --from-env-file=path/to/options.env
Get output from running the 'pip --version' command in code-explorer from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c code-explorer -- pip --version
Add a taint with key 'datacenter' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  datacenter=k8s-node-1:PreferNoSchedule
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""beta-apps"" API group",kubectl get deployments.v2.1.0.beta-apps -o yaml
Describe a pod,kubectl describe pods/front-end-pod-12
List one or more resources by their type and names,kubectl get rc/web service/proxy-service-rc pods/frontend-pod
Roll back to daemonset revision 3,kubectl rollout undo daemonset/namespace-2 --to-revision=3
Return snapshot of previous terminated rocket-ranger container logs from pod chat-app-pod,kubectl logs -p -c rocket-ranger chat-app-pod
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/auth-service-pod
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/api-service-pod 8088:8000
Set deployment notification-handler-deployment's service account to tiller,kubectl set serviceaccount deployment notification-handler-deployment tiller
"Listen on port 8888 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8888:3000
"Listen on port 5000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5000:5000
Create a new ExternalName service named external-geolocation-service,kubectl create service externalname external-geolocation-service --external-name education-edu.edu
Get output from running the 'redis-server --version' command in code-explorer from pod media-stream-pod,kubectl exec media-stream-pod -c code-explorer -- redis-server --version
Begin streaming the logs of the time-machine container in pod frontend-pod,kubectl logs -f -c time-machine frontend-pod
Create a job with a command,kubectl create job testing --image=ruby -- irb
"Create a service for a replicated php, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc php --port=8082 --target-port=300000
Embed certificate authority data for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --embed-certs --certificate-authority=~/.kube/cluster-beta/kubernetes.ca.crt
Get output from running the 'go' command in warp-drive from pod email-service-pod,kubectl exec email-service-pod -c warp-drive -- go
Set the cluster field in the my-context context to kube-cluster-2,kubectl config set contexts.prod-context.cluster kube-cluster-2
Roll back to daemonset revision 5,kubectl rollout undo daemonset/nginx --to-revision=5
Display only the most recent 43 lines of output in pod log-aggregator-pod,kubectl logs --tail=43 log-aggregator-pod
"Listen on port 9090 locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod 9090:8888
Create a copy of proxy-server-pod adding a debug container and changing container images,"kubectl debug proxy-server-pod -it --copy-to=debug-image-api --image=debian --set-image=web=nginx:latest,mailer=mailer:latest"
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json expiration-date='2024-12-31'
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-settings deployment/payment-processor-deployment
Update image of all containers of daemonset namespace-1 to 'golang:1.17',kubectl set image daemonset namespace-1 *=golang:1.17
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.service-account-context.cluster cluster-alpha
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/mypod 8888:8888
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/db-config deployment/load-balancer-deployment
Roll back to the previous deployment,kubectl rollout undo deployment/nginx
"Update pod 'gateway' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway compliance-level=PCI-DSS
"Listen on port 9090 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 9090:5432
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=my-k8s-cluster
Create a copy of web-app-pod changing all container images to docker.elastic.co/elasticsearch/elasticsearch,kubectl debug web-app-pod --copy-to=debug-image-app --set-image=*=docker.elastic.co/elasticsearch/elasticsearch
"Create a role named ""foo"" with ResourceName specified",kubectl create role foo --verb=proxy --resource=pods --resource-name=app-worker-1 --resource-name=auth-service
Get output from running the 'python' command in quantum-quark from pod analytics-pod,kubectl exec analytics-pod -c quantum-quark -- python
Set deployment order-processing-deployment's service account to vault,kubectl set serviceaccount deployment order-processing-deployment vault
Create a deployment named wordpress that runs the mysql image and expose port 8080,kubectl create deployment wordpress --image=mysql --port=8080
"Listen on port 3000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 3000:8088"
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/web-app-pod 6379 8888
Get output from code-explorer from pod media-stream-pod,kubectl attach media-stream-pod -c code-explorer
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/analytics-pod
Add a taint with key 'zone' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  zone=kube-master-9:PreferNoSchedule
Create a new ExternalName service named external-authentication-service,kubectl create service externalname external-authentication-service --external-name tutorial-ai.ai
Get output from running the 'mongo' command in rocket-ranger from pod web-app-pod,kubectl exec web-app-pod -c rocket-ranger -- mongo
Add a taint with key 'app' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  app=app-node-6:PreferNoSchedule
Get output from running the 'jenkins --version' command in time-machine from pod vpn-service-pod,kubectl exec vpn-service-pod -c time-machine -- jenkins --version
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node dev-node-4 -p $'spec:\n someField: newValue'
Return snapshot logs from container notification-handler-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/notification-handler-deployment -c email-service-pod-1
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""legacy-apps"" API group",kubectl get deployments.legacy-1.0.0.legacy-apps -o json
"Create a single ingress called 'app-loadbalancer-ingress' that directs requests to website.com/input to svc # svc1:3306 with a tls secret ""my-cert""","kubectl create ingress app-loadbalancer-ingress --rule=""website.com/input=svc1:3306,tls=my-cert"""
Import environment from a secret,kubectl set env --from=secret/docker-registry-secret deployment/email-server-deployment
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8081 5432
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8443 --target-port=808400
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json SLA='99.9% uptime'
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.edge-context.cluster my-k8s-cluster
"Wait for the pod ""payment-gateway-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/payment-gateway-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/configs/file2.txt
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/monitoring-config deployment/authentication-service-deployment
"Listen on port 8081 locally, forwarding to 3000 in the pod",kubectl port-forward pod/proxy-server-pod 8081:3000
List a single pod in YAML output format,kubectl get -o yaml pod security-service-pod
Add a taint with key 'zone' on nodes having label service=auth,kubectl taint node -l service=auth  zone=web-node-8:PreferNoSchedule
Add to node 'monitoring-node-15' a taint with key 'workload' and no value,kubectl taint nodes monitoring-node-15 workload:NoSchedule
Create a copy of payment-gateway-pod changing all container images to php,kubectl debug payment-gateway-pod --copy-to=debug-image-1 --set-image=*=php
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/analytics-pod 3000:5000
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/proxy-service-pod
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/log-config deployment/monitoring-stack-deployment
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/backend-service"
"Listen on port 8888 locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod 8888:8088
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/search-service 8088:https
"Get output from running 'postgres' command from the first pod of the deployment analytics-platform-deployment, using the first container by default",kubectl exec deploy/analytics-platform-deployment -- postgres
Set deployment notification-handler-deployment's service account to fluentd,kubectl set serviceaccount deployment notification-handler-deployment fluentd
"Listen on port 8000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/security-service-pod 8000:6379
Get output from running the 'geth' command in rocket-ranger from pod frontend-pod,kubectl exec frontend-pod -c rocket-ranger -- geth
Update image of all containers of daemonset app-v2 to 'java:11.0.12',kubectl set image daemonset app-v2 *=java:11.0.12
"Get output from running the 'mongo' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- mongo
"Listen on port 3000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod 3000:8088
"Start a ethereum/client-go pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ethereum/client-go --overrides='{ ""apiVersion"": ""alpha-2.0"", ""spec"": { ... } }'"
Add a taint with key 'zone' on nodes having label release=beta,kubectl taint node -l release=beta  zone=k8s-node-1:PreferNoSchedule
Create a new config map named env-vars based on folder data,kubectl create configmap env-vars --from-file=path/to/data
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""apps"" API group",kubectl get deployments.v1.0.0.apps -o yaml
Create a new secret named payment-gateway-secret with keys for each file in folder bar,kubectl create secret generic payment-gateway-secret --from-file=path/to/parameters
Remove from node 'app-node-6' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes app-node-6 hardware:NoExecute-
Remove from node 'k8s-node-1' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes k8s-node-1 zone:PreferNoSchedule-
Create a new secret named ssh-key-secret from an env file,kubectl create secret generic ssh-key-secret --from-env-file=path/to/properties.env
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/settings/file2.txt
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/authentication-service"
"If the deployment named mysql's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/mysql
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/e2e/kubernetes.ca.crt
"If the deployment named payment-service-rs's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/payment-service-rs
Create a deployment named auth that runs the python image and expose port 5432,kubectl create deployment auth --image=python --port=5432
Add a taint with key 'environment' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  environment=dev-node-4:PreferNoSchedule
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/email-service"
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=3001 --target-port=500000
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/namespace-config deployment/web-app-deployment
Add a taint with key 'special' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  special=web-node-8:PreferNoSchedule
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""prod-apps"" API group",kubectl get deployments.stable-2.0.0.prod-apps -o yaml
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/ui-config deployment/log-aggregator-deployment
Add a taint with key 'disktype' on nodes having label component=proxy,kubectl taint node -l component=proxy  disktype=db-node-7:PreferNoSchedule
"List deployments in JSON output format, in the ""custom-version"" version of the ""custom-deployments"" API group",kubectl get deployments.custom-version.custom-deployments -o json
Print the address of the control plane and cluster services,kubectl cluster-info
Create a job with a command,kubectl create job database-seeding-job --image=ethereum/client-go -- geth
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller backend-rc
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""extensions"" API group",kubectl get deployments.beta-1.0.extensions -o json
"Embed client certificate data in the ""john.doe"" entry",kubectl config set-credentials john.doe --client-certificate=~/.kube/admin.crt --embed-certs=true
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-settings deployment/database-deployment
"Set a deployments wordpress container cpu limits to ""100m"" and memory to ""2Gi""","kubectl set resources deployment wordpress -c=nginx --limits=cpu=100m,memory=2Gi"
Watch the rollout status of a deployment,kubectl rollout status deployment/app-v2
Begin streaming the logs of the nebula-navigator container in pod monitoring-pod,kubectl logs -f -c nebula-navigator monitoring-pod
List the environment variables defined on a deployments 'frontend-deployment',kubectl set env deployment/frontend-deployment --list
Copy /tmp/foo local file to /etc/kubernetes in a remote pod in namespace,kubectl cp /tmp/foo default/worker-pod-4:/etc/kubernetes
Create a new secret named password-secret with keys for each file in folder bar,kubectl create secret generic password-secret --from-file=path/to/configs
Display only the most recent 12 lines of output in pod backend-pod,kubectl logs --tail=12 backend-pod
"Update pod 'email' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods email deployment-script='https://example.com/deploy.sh'
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node gpu-node-12 -p '{""data"":{""key"":""new-value""}'"
Rename the context 'dev-context' to 'new-context' in your kubeconfig file,kubectl config rename-context dev-context new-context
"Listen on port 8088 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8088:5432"
"Auto scale a replication controller ""gateway"", with the number of pods between 1 and 2, target CPU utilization at 40%",kubectl autoscale rc gateway --max=2 --cpu-percent=40
"Listen on port 9090 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 9090:8080"
"Listen on port 6379 locally, forwarding to 6379 in the pod",kubectl port-forward pod/log-aggregator-pod 6379:6379
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/api-service-pod
"Update pod 'foo' with the annotation 'deployment-script' and the value 'https://example.com/deploy.sh' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo deployment-script='https://example.com/deploy.sh'
Describe a pod,kubectl describe pods/auth-service
Create a deployment named wordpress that runs the mcr.microsoft.com/dotnet/core/runtime image with 4 replicas,kubectl create deployment wordpress --image=mcr.microsoft.com/dotnet/core/runtime --replicas=4
Return snapshot of previous terminated astro-container container logs from pod mypod,kubectl logs -p -c astro-container mypod
"Listen on port 6379 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 6379:8088
"Get output from running 'redis-server --version' command from the first pod of the service cache-service, using the first container by default",kubectl exec svc/cache-service -- redis-server --version
"Update pod 'security' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods security alert-email='alerts@example.com'
Get output from running the 'psql' command in mycontainer from pod proxy-service-pod,kubectl exec proxy-service-pod -c mycontainer -- psql
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json monitoring-tool=Prometheus
"Create a cluster role name ""view"" with AggregationRule specified","kubectl create clusterrole view --aggregation-rule=""rbac.example.com/aggregate-to-security=true"""
Get output from running the 'redis-server' command in cosmic-container from pod email-service-pod,kubectl exec email-service-pod -c cosmic-container -- redis-server
Begin streaming the logs of the time-machine container in pod database-pod,kubectl logs -f -c time-machine database-pod
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/backend-pod :8081
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""api-v2"" API group",kubectl get deployments.alpha-2.0.api-v2 -o json
Get output from running the 'dotnet --list-sdks' command in warp-drive from pod proxy-server-pod,kubectl exec proxy-server-pod -c warp-drive -- dotnet --list-sdks
Remove from node 'worker-node-3' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes worker-node-3 workload:NoSchedule-
"Listen on port 8000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/backend-pod 8000:6379
Get output from running the 'wp' command in code-explorer from pod frontend-pod,kubectl exec frontend-pod -c code-explorer -- wp
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod security-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach security-service-pod -c quantum-quark -i -t
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp kube-public/database-pod-2:/tmp/foo_dir :/tmp/bar
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/security-service-pod 3000 6379
Get output from running the 'elasticsearch' command in stardust-shuttle from pod auth-service-pod,kubectl exec auth-service-pod -c stardust-shuttle -- elasticsearch
Create a new secret named ssl-key-secret with keys for each file in folder bar,kubectl create secret generic ssl-key-secret --from-file=path/to/data
Update deployment 'order-processing-deployment' with a new environment variable,kubectl set env deployment/order-processing-deployment QUEUE_NAME=task-queue
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""my-apps"" API group",kubectl get deployments.legacy-1.0.0.my-apps -o yaml
"Check to see if I can get the job named ""certificates-renewal-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/certificates-renewal-job -n default
"Listen on port 5432 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 5432:8088"
Add a taint with key 'app' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  app=monitoring-node-15:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-name-config deployment/log-aggregator-deployment
Add to node 'gpu-node-12' a taint with key 'workload' and no value,kubectl taint nodes gpu-node-12 workload:NoSchedule
Copy :/tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kube-proxy/worker-pod-4::/tmp/foo :/tmp/bar
"Create a single ingress called 'public-api-ingress' that directs requests to website.com/example to svc # svc1:9000 with a tls secret ""my-cert""","kubectl create ingress public-api-ingress --rule=""website.com/example=svc1:9000,tls=my-cert"""
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/app-name-config deployment/mydeployment
"If the deployment named foo's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/foo
Create a cron job with a command,"kubectl create cronjob daily-report --image=ruby --schedule=""*/1 * * * *"" -- irb"
"Update pod 'web' with the annotation 'deployment-script' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods web deployment-script='https://example.com/deploy.sh'
"Update pod 'analytics' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics monitoring-tool=Prometheus
"Delete pods and services with same names ""chat-app"" and ""gateway""","kubectl delete pod,service chat-app gateway"
"Delete pods and services with same names ""chat-app"" and ""database""","kubectl delete pod,service chat-app database"
Update image of all containers of daemonset test to 'openjdk:16.0.2',kubectl set image daemonset test *=openjdk:16.0.2
"Get output from running 'apk add curl' command from the first pod of the service database-service, using the first container by default",kubectl exec svc/database-service -- apk add curl
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod web-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach web-app-pod -c astro-container -i -t
Update deployment 'gateway-deployment' with a new environment variable,kubectl set env deployment/gateway-deployment DB_HOST=localhost
Add to node 'gpu-node-12' a taint with key 'dedicated' and no value,kubectl taint nodes gpu-node-12 dedicated:NoSchedule
Remove from node 'monitoring-node-15' the taint with key 'workload' and effect 'NoSchedule' if one exists,kubectl taint nodes monitoring-node-15 workload:NoSchedule-
Update pod 'chat-app' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods chat-app release-
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=cluster-gamma
Update pod 'chat-app' with the label 'component' and the value 'worker',kubectl label pods chat-app component=worker
Remove from node 'node-2' all the taints with key 'environment',kubectl taint nodes node-2 environment-
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod 3000:5432
Return snapshot logs from container authentication-service-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/authentication-service-deployment -c vpn-service-pod-1
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=sun-cluster
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.staging-context.cluster on-prem-cluster
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=kube-cluster-1
Watch the rollout status of a deployment,kubectl rollout status deployment/nginx
Switch to raw terminal mode; sends stdin to 'bash' in cyber-sleuth from pod cdn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach cdn-service-pod -c cyber-sleuth -i -t
Create a copy of frontend-pod changing all container images to ubuntu,kubectl debug frontend-pod --copy-to=debug-image-app --set-image=*=ubuntu
Create a new secret named api-key-secret from an env file,kubectl create secret generic api-key-secret --from-env-file=path/to/configurations.env
View the details of daemonset revision 7,kubectl rollout history daemonset/namespace-3 --revision=7
Begin streaming the logs of the time-machine container in pod email-service-pod,kubectl logs -f -c time-machine email-service-pod
Add to node 'storage-node-13' a taint with key 'app' and no value,kubectl taint nodes storage-node-13 app:NoSchedule
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=8088:8088
Update pod 'security' with the label 'role' and the value 'backend',kubectl label pods security role=backend
"Auto scale a deployment ""auth"", with the number of pods between 5 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment auth --min=5 --max=9
Update pod 'foo' with the label 'component' and the value 'worker',kubectl label pods foo component=worker
Start a wordpress pod,kubectl run nginx --image=wordpress
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node prod-node-5 -p '{""spec"":{""someField"":""newValue""}'"
Set the client-key-data field in the k8s-admin user using --set-raw-bytes option,kubectl config set users.k8s-admin.client-key-data cert_data_here --set-raw-bytes=true
"Listen on port 8080 locally, forwarding to 5432 in the pod",kubectl port-forward pod/security-service-pod 8080:5432
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/e-commerce-pod
Get output from running the 'ash' command in time-machine from pod security-service-pod,kubectl exec security-service-pod -c time-machine -- ash
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml owner='alice smith'
"Check to see if I can get the job named ""security-scan-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/security-scan-job -n kube-node-lease
Rename the context 'staging-context' to 'client-1-context' in your kubeconfig file,kubectl config rename-context staging-context client-1-context
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""my-apps"" API group",kubectl get deployments.v1.1.1.my-apps -o yaml
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8081 8088
Import environment from a secret,kubectl set env --from=secret/payment-gateway-secret deployment/api-server-deployment
Set deployment scheduler-app-deployment's service account to my-service-account,kubectl set serviceaccount deployment scheduler-app-deployment my-service-account
Create a new config map named env-vars from an env file,kubectl create configmap env-vars --from-env-file=path/to/configs.env
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""external-apps"" API group",kubectl get deployments.legacy-1.0.0.external-apps -o json
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json backup-strategy='daily backups'
Add a taint with key 'app' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  app=node-1:PreferNoSchedule
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.user-b-context.cluster my-k8s-cluster
Show metrics for a given pod and its containers,kubectl top pod web-app-pod --containers
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/gateway-pod
Create a new config map named monitoring-config with key1=config1 and key2=config2,kubectl create configmap monitoring-config --from-literal=conf=config1 --from-literal=data=config2
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=conf=/path/to/options/file1.txt --from-file=data=/path/to/configs/file2.txt
"Update pod 'database' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods database owner='alice-smith'
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/auth-service-pod
Set deployment database-deployment's service account to dashboard,kubectl set serviceaccount deployment database-deployment dashboard
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp kube-node-lease/load-balancer-pod-9::/tmp/foo /tmp/bar
Add a taint with key 'special' on nodes having label myLabel,kubectl taint node -l myLabel  special=app-node-6:PreferNoSchedule
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/frontend-pod 8080:8081
"Start a nginx pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=nginx --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
Import environment from a secret,kubectl set env --from=secret/api-key-secret deployment/gateway-deployment
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-secrets deployment/mydeployment
Create a new config map named app-config with specified keys instead of file basenames on disk,kubectl create configmap app-config --from-file=properties=/path/to/parameters/file1.txt --from-file=key1=/path/to/data/file2.txt
Start a python pod and let the container expose port 3000,kubectl run hazelcast --image=python --port=3000
Return snapshot of previous terminated lunar-launcher container logs from pod analytics-pod,kubectl logs -p -c lunar-launcher analytics-pod
Create a new secret named payment-gateway-secret from an env file,kubectl create secret generic payment-gateway-secret --from-env-file=path/to/preferences.env
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8888 9090
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/data-synchronization-job -n cert-manager
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=web-cluster
"Listen on port 8888 locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod 8888:8088
"Auto scale a replication controller ""backend"", with the number of pods between 1 and 5, target CPU utilization at 60%",kubectl autoscale rc backend --max=5 --cpu-percent=60
Roll back to daemonset revision 7,kubectl rollout undo daemonset/services --to-revision=7
Set deployment frontend-deployment's service account to argocd,kubectl set serviceaccount deployment frontend-deployment argocd
Start a amazonlinux pod and let the container expose port 5000,kubectl run hazelcast --image=amazonlinux --port=5000
"Auto scale a deployment ""foo"", with the number of pods between 1 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment foo --min=1 --max=11
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp default/monitoring-agent-pod-6:/tmp/foo /tmp/bar
Create a copy of cdn-service-pod changing all container images to golang,kubectl debug cdn-service-pod --copy-to=my-debugger --set-image=*=golang
Create a new config map named namespace-config from an env file,kubectl create configmap namespace-config --from-env-file=path/to/configs.env
Start a php pod and let the container expose port 9090,kubectl run hazelcast --image=php --port=9090
Create a cron job with a command,"kubectl create cronjob database-maintenance --image=centos --schedule=""*/1 * * * *"" -- bash"
Get output from running the 'jenkins --version' command in stardust-shuttle from pod analytics-pod,kubectl exec analytics-pod -c stardust-shuttle -- jenkins --version
Rename the context 'on-prem-context' to 'edge-context' in your kubeconfig file,kubectl config rename-context on-prem-context edge-context
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/security-service-pod 8088:9090
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/proxy-server-pod 8088:5432
"Create a service for a replication controller identified by type and name specified in ""php-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f php-controller.yaml --port=3306 --target-port=700000
Update pod 'database' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods database app-
Create a copy of analytics-pod adding a debug container and changing container images,"kubectl debug analytics-pod -it --copy-to=debug-image-api --image=debian --set-image=scheduler=my-scheduler:1.0,scheduler=my-scheduler:1.0"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 5000 8088
"Listen on port 5000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/log-aggregator-pod 5000:8088
Return snapshot logs from container web-app-deployment-1 of a deployment named database-pod,kubectl logs deployment/web-app-deployment -c database-pod-1
"Update pod 'media-stream' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream last-deployment=2023-03-15
"Update pod 'vpn' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn compliance-level=PCI-DSS
Set custom TLS server name to use for validation for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --tls-server-name=staging-cluster
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""extensions"" API group",kubectl get deployments.hotfix-1.1.2.extensions -o yaml
Force delete a pod on a dead node,kubectl delete pod foo --force
Update pod 'vpn' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods vpn app-
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""testing-apps"" API group",kubectl get deployments.beta-1.0.testing-apps -o json
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-secrets deployment/backend-microservice-deployment
"Create a service for a replicated python using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs python --port=8443 --target-port=909100
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 5000 6379
"Listen on port 5432 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/gateway-service 5432:https
"Get output from running the 'redis-cli' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- redis-cli
Create a deployment named registry that runs the mongo image and expose port 8084,kubectl create deployment registry --image=mongo --port=8084
Display only the most recent 43 lines of output in pod proxy-server-pod,kubectl logs --tail=43 proxy-server-pod
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-name-config deployment/payment-processor-deployment
Start a confluentinc/cp-kafka pod and let the container expose port 8181,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8181
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node kube-master-9 -p $'data:\n key: new-value'
Update image of all containers of daemonset namespace- to 'httpd:2.4.48',kubectl set image daemonset namespace-3 *=httpd:2.4.48
Set deployment backend-microservice-deployment's service account to kube-proxy,kubectl set serviceaccount deployment backend-microservice-deployment kube-proxy
"Get output from running the 'python --version' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- python --version
Set deployment frontend-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment frontend-deployment kube-controller-manager
"Delete pods and services with same names ""cdn"" and ""chat-app""","kubectl delete pod,service cdn chat-app"
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""prod-apps"" API group",kubectl get deployments.alpha-2.0.prod-apps -o json
Update pod 'log-aggregator' with the label 'env' and the value 'production',kubectl label pods log-aggregator env=production
"Delete pods and services with same names ""email"" and ""media-stream""","kubectl delete pod,service email media-stream"
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.service-account-context.cluster staging-cluster
Set deployment scheduler-app-deployment's service account to elasticsearch,kubectl set serviceaccount deployment scheduler-app-deployment elasticsearch
Get output from running the 'node' command in nano-bot from pod vpn-service-pod,kubectl exec vpn-service-pod -c nano-bot -- node
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/analytics-pod
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 6379 8088
Create a new ClusterIP service named notification-service-clusterip,kubectl create service clusterip notification-service-clusterip --tcp=8084:8888
"Listen on port 5000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/frontend-pod 5000:5000
Add a taint with key 'datacenter' on nodes having label service=auth,kubectl taint node -l service=auth  datacenter=node-2:PreferNoSchedule
Create a copy of mypod adding a debug container and attach to it,kubectl debug mypod -it --image=busybox --copy-to=debug-image-api
Return snapshot logs from container authentication-service-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/authentication-service-deployment -c cdn-service-pod-1
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.admin-context.cluster galaxy-cluster
"Listen on port 9090 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 9090:8088"
Set the client-key-data field in the developer user using --set-raw-bytes option,kubectl config set users.developer.client-key-data cert_data_here --set-raw-bytes=true
Create a new secret named email-credentials-secret from an env file,kubectl create secret generic email-credentials-secret --from-env-file=path/to/data.env
Create a deployment named registry that runs the golang image and expose port 3306,kubectl create deployment registry --image=golang --port=3306
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir prometheus/worker-pod-4:/tmp/bar
"Listen on port 8081 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8081:8081
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/mypod 5000 5432
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""external-apps"" API group",kubectl get deployments.rc-1.1.0.external-apps -o yaml
"Listen on port 8888 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8888:8000
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=conf=/path/to/settings/file1.txt --from-file=data=/path/to/options/file2.txt
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 9090 9090
"Listen on port 8080 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8080:8080
Update pod 'foo' with the label 'unhealthy' and the value 'true',kubectl label pods foo unhealthy=true
Apply resources from a directory containing kustomization.yaml - e.g. setup/kustomization.yaml,kubectl apply -k setup/
Describe a pod,kubectl describe pods/security-scanner-pod-18
Create a job with a command,kubectl create job batch-processing --image=nginx -- nginx -t
Begin streaming the logs of the warp-drive container in pod security-service-pod,kubectl logs -f -c warp-drive security-service-pod
"Get output from running the 'go' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- go
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/cache-warming-job -n staging
Update pod 'monitoring' with the label 'role' and the value 'backend',kubectl label pods monitoring role=backend
Get output from nebula-navigator from pod auth-service-pod,kubectl attach auth-service-pod -c nebula-navigator
"If the deployment named backend-service-replicaset's current size is 1, scale mysql to 7",kubectl scale --current-replicas=1 --replicas=7 deployment/backend-service-replicaset
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/analytics-platform-deployment -c media-stream-pod-1
Return snapshot logs from all containers in pods defined by label release=beta,kubectl logs -l release=beta --all-containers=true
Start a postgres pod and let the container expose port 8089,kubectl run hazelcast --image=postgres --port=8089
"Listen on port 8088 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8088:5000
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=settings=/path/to/parameters/file1.txt --from-file=key2=/path/to/options/file2.txt
Copy /tmp/foo_dir local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp /tmp/foo_dir kube-dns/load-balancer-pod-9:/tmp/bar_dir
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node dev-node-4 -p $'data:\n key: new-value'
"Listen on port 8000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod 8000:8888
Start a alpine pod and let the container expose port 8000,kubectl run hazelcast --image=alpine --port=8000
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-settings deployment/user-management-deployment
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 9090 6379
Return snapshot of previous terminated code-explorer container logs from pod backend-pod,kubectl logs -p -c code-explorer backend-pod
Begin streaming the logs from all containers in pods defined by label region=eu-west-2,kubectl logs -f -l region=eu-west-2 --all-containers=true
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=settings=/path/to/settings/file1.txt --from-file=key2=/path/to/configurations/file2.txt
Get output from running the 'mongod' command in cosmic-container from pod auth-service-pod,kubectl exec auth-service-pod -c cosmic-container -- mongod
"Auto scale a replication controller ""security"", with the number of pods between 1 and 7, target CPU utilization at 40%",kubectl autoscale rc security --max=7 --cpu-percent=40
Rename the context 'cluster-1-context' to 'user-b-context' in your kubeconfig file,kubectl config rename-context cluster-1-context user-b-context
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/global-config deployment/mydeployment
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp velero/backend-pod-13::/tmp/foo /tmp/bar_dir
Start a python pod and let the container expose port 27017,kubectl run hazelcast --image=python --port=27017
Begin streaming the logs from all containers in pods defined by label zone=us-east-1,kubectl logs -f -l zone=us-east-1 --all-containers=true
"Auto scale a deployment ""chat-app"", with the number of pods between 5 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment chat-app --min=5 --max=13
"Update pod 'log-aggregator' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator release-notes='https://example.com/release-notes/v2.5.1'
Get output from running the 'jenkins --version' command in time-machine from pod media-stream-pod,kubectl exec media-stream-pod -c time-machine -- jenkins --version
Begin streaming the logs of the rocket-ranger container in pod api-service-pod,kubectl logs -f -c rocket-ranger api-service-pod
Get output from running the 'irb' command in nebula-navigator from pod cdn-service-pod,kubectl exec cdn-service-pod -c nebula-navigator -- irb
"Get output from running the 'geth attach' command from pod gateway-pod, using the first container by default",kubectl exec gateway-pod -- geth attach
Remove from node 'app-node-6' all the taints with key 'cpu-type',kubectl taint nodes app-node-6 cpu-type-
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 3000 8088
"Create or update exec auth plugin environment variables for the ""prod-user"" entry",kubectl config set-credentials prod-user --exec-env=key1=val1 --exec-env=key2=val2
Begin streaming the logs of the code-explorer container in pod proxy-service-pod,kubectl logs -f -c code-explorer proxy-service-pod
Add a taint with key 'hardware' on nodes having label team=devops,kubectl taint node -l team=devops  hardware=monitoring-node-15:PreferNoSchedule
"Auto scale a replication controller ""security"", with the number of pods between 1 and 2, target CPU utilization at 20%",kubectl autoscale rc security --max=2 --cpu-percent=20
Return snapshot logs from container authentication-service-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/authentication-service-deployment -c proxy-server-pod-1
Get output from mycontainer from pod api-service-pod,kubectl attach api-service-pod -c mycontainer
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod 6379:8081
"Get output from running the 'dotnet' command from pod mypod, using the first container by default",kubectl exec mypod -- dotnet
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-third-party-api-service
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=3306 --target-port=330600
Get output from running the 'pip --version' command in nebula-navigator from pod database-pod,kubectl exec database-pod -c nebula-navigator -- pip --version
Begin streaming the logs of the astro-container container in pod email-service-pod,kubectl logs -f -c astro-container email-service-pod
"Set a deployment's ubuntu:20.04 container image to 'ubuntu', and its busybox container image to 'busybox'",kubectl set image deployment/ubuntu busybox=busybox ubuntu=ubuntu:20.04
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.testing-context.cluster data-cluster
Set deployment email-server-deployment's service account to flux,kubectl set serviceaccount deployment email-server-deployment flux
Get output from running the 'mongod' command in quantum-quark from pod monitoring-pod,kubectl exec monitoring-pod -c quantum-quark -- mongod
Remove from node 'kube-master-9' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes kube-master-9 app:PreferNoSchedule-
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=my-k8s-cluster
Display only the most recent 31 lines of output in pod log-aggregator-pod,kubectl logs --tail=31 log-aggregator-pod
"Set a deployments mysql container cpu limits to ""2"" and memory to ""4Gi""","kubectl set resources deployment mysql -c=nginx --limits=cpu=2,memory=4Gi"
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp monitoring/task-processor-pod-17::/tmp/foo /tmp/bar_dir
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=edge-cluster
Create a new ClusterIP service named backend-service-clusterip,kubectl create service clusterip backend-service-clusterip --tcp=9092:8083
Get output from warp-drive from pod analytics-pod,kubectl attach analytics-pod -c warp-drive
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod proxy-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-service-pod -c nano-bot -i -t
Restart a deployment,kubectl rollout restart deployment/app-v2
Create a new secret named email-credentials-secret with keys for each file in folder bar,kubectl create secret generic email-credentials-secret --from-file=path/to/parameters
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-settings deployment/notification-handler-deployment
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=properties=/path/to/options/file1.txt --from-file=key1=/path/to/data/file2.txt
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/gateway-deployment SMTP_HOST=smtp.example.com -o yaml
Begin streaming the logs of the lunar-launcher container in pod e-commerce-pod,kubectl logs -f -c lunar-launcher e-commerce-pod
"Update pod 'api' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api monitoring-tool=Prometheus
Create a deployment named prometheus that runs the mongo image with 3 replicas,kubectl create deployment prometheus --image=mongo --replicas=3
Get output from running the 'elasticsearch-plugin --list' command in time-machine from pod security-service-pod,kubectl exec security-service-pod -c time-machine -- elasticsearch-plugin --list
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.testing-context.cluster cloud-cluster
Add a taint with key 'app' on nodes having label myLabel,kubectl taint node -l myLabel  app=testing-node-11:PreferNoSchedule
Get output from running the 'mongo' command in cyber-sleuth from pod gateway-pod,kubectl exec gateway-pod -c cyber-sleuth -- mongo
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""backup-apps"" API group",kubectl get deployments.alpha-2.0.backup-apps -o yaml
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8081 8888
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/web-app-deployment
Start a php pod and let the container expose port 3306,kubectl run hazelcast --image=php --port=3306
"Get output from running the 'elasticsearch --version' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- elasticsearch --version
Start a jenkins pod and let the container expose port 5432,kubectl run hazelcast --image=jenkins --port=5432
"Listen on port 8081 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8081:8080"
"Create a service for a replicated centos, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc centos --port=5001 --target-port=300000
"Listen on port 9090 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 9090:8888
"Get output from running 'mysqld' command from the first pod of the deployment monitoring-stack-deployment, using the first container by default",kubectl exec deploy/monitoring-stack-deployment -- mysqld
Create a new secret named api-key-secret with keys for each file in folder bar,kubectl create secret generic api-key-secret --from-file=path/to/configs
"Check to see if I can get the job named ""security-scan-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/security-scan-job -n testing
Return snapshot of previous terminated stardust-shuttle container logs from pod auth-service-pod,kubectl logs -p -c stardust-shuttle auth-service-pod
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/api-config deployment/load-balancer-deployment
Create a new secret named private-key-secret using a combination of a file and a literal,kubectl create secret generic private-key-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
Create a deployment named logging that runs the wordpress image and expose port 5001,kubectl create deployment logging --image=wordpress --port=5001
"If the deployment named app-v2-replicaset's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/app-v2-replicaset
Return snapshot of previous terminated lunar-launcher container logs from pod proxy-service-pod,kubectl logs -p -c lunar-launcher proxy-service-pod
"Partially update a node identified by the type and name specified in ""node.json"" using strategic merge patch","kubectl patch -f 10-mynet.conf -p '{""stringData"":{""password"":""new-password""}'"
Remove from node 'gpu-node-12' all the taints with key 'zone',kubectl taint nodes gpu-node-12 zone-
Start a ethereum/client-go pod and let the container expose port 8010,kubectl run hazelcast --image=ethereum/client-go --port=8010
"Listen on port 8888 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8888:6379
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/app-config-dev deployment/user-management-deployment
"Update pod 'foo' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo app-version=2.5.1
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=prod-cluster
Add a taint with key 'disktype' on nodes having label service=auth,kubectl taint node -l service=auth  disktype=web-node-8:PreferNoSchedule
Update pod 'monitoring' with the label 'component' and the value 'worker',kubectl label pods monitoring component=worker
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml app-version=2.5.1
Create a deployment named logging that runs the wordpress image and expose port 9090,kubectl create deployment logging --image=wordpress --port=9090
Create a new secret named aws-credentials-secret from an env file,kubectl create secret generic aws-credentials-secret --from-env-file=path/to/configurations.env
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/gateway-service"
"Update pod 'auth' with the annotation 'compliance-level' and the value PCI-DSS # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth compliance-level=PCI-DSS
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/log-config deployment/log-aggregator-deployment
Get output from running the 'python' command in cosmic-container from pod monitoring-pod,kubectl exec monitoring-pod -c cosmic-container -- python
Update image of all containers of daemonset app-v2 to 'nginx:1.21.3',kubectl set image daemonset app-v2 *=nginx:1.21.3
Embed certificate authority data for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --embed-certs --certificate-authority=~/.kube/star-cluster/kubernetes.ca.crt
Import environment from a secret,kubectl set env --from=secret/tls-certificate-secret deployment/scheduler-app-deployment
"Update pod 'proxy-server' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods proxy-server alert-email='alerts@example.com'
Embed certificate authority data for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --embed-certs --certificate-authority=~/.kube/cluster-gamma/kubernetes.ca.crt
Create a new LoadBalancer service named proxy-server-lb,kubectl create service loadbalancer proxy-server-lb --tcp=9000:8080
"Create a cluster role name ""bar"" with NonResourceURL specified","kubectl create clusterrole ""bar"" --verb=use --non-resource-url=/debug/ns/*"
Set deployment mydeployment's service account to my-service-account,kubectl set serviceaccount deployment mydeployment my-service-account
Return snapshot logs from container load-balancer-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/load-balancer-deployment -c cdn-service-pod-1
"Create a cluster role named ""admin_role"" with ResourceName specified",kubectl create clusterrole admin_role --verb=patch --resource=services --resource-name=cache-redis --resource-name=load-balancer
Return snapshot logs from container proxy-service-deployment-1 of a deployment named database-pod,kubectl logs deployment/proxy-service-deployment -c database-pod-1
"If the deployment named api-service-rs's current size is 7, scale mysql to 5",kubectl scale --current-replicas=7 --replicas=5 deployment/api-service-rs
Set deployment log-aggregator-deployment's service account to default,kubectl set serviceaccount deployment log-aggregator-deployment default
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-secrets deployment/monitoring-stack-deployment
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=dev-cluster
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name document-company.com
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/backend-pod 3000:5432
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=9092 --target-port=808100
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8000 5432
Create a deployment named jenkins that runs the node image with 5 replicas,kubectl create deployment jenkins --image=node --replicas=5
"Auto scale a replication controller ""analytics"", with the number of pods between 1 and 5, target CPU utilization at 60%",kubectl autoscale rc analytics --max=5 --cpu-percent=60
Remove from node 'k8s-node-1' all the taints with key 'environment',kubectl taint nodes k8s-node-1 environment-
"Start a golang pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=golang --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/cache-cluster-deployment -c web-app-pod-1
Create a deployment named mattermost that runs the node image with 6 replicas,kubectl create deployment mattermost --image=node --replicas=6
Create a new secret named api-secret-key with keys for each file in folder bar,kubectl create secret generic api-secret-key --from-file=path/to/configs
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""web-apps"" API group",kubectl get deployments.v2.0.0.web-apps -o yaml
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 8082,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=8082
"Listen on port 9090 locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod 9090:8081
"Update pod 'foo' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo SLA='99.9% uptime'
"Listen on port 8081 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8081:9090
"Set a deployments centos container cpu limits to ""200m"" and memory to ""4Gi""","kubectl set resources deployment centos -c=nginx --limits=cpu=200m,memory=4Gi"
"Listen on port 8888 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8888:8000
Update pod 'security' only if the resource is unchanged from version 1,kubectl label pods security status=unhealthy --resource-version=1
Begin streaming the logs of the cosmic-container container in pod mypod,kubectl logs -f -c cosmic-container mypod
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 6379 5432
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/analytics-pod 5000:8081
Create a cron job with a command,"kubectl create cronjob daily-report --image=php --schedule=""*/1 * * * *"" -- php --version"
Get output from running the 'node --version' command in astro-container from pod media-stream-pod,kubectl exec media-stream-pod -c astro-container -- node --version
Create a deployment named mattermost that runs the nginx image with 5 replicas,kubectl create deployment mattermost --image=nginx --replicas=5
"Set only the ""client-key"" field on the ""deploy-bot"" # entry, without touching other values",kubectl config set-credentials deploy-bot --client-key=~/.kube/admin.key
Use the context for the star-cluster cluster,kubectl config use-context star-cluster
"Listen on port 8080 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8080:5000
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=app-cluster
"Listen on port 5000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/backend-pod 5000:8000
Start a nginx pod and let the container expose port 8083,kubectl run hazelcast --image=nginx --port=8083
"If the deployment named dev-environment-rs's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/dev-environment-rs
Roll back to the previous deployment with dry-run,kubectl rollout undo --dry-run=server deployment/my-deployment
Start a centos pod and let the container expose port 8089,kubectl run hazelcast --image=centos --port=8089
Create a copy of api-service-pod adding a debug container and changing container images,"kubectl debug api-service-pod -it --copy-to=debug-image-memcached --image=debian --set-image=api=api:v2,api=api:v2"
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/database-pod
Delete the admin user,kubectl config delete-user admin
"Listen on a random port locally, forwarding to 8888 in the pod",kubectl port-forward pod/security-service-pod :8888
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-config deployment/cache-cluster-deployment
Add a taint with key 'workload' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  workload=web-node-8:PreferNoSchedule
Embed certificate authority data for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --embed-certs --certificate-authority=~/.kube/testing-cluster/kubernetes.ca.crt
Create a new ExternalName service named external-git-service,kubectl create service externalname external-git-service --external-name practice-online.site
"Listen on port 3000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 3000:8888
Create a copy of proxy-server-pod changing all container images to ruby,kubectl debug proxy-server-pod --copy-to=my-custom-dbg --set-image=*=ruby
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 5000 9090
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/order-service 8088:https
Begin streaming the logs of the lunar-launcher container in pod proxy-server-pod,kubectl logs -f -c lunar-launcher proxy-server-pod
"Check to see if I can get the job named ""cron-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/cron-job -n default
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=web-cluster
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""custom-apps"" API group",kubectl get deployments.v3.0.0.custom-apps -o yaml
"Listen on port 8081 locally, forwarding to 3000 in the pod",kubectl port-forward pod/backend-pod 8081:3000
"Listen on port 3000 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 3000:8000
Create a new ClusterIP service named git-service-clusterip,kubectl create service clusterip git-service-clusterip --tcp=8089:9000
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/ui-config deployment/database-deployment
Return snapshot logs from container gateway-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/gateway-deployment -c monitoring-pod-1
Begin streaming the logs of the stardust-shuttle container in pod proxy-server-pod,kubectl logs -f -c stardust-shuttle proxy-server-pod
Create a copy of auth-service-pod adding a debug container and changing container images,"kubectl debug auth-service-pod -it --copy-to=debug-image-1 --image=debian --set-image=web=nginx:latest,proxy=nginx:1.21"
"Create or update exec auth plugin environment variables for the ""security-user"" entry",kubectl config set-credentials security-user --exec-env=key1=val1 --exec-env=key2=val2
Get output from running the 'postgres' command in warp-drive from pod analytics-pod,kubectl exec analytics-pod -c warp-drive -- postgres
"Listen on port 5000 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5000:8888
Update pod 'log-aggregator' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods log-aggregator env-
"Get output from running 'irb' command from the first pod of the service cache-service, using the first container by default",kubectl exec svc/cache-service -- irb
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/chat-app-pod
Get output from running the 'yum install -y wget' command in nano-bot from pod media-stream-pod,kubectl exec media-stream-pod -c nano-bot -- yum install -y wget
Add a taint with key 'special' on nodes having label service=auth,kubectl taint node -l service=auth  special=web-node-8:PreferNoSchedule
Create a new secret named encryption-key-secret with keys for each file in folder bar,kubectl create secret generic encryption-key-secret --from-file=path/to/configs
"If the deployment named staging-app-rs's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/staging-app-rs
"Mark node ""db-node-7"" as unschedulable",kubectl cordon db-node-7
"Get output from running the 'postgres' command from pod database-pod, using the first container by default",kubectl exec database-pod -- postgres
Import environment from a config map with a prefix,kubectl set env --from=configmap/log-config --prefix=MYSQL_ deployment/authentication-service-deployment
"Delete pods and services with same names ""cdn"" and ""analytics""","kubectl delete pod,service cdn analytics"
Create a deployment named logging that runs the php image,kubectl create deployment logging --image=php
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-secrets deployment/payment-processor-deployment
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=8081:8080
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=star-cluster
"If the deployment named bar's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/bar
"Start a golang pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=golang --overrides='{ ""apiVersion"": ""alpha-2.0"", ""spec"": { ... } }'"
"Listen on port 6379 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 6379:8000"
Create a job with a command,kubectl create job certificate-renewal --image=ruby -- ruby --version
Diff resources included in preferences.yaml,kubectl diff -f preferences.yaml
Create a deployment named drupal that runs the ubuntu image with 6 replicas,kubectl create deployment drupal --image=ubuntu --replicas=6
Get output from cosmic-container from pod database-pod,kubectl attach database-pod -c cosmic-container
Import environment from a secret,kubectl set env --from=secret/monitoring-credentials-secret deployment/monitoring-stack-deployment
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.team-alpha-context.cluster dev-cluster
Switch to raw terminal mode; sends stdin to 'bash' in stardust-shuttle from pod media-stream-pod # and sends stdout/stderr from 'bash' back to the client,kubectl exec media-stream-pod -c stardust-shuttle -i -t -- bash -il
Return snapshot logs from pod frontend-pod with only one container,kubectl logs frontend-pod
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 9090 3000
Return snapshot logs from all containers in pods defined by label app-type=microservice,kubectl logs -l app-type=microservice --all-containers=true
Display only the most recent 12 lines of output in pod gateway-pod,kubectl logs --tail=12 gateway-pod
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=cluster-beta
Return only the phase value of the specified pod,kubectl get -o template pod/backend-pod --template={{.status.phase}}
Add to node 'db-node-7' a taint with key 'zone' and no value,kubectl taint nodes db-node-7 zone:NoSchedule
Get output from running the 'npm --version' command in warp-drive from pod vpn-service-pod,kubectl exec vpn-service-pod -c warp-drive -- npm --version
"Listen on port 3000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/chat-app-pod 3000:9090
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/kube-system-config deployment/frontend-deployment
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""experimental-apps"" API group",kubectl get deployments.dev-2.2.0.experimental-apps -o json
Display only the most recent 53 lines of output in pod backend-pod,kubectl logs --tail=53 backend-pod
Create a job with a command,kubectl create job log-processing-job --image=mongo -- mongod
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/analytics-pod 8888:8080
Add a taint with key 'datacenter' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  datacenter=prod-node-5:PreferNoSchedule
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 9090,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=9090
"Listen on port 5432 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5432:8000
"Delete pods and services with same names ""web"" and ""payment""","kubectl delete pod,service web payment"
Create a job with a command,kubectl create job log-collection --image=php --
Create a deployment named auth that runs the alpine image and expose port 8181,kubectl create deployment auth --image=alpine --port=8181
Set deployment user-management-deployment's service account to flux,kubectl set serviceaccount deployment user-management-deployment flux
Get output from running the 'mongod' command in lunar-launcher from pod auth-service-pod,kubectl exec auth-service-pod -c lunar-launcher -- mongod
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-config-dev deployment/search-engine-deployment
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/api-config deployment/monitoring-stack-deployment
"Update pod 'email' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods email app-version='2.5.1'
Rename the context 'testing-context' to 'client-2-context' in your kubeconfig file,kubectl config rename-context testing-context client-2-context
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=my-k8s-cluster
Copy /tmp/foo_dir_dir local directory to :/tmp/bar_dir in a remote pod in the default namespace,kubectl cp /tmp/foo_dir_dir front-end-pod-12::/tmp/bar_dir
Copy ~/.config/kube local file to :/tmp/bar in a remote pod in namespace,kubectl cp ~/.config/kube ingress-nginx/web-app-pod-1::/tmp/bar
Copy :/tmp/foo local file to /etc/kubernetes in a remote pod in namespace,kubectl cp :/tmp/foo velero/security-scanner-pod-18:/etc/kubernetes
Update pod 'foo' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods foo unhealthy-
Return snapshot logs from all containers in pods defined by label service=auth,kubectl logs -l service=auth --all-containers=true
View the last-applied-configuration annotations by file in JSON,kubectl apply view-last-applied -f preferences.yaml -o json
Add a taint with key 'disktype' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  disktype=dev-node-4:PreferNoSchedule
Get output from rocket-ranger from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c rocket-ranger
"Auto scale a replication controller ""foo"", with the number of pods between 1 and 7, target CPU utilization at 50%",kubectl autoscale rc foo --max=7 --cpu-percent=50
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/web-app-pod 8000:5432
Describe one context in your kubeconfig file,kubectl config get-contexts app-2-context
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/proxy-service"
"Create a cluster role binding for user1, user2, and group1 using the foo cluster role",kubectl create clusterrolebinding foo --clusterrole=foo --user=user1 --user=user2 --group=group1
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/analytics-pod 5432 8888
Scale stateful set named 'web' to 1,kubectl scale --replicas=1 statefulset/web
Add a taint with key 'environment' on nodes having label environment=production,kubectl taint node -l environment=production  environment=testing-node-11:PreferNoSchedule
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=conf=/path/to/options/file1.txt --from-file=data=/path/to/configs/file2.txt
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=kube-cluster-1
Import environment from a secret,kubectl set env --from=secret/cert-manager-secret deployment/email-server-deployment
Create a deployment named jenkins that runs the ethereum/client-go image and expose port 8088,kubectl create deployment jenkins --image=ethereum/client-go --port=8088
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/analytics-service 9090:https
Update pod 'analytics' with the label 'role' and the value 'cache',kubectl label pods analytics role=cache
Begin streaming the logs of the nano-bot container in pod monitoring-pod,kubectl logs -f -c nano-bot monitoring-pod
Get output from running the 'psql' command in code-explorer from pod auth-service-pod,kubectl exec auth-service-pod -c code-explorer -- psql
Remove from node 'edge-node-10' all the taints with key 'environment',kubectl taint nodes edge-node-10 environment-
Add a taint with key 'disktype' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  disktype=db-node-7:PreferNoSchedule
"Delete pods and services with same names ""proxy"" and ""email""","kubectl delete pod,service proxy email"
Return snapshot logs from all containers in pods defined by label project=project-alpha,kubectl logs -l project=project-alpha --all-containers=true
Switch to raw terminal mode; sends stdin to 'bash' in nebula-navigator from pod api-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach api-service-pod -c nebula-navigator -i -t
Create a job with a command,kubectl create job batch-processing --image=amazonlinux -- yum install -y aws-cli
"Listen on a random port locally, forwarding to 3000 in the pod",kubectl port-forward pod/mypod :3000
Display only the most recent 12 lines of output in pod database-pod,kubectl logs --tail=12 database-pod
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 8888 5000
Start a mysql pod and let the container expose port 8000,kubectl run hazelcast --image=mysql --port=8000
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=3000 --target-port=300000
"Listen on port 9090 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 9090:8081
"Listen on port 8081 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/email-service 8081:https
Add a taint with key 'zone' on nodes having label myLabel,kubectl taint node -l myLabel  zone=monitoring-node-15:PreferNoSchedule
Get output from running the 'ash' command in time-machine from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c time-machine -- ash
Create a deployment named my-dep that runs the jenkins image with 2 replicas,kubectl create deployment my-dep --image=jenkins --replicas=2
Return snapshot logs from container database-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/database-deployment -c email-service-pod-1
Get the documentation of a specific field of a resource,kubectl explain resource=configmaps.status.phase
"If the deployment named db-migration-replicaset's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/db-migration-replicaset
Embed certificate authority data for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --embed-certs --certificate-authority=~/.kube/web-cluster/kubernetes.ca.crt
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/redis
Return snapshot of previous terminated nano-bot container logs from pod security-service-pod,kubectl logs -p -c nano-bot security-service-pod
"Set a deployments elasticsearch container cpu limits to ""50m"" and memory to ""2Gi""","kubectl set resources deployment elasticsearch -c=nginx --limits=cpu=50m,memory=2Gi"
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/batch-processing-job -n testing
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name demo-service.dev
Create a new LoadBalancer service named frontend-lb,kubectl create service loadbalancer frontend-lb --tcp=7000:3001
"Delete pods and services with same names ""web"" and ""email""","kubectl delete pod,service web email"
Remove from node 'web-node-8' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes web-node-8 zone:PreferNoSchedule-
Start a ethereum/client-go pod and let the container expose port 9090,kubectl run hazelcast --image=ethereum/client-go --port=9090
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.app-1-context.cluster moon-cluster
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir kube-proxy/payment-gateway-pod-19:/tmp/bar
"Get output from running the 'redis-server' command from pod security-service-pod, using the first container by default",kubectl exec security-service-pod -- redis-server
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/monitoring-stack-deployment -c chat-app-pod-1
"Delete pods and services with same names ""gateway"" and ""database""","kubectl delete pod,service gateway database"
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-config deployment/scheduler-app-deployment
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod backend-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Add a taint with key 'environment' on nodes having label release=beta,kubectl taint node -l release=beta  environment=prod-node-5:PreferNoSchedule
"Listen on port 5432 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5432:5000
Begin streaming the logs of the cosmic-container container in pod analytics-pod,kubectl logs -f -c cosmic-container analytics-pod
"Auto scale a deployment ""monitoring"", with the number of pods between 5 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment monitoring --min=5 --max=12
Set deployment scheduler-app-deployment's service account to jenkins,kubectl set serviceaccount deployment scheduler-app-deployment jenkins
Get output from nano-bot from pod auth-service-pod,kubectl attach auth-service-pod -c nano-bot
Get output from mycontainer from pod media-stream-pod,kubectl attach media-stream-pod -c mycontainer
Set deployment scheduler-app-deployment's service account to istio,kubectl set serviceaccount deployment scheduler-app-deployment istio
Return snapshot of previous terminated warp-drive container logs from pod log-aggregator-pod,kubectl logs -p -c warp-drive log-aggregator-pod
"Listen on port 5432 locally, forwarding to 5000 in the pod",kubectl port-forward pod/e-commerce-pod 5432:5000
Unset namespace in cluster-2-context context,kubectl config unset contexts.cluster-2-context.namespace
"Scale a resource identified by type and name specified in ""conf.json"" to 3",kubectl scale --replicas=3 -f conf.json
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""beta-apps"" API group",kubectl get deployments.alpha-2.0.beta-apps -o yaml
Create a pod disruption budget named notification-service-pdb that will select all pods with the region=us-east label # and require minimum four of them being available at any point in time,kubectl create poddisruptionbudget notification-service-pdb --selector=region=us-east --min-available=4
Create a new service account named kube-dns,kubectl create serviceaccount kube-dns
Set the resource request and limits for all containers in php,"kubectl set resources deployment php --limits=cpu=200m,memory=512Mi --requests=cpu=200m,memory=128Mi"
Get the password for the kube-cluster-2 user,"kubectl config view -o jsonpath='{.users[?(@.name == ""kube-cluster-2"")].user.password}'"
"Listen on port 8088 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8088:9090
"Get output from running the 'node --version' command from pod payment-gateway-pod, using the first container by default",kubectl exec payment-gateway-pod -- node --version
Create a copy of web-app-pod adding a debug container and changing container images,"kubectl debug web-app-pod -it --copy-to=dgb-img --image=debian --set-image=cache=redis:alpine,mailer=mailer:latest"
"Create a cluster role named ""reader"" with ResourceName specified",kubectl create clusterrole reader --verb=update --resource=configmaps --resource-name=dev-database --resource-name=mail-server
"Delete pods and services with same names ""vpn"" and ""vpn""","kubectl delete pod,service vpn vpn"
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/scheduler-app-deployment -c proxy-server-pod-1
"Auto scale a deployment ""analytics"", with the number of pods between 6 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment analytics --min=6 --max=8
"Listen on port 8000 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8000:8088"
Begin streaming the logs of the time-machine container in pod analytics-pod,kubectl logs -f -c time-machine analytics-pod
"Listen on port 9090 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/database-service 9090:https
"Set a deployments wordpress container cpu limits to ""3"" and memory to ""256Mi""","kubectl set resources deployment wordpress -c=nginx --limits=cpu=3,memory=256Mi"
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod mypod # and sends stdout/stderr from 'bash' back to the client,kubectl attach mypod -c mycontainer -i -t
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 9090 6379
Describe pods by label cluster=my-cluster,kubectl describe po -l cluster=my-cluster
Set the resource request and limits for all containers in elasticsearch,"kubectl set resources deployment elasticsearch --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=2Gi"
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/monitoring-config deployment/scheduler-app-deployment
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp monitoring/database-pod-2:~/.config/kube /tmp/bar_dir
Create a new secret named ssl-key-secret with keys for each file in folder bar,kubectl create secret generic ssl-key-secret --from-file=path/to/preferences
"Listen on port 8088 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8088:8000
"Get output from running 'wp' command from the first pod of the deployment proxy-service-deployment, using the first container by default",kubectl exec deploy/proxy-service-deployment -- wp
"Mark node ""storage-node-13"" as schedulable",kubectl uncordon storage-node-13
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/scheduler-app-deployment -c api-service-pod-1
Remove from node 'prod-node-5' all the taints with key 'dedicated',kubectl taint nodes prod-node-5 dedicated-
Show metrics for a given pod and its containers,kubectl top pod backend-pod --containers
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/php
Set deployment email-server-deployment's service account to jenkins,kubectl set serviceaccount deployment email-server-deployment jenkins
"Update pod 'payment' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment contact-email=support@example.com
"Update pod 'database' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods database criticality='high'
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 9090 8888
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/amazonlinux
Update pod 'chat-app' with the label 'app' and the value 'myapp',kubectl label pods chat-app app=myapp
Delete the galaxy-cluster cluster,kubectl config delete-cluster galaxy-cluster
Dump current cluster state to /tmp/foo,kubectl cluster-info dump --output-directory=/tmp/foo
Update pod 'payment' with the label 'role' and the value 'backend',kubectl label pods payment role=backend
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/profiles/file2.txt
"If the deployment named mysql's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/mysql
Create a new NodePort service named e-commerce-nodeport,kubectl create service nodeport e-commerce-nodeport --tcp=8088:3000
"Listen on port 3000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/frontend-pod 3000:9090
"Update pod 'security' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods security last-deployment='2023-03-15'
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/cache-service"
"Delete pods and services with same names ""vpn"" and ""gateway""","kubectl delete pod,service vpn gateway"
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=7000:8082
Start a postgres pod and let the container expose port 8888,kubectl run hazelcast --image=postgres --port=8888
Return snapshot of previous terminated quantum-quark container logs from pod email-service-pod,kubectl logs -p -c quantum-quark email-service-pod
Add a taint with key 'zone' on nodes having label app=web-app,kubectl taint node -l app=web-app  zone=prod-node-5:PreferNoSchedule
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/backend-pod 8000:8081
"Start a ethereum/client-go pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ethereum/client-go --overrides='{ ""apiVersion"": ""v2.0.0"", ""spec"": { ... } }'"
"If the deployment named api-service-rs's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/api-service-rs
Create a cron job with a command,"kubectl create cronjob monthly-audit --image=mongo --schedule=""*/1 * * * *"" -- mongo"
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=dev-cluster
Set the client-key-data field in the dev-user user using --set-raw-bytes option,kubectl config set users.dev-user.client-key-data cert_data_here --set-raw-bytes=true
"Scale a resource identified by type and name specified in ""preferences.yaml"" to 1",kubectl scale --replicas=1 -f preferences.yaml
Start a mongo pod and let the container expose port 8888,kubectl run hazelcast --image=mongo --port=8888
"Start the nginx pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=nginx -- <arg1> <arg2> ... <argN>
"Create a cluster role named ""view"" with SubResource specified","kubectl create clusterrole view --verb=proxy,get,update --resource=nodes,nodes/stats"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 5000 8081
Add to node 'prod-node-5' a taint with key 'cpu-type' and no value,kubectl taint nodes prod-node-5 cpu-type:NoSchedule
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=properties=/path/to/parameters/file1.txt --from-file=key1=/path/to/parameters/file2.txt
"Update pod 'proxy-server' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods proxy-server env='staging'
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 3000 8080
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=8081 --target-port=808200
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=conf=/path/to/settings/file1.txt --from-file=data=/path/to/preferences/file2.txt
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.v3.0.0.sandbox-apps -o json
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/monitoring-config deployment/gateway-deployment
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/mydeployment DB_USER=username -o yaml
Create a copy of e-commerce-pod adding a debug container and changing container images,"kubectl debug e-commerce-pod -it --copy-to=my-custom-dbg --image=debian --set-image=web=nginx:latest,proxy=nginx:1.21"
Get output from code-explorer from pod mypod,kubectl attach mypod -c code-explorer
"Get output from running '/bin/bash -c ""echo 'Hello, Amazon Linux'""' command from the first pod of the deployment web-app-deployment, using the first container by default","kubectl exec deploy/web-app-deployment -- /bin/bash -c ""echo 'Hello, Amazon Linux'"""
Create a new ClusterIP service named log-service-clusterip,kubectl create service clusterip log-service-clusterip --tcp=7000:8089
Embed certificate authority data for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
"Listen on port 3000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 3000:3000
"Listen on port 9090 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 9090:3000
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""apps"" API group",kubectl get deployments.legacy-1.0.0.apps -o yaml
Add a taint with key 'disktype' on nodes having label component=proxy,kubectl taint node -l component=proxy  disktype=backup-node-14:PreferNoSchedule
Update pod 'api' with the label 'unhealthy' and the value 'true',kubectl label pods api unhealthy=true
Create a new ExternalName service named external-messaging-service,kubectl create service externalname external-messaging-service --external-name news-demo.news
Start a python pod,kubectl run nginx --image=python
"Update pod 'api' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api SLA='99.9% uptime'
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-config deployment/mydeployment
Create a cron job with a command,"kubectl create cronjob daily-report --image=alpine --schedule=""*/1 * * * *"" -- ash"
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 6379 8081
Begin streaming the logs from all containers in pods defined by label cluster=my-cluster,kubectl logs -f -l cluster=my-cluster --all-containers=true
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod security-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach security-service-pod -c mycontainer -i -t
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/chat-app-pod
Create a job with a command,kubectl create job monitoring-job --image=nginx -- nginx
"Create a role binding for jane.doe, bob.smith, and developers using the view cluster role",kubectl create rolebinding view --clusterrole=view --user=jane.doe --user=bob.smith --group=developers
Create a new config map named db-config with specified keys instead of file basenames on disk,kubectl create configmap db-config --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/options/file2.txt
Return snapshot logs from container user-management-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/user-management-deployment -c monitoring-pod-1
"Create a single ingress called 'app1-ingress' that directs requests to site.com/input to svc # svc1:8084 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""site.com/input=svc1:8084,tls=my-cert"""
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/vpn-service-pod
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/env-vars deployment/monitoring-stack-deployment
"Create a single ingress called 'app1-ingress' that directs requests to website.com/input to svc # svc1:8084 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""website.com/input=svc1:8084,tls=my-cert"""
Add a taint with key 'cpu-type' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  cpu-type=web-node-8:PreferNoSchedule
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.staging-context.cluster cluster-gamma
"Get output from running 'go run hello.go' command from the first pod of the deployment proxy-service-deployment, using the first container by default",kubectl exec deploy/proxy-service-deployment -- go run hello.go
Add to node 'monitoring-node-15' a taint with key 'special' and no value,kubectl taint nodes monitoring-node-15 special:NoSchedule
"Get output from running 'nginx -t' command from the first pod of the deployment database-deployment, using the first container by default",kubectl exec deploy/database-deployment -- nginx -t
"Listen on port 5000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod 5000:8088
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""dev-user"" entry",kubectl config set-credentials dev-user --auth-provider=oidc --auth-provider-arg=client-secret-
Get output from running the 'nginx' command in nebula-navigator from pod security-service-pod,kubectl exec security-service-pod -c nebula-navigator -- nginx
Create a new LoadBalancer service named ingress-controller-lb,kubectl create service loadbalancer ingress-controller-lb --tcp=9092:3000
Display only the most recent 3 lines of output in pod chat-app-pod,kubectl logs --tail=3 chat-app-pod
Start a redis pod and let the container expose port 3001,kubectl run hazelcast --image=redis --port=3001
Set deployment notification-handler-deployment's service account to dashboard,kubectl set serviceaccount deployment notification-handler-deployment dashboard
"Get output from running the 'go' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- go
Return snapshot logs from container web-app-deployment-1 of a deployment named security-service-pod,kubectl logs deployment/web-app-deployment -c security-service-pod-1
"Update pod 'gateway' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods gateway owner='alice-smith'
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=cluster-alpha
"Get output from running 'geth attach' command from the first pod of the service web-service, using the first container by default",kubectl exec svc/web-service -- geth attach
Set deployment database-deployment's service account to argocd,kubectl set serviceaccount deployment database-deployment argocd
"Update pod 'vpn' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn alert-email=alerts@example.com
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 5000:9090
Start a golang pod and let the container expose port 8181,kubectl run hazelcast --image=golang --port=8181
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/log-aggregator-pod
Add a taint with key 'cpu-type' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  cpu-type=node-2:PreferNoSchedule
Embed certificate authority data for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --embed-certs --certificate-authority=~/.kube/dev-cluster/kubernetes.ca.crt
Edit the job 'log-analysis-job' in JSON using the v1 API format,kubectl edit job.v1.batch/log-analysis-job -o json
Create a new secret named tls-certificate-secret with keys for each file in folder bar,kubectl create secret generic tls-certificate-secret --from-file=path/to/parameters
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-config deployment/api-server-deployment
Set deployment web-app-deployment's service account to kube-dns,kubectl set serviceaccount deployment web-app-deployment kube-dns
"Listen on port 5432 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 5432:8000"
Switch to raw terminal mode; sends stdin to 'bash' in mycontainer from pod proxy-server-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-server-pod -c mycontainer -i -t
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-config-prod deployment/cache-cluster-deployment
Display only the most recent 12 lines of output in pod vpn-service-pod,kubectl logs --tail=12 vpn-service-pod
Create a new ExternalName service named external-dns-service,kubectl create service externalname external-dns-service --external-name dummy-website.io
Remove from node 'prod-node-5' the taint with key 'app' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes prod-node-5 app:PreferNoSchedule-
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/kube-system-config deployment/database-deployment
"Check to see if I can get the job named ""data-migration-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/data-migration-job -n kube-public
"Set a deployments mongo container cpu limits to ""50m"" and memory to ""2Gi""","kubectl set resources deployment mongo -c=nginx --limits=cpu=50m,memory=2Gi"
"Start a centos pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=centos --overrides='{ ""apiVersion"": ""feature-branch-2.3.0"", ""spec"": { ... } }'"
List resource information in custom columns,"kubectl get pod vpn-service-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/payment-service"
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/payment-processor-deployment S3_BUCKET=my-s3-bucket -o yaml
"If the deployment named webapp-replicaset's current size is 1, scale mysql to 5",kubectl scale --current-replicas=1 --replicas=5 deployment/webapp-replicaset
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/monitoring-service"
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=9092:9090
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/web-app-pod 8088:8088
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""legacy-apps"" API group",kubectl get deployments.feature-branch-2.3.0.legacy-apps -o json
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""beta-apps"" API group",kubectl get deployments.feature-branch-2.3.0.beta-apps -o yaml
Create a deployment named my-dep that runs the mysql image and expose port 8088,kubectl create deployment my-dep --image=mysql --port=8088
Add a taint with key 'cpu-type' on nodes having label service=auth,kubectl taint node -l service=auth  cpu-type=db-node-7:PreferNoSchedule
Create a new ClusterIP service named backend-service-clusterip,kubectl create service clusterip backend-service-clusterip --tcp=8080:8888
Create a new ExternalName service named external-ldap-service,kubectl create service externalname external-ldap-service --external-name museum-example.museum
Start a amazonlinux pod and let the container expose port 8181,kubectl run hazelcast --image=amazonlinux --port=8181
"Create a single ingress called 'public-ingress' that directs requests to testing.com/module to svc # svc1:3000 with a tls secret ""my-cert""","kubectl create ingress public-ingress --rule=""testing.com/module=svc1:3000,tls=my-cert"""
"If the deployment named prod-app-rs's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/prod-app-rs
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/log-aggregator-deployment -c proxy-server-pod-1
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/e-commerce-pod 5000:8081
"Listen on port 8888 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8888:8080
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-config-prod deployment/payment-processor-deployment
Create a cron job with a command,"kubectl create cronjob cleanup-task --image=golang --schedule=""*/1 * * * *"" -- go"
Add a taint with key 'workload' on nodes having label release=beta,kubectl taint node -l release=beta  workload=worker-node-3:PreferNoSchedule
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8081 5432
"Get output from running 'jenkins-plugin-cli' command from the first pod of the deployment database-deployment, using the first container by default",kubectl exec deploy/database-deployment -- jenkins-plugin-cli
Get output from running the 'kafka-server-start /etc/kafka/server.properties' command in warp-drive from pod database-pod,kubectl exec database-pod -c warp-drive -- kafka-server-start /etc/kafka/server.properties
Create a new resource quota named storage-quota,kubectl create quota storage-quota --hard=storage=100Gi
"Update pod 'chat-app' with the annotation 'last-deployment' and the value '2023-03-15', overwriting any existing value",kubectl annotate --overwrite pods chat-app last-deployment='2023-03-15'
"Listen on port 3000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 3000:8081
Get output from rocket-ranger from pod database-pod,kubectl attach database-pod -c rocket-ranger
"Create a service for a replicated python using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs python --port=8082 --target-port=909100
Update pod 'backend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods backend unhealthy-
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=dev-cluster
Return snapshot logs from container web-app-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/web-app-deployment -c vpn-service-pod-1
Rename the context 'cloud-context' to 'app-1-context' in your kubeconfig file,kubectl config rename-context cloud-context app-1-context
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/ui-config deployment/load-balancer-deployment
"Update pod 'web' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods web custom-label='my-custom-value'
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""external-apps"" API group",kubectl get deployments.v1.1.0.external-apps -o yaml
"Delete pods and services with same names ""payment"" and ""frontend""","kubectl delete pod,service payment frontend"
Embed certificate authority data for the star-cluster cluster entry,kubectl config set-cluster star-cluster --embed-certs --certificate-authority=~/.kube/edge-cluster/kubernetes.ca.crt
Create a new secret named tls-certificate-secret using a combination of a file and a literal,kubectl create secret generic tls-certificate-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
Get output from running the 'elasticsearch --version' command in nano-bot from pod mypod,kubectl exec mypod -c nano-bot -- elasticsearch --version
Get the password for the testing-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""testing-cluster"")].user.password}'"
"Update pod 'proxy-server' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods proxy-server owner='alice-smith'
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node backup-node-14 -p $'stringData:\n password: new-password'
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=my-k8s-cluster
"Update pod 'media-stream' with the annotation 'git-repo' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods media-stream git-repo='https://github.com/example/my-app'
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/vpn-service-pod
"Listen on port 9090 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 9090:8888
Update deployment 'search-engine-deployment' with a new environment variable,kubectl set env deployment/search-engine-deployment DEBUG=true
Create an ingress with multiple hosts and the pathType as Prefix,"kubectl create ingress ingress1 --class=default \
--rule=""site.com/path*=svc:5000"" \
--rule=""module.com/admin*=svc2:http"""
"Listen on port 8080 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8080:3000
Create a job with a command,kubectl create job deployment-rollout-job --image=centos -- bash
Add a taint with key 'zone' on nodes having label release=beta,kubectl taint node -l release=beta  zone=app-node-6:PreferNoSchedule
Begin streaming the logs of the nebula-navigator container in pod security-service-pod,kubectl logs -f -c nebula-navigator security-service-pod
Update pod 'backend' only if the resource is unchanged from version 1,kubectl annotate pods backend description='my frontend running nginx' --resource-version=1
"Listen on port 5432 locally, forwarding to 3000 in the pod",kubectl port-forward pod/proxy-server-pod 5432:3000
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/ethereum/client-go
"If the deployment named staging-app-rs's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/staging-app-rs
Set deployment backend-microservice-deployment's service account to tiller,kubectl set serviceaccount deployment backend-microservice-deployment tiller
"Listen on port 8000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod 8000:8081
Return snapshot logs from container proxy-service-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/proxy-service-deployment -c auth-service-pod-1
"Create or update exec auth plugin environment variables for the ""service-account"" entry",kubectl config set-credentials service-account --exec-env=key1=val1 --exec-env=key2=val2
Create a deployment named db that runs the ruby image and expose port 5432,kubectl create deployment db --image=ruby --port=5432
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/security-service-pod 8000:8088
Get output from running the 'irb' command in cyber-sleuth from pod vpn-service-pod,kubectl exec vpn-service-pod -c cyber-sleuth -- irb
"Get output from running 'mysql' command from the first pod of the deployment order-processing-deployment, using the first container by default",kubectl exec deploy/order-processing-deployment -- mysql
"Create a single ingress called 'app-ingress' that directs requests to foo.com/example to svc # svc1:8080 with a tls secret ""my-cert""","kubectl create ingress app-ingress --rule=""foo.com/example=svc1:8080,tls=my-cert"""
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/media-stream-pod
"Delete pods and services with same names ""vpn"" and ""media-stream""","kubectl delete pod,service vpn media-stream"
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/web-app-pod 8081:8080
Return snapshot logs from container api-server-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/api-server-deployment -c cdn-service-pod-1
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/log-config deployment/monitoring-stack-deployment
"Listen on port 8080 locally, forwarding to 6379 in the pod",kubectl port-forward pod/e-commerce-pod 8080:6379
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod monitoring-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
Create a new ExternalName service named external-identity-provider-service,kubectl create service externalname external-identity-provider-service --external-name news-demo.news
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=cluster-gamma
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""internal-apps"" API group",kubectl get deployments.feature-branch-2.3.0.internal-apps -o yaml
Create a new NodePort service named gateway-nodeport,kubectl create service nodeport gateway-nodeport --tcp=8080:8888
Get output from nano-bot from pod e-commerce-pod,kubectl attach e-commerce-pod -c nano-bot
"Listen on port 3000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/proxy-server-pod 3000:8081
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.app-2-context.cluster cluster-gamma
Return snapshot logs from container proxy-service-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/proxy-service-deployment -c proxy-server-pod-1
Deny CSR 'csr-ghi789',kubectl certificate deny csr-ghi789
"Delete pods and services with same names ""frontend"" and ""payment""","kubectl delete pod,service frontend payment"
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named mypod,kubectl logs deployment/backend-microservice-deployment -c mypod-1
"Create a service for an nginx deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment nginx --port=8084 --target-port=909100
"Listen on port 8081 locally, forwarding to 8081 in the pod",kubectl port-forward pod/frontend-pod 8081:8081
"Start the php pod using the default command, but use custom arguments (arg1 .. argN) for that command",kubectl run nginx --image=php -- <arg1> <arg2> ... <argN>
Create a new secret named password-secret with specified keys instead of names on disk,kubectl create secret generic password-secret --from-file=ssh-privatekey=path/to/id_rsa --from-file=ssh-publickey=path/to/id_rsa.pub
"Check to see if I can get the job named ""deploy-artifacts-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/deploy-artifacts-job -n kube-system
Create a new ClusterIP service named billing-service-clusterip,kubectl create service clusterip billing-service-clusterip --tcp=8083:8443
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-config-prod deployment/user-management-deployment
"Listen on port 5432 locally, forwarding to 8080 in the pod",kubectl port-forward pod/mypod 5432:8080
Set deployment monitoring-stack-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment monitoring-stack-deployment kube-controller-manager
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json last-deployment=2023-03-15
Get output from mycontainer from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c mycontainer
"Create a job from a cron job named ""metrics-collection""",kubectl create job test-job --from=cronjob/metrics-collection
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-config-prod deployment/payment-processor-deployment
Get output from warp-drive from pod mypod,kubectl attach mypod -c warp-drive
Start a centos pod and let the container expose port 9000,kubectl run hazelcast --image=centos --port=9000
"Listen on port 9090 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 9090:8000"
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-config-prod deployment/cache-cluster-deployment
"Set a deployments centos container cpu limits to ""5"" and memory to ""2Gi""","kubectl set resources deployment centos -c=nginx --limits=cpu=5,memory=2Gi"
Start a ethereum/client-go pod and let the container expose port 8443,kubectl run hazelcast --image=ethereum/client-go --port=8443
"Listen on port 8080 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8080:8081
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/web-app-pod 8000 3000
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/api-service"
Create a new secret named password-secret from an env file,kubectl create secret generic password-secret --from-env-file=path/to/options.env
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.prod-context.cluster web-cluster
Create a cron job with a command,"kubectl create cronjob cleanup-task --image=ruby --schedule=""*/1 * * * *"" -- irb"
Add a taint with key 'hardware' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  hardware=storage-node-13:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/log-config deployment/authentication-service-deployment
Create a copy of frontend-pod changing all container images to mysql,kubectl debug frontend-pod --copy-to=debug-image-1 --set-image=*=mysql
Create a job with a command,kubectl create job data-migration-job --image=centos -- yum install -y wget
Remove from node 'prod-node-5' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes prod-node-5 datacenter:NoExecute-
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp logging/front-end-pod-12::/tmp/foo /tmp/bar
Create a deployment named monitoring that runs the python image and expose port 8084,kubectl create deployment monitoring --image=python --port=8084
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/namespace-config deployment/payment-processor-deployment
"Update pod 'payment' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods payment owner='alice-smith'
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/backend-pod 9090 8081
"If the deployment named webapp-replicaset's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/webapp-replicaset
Start the jenkins pod using a different command and custom arguments,kubectl run nginx --image=jenkins --command -- <cmd> <arg1> ... <argN>
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod 9090:8088
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 5432 8000
"Listen on port 5432 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 5432:8080
"Update pod 'security' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods security expiration-date='2024-12-31'
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/api-service"
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod payment-gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach payment-gateway-pod -c nano-bot -i -t
"Listen on port 3000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 3000:6379
"Delete pods and services with same names ""vpn"" and ""cdn""","kubectl delete pod,service vpn cdn"
Remove from node 'backup-node-14' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes backup-node-14 hardware:NoExecute-
"Update pod 'backend' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods backend criticality='high'
"Auto scale a deployment ""api"", with the number of pods between 3 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment api --min=3 --max=11
Set the server field on the galaxy-cluster cluster to https://1.2.3.4,kubectl config set clusters.galaxy-cluster.server https://1.2.3.4
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/preferences/file2.txt
Scale a replica set named 'mysql' to 3,kubectl scale --replicas=3 rs/mysql
Update deployment 'backend-microservice-deployment' with a new environment variable,kubectl set env deployment/backend-microservice-deployment ENV=prod
"Listen on port 6379 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 6379:5432"
"Listen on port 8888 locally, forwarding to 8000 in the pod",kubectl port-forward pod/web-app-pod 8888:8000
Set deployment mydeployment's service account to kube-dns,kubectl set serviceaccount deployment mydeployment kube-dns
Set deployment load-balancer-deployment's service account to jenkins,kubectl set serviceaccount deployment load-balancer-deployment jenkins
Add a taint with key 'environment' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  environment=app-node-6:PreferNoSchedule
Return snapshot logs from all containers in pods defined by label environment=production,kubectl logs -l environment=production --all-containers=true
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/app-name-config deployment/notification-handler-deployment
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/frontend-pod 8000:8080
Add a taint with key 'zone' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  zone=gpu-node-12:PreferNoSchedule
Add a taint with key 'cpu-type' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  cpu-type=worker-node-3:PreferNoSchedule
Update deployment 'email-server-deployment' with a new environment variable,kubectl set env deployment/email-server-deployment DEBUG=true
Create a new ExternalName service named external-geolocation-service,kubectl create service externalname external-geolocation-service --external-name bar.com
"Create a cluster role named ""admin_role"" with ResourceName specified",kubectl create clusterrole admin_role --verb=update --resource=configmaps --resource-name=app-worker-2 --resource-name=web-frontend
Delete the k8s-admin user,kubectl config delete-user k8s-admin
Start a redis pod and let the container expose port 8443,kubectl run hazelcast --image=redis --port=8443
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/proxy-service-pod
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=3306 --target-port=500100
"Create a service for a replicated hazelcast using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs hazelcast --port=9000 --target-port=909100
"Update pod 'database' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database expiration-date='2024-12-31'
Create a job with a command,kubectl create job scaling-job --image=confluentinc/cp-kafka -- kafka-topics --list
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=properties=/path/to/parameters/file1.txt --from-file=key1=/path/to/configurations/file2.txt
Create a new config map named log-config from the key=value pairs in the file,kubectl create configmap log-config --from-file=path/to/settings
Delete pods and services with label component=proxy,"kubectl delete pods,services -l component=proxy"
"Listen on port 8081 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8081:5432
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=testing-cluster
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/web-app-pod 8080:3000
"Create a service for an hazelcast deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment hazelcast --port=3001 --target-port=844300
"Get output from running the 'mysql' command from pod proxy-server-pod, using the first container by default",kubectl exec proxy-server-pod -- mysql
"Check to see if I can get the job named ""load-testing-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/load-testing-job -n namespace-1
Create a job with a command,kubectl create job cleanup --image=node -- node
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/proxy-server-pod
"Create a role binding for user1, user2, and group1 using the admin cluster role",kubectl create rolebinding admin --clusterrole=admin --user=user1 --user=user2 --group=group1
"Scale a resource identified by type and name specified in ""setup.json"" to 5",kubectl scale --replicas=5 -f setup.json
Create a new NodePort service named gateway-nodeport,kubectl create service nodeport gateway-nodeport --tcp=8083:8083
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/chat-app-pod
Create a new secret named api-secret-key with keys for each file in folder bar,kubectl create secret generic api-secret-key --from-file=path/to/data
"Update pod 'gateway' with the annotation 'contact-email' and the value 'support@example.com', overwriting any existing value",kubectl annotate --overwrite pods gateway contact-email='support@example.com'
Begin streaming the logs of the time-machine container in pod gateway-pod,kubectl logs -f -c time-machine gateway-pod
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod 3000:5432
Update deployment 'user-management-deployment' with a new environment variable,kubectl set env deployment/user-management-deployment API_KEY=your-api-key
Begin streaming the logs of the cyber-sleuth container in pod auth-service-pod,kubectl logs -f -c cyber-sleuth auth-service-pod
Create a new secret named app-config-secret from an env file,kubectl create secret generic app-config-secret --from-env-file=path/to/data.env
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.cluster-2-context.cluster kube-cluster-1
Begin streaming the logs of the mycontainer container in pod monitoring-pod,kubectl logs -f -c mycontainer monitoring-pod
"Get output from running 'redis-server' command from the first pod of the service api-service, using the first container by default",kubectl exec svc/api-service -- redis-server
Update deployment 'user-management-deployment' with a new environment variable,kubectl set env deployment/user-management-deployment DEBUG=true
Update pod 'log-aggregator' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods log-aggregator role-
Start a wordpress pod and let the container expose port 7000,kubectl run hazelcast --image=wordpress --port=7000
Create a new ClusterIP service named analytics-service-clusterip,kubectl create service clusterip analytics-service-clusterip --tcp=9000:8000
Get output from quantum-quark from pod vpn-service-pod,kubectl attach vpn-service-pod -c quantum-quark
"Update pod 'auth' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods auth env='staging'
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/payment-gateway-pod
Return snapshot of previous terminated cosmic-container container logs from pod cdn-service-pod,kubectl logs -p -c cosmic-container cdn-service-pod
Create a deployment named gitlab that runs the node image with 4 replicas,kubectl create deployment gitlab --image=node --replicas=4
Copy /tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp logging/web-app-pod-1:/tmp/foo /etc/kubernetes
Dump current cluster state to stdout,kubectl cluster-info dump
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""experimental-apps"" API group",kubectl get deployments.hotfix-1.1.2.experimental-apps -o yaml
"Get output from running the 'mysql --version' command from pod proxy-service-pod, using the first container by default",kubectl exec proxy-service-pod -- mysql --version
Remove from node 'node-2' all the taints with key 'dedicated',kubectl taint nodes node-2 dedicated-
Update image of all containers of daemonset test to 'alpine:3.14',kubectl set image daemonset test *=alpine:3.14
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/scheduler-app-deployment API_KEY=your-api-key -o yaml
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""my-apps"" API group",kubectl get deployments.rc-1.1.0.my-apps -o json
Resume an already paused deployment,kubectl rollout resume deployment/nginx
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8000 8088
"Auto scale a deployment ""api"", with the number of pods between 6 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment api --min=6 --max=11
Get output from astro-container from pod frontend-pod,kubectl attach frontend-pod -c astro-container
Import environment from a secret,kubectl set env --from=secret/git-credentials-secret deployment/gateway-deployment
"Get output from running the 'geth version' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- geth version
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/analytics-platform-deployment SMTP_HOST=smtp.example.com -o yaml
Create a new NodePort service named ingress-controller-nodeport,kubectl create service nodeport ingress-controller-nodeport --tcp=8089:5000
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp openfaas/auth-service-pod-11:~/.config/kube :/tmp/bar
Start a node pod and let the container expose port 8888,kubectl run hazelcast --image=node --port=8888
Remove from node 'node-2' all the taints with key 'app',kubectl taint nodes node-2 app-
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/global-config deployment/analytics-platform-deployment
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=app-cluster
Create a new ExternalName service named external-notification-service,kubectl create service externalname external-notification-service --external-name illustration-shop.shop
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=settings=/path/to/preferences/file1.txt --from-file=key2=/path/to/configurations/file2.txt
"Get output from running the 'nginx' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- nginx
Get output from quantum-quark from pod proxy-server-pod,kubectl attach proxy-server-pod -c quantum-quark
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/monitoring-stack-deployment 3000 5000
Get output from running the 'mongo' command in rocket-ranger from pod gateway-pod,kubectl exec gateway-pod -c rocket-ranger -- mongo
"Delete pods and services with same names ""web"" and ""monitoring""","kubectl delete pod,service web monitoring"
Get output from code-explorer from pod gateway-pod,kubectl attach gateway-pod -c code-explorer
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/api-service"
Create a cron job with a command,"kubectl create cronjob cron-task --image=node --schedule=""*/1 * * * *"" -- npm --version"
"If the deployment named app-v2-replicaset's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/app-v2-replicaset
Create a new secret named cert-manager-secret with keys for each file in folder bar,kubectl create secret generic cert-manager-secret --from-file=path/to/properties
"If the deployment named foo's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/foo
Return snapshot of previous terminated nano-bot container logs from pod backend-pod,kubectl logs -p -c nano-bot backend-pod
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=8080:8000
Create a copy of payment-gateway-pod changing all container images to nginx,kubectl debug payment-gateway-pod --copy-to=debug-image-1 --set-image=*=nginx
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=7000 --target-port=800000
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/app-config-dev deployment/backend-microservice-deployment
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/api-service-pod 6379 5432
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/env-vars deployment/mydeployment
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-secrets deployment/scheduler-app-deployment
Start a python pod and let the container expose port 8080,kubectl run hazelcast --image=python --port=8080
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/web-service"
Create a new ClusterIP service named git-service-clusterip,kubectl create service clusterip git-service-clusterip --tcp=3000:8888
Create a cron job with a command,"kubectl create cronjob database-maintenance --image=mongo --schedule=""*/1 * * * *"" -- mongo --version"
Update pod 'database' with the label 'env' and the value 'production',kubectl label pods database env=production
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=on-prem-cluster
Set deployment analytics-platform-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment analytics-platform-deployment kube-scheduler
Create a copy of monitoring-pod changing all container images to nginx,kubectl debug monitoring-pod --copy-to=my-custom-dbg --set-image=*=nginx
Start the golang pod using a different command and custom arguments,kubectl run nginx --image=golang --command -- <cmd> <arg1> ... <argN>
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/frontend-service"
"Listen on port 8888 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8888:8088"
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=kube-cluster-1
Create a new ExternalName service named external-database-service,kubectl create service externalname external-database-service --external-name demo-service.dev
"If the deployment named dev-environment-rs's current size is 5, scale mysql to 1",kubectl scale --current-replicas=5 --replicas=1 deployment/dev-environment-rs
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/security-service-pod :8080
Print the supported namespaced resources,kubectl api-resources --namespacedspaced=true
Add a taint with key 'app' on nodes having label component=proxy,kubectl taint node -l component=proxy  app=web-node-8:PreferNoSchedule
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8081 8081
Get output from running the 'apache2ctl -D FOREGROUND' command in rocket-ranger from pod web-app-pod,kubectl exec web-app-pod -c rocket-ranger -- apache2ctl -D FOREGROUND
Begin streaming the logs of the cyber-sleuth container in pod proxy-server-pod,kubectl logs -f -c cyber-sleuth proxy-server-pod
Create a copy of monitoring-pod changing all container images to redis,kubectl debug monitoring-pod --copy-to=debug-image-api --set-image=*=redis
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-ldap-service
Add a taint with key 'cpu-type' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  cpu-type=testing-node-11:PreferNoSchedule
Get output from running the 'docker run -it ubuntu' command in rocket-ranger from pod email-service-pod,kubectl exec email-service-pod -c rocket-ranger -- docker run -it ubuntu
Create a deployment named loadbalancer that runs the nginx image,kubectl create deployment loadbalancer --image=nginx
"Check to see if I can get the job named ""image-processing-job"" in namespace ""kube-dns""",kubectl auth can-i list jobs.batch/image-processing-job -n kube-dns
Create a copy of payment-gateway-pod changing all container images to node,kubectl debug payment-gateway-pod --copy-to=debug-image-api --set-image=*=node
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/security-service-pod 3000 8888
Create a new config map named app-config-prod from the key=value pairs in the file,kubectl create configmap app-config-prod --from-file=path/to/settings
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""mobile-apps"" API group",kubectl get deployments.dev-2.2.0.mobile-apps -o yaml
Remove from node 'testing-node-11' all the taints with key 'app',kubectl taint nodes testing-node-11 app-
Get output from running pod payment-gateway-pod; use the 'kubectl.kubernetes.io/default-container' annotation # for selecting the container to be attached or the first container in the pod will be chosen,kubectl attach payment-gateway-pod
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""beta-apps"" API group",kubectl get deployments.beta-1.0.beta-apps -o json
Print the supported namespaced resources,kubectl api-resources --shortnamesspaced=true
"Scale a resource identified by type and name specified in ""settings.json"" to 1",kubectl scale --replicas=1 -f settings.json
"Delete pods and services with same names ""backend"" and ""gateway""","kubectl delete pod,service backend gateway"
Update deployment 'mydeployment' with a new environment variable,kubectl set env deployment/mydeployment QUEUE_NAME=task-queue
Remove from node 'worker-node-3' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes worker-node-3 special:NoSchedule-
Return snapshot logs from container payment-processor-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/payment-processor-deployment -c vpn-service-pod-1
Start a redis pod and let the container expose port 8000,kubectl run hazelcast --image=redis --port=8000
Update pod 'monitoring' with the label 'env' and the value 'production',kubectl label pods monitoring env=production
Start a mysql pod and let the container expose port 8081,kubectl run hazelcast --image=mysql --port=8081
"Embed client certificate data in the ""developer"" entry",kubectl config set-credentials developer --client-certificate=~/.kube/admin.crt --embed-certs=true
Update pod 'analytics' with the label 'role' and the value 'frontend',kubectl label pods analytics role=frontend
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=5001 --target-port=801000
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.on-prem-context.cluster cluster-alpha
"Auto scale a replication controller ""monitoring"", with the number of pods between 1 and 2, target CPU utilization at 20%",kubectl autoscale rc monitoring --max=2 --cpu-percent=20
Copy ~/.config/kube from a remote pod to /etc/kubernetes locally,kubectl cp argocd/backend-pod-13:~/.config/kube /etc/kubernetes
Create a cron job with a command,"kubectl create cronjob database-maintenance --image=php --schedule=""*/1 * * * *"" --"
Start a postgres pod and let the container expose port 8443,kubectl run hazelcast --image=postgres --port=8443
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/backend-pod 8081 6379
"Delete pods and services with same names ""cdn"" and ""backend""","kubectl delete pod,service cdn backend"
"Check to see if I can get the job named ""content-import-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/content-import-job -n default
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/backend-pod 6379:8000
Get output from nebula-navigator from pod web-app-pod,kubectl attach web-app-pod -c nebula-navigator
Get output from running the 'jenkins-plugin-cli' command in time-machine from pod web-app-pod,kubectl exec web-app-pod -c time-machine -- jenkins-plugin-cli
"Get output from running the 'java -jar /usr/share/jenkins/jenkins.war' command from pod monitoring-pod, using the first container by default",kubectl exec monitoring-pod -- java -jar /usr/share/jenkins/jenkins.war
"Listen on port 8000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8000:8080
"Delete pods and services with same names ""database"" and ""chat-app""","kubectl delete pod,service database chat-app"
Create a new LoadBalancer service named media-stream-lb,kubectl create service loadbalancer media-stream-lb --tcp=9092:8089
"Wait for the pod ""security-service-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/security-service-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
Update deployment 'authentication-service-deployment' with a new environment variable,kubectl set env deployment/authentication-service-deployment PORT=8080
Update pod 'security' with the label 'tier' and the value 'backend',kubectl label pods security tier=backend
"Listen on port 5000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 5000:8088
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/scheduler-app-deployment -c log-aggregator-pod-1
Start a amazonlinux pod and let the container expose port 8089,kubectl run hazelcast --image=amazonlinux --port=8089
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8000 6379
"Listen on port 8000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/chat-app-pod 8000:9090
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""testing-apps"" API group",kubectl get deployments.alpha-2.0.testing-apps -o yaml
"Update pod 'frontend' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods frontend alert-email='alerts@example.com'
Add a taint with key 'zone' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  zone=db-node-7:PreferNoSchedule
"Listen on port 8080 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 8080:8080"
"Auto scale a replication controller ""database"", with the number of pods between 1 and 5, target CPU utilization at 40%",kubectl autoscale rc database --max=5 --cpu-percent=40
Embed certificate authority data for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
"Delete pods and services with same names ""api"" and ""api""","kubectl delete pod,service api api"
Add to node 'node-2' a taint with key 'hardware' and no value,kubectl taint nodes node-2 hardware:NoSchedule
"Set a deployments postgres container cpu limits to ""200m"" and memory to ""2Gi""","kubectl set resources deployment postgres -c=nginx --limits=cpu=200m,memory=2Gi"
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""beta-apps"" API group",kubectl get deployments.v2.1.0.beta-apps -o json
"Listen on port 8081 locally, forwarding to 9090 in the pod",kubectl port-forward pod/web-app-pod 8081:9090
"Delete pods and services with same names ""cdn"" and ""payment""","kubectl delete pod,service cdn payment"
Get output from running the 'python' command in nebula-navigator from pod email-service-pod,kubectl exec email-service-pod -c nebula-navigator -- python
"Get output from running 'redis-server' command from the first pod of the service database-service, using the first container by default",kubectl exec svc/database-service -- redis-server
Begin streaming the logs of the cosmic-container container in pod e-commerce-pod,kubectl logs -f -c cosmic-container e-commerce-pod
Update deployment 'order-processing-deployment' with a new environment variable,kubectl set env deployment/order-processing-deployment SMTP_USERNAME=your-username
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node monitoring-node-15 -p '{""data"":{""key"":""new-value""}'"
"Listen on port 6379 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 6379:8888
Set deployment load-balancer-deployment's service account to elasticsearch,kubectl set serviceaccount deployment load-balancer-deployment elasticsearch
Add a taint with key 'hardware' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  hardware=prod-node-5:PreferNoSchedule
List a single pod in JSON output format,kubectl get -o json pod vpn-service-pod
Get output from running the 'python' command in cyber-sleuth from pod backend-pod,kubectl exec backend-pod -c cyber-sleuth -- python
Add a taint with key 'disktype' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  disktype=testing-node-11:PreferNoSchedule
Create a job with a command,kubectl create job audit-job --image=postgres -- pg_dump --version
Show metrics for a given pod and its containers,kubectl top pod analytics-pod --containers
Create a new ClusterIP service named catalog-service-clusterip,kubectl create service clusterip catalog-service-clusterip --tcp=8010:8000
"Start a confluentinc/cp-kafka pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=confluentinc/cp-kafka --overrides='{ ""apiVersion"": ""v2.1.0"", ""spec"": { ... } }'"
Update image of all containers of daemonset services to 'debian:11.0',kubectl set image daemonset services *=debian:11.0
Rollback to the previous deployment,kubectl rollout undo deployment/staging
Add a taint with key 'cpu-type' on nodes having label region=eu-west-2,kubectl taint node -l region=eu-west-2  cpu-type=app-node-6:PreferNoSchedule
List the environment variables defined on a deployments 'log-aggregator-deployment',kubectl set env deployment/log-aggregator-deployment --list
Set the resource request and limits for all containers in go,"kubectl set resources deployment go --limits=cpu=200m,memory=512Mi --requests=cpu=10,memory=1Gi"
"Update pod 'proxy' with the annotation 'contact-email' and the value 'support@example.com', overwriting any existing value",kubectl annotate --overwrite pods proxy contact-email='support@example.com'
Get output from running the 'python --version' command in warp-drive from pod vpn-service-pod,kubectl exec vpn-service-pod -c warp-drive -- python --version
Add a taint with key 'app' on nodes having label service=auth,kubectl taint node -l service=auth  app=app-node-6:PreferNoSchedule
"If the deployment named api-service-rs's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/api-service-rs
Create a deployment named web that runs the amazonlinux image and expose port 9000,kubectl create deployment web --image=amazonlinux --port=9000
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/env-vars deployment/notification-handler-deployment
"Auto scale a deployment ""chat-app"", with the number of pods between 2 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment chat-app --min=2 --max=11
"Create a single ingress called 'app1-ingress' that directs requests to foo.com/bar to svc # svc1:8181 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""foo.com/bar=svc1:8181,tls=my-cert"""
Update pod 'cdn' with the label 'tier' and the value 'frontend',kubectl label pods cdn tier=frontend
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8080 3000
"Listen on port 8080 locally, forwarding to 9090 in the pod",kubectl port-forward pod/chat-app-pod 8080:9090
"Delete pods and services with same names ""monitoring"" and ""gateway""","kubectl delete pod,service monitoring gateway"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node node-1 -p '{""data"":{""key"":""new-value""}'"
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8888 8000
Return snapshot logs from container api-server-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/api-server-deployment -c log-aggregator-pod-1
Return snapshot logs from container search-engine-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/search-engine-deployment -c gateway-pod-1
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 5432 8888
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 3000 8088
Create a copy of backend-pod changing the command of mycontainer,kubectl debug backend-pod -it --copy-to=debug-image-memcached --container=mycontainer -- sh
"Listen on port 9090 locally, forwarding to 3000 in the pod",kubectl port-forward pod/chat-app-pod 9090:3000
List resource information in custom columns,"kubectl get pod backend-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Create a copy of email-service-pod changing all container images to node,kubectl debug email-service-pod --copy-to=my-custom-dbg --set-image=*=node
Delete the app-cluster cluster,kubectl config delete-cluster app-cluster
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/backend-pod 8000 9090
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod backend-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/backend-pod 5000 8081
Restart a deployment,kubectl rollout restart deployment/namespace-2
"Listen on port 8081 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8081:8000"
Return snapshot logs from container payment-processor-deployment-1 of a deployment named backend-pod,kubectl logs deployment/payment-processor-deployment -c backend-pod-1
Begin streaming the logs of the nano-bot container in pod analytics-pod,kubectl logs -f -c nano-bot analytics-pod
Create a new ExternalName service named external-dns-service,kubectl create service externalname external-dns-service --external-name education-edu.edu
"Listen on port 8088 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8088:8888
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/backend-pod
Start a postgres pod and let the container expose port 3306,kubectl run hazelcast --image=postgres --port=3306
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""custom-deployments"" API group",kubectl get deployments.v1.0.0.custom-deployments -o json
Embed certificate authority data for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
Create a copy of log-aggregator-pod adding a debug container and changing container images,"kubectl debug log-aggregator-pod -it --copy-to=debug-image-web --image=debian --set-image=api=api:v2,cache=redis:alpine"
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to /tmp/bar locally,kubectl cp kube-proxy/file-server-pod-14:/var/run/secrets/kubernetes.io/serviceaccount/ /tmp/bar
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=8088 --target-port=909100
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=properties=/path/to/configs/file1.txt --from-file=key1=/path/to/parameters/file2.txt
Return snapshot of previous terminated stardust-shuttle container logs from pod email-service-pod,kubectl logs -p -c stardust-shuttle email-service-pod
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=cloud-cluster
Create a job,kubectl create job monitoring-job --image=busybox
Print the supported API resources sorted by a column,kubectl api-resources --sort-by=kind
Return snapshot logs from container gateway-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/gateway-deployment -c web-app-pod-1
"Create a single ingress called 'private-api-ingress' that directs requests to website.com/bar to svc # svc1:9090 with a tls secret ""my-cert""","kubectl create ingress private-api-ingress --rule=""website.com/bar=svc1:9090,tls=my-cert"""
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-name-config deployment/api-server-deployment
Create a copy of media-stream-pod adding a debug container and changing container images,"kubectl debug media-stream-pod -it --copy-to=debug-image-app --image=debian --set-image=logger=logging-app:debug,database=mysql:5.7"
Describe a node,kubectl describe nodes edge-gateway-node-8.edge-gateway.example.com
"Listen on port 6379 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 6379:6379"
"Listen on port 8000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/security-service-pod 8000:8080
"Create a single ingress called 'app-loadbalancer-ingress' that directs requests to testing.com/input to svc # svc1:8081 with a tls secret ""my-cert""","kubectl create ingress app-loadbalancer-ingress --rule=""testing.com/input=svc1:8081,tls=my-cert"""
Update deployment 'email-server-deployment' with a new environment variable,kubectl set env deployment/email-server-deployment DB_HOST=localhost
Update pod 'web' with the label 'env' and the value 'staging',kubectl label pods web env=staging
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kube-dns/worker-pod-4:/tmp/foo :/tmp/bar
"Auto scale a deployment ""database"", with the number of pods between 2 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment database --min=2 --max=15
Set deployment email-server-deployment's service account to dashboard,kubectl set serviceaccount deployment email-server-deployment dashboard
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=9090:8888
"Listen on port 5432 locally, forwarding to 5432 in the pod",kubectl port-forward pod/cdn-service-pod 5432:5432
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/proxy-server-pod 6379:8081
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""custom-apps"" API group",kubectl get deployments.v3.0.0.custom-apps -o json
Begin streaming the logs of the quantum-quark container in pod auth-service-pod,kubectl logs -f -c quantum-quark auth-service-pod
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/chat-app-pod
Set deployment scheduler-app-deployment's service account to argocd,kubectl set serviceaccount deployment scheduler-app-deployment argocd
"Create a cluster role binding for admin, devops-user, and operations-team using the view cluster role",kubectl create clusterrolebinding view --clusterrole=view --user=admin --user=devops-user --group=operations-team
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=app-cluster
Create a job with a command,kubectl create job backup --image=mongo -- mongod
"Auto scale a deployment ""email"", with the number of pods between 4 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment email --min=4 --max=9
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/analytics-pod 8088 5432
"Drain node ""edge-node-10"", even if there are pods not managed by a replication controller, replica set, job, daemon set or stateful set on it",kubectl drain edge-node-10 --force
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""extensions"" API group",kubectl get deployments.v3.0.0.extensions -o yaml
Create a job with a command,kubectl create job image-build-job --image=postgres -- psql
Import environment from a config map with a prefix,kubectl set env --from=configmap/global-config --prefix=MYSQL_ deployment/search-engine-deployment
Create a new secret named private-key-secret with keys for each file in folder bar,kubectl create secret generic private-key-secret --from-file=path/to/profiles
Rename the context 'prod-context' to 'app-2-context' in your kubeconfig file,kubectl config rename-context prod-context app-2-context
Create a cron job with a command,"kubectl create cronjob data-processing --image=ruby --schedule=""*/1 * * * *"" -- irb"
Set custom TLS server name to use for validation for the web-cluster cluster entry,kubectl config set-cluster web-cluster --tls-server-name=e2e
"Update pod 'database' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database contact-email=support@example.com
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/monitoring-config deployment/gateway-deployment
"Update pod 'web' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web SLA='99.9% uptime'
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/kube-system-config deployment/proxy-service-deployment
Create a new secret named cert-manager-secret with keys for each file in folder bar,kubectl create secret generic cert-manager-secret --from-file=path/to/profiles
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""api-v2"" API group",kubectl get deployments.v3.0.0.api-v2 -o json
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/web-app-pod
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/batch-processing-job -n cert-manager
"Listen on port 8888 locally, forwarding to 5432 in the pod",kubectl port-forward pod/mypod 8888:5432
Rename the context 'prod-context' to 'edge-context' in your kubeconfig file,kubectl config rename-context prod-context edge-context
Switch to raw terminal mode; sends stdin to 'bash' in cosmic-container from pod mypod # and sends stdout/stderr from 'bash' back to the client,kubectl attach mypod -c cosmic-container -i -t
Get output from running the 'geth attach' command in nano-bot from pod security-service-pod,kubectl exec security-service-pod -c nano-bot -- geth attach
Update deployment 'proxy-service-deployment' with a new environment variable,kubectl set env deployment/proxy-service-deployment MONGO_URI=mongodb://localhost:27017/mydb
Set the last-applied-configuration of a resource to match the contents of a file; will create the annotation if it does not already exist,kubectl apply set-last-applied -f params.yaml --create-annotation=true
Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo velero/cache-pod-5:/tmp/bar
Create a deployment named monitoring that runs the confluentinc/cp-kafka image and expose port 9091,kubectl create deployment monitoring --image=confluentinc/cp-kafka --port=9091
"Get output from running the 'python' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- python
"Auto scale a deployment ""gateway"", with the number of pods between 2 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=2 --max=11
Return snapshot of previous terminated cyber-sleuth container logs from pod log-aggregator-pod,kubectl logs -p -c cyber-sleuth log-aggregator-pod
"Delete pods and services with same names ""database"" and ""web""","kubectl delete pod,service database web"
"Listen on port 8080 locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod 8080:8888
"List deployments in YAML output format, in the ""beta-1.0"" version of the ""alpha-apps"" API group",kubectl get deployments.beta-1.0.alpha-apps -o yaml
"Get output from running 'yum install -y wget' command from the first pod of the service payment-service, using the first container by default",kubectl exec svc/payment-service -- yum install -y wget
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp default/image-resizer-pod-20:/tmp/foo /tmp/bar
"Set a deployments go container cpu limits to ""3"" and memory to ""1Gi""","kubectl set resources deployment go -c=nginx --limits=cpu=3,memory=1Gi"
Deny CSR 'csr-elastic-9',kubectl certificate deny csr-elastic-9
Create a new LoadBalancer service named backend-lb,kubectl create service loadbalancer backend-lb --tcp=9000:8080
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/chat-app-pod 8088:9090
Set deployment log-aggregator-deployment's service account to vault,kubectl set serviceaccount deployment log-aggregator-deployment vault
"Listen on port 8080 locally, forwarding to 8000 in the pod",kubectl port-forward pod/mypod 8080:8000
Create a new ExternalName service named external-security-service,kubectl create service externalname external-security-service --external-name example-domain.com
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/api-service"
Add a taint with key 'datacenter' on nodes having label app=web-app,kubectl taint node -l app=web-app  datacenter=backup-node-14:PreferNoSchedule
Update pod 'payment' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods payment env-
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 5432 9090
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.edge-context.cluster data-cluster
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""api-v1"" API group",kubectl get deployments.beta-1.0.api-v1 -o json
"Get output from running 'psql' command from the first pod of the deployment scheduler-app-deployment, using the first container by default",kubectl exec deploy/scheduler-app-deployment -- psql
Get output from running the 'elasticsearch' command in quantum-quark from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c quantum-quark -- elasticsearch
Get output from running the 'dotnet' command in lunar-launcher from pod gateway-pod,kubectl exec gateway-pod -c lunar-launcher -- dotnet
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod media-stream-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
"Get output from running 'kafka-topics --list' command from the first pod of the deployment web-app-deployment, using the first container by default",kubectl exec deploy/web-app-deployment -- kafka-topics --list
"Start a centos pod and set environment variables ""DNS_DOMAIN=cluster"" and ""POD_NAMESPACE=default"" in the container","kubectl run hazelcast --image=centos --env=""DNS_DOMAIN=cluster"" --env=""POD_NAMESPACE=default"""
Return snapshot logs from container gateway-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/gateway-deployment -c analytics-pod-1
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/monitoring-stack-deployment -c proxy-server-pod-1
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/monitoring-config deployment/frontend-deployment
"Listen on port 8888 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8888:6379
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 5000 8888
Create a new ExternalName service named external-third-party-api-service,kubectl create service externalname external-third-party-api-service --external-name sandbox-site.co
Create a copy of media-stream-pod adding a debug container and changing container images,"kubectl debug media-stream-pod -it --copy-to=my-debugger --image=debian --set-image=scheduler=my-scheduler:1.0,web=nginx:latest"
"Get output from running the 'go run hello.go' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- go run hello.go
Add a taint with key 'hardware' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  hardware=storage-node-13:PreferNoSchedule
Import environment from a secret,kubectl set env --from=secret/api-key-secret deployment/email-server-deployment
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/backend-microservice-deployment -c media-stream-pod-1
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/web-app-pod 5432 8888
Return snapshot logs from all containers in pods defined by label zone=us-east-1,kubectl logs -l zone=us-east-1 --all-containers=true
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod backend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach backend-pod -c quantum-quark -i -t
Start a golang pod and let the container expose port 8084,kubectl run hazelcast --image=golang --port=8084
"Listen on port 8088 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/scheduler-service 8088:https
Set deployment proxy-service-deployment's service account to jenkins,kubectl set serviceaccount deployment proxy-service-deployment jenkins
Embed certificate authority data for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --embed-certs --certificate-authority=~/.kube/web-cluster/kubernetes.ca.crt
Add a taint with key 'hardware' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  hardware=app-node-6:PreferNoSchedule
"Get output from running the 'wp' command from pod log-aggregator-pod, using the first container by default",kubectl exec log-aggregator-pod -- wp
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=3001:8010
Update pod 'chat-app' with the label 'env' and the value 'production',kubectl label pods chat-app env=production
"Delete pods and services with same names ""backend"" and ""cdn""","kubectl delete pod,service backend cdn"
"Update a pod identified by type and name in ""config.json""",kubectl annotate -f config.json env=staging
Create a job with a command,kubectl create job security-scan-job --image=mongo -- mongod
"Create a cluster role binding for developer3, k8s-admin, and qa-engineers using the reader cluster role",kubectl create clusterrolebinding reader --clusterrole=reader --user=developer3 --user=k8s-admin --group=qa-engineers
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8000 8000
"Listen on port 5432 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 5432:5432
"Update pod 'gateway' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway SLA='99.9% uptime'
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/namespace-config deployment/proxy-service-deployment
Get output from rocket-ranger from pod web-app-pod,kubectl attach web-app-pod -c rocket-ranger
"Listen on port 8081 locally, forwarding to 8088 in the pod",kubectl port-forward pod/frontend-pod 8081:8088
Show metrics for a given node,kubectl top node prod-node-5
"Create a cluster role named ""view"" with ResourceName specified",kubectl create clusterrole view --verb=watch --resource=pods --resource-name=notification-service --resource-name=staging-app-server
Get output from quantum-quark from pod monitoring-pod,kubectl attach monitoring-pod -c quantum-quark
Get output from lunar-launcher from pod mypod,kubectl attach mypod -c lunar-launcher
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.app-1-context.cluster cloud-cluster
Return snapshot of previous terminated nebula-navigator container logs from pod payment-gateway-pod,kubectl logs -p -c nebula-navigator payment-gateway-pod
Remove from node 'testing-node-11' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes testing-node-11 cpu-type:NoSchedule-
"Update pod 'foo' with the annotation 'SLA' and the value '99.9% uptime', overwriting any existing value",kubectl annotate --overwrite pods foo SLA='99.9% uptime'
Copy /tmp/foo_dir from a remote pod to /tmp/bar locally,kubectl cp kube-node-lease/file-server-pod-14:/tmp/foo_dir /tmp/bar
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/mypod 5432 8888
"Enable the OpenID Connect auth provider for the ""cloud-user"" entry with additional args",kubectl config set-credentials cloud-user --auth-provider=oidc --auth-provider-arg=client-id=foo --auth-provider-arg=client-secret=bar
"Create a service for an alpine deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment alpine --port=9000 --target-port=844300
Create a deployment named drupal that runs the alpine image and expose port 9092,kubectl create deployment drupal --image=alpine --port=9092
Add a taint with key 'cpu-type' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  cpu-type=node-1:PreferNoSchedule
"Get output from running the 'wp' command from pod api-service-pod, using the first container by default",kubectl exec api-service-pod -- wp
Get output from running the 'mysql' command in warp-drive from pod analytics-pod,kubectl exec analytics-pod -c warp-drive -- mysql
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""custom-apps"" API group",kubectl get deployments.hotfix-1.1.2.custom-apps -o json
Get output from mycontainer from pod analytics-pod,kubectl attach analytics-pod -c mycontainer
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/web-app-pod 8888:3000
Return snapshot logs from container email-server-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/email-server-deployment -c frontend-pod-1
Return snapshot logs from container load-balancer-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/load-balancer-deployment -c frontend-pod-1
Create a job,kubectl create job data-migration-job --image=busybox
Use the context for the web-cluster cluster,kubectl config use-context web-cluster
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=star-cluster
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=on-prem-cluster
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=e2e
"Update pod 'frontend' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods frontend team='frontend-team'
Create an ingress with TLS enabled using the default ingress certificate and different path types,"kubectl create ingress ingtls --class=default \
--rule=""site.com/=svc:https,tls"" \
--rule=""site.com/path/subpath*=othersvc:9092"""
"Check to see if I can get the job named ""content-import-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/content-import-job -n development
Get output from code-explorer from pod chat-app-pod,kubectl attach chat-app-pod -c code-explorer
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/global-config deployment/backend-microservice-deployment
"Listen on port 8888 locally, forwarding to 8080 in the pod",kubectl port-forward pod/api-service-pod 8888:8080
"Update pod 'log-aggregator' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods log-aggregator expiration-date='2024-12-31'
Set deployment email-server-deployment's service account to tekton,kubectl set serviceaccount deployment email-server-deployment tekton
"Create a single ingress called 'api-gateway-ingress' that directs requests to foo.com/bar to svc # svc1:9000 with a tls secret ""my-cert""","kubectl create ingress api-gateway-ingress --rule=""foo.com/bar=svc1:9000,tls=my-cert"""
"Listen on port 5000 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 5000:8080
"Delete pods and services with same names ""auth"" and ""web""","kubectl delete pod,service auth web"
"Listen on port 5432 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 5432:9090"
"Listen on port 9090 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 9090:8888"
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.admin-context.cluster sun-cluster
Get output from running the 'mysql --version' command in nano-bot from pod web-app-pod,kubectl exec web-app-pod -c nano-bot -- mysql --version
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=cloud-cluster
Update pod 'proxy-server' with the label 'component' and the value 'web',kubectl label pods proxy-server component=web
"Listen on port 5000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/cdn-service-pod 5000:3000
Copy /var/run/secrets/kubernetes.io/serviceaccount/ from a remote pod to /tmp/bar_dir locally,kubectl cp metallb-system/security-scanner-pod-18:/var/run/secrets/kubernetes.io/serviceaccount/ /tmp/bar_dir
Create a deployment named sonarqube that runs the node image and expose port 8089,kubectl create deployment sonarqube --image=node --port=8089
"Auto scale a replication controller ""chat-app"", with the number of pods between 1 and 3, target CPU utilization at 90%",kubectl autoscale rc chat-app --max=3 --cpu-percent=90
Create a new namespace named default,kubectl create namespace default
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.on-prem-context.cluster star-cluster
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/cdn-service-pod 9090:8080
"Update pod 'api' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods api criticality=high
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""custom-deployments"" API group",kubectl get deployments.legacy-1.0.0.custom-deployments -o yaml
Create a new config map named app-secrets from an env file,kubectl create configmap app-secrets --from-env-file=path/to/preferences.env
Embed certificate authority data for the data-cluster cluster entry,kubectl config set-cluster data-cluster --embed-certs --certificate-authority=~/.kube/web-cluster/kubernetes.ca.crt
Add a taint with key 'zone' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  zone=k8s-node-1:PreferNoSchedule
Print the supported namespaced resources,kubectl api-resources --storageVersionHashspaced=true
Create a new config map named app-settings based on folder settings,kubectl create configmap app-settings --from-file=path/to/settings
Get output from running the 'postgres' command in lunar-launcher from pod cdn-service-pod,kubectl exec cdn-service-pod -c lunar-launcher -- postgres
"Delete pods and services with same names ""analytics"" and ""frontend""","kubectl delete pod,service analytics frontend"
Add a taint with key 'zone' on nodes having label environment=production,kubectl taint node -l environment=production  zone=backup-node-14:PreferNoSchedule
Update pod 'proxy-server' with the label 'release' and the value 'v2.0',kubectl label pods proxy-server release=v2.0
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 5000 5432
Remove from node 'storage-node-13' all the taints with key 'hardware',kubectl taint nodes storage-node-13 hardware-
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod monitoring-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach monitoring-pod -c nano-bot -i -t
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=star-cluster
Remove from node 'testing-node-11' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes testing-node-11 dedicated:NoSchedule-
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/security-service-pod 8080:8088
Return snapshot logs from pod security-service-pod with multi containers,kubectl logs security-service-pod --all-containers=true
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/chat-app-pod
Create a cron job with a command,"kubectl create cronjob log-rotation --image=redis --schedule=""*/1 * * * *"" -- redis-server"
"Enable the Google Compute Platform auth provider for the ""robot-user"" entry",kubectl config set-credentials robot-user --auth-provider=gcp
Add a taint with key 'dedicated' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  dedicated=prod-node-5:PreferNoSchedule
Get output from time-machine from pod frontend-pod,kubectl attach frontend-pod -c time-machine
"If the deployment named prod-app-rs's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/prod-app-rs
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/security-service-pod 6379 6379
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/monitoring-pod
Remove from node 'web-node-8' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes web-node-8 special:NoSchedule-
Add a taint with key 'zone' on nodes having label myLabel,kubectl taint node -l myLabel  zone=node-1:PreferNoSchedule
Start a amazonlinux pod and let the container expose port 8088,kubectl run hazelcast --image=amazonlinux --port=8088
Create a new ClusterIP service named catalog-service-clusterip,kubectl create service clusterip catalog-service-clusterip --tcp=8081:27017
Get output from cyber-sleuth from pod proxy-server-pod,kubectl attach proxy-server-pod -c cyber-sleuth
Return snapshot of previous terminated rocket-ranger container logs from pod log-aggregator-pod,kubectl logs -p -c rocket-ranger log-aggregator-pod
Show metrics for a given node,kubectl top node app-node-6
"Get output from running 'ash' command from the first pod of the deployment scheduler-app-deployment, using the first container by default",kubectl exec deploy/scheduler-app-deployment -- ash
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.cloud-context.cluster kube-cluster-1
Update image of all containers of daemonset app-v2 to 'php:7.4.22',kubectl set image daemonset app-v2 *=php:7.4.22
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=properties=/path/to/settings/file1.txt --from-file=key1=/path/to/properties/file2.txt
Add a taint with key 'app' on nodes having label component=proxy,kubectl taint node -l component=proxy  app=dev-node-4:PreferNoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node worker-node-3 -p $'spec:\n containers:\n- name: container-name\n  resources:\n    limits:\n      cpu: 200m'
"Create a job from a cron job named ""cleanup-task""",kubectl create job test-job --from=cronjob/cleanup-task
"Listen on port 8081 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8081:5000
Set deployment email-server-deployment's service account to kube-dns,kubectl set serviceaccount deployment email-server-deployment kube-dns
Set deployment order-processing-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment order-processing-deployment kube-controller-manager
"Update pod 'chat-app' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app scaling-policy=auto-horizontal-scaling
Add a taint with key 'workload' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  workload=dev-node-4:PreferNoSchedule
"Set only the ""client-key"" field on the ""operator"" # entry, without touching other values",kubectl config set-credentials operator --client-key=~/.kube/admin.key
Create a job with a command,kubectl create job testing --image=postgres -- postgres
"Get output from running the 'node' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- node
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/log-analysis-job -n kube-system
Set the resource request and limits for all containers in php,"kubectl set resources deployment php --limits=cpu=200m,memory=512Mi --requests=cpu=5,memory=4Gi"
Return snapshot logs from pod cdn-service-pod with only one container,kubectl logs cdn-service-pod
Get output from running the 'nginx' command in lunar-launcher from pod api-service-pod,kubectl exec api-service-pod -c lunar-launcher -- nginx
Update pod 'proxy' with the label 'role' and the value 'frontend',kubectl label pods proxy role=frontend
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/auth-service-pod
Remove from node 'db-node-7' all the taints with key 'app',kubectl taint nodes db-node-7 app-
Describe a pod,kubectl describe pods/metrics-exporter-pod-10
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/web-app-pod 5000:8081
Create a cron job with a command,"kubectl create cronjob cleanup-task --image=mysql --schedule=""*/1 * * * *"" -- mysqld"
Remove from node 'web-node-8' all the taints with key 'environment',kubectl taint nodes web-node-8 environment-
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/db-config deployment/analytics-platform-deployment
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kube-flannel/database-pod-2::/tmp/foo /tmp/bar_dir
Create a deployment named loadbalancer that runs the mongo image with 7 replicas,kubectl create deployment loadbalancer --image=mongo --replicas=7
"Listen on port 8088 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8088:5000"
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node edge-node-10 -p $'stringData:\n password: new-password'
Remove from node 'prod-node-5' the taint with key 'dedicated' and effect 'NoSchedule' if one exists,kubectl taint nodes prod-node-5 dedicated:NoSchedule-
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/app-config deployment/search-engine-deployment
Edit the job 'log-rotation-job' in JSON using the v1 API format,kubectl edit job.v1.batch/log-rotation-job -o json
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
"Listen on port 8088 locally, forwarding to 3000 in the pod",kubectl port-forward pod/cdn-service-pod 8088:3000
Use the context for the cluster-gamma cluster,kubectl config use-context cluster-gamma
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8000 8080
"Define new exec auth plugin args for the ""saas-admin"" entry",kubectl config set-credentials saas-admin --exec-arg=arg1 --exec-arg=arg2
Begin streaming the logs of the rocket-ranger container in pod backend-pod,kubectl logs -f -c rocket-ranger backend-pod
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=8443 --target-port=808200
Copy /tmp/foo from a remote pod to /tmp/bar locally,kubectl cp velero/web-app-pod-1:/tmp/foo /tmp/bar
Create a pod based on the JSON passed into stdin,cat conf.json | kubectl create -f -
"Start a alpine pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=alpine --overrides='{ ""apiVersion"": ""legacy-1.0.0"", ""spec"": { ... } }'"
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.prod-context.cluster cluster-beta
Remove from node 'node-1' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes node-1 zone:PreferNoSchedule-
"Listen on port 5432 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 5432:3000"
Create a new config map named app-name-config from the key=value pairs in the file,kubectl create configmap app-name-config --from-file=path/to/settings
"If the deployment named api-service-rs's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/api-service-rs
Create a job with a command,kubectl create job security-scan-job --image=nginx -- nginx -t
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 3000 8000
"Listen on port 6379 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 6379:8000
"Delete pods and services with same names ""log-aggregator"" and ""cdn""","kubectl delete pod,service log-aggregator cdn"
"Listen on port 8081 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 8081:9090
"Auto scale a deployment ""monitoring"", with the number of pods between 3 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment monitoring --min=3 --max=13
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/frontend-service"
Add a taint with key 'zone' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  zone=prod-node-5:PreferNoSchedule
"Listen on port 8888 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8888:5432
Add a taint with key 'dedicated' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  dedicated=prod-node-5:PreferNoSchedule
"Create a cluster role name ""view"" with NonResourceURL specified","kubectl create clusterrole ""view"" --verb=get --non-resource-url=/logs/*"
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""third-party-apps"" API group",kubectl get deployments.stable-2.0.0.third-party-apps -o json
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod 6379:8888
Copy :/tmp/foo from a remote pod to /etc/kubernetes locally,kubectl cp logging/logging-agent-pod-7::/tmp/foo /etc/kubernetes
Create a pod using the data in setup.json,kubectl create -f ./setup.json
Display only the most recent 3 lines of output in pod mypod,kubectl logs --tail=3 mypod
"Listen on port 9090 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 9090:8081
"Start a nginx pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=nginx --overrides='{ ""apiVersion"": ""v1.1.0"", ""spec"": { ... } }'"
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/log-config deployment/log-aggregator-deployment
"Enable new exec auth plugin for the ""cloud-user"" entry",kubectl config set-credentials cloud-user --exec-command=/path/to/the/executable --exec-api-version=client.authentication.k8s.io/v1beta1
Print the supported non-namespaced resources,kubectl api-resources --namespacedspaced=false
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/email-service"
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/backend-pod 8888:3000
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""my-apps"" API group",kubectl get deployments.v1.0.0.my-apps -o yaml
Set deployment backend-microservice-deployment's service account to gitlab-runner,kubectl set serviceaccount deployment backend-microservice-deployment gitlab-runner
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.admin-context.cluster cluster-alpha
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/analytics-pod :8081
"If the deployment named foo's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/foo
Get output from running the 'nginx' command in code-explorer from pod frontend-pod,kubectl exec frontend-pod -c code-explorer -- nginx
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/ui-config deployment/database-deployment
Create a new LoadBalancer service named frontend-lb,kubectl create service loadbalancer frontend-lb --tcp=8080:8181
"Listen on port 6379 locally, forwarding to 8088 in the pod",kubectl port-forward pod/e-commerce-pod 6379:8088
"Auto scale a replication controller ""auth"", with the number of pods between 1 and 5, target CPU utilization at 50%",kubectl autoscale rc auth --max=5 --cpu-percent=50
Set the resource request and limits for all containers in redis,"kubectl set resources deployment redis --limits=cpu=200m,memory=512Mi --requests=cpu=200m,memory=2Gi"
Scale a replica set named 'backend-service-replicaset' to 1,kubectl scale --replicas=1 rs/backend-service-replicaset
"Listen on port 8888 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8888:8081
Add a taint with key 'environment' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  environment=monitoring-node-15:PreferNoSchedule
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named backend-pod,kubectl logs deployment/backend-microservice-deployment -c backend-pod-1
"Start a postgres pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=postgres --overrides='{ ""apiVersion"": ""stable-2.0.0"", ""spec"": { ... } }'"
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod 6379:8081
Return snapshot logs from container proxy-service-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/proxy-service-deployment -c gateway-pod-1
Add a taint with key 'app' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  app=testing-node-11:PreferNoSchedule
"Start a mysql pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mysql --overrides='{ ""apiVersion"": ""custom-version"", ""spec"": { ... } }'"
Get output from running the 'mysql' command in nebula-navigator from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c nebula-navigator -- mysql
Get output from rocket-ranger from pod security-service-pod,kubectl attach security-service-pod -c rocket-ranger
"Start a nginx pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=nginx --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
"Create a service for a replicated ubuntu, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ubuntu --port=8082 --target-port=800000
"Update pod 'analytics' with the annotation 'description' and the value 'Web server for marketing site', overwriting any existing value",kubectl annotate --overwrite pods analytics description='Web server for marketing site'
"Listen on port 9090 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 9090:5000"
Embed certificate authority data for the e2e cluster entry,kubectl config set-cluster e2e --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
"Update pod 'cdn' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods cdn security-scan-status=pass
Set deployment api-server-deployment's service account to kube-proxy,kubectl set serviceaccount deployment api-server-deployment kube-proxy
Create a deployment with a command,kubectl create deployment sonarqube --image=ruby -- gem --version
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/namespace-config deployment/api-server-deployment
Add a taint with key 'special' on nodes having label component=proxy,kubectl taint node -l component=proxy  special=kube-master-9:PreferNoSchedule
"Start a ethereum/client-go pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ethereum/client-go --overrides='{ ""apiVersion"": ""custom-version"", ""spec"": { ... } }'"
"Listen on port 3000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 3000:9090
Add a taint with key 'zone' on nodes having label component=proxy,kubectl taint node -l component=proxy  zone=edge-node-10:PreferNoSchedule
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/log-aggregator-pod 3000:5000
Create a new LoadBalancer service named email-service-lb,kubectl create service loadbalancer email-service-lb --tcp=9091:8083
Start a mysql pod and let the container expose port 9092,kubectl run hazelcast --image=mysql --port=9092
Get output from running the 'irb' command in code-explorer from pod cdn-service-pod,kubectl exec cdn-service-pod -c code-explorer -- irb
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=8181:9091
"Get output from running 'mongod' command from the first pod of the service search-service, using the first container by default",kubectl exec svc/search-service -- mongod
Import environment from a secret,kubectl set env --from=secret/oauth-secret deployment/backend-microservice-deployment
"Listen on port 8081 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8081:9090
Copy /var/run/secrets/kubernetes.io/serviceaccount/ local file to /tmp/bar in a remote pod in namespace,kubectl cp /var/run/secrets/kubernetes.io/serviceaccount/ kube-system/security-scanner-pod-18:/tmp/bar
Set the user field on the edge-context context entry without touching other values,kubectl config set-context edge-context --user=cluster-admin
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=conf=/path/to/data/file1.txt --from-file=data=/path/to/configurations/file2.txt
Update pod 'database' with the label 'tier' and the value 'frontend',kubectl label pods database tier=frontend
Return snapshot of previous terminated astro-container container logs from pod auth-service-pod,kubectl logs -p -c astro-container auth-service-pod
"Listen on port 8888 locally, forwarding to 5432 in the pod",kubectl port-forward pod/security-service-pod 8888:5432
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/api-service-pod
Restart a deployment,kubectl rollout restart deployment/prod
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp default/database-pod-2::/tmp/foo /tmp/bar
"Get output from running the 'bash' command from pod database-pod, using the first container by default",kubectl exec database-pod -- bash
Start a node pod and let the container expose port 8010,kubectl run hazelcast --image=node --port=8010
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/loadbalancer-service"
"Listen on port 8080 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8080:8088
Return snapshot of previous terminated cyber-sleuth container logs from pod chat-app-pod,kubectl logs -p -c cyber-sleuth chat-app-pod
"Create a cluster role named ""custom_role"" with ResourceName specified",kubectl create clusterrole custom_role --verb=get --resource=services --resource-name=auth-proxy --resource-name=billing-service
Edit the service named 'docker-registry',kubectl edit svc/docker-registry
"Delete pods and services with same names ""security"" and ""log-aggregator""","kubectl delete pod,service security log-aggregator"
Delete the john.doe user,kubectl config delete-user john.doe
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod vpn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach vpn-service-pod -c warp-drive -i -t
Get output from warp-drive from pod media-stream-pod,kubectl attach media-stream-pod -c warp-drive
"Listen on port 8080 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8080:5432
"Get output from running 'dotnet' command from the first pod of the deployment log-aggregator-deployment, using the first container by default",kubectl exec deploy/log-aggregator-deployment -- dotnet
"Delete pods and services with same names ""frontend"" and ""gateway""","kubectl delete pod,service frontend gateway"
"Listen on port 5000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/analytics-pod 5000:5432
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/backend-pod 5000:8081
"Get output from running 'composer --version' command from the first pod of the service payment-service, using the first container by default",kubectl exec svc/payment-service -- composer --version
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.client-2-context.cluster cluster-beta
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""custom-apps"" API group",kubectl get deployments.stable-2.0.0.custom-apps -o json
Get output from running the 'mysql --version' command in cosmic-container from pod frontend-pod,kubectl exec frontend-pod -c cosmic-container -- mysql --version
Return snapshot logs from pod frontend-pod with multi containers,kubectl logs frontend-pod --all-containers=true
"Check to see if I can get the job named ""image-processing-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/image-processing-job -n namespace-1
"Update pod 'gateway' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods gateway app-version=2.5.1
Edit the service named 'monitoring-service',kubectl edit svc/monitoring-service
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/analytics-service"
"Listen on port 6379 locally, forwarding to 5432 in the pod",kubectl port-forward pod/proxy-server-pod 6379:5432
Scale a replica set named 'foo' to 5,kubectl scale --replicas=5 rs/foo
"Get output from running the 'geth attach' command from pod e-commerce-pod, using the first container by default",kubectl exec e-commerce-pod -- geth attach
Get output from mycontainer from pod backend-pod,kubectl attach backend-pod -c mycontainer
"Listen on port 8081 locally, forwarding to 8080 in the pod",kubectl port-forward pod/mypod 8081:8080
Create a deployment named api that runs the golang image and expose port 8181,kubectl create deployment api --image=golang --port=8181
Add a taint with key 'app' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  app=gpu-node-12:PreferNoSchedule
Begin streaming the logs of the time-machine container in pod media-stream-pod,kubectl logs -f -c time-machine media-stream-pod
Return snapshot of previous terminated quantum-quark container logs from pod backend-pod,kubectl logs -p -c quantum-quark backend-pod
"Listen on port 8081 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8081:8888
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=kube-cluster-2
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 5432 8000
"Listen on port 8088 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8088:9090
Add to node 'edge-node-10' a taint with key 'datacenter' and no value,kubectl taint nodes edge-node-10 datacenter:NoSchedule
Create a copy of frontend-pod changing all container images to busybox,kubectl debug frontend-pod --copy-to=debug-image-web --set-image=*=busybox
"Update a pod identified by the type and name in ""parameters.yaml""",kubectl label -f parameters.yaml status=unhealthy
"Listen on port 6379 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 6379:5432
"Listen on port 8081 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8081:8088"
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/docker-registry"
Add to node 'worker-node-3' a taint with key 'special' and no value,kubectl taint nodes worker-node-3 special:NoSchedule
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json scaling-policy=auto-horizontal-scaling
Return snapshot of previous terminated cyber-sleuth container logs from pod gateway-pod,kubectl logs -p -c cyber-sleuth gateway-pod
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/security-service-pod
"Listen on port 5432 locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod 5432:8088
Scale a replica set named 'mysql' to 1,kubectl scale --replicas=1 rs/mysql
Update pod 'backend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods backend env-
"Listen on port 8088 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8088:8081
Get the password for the cluster-beta user,"kubectl config view -o jsonpath='{.users[?(@.name == ""cluster-beta"")].user.password}'"
"Listen on port 3000 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 3000:5000
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.client-1-context.cluster moon-cluster
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/log-rotation-job -n testing
"If the deployment named api-service-rs's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/api-service-rs
"Listen on port 8080 locally, forwarding to 8000 in the pod",kubectl port-forward pod/web-app-pod 8080:8000
Create a new secret named api-secret-key from an env file,kubectl create secret generic api-secret-key --from-env-file=path/to/options.env
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/security-service-pod
Add a taint with key 'datacenter' on nodes having label release=beta,kubectl taint node -l release=beta  datacenter=testing-node-11:PreferNoSchedule
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.dev-context.cluster cloud-cluster
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/chat-app-pod
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp kube-dns/file-server-pod-14::/tmp/foo /tmp/bar_dir
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json expiration-date='2024-12-31'
Create a deployment named db that runs the amazonlinux image and expose port 5001,kubectl create deployment db --image=amazonlinux --port=5001
"Listen on a random port locally, forwarding to 6379 in the pod",kubectl port-forward pod/e-commerce-pod :6379
Create a job with a command,kubectl create job database-seeding-job --image=redis -- redis-server
Get output from running the 'node' command in rocket-ranger from pod frontend-pod,kubectl exec frontend-pod -c rocket-ranger -- node
Start a mongo pod and let the container expose port 27017,kubectl run hazelcast --image=mongo --port=27017
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/backend-pod :8080
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""third-party-apps"" API group",kubectl get deployments.v3.0.0.third-party-apps -o json
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""experimental-apps"" API group",kubectl get deployments.v2.1.0.experimental-apps -o yaml
Set the server field on the web-cluster cluster to https://1.2.3.4,kubectl config set clusters.web-cluster.server https://1.2.3.4
Create a copy of e-commerce-pod adding a debug container and changing container images,"kubectl debug e-commerce-pod -it --copy-to=debug-image-memcached --image=debian --set-image=proxy=nginx:1.21,database=mysql:5.7"
"Get output from running the 'go' command from pod backend-pod, using the first container by default",kubectl exec backend-pod -- go
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 5000 5000
Return snapshot of previous terminated lunar-launcher container logs from pod e-commerce-pod,kubectl logs -p -c lunar-launcher e-commerce-pod
Create a new secret named app-config-secret from an env file,kubectl create secret generic app-config-secret --from-env-file=path/to/options.env
"Set a deployments kafka container cpu limits to ""50m"" and memory to ""4Gi""","kubectl set resources deployment kafka -c=nginx --limits=cpu=50m,memory=4Gi"
"Listen on port 8080 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8080:6379
"Update pod 'web' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web description='Web server for marketing site'
Set deployment api-server-deployment's service account to my-service-account,kubectl set serviceaccount deployment api-server-deployment my-service-account
"Update pod 'frontend' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods frontend team='frontend team'
"Listen on port 6379 locally, forwarding to 5000 in the pod",kubectl port-forward pod/analytics-pod 6379:5000
Create a job with a command,kubectl create job log-collection --image=nginx -- nginx -t
"Listen on port 8888 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 8888:9090
Update pod 'backend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods backend component-
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.cloud-context.cluster galaxy-cluster
"Listen on port 3000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/api-service-pod 3000:9090
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json scaling-policy=auto-horizontal-scaling
Get output from the first pod of a replica set named mysql,kubectl attach rs/mysql
"Set a deployments kafka container cpu limits to ""2"" and memory to ""64Mi""","kubectl set resources deployment kafka -c=nginx --limits=cpu=2,memory=64Mi"
Add a taint with key 'disktype' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  disktype=db-node-7:PreferNoSchedule
Create a job with a command,kubectl create job indexing --image=golang -- go version
Edit the service named 'search-service',kubectl edit svc/search-service
"Listen on port 5000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/frontend-pod 5000:8088
Create a copy of payment-gateway-pod changing all container images to redis,kubectl debug payment-gateway-pod --copy-to=my-custom-dbg --set-image=*=redis
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp rook-ceph/monitoring-agent-pod-6:~/.config/kube :/tmp/bar
Begin streaming the logs of the rocket-ranger container in pod security-service-pod,kubectl logs -f -c rocket-ranger security-service-pod
List a single pod in YAML output format,kubectl get -o yaml pod chat-app-pod
Edit the data in parameters.json in JSON then create the resource using the edited data,kubectl create -f parameters.json --edit -o json
"Delete pods and services with same names ""proxy"" and ""gateway""","kubectl delete pod,service proxy gateway"
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/payment-gateway-pod
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/log-config deployment/authentication-service-deployment
Diff file read from stdin,cat pod.json | kubectl diff -f -
Create a copy of backend-pod changing all container images to docker.elastic.co/elasticsearch/elasticsearch,kubectl debug backend-pod --copy-to=my-custom-dbg --set-image=*=docker.elastic.co/elasticsearch/elasticsearch
Update pod 'api' with the label 'role' and the value 'cache',kubectl label pods api role=cache
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/namespace-config deployment/database-deployment
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""internal-apps"" API group",kubectl get deployments.v2.1.0.internal-apps -o json
The default value of status condition is true; you can set it to false,kubectl wait --for=condition=Ready=false pod/busybox1
Create a new config map named monitoring-config based on folder options,kubectl create configmap monitoring-config --from-file=path/to/options
Get output from running the 'yum install -y wget' command in code-explorer from pod proxy-service-pod,kubectl exec proxy-service-pod -c code-explorer -- yum install -y wget
"Listen on port 8080 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8080:5000"
Begin streaming the logs from all containers in pods defined by label instance=app-instance-1,kubectl logs -f -l instance=app-instance-1 --all-containers=true
"Create a job from a cron job named ""alerts-cleanup""",kubectl create job test-job --from=cronjob/alerts-cleanup
Add a taint with key 'workload' on nodes having label team=devops,kubectl taint node -l team=devops  workload=gpu-node-12:PreferNoSchedule
Show metrics for a given pod and its containers,kubectl top pod auth-service-pod --containers
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/data/file2.txt
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/api-service-pod 8080 8080
Get output from running the 'go' command in astro-container from pod cdn-service-pod,kubectl exec cdn-service-pod -c astro-container -- go
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=8081 --target-port=543200
Embed certificate authority data for the dev-cluster cluster entry,kubectl config set-cluster dev-cluster --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
"Listen on port 8888 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/frontend-pod 8888:9090"
Display only the most recent 20 lines of output in pod database-pod,kubectl logs --tail=20 database-pod
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node web-node-8 -p '{""spec"":{""rules"":[{""http"":{""paths"":[{""path"":""/"",""backend"":{""service"": {""name"": ""new-service""}}}]}}'"
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod media-stream-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
Create a deployment named auth that runs the redis image,kubectl create deployment auth --image=redis
Import environment from a secret,kubectl set env --from=secret/ldap-credentials-secret deployment/web-app-deployment
"Update pod 'log-aggregator' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator description='Web server for marketing site'
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json team='frontend team'
Create a new ExternalName service named external-messaging-service,kubectl create service externalname external-messaging-service --external-name governmental-demo.gov
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""testing-apps"" API group",kubectl get deployments.legacy-1.0.0.testing-apps -o json
Create a deployment named jenkins that runs the ubuntu image and expose port 9000,kubectl create deployment jenkins --image=ubuntu --port=9000
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-name-config deployment/payment-processor-deployment
Return snapshot logs from container search-engine-deployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/search-engine-deployment -c log-aggregator-pod-1
"List deployments in JSON output format, in the ""hotfix-1.1.2"" version of the ""mobile-apps"" API group",kubectl get deployments.hotfix-1.1.2.mobile-apps -o json
"Create a service for a replicated centos, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc centos --port=6379 --target-port=330600
"Listen on port 8000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8000:6379
List resources from a directory with kustomization.yaml - e.g. dir/kustomization.yaml,kubectl get -k dir/
"Create a service for a replicated nginx using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs nginx --port=9092 --target-port=543200
Print the supported non-namespaced resources,kubectl api-resources --namespaced=false
Return snapshot of previous terminated mycontainer container logs from pod chat-app-pod,kubectl logs -p -c mycontainer chat-app-pod
Display only the most recent 23 lines of output in pod cdn-service-pod,kubectl logs --tail=23 cdn-service-pod
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=staging-cluster
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/global-config deployment/user-management-deployment
"Listen on port 8888 locally, forwarding to 9090 in the pod",kubectl port-forward pod/log-aggregator-pod 8888:9090
"Listen on port 8088 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 8088:8080"
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=8083:9092
Add to node 'gpu-node-12' a taint with key 'hardware' and no value,kubectl taint nodes gpu-node-12 hardware:NoSchedule
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/api-config deployment/user-management-deployment
"Get output from running 'geth version' command from the first pod of the deployment order-processing-deployment, using the first container by default",kubectl exec deploy/order-processing-deployment -- geth version
"Listen on port 6379 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 6379:3000"
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/cache-service"
"Listen on port 8080 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 8080:5432"
Start a redis pod and let the container expose port 3306,kubectl run hazelcast --image=redis --port=3306
Get output from running the 'mysql --version' command in lunar-launcher from pod database-pod,kubectl exec database-pod -c lunar-launcher -- mysql --version
"List deployments in YAML output format, in the ""custom-version"" version of the ""custom-apps"" API group",kubectl get deployments.custom-version.custom-apps -o yaml
Remove from node 'node-1' all the taints with key 'cpu-type',kubectl taint nodes node-1 cpu-type-
Embed certificate authority data for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --embed-certs --certificate-authority=~/.kube/testing-cluster/kubernetes.ca.crt
Return snapshot logs from container notification-handler-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/notification-handler-deployment -c frontend-pod-1
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.prod-context.cluster app-cluster
"Get output from running 'redis-cli' command from the first pod of the deployment mydeployment, using the first container by default",kubectl exec deploy/mydeployment -- redis-cli
"Wait for the pod ""cdn-service-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/cdn-service-pod
Create a job with a command,kubectl create job scaling-job --image=redis -- redis-cli
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=8083 --target-port=808000
Get output from running the 'go run hello.go' command in lunar-launcher from pod e-commerce-pod,kubectl exec e-commerce-pod -c lunar-launcher -- go run hello.go
Show metrics for the pods defined by label team=devops,kubectl top pod -l team=devops
"Listen on port 6379 locally, forwarding to 8080 in the pod",kubectl port-forward pod/chat-app-pod 6379:8080
Add a taint with key 'cpu-type' on nodes having label myLabel,kubectl taint node -l myLabel  cpu-type=db-node-7:PreferNoSchedule
"Update pod 'web' with the annotation 'alert-email' and the value 'alerts@example.com', overwriting any existing value",kubectl annotate --overwrite pods web alert-email='alerts@example.com'
"Start a node pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=node --overrides='{ ""apiVersion"": ""alpha-2.0"", ""spec"": { ... } }'"
Get output from code-explorer from pod e-commerce-pod,kubectl attach e-commerce-pod -c code-explorer
"Listen on port 3000 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 3000:5432"
Set custom TLS server name to use for validation for the testing-cluster cluster entry,kubectl config set-cluster testing-cluster --tls-server-name=staging-cluster
Update pod 'frontend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods frontend unhealthy-
"Set a deployments ruby container cpu limits to ""3"" and memory to ""2Gi""","kubectl set resources deployment ruby -c=nginx --limits=cpu=3,memory=2Gi"
"Update pod 'media-stream' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream backup-strategy='daily backups'
Update pod 'payment' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods payment component-
"Listen on port 8000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8000:8000"
Display only the most recent 53 lines of output in pod security-service-pod,kubectl logs --tail=53 security-service-pod
"Get output from running the 'go run hello.go' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- go run hello.go
Create a job with a command,kubectl create job log-collection --image=ruby -- gem --version
Update pod 'proxy' with the label 'tier' and the value 'database',kubectl label pods proxy tier=database
"Set a deployments nginx container cpu limits to ""10"" and memory to ""512Mi""","kubectl set resources deployment nginx -c=nginx --limits=cpu=10,memory=512Mi"
"Update pod 'foo' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo description='Web server for marketing site'
Set deployment backend-microservice-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment backend-microservice-deployment kube-controller-manager
Remove from node 'dev-node-4' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes dev-node-4 hardware:NoExecute-
"Update pod 'payment' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment expiration-date='2024-12-31'
"Delete pods and services with same names ""foo"" and ""gateway""","kubectl delete pod,service foo gateway"
Create a new config map named global-config based on folder options,kubectl create configmap global-config --from-file=path/to/options
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 8081 5432
Create a new secret named private-key-secret from an env file,kubectl create secret generic private-key-secret --from-env-file=path/to/options.env
Get output from running the 'psql' command in lunar-launcher from pod backend-pod,kubectl exec backend-pod -c lunar-launcher -- psql
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=5000 --target-port=330600
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/frontend-pod
"Listen on port 8888 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8888:8000"
List one or more resources by their type and names,kubectl get rc/web service/log-aggregator-rc pods/proxy-service-pod
Set deployment proxy-service-deployment's service account to tekton,kubectl set serviceaccount deployment proxy-service-deployment tekton
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp kube-flannel/api-server-pod-3:/tmp/foo_dir :/tmp/bar
"Listen on port 8081 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8081:8080
"Listen on port 6379 locally, forwarding to 5000 in the pod",kubectl port-forward pod/backend-pod 6379:5000
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml env=staging
"Listen on port 8080 locally, forwarding to 3000 in the pod",kubectl port-forward pod/e-commerce-pod 8080:3000
Create a new secret named api-secret-key with keys for each file in folder bar,kubectl create secret generic api-secret-key --from-file=path/to/settings
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""alpha-apps"" API group",kubectl get deployments.v1.1.1.alpha-apps -o yaml
Get output from running the 'apache2ctl -D FOREGROUND' command in cosmic-container from pod proxy-server-pod,kubectl exec proxy-server-pod -c cosmic-container -- apache2ctl -D FOREGROUND
Update pod 'database' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods database description-
"Get output from running 'ruby --version' command from the first pod of the deployment mydeployment, using the first container by default",kubectl exec deploy/mydeployment -- ruby --version
"Get output from running the 'elasticsearch --version' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- elasticsearch --version
Import environment from a secret,kubectl set env --from=secret/encryption-key-secret deployment/gateway-deployment
Display only the most recent 12 lines of output in pod web-app-pod,kubectl logs --tail=12 web-app-pod
Create a deployment named jenkins that runs the nginx image and expose port 8443,kubectl create deployment jenkins --image=nginx --port=8443
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/db-config deployment/email-server-deployment
"List deployments in YAML output format, in the ""legacy-1.0.0"" version of the ""external-apps"" API group",kubectl get deployments.legacy-1.0.0.external-apps -o yaml
Set the cluster field in the my-context context to cloud-cluster,kubectl config set contexts.admin-context.cluster cloud-cluster
Start a golang pod and let the container expose port 8083,kubectl run hazelcast --image=golang --port=8083
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-config deployment/search-engine-deployment
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/vpn-service-pod
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 5000 8888
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node kube-master-9 -p $'spec:\n replicas: 3'
Copy /var/run/secrets/kubernetes.io/serviceaccount/ local file to :/tmp/bar in a remote pod in namespace,kubectl cp /var/run/secrets/kubernetes.io/serviceaccount/ monitoring/ingress-controller-pod-8::/tmp/bar
Start a centos pod and let the container expose port 8181,kubectl run hazelcast --image=centos --port=8181
Return snapshot of previous terminated mycontainer container logs from pod payment-gateway-pod,kubectl logs -p -c mycontainer payment-gateway-pod
Begin streaming the logs from all containers in pods defined by label customer=acme-corp,kubectl logs -f -l customer=acme-corp --all-containers=true
"Create a single ingress called 'app-gateway-ingress' that directs requests to testing.com/bar to svc # svc1:8084 with a tls secret ""my-cert""","kubectl create ingress app-gateway-ingress --rule=""testing.com/bar=svc1:8084,tls=my-cert"""
Rename the context 'dev-context' to 'team-alpha-context' in your kubeconfig file,kubectl config rename-context dev-context team-alpha-context
"Check to see if I can get the job named ""cleanup-job"" in namespace ""production""",kubectl auth can-i list jobs.batch/cleanup-job -n production
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/backend-pod
Create a deployment named app that runs the mongo image and expose port 8083,kubectl create deployment app --image=mongo --port=8083
"Listen on port 8888 locally, forwarding to 9090 in the pod",kubectl port-forward pod/chat-app-pod 8888:9090
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8080 3000
"Auto scale a replication controller ""proxy-server"", with the number of pods between 1 and 3, target CPU utilization at 20%",kubectl autoscale rc proxy-server --max=3 --cpu-percent=20
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/env-vars deployment/mydeployment
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-name-config deployment/log-aggregator-deployment
"Listen on port 8080 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8080:8888
Start a postgres pod and let the container expose port 9090,kubectl run hazelcast --image=postgres --port=9090
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""backup-apps"" API group",kubectl get deployments.v3.0.0.backup-apps -o json
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node node-2 -p $'stringData:\n password: new-password'
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config deployment/analytics-platform-deployment
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/web-app-pod 5432 8000
Add a taint with key 'workload' on nodes having label cluster=my-cluster,kubectl taint node -l cluster=my-cluster  workload=app-node-6:PreferNoSchedule
Copy ~/.config/kube local file to :/tmp/bar in a remote pod in a specific container,kubectl cp ~/.config/kube database-pod-2::/tmp/bar -c monitoring-agent
Create a new secret named aws-credentials-secret with keys for each file in folder bar,kubectl create secret generic aws-credentials-secret --from-file=path/to/settings
Create a new NodePort service named auth-service-nodeport,kubectl create service nodeport auth-service-nodeport --tcp=3001:8083
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""my-apps"" API group",kubectl get deployments.v1.1.0.my-apps -o json
Start a mysql pod and let the container expose port 5432,kubectl run hazelcast --image=mysql --port=5432
Create a new secret named aws-credentials-secret with keys for each file in folder bar,kubectl create secret generic aws-credentials-secret --from-file=path/to/profiles
Set deployment frontend-deployment's service account to cert-manager,kubectl set serviceaccount deployment frontend-deployment cert-manager
Return snapshot of previous terminated time-machine container logs from pod log-aggregator-pod,kubectl logs -p -c time-machine log-aggregator-pod
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/db-config deployment/backend-microservice-deployment
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp logging/backend-pod-13::/tmp/foo /tmp/bar_dir
"Listen on port 3000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 3000:8081
Return snapshot logs from container search-engine-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/search-engine-deployment -c proxy-server-pod-1
Scale a replica set named 'frontend-rs' to 3,kubectl scale --replicas=3 rs/frontend-rs
Create a new namespace named namespace-1,kubectl create namespace namespace-1
Remove from node 'testing-node-11' all the taints with key 'disktype',kubectl taint nodes testing-node-11 disktype-
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=5000:8088
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""beta-apps"" API group",kubectl get deployments.stable-2.0.0.beta-apps -o yaml
"Update pod 'email' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling', overwriting any existing value",kubectl annotate --overwrite pods email scaling-policy='auto-horizontal-scaling'
"Create a single ingress called 'private-api-ingress' that directs requests to site.com/bar to svc # svc1:8000 with a tls secret ""my-cert""","kubectl create ingress private-api-ingress --rule=""site.com/bar=svc1:8000,tls=my-cert"""
Delete pods and services with label namespace=mynamespace,"kubectl delete pods,services -l namespace=mynamespace"
Get output from cyber-sleuth from pod e-commerce-pod,kubectl attach e-commerce-pod -c cyber-sleuth
Return snapshot logs from container notification-handler-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/notification-handler-deployment -c e-commerce-pod-1
Create a new secret named api-key-secret with keys for each file in folder bar,kubectl create secret generic api-key-secret --from-file=path/to/configurations
"Set only the ""client-key"" field on the ""dev-user"" # entry, without touching other values",kubectl config set-credentials dev-user --client-key=~/.kube/admin.key
Create a new config map named app-config-dev with key1=config1 and key2=config2,kubectl create configmap app-config-dev --from-literal=settings=config1 --from-literal=key2=config2
"Listen on port 3000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/cdn-service-pod 3000:8088
Remove from node 'testing-node-11' all the taints with key 'environment',kubectl taint nodes testing-node-11 environment-
Start a ruby pod and let the container expose port 8080,kubectl run hazelcast --image=ruby --port=8080
Add to node 'worker-node-3' a taint with key 'cpu-type' and no value,kubectl taint nodes worker-node-3 cpu-type:NoSchedule
Add a taint with key 'zone' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  zone=web-node-8:PreferNoSchedule
"Listen on port 8888 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8888:3000"
Update deployment 'user-management-deployment' with a new environment variable,kubectl set env deployment/user-management-deployment SMTP_HOST=smtp.example.com
Return snapshot of previous terminated time-machine container logs from pod e-commerce-pod,kubectl logs -p -c time-machine e-commerce-pod
Set deployment web-app-deployment's service account to kube-proxy,kubectl set serviceaccount deployment web-app-deployment kube-proxy
"Listen on port 8081 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8081:6379"
"Update pod 'proxy-server' with the annotation 'description' and the value 'Web server for marketing site' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server description='Web server for marketing site'
Create a job with a command,kubectl create job deployment-rollout-job --image=golang -- go
"List deployments in YAML output format, in the ""v1.0.0"" version of the ""backup-apps"" API group",kubectl get deployments.v1.0.0.backup-apps -o yaml
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=kube-cluster-1
"Listen on port 9090 locally, forwarding to 8888 in the pod",kubectl port-forward pod/chat-app-pod 9090:8888
Get output from running the 'mysql' command in astro-container from pod auth-service-pod,kubectl exec auth-service-pod -c astro-container -- mysql
Start a golang pod and let the container expose port 8000,kubectl run hazelcast --image=golang --port=8000
Set the client-key-data field in the robot-user user using --set-raw-bytes option,kubectl config set users.robot-user.client-key-data cert_data_here --set-raw-bytes=true
Update deployment 'api-server-deployment' with a new environment variable,kubectl set env deployment/api-server-deployment QUEUE_NAME=task-queue
Set the resource request and limits for all containers in golang,"kubectl set resources deployment golang --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=1Gi"
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/notification-handler-deployment CACHE_SIZE=64MB -o yaml
"Listen on a random port locally, forwarding to 6379 in the pod",kubectl port-forward pod/api-service-pod :6379
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/app-config deployment/proxy-service-deployment
Return snapshot logs from container api-server-deployment-1 of a deployment named payment-gateway-pod,kubectl logs deployment/api-server-deployment -c payment-gateway-pod-1
"If the deployment named baz's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/baz
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node app-node-6 -p $'data:\n key: new-value'
Create a job with a command,kubectl create job indexing --image=php --
Get output from running the 'python' command in warp-drive from pod analytics-pod,kubectl exec analytics-pod -c warp-drive -- python
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/payment-service"
Create a job with a command,kubectl create job image-build-job --image=golang -- go run hello.go
Create a new LoadBalancer service named email-service-lb,kubectl create service loadbalancer email-service-lb --tcp=9092:8084
Set deployment analytics-platform-deployment's service account to metrics-server,kubectl set serviceaccount deployment analytics-platform-deployment metrics-server
Add a taint with key 'app' on nodes having label environment=production,kubectl taint node -l environment=production  app=kube-master-9:PreferNoSchedule
Get output from running the 'wp' command in warp-drive from pod monitoring-pod,kubectl exec monitoring-pod -c warp-drive -- wp
Update deployment 'web-app-deployment' with a new environment variable,kubectl set env deployment/web-app-deployment LOG_LEVEL=info
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/app-settings deployment/log-aggregator-deployment
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=settings=/path/to/parameters/file1.txt --from-file=key2=/path/to/data/file2.txt
Set the server field on the kube-cluster-2 cluster to https://1.2.3.4,kubectl config set clusters.kube-cluster-2.server https://1.2.3.4
Display only the most recent 20 lines of output in pod backend-pod,kubectl logs --tail=20 backend-pod
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=9000 --target-port=909200
"Delete pods and services with same names ""media-stream"" and ""proxy-server""","kubectl delete pod,service media-stream proxy-server"
Begin streaming the logs of the nebula-navigator container in pod auth-service-pod,kubectl logs -f -c nebula-navigator auth-service-pod
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8000 6379
Get output from time-machine from pod web-app-pod,kubectl attach web-app-pod -c time-machine
"Check to see if I can get the job named ""security-scan-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/security-scan-job -n staging
"Listen on port 8081 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8081:3000
Set deployment mydeployment's service account to spinnaker,kubectl set serviceaccount deployment mydeployment spinnaker
Create a job with a command,kubectl create job log-collection --image=node -- node
Return snapshot logs from container payment-processor-deployment-1 of a deployment named email-service-pod,kubectl logs deployment/payment-processor-deployment -c email-service-pod-1
"Set a deployments ubuntu container cpu limits to ""10"" and memory to ""512Mi""","kubectl set resources deployment ubuntu -c=nginx --limits=cpu=10,memory=512Mi"
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node app-node-6 -p '{""spec"":{""replicas"":3}'"
Create a deployment named gitlab that runs the docker.elastic.co/elasticsearch/elasticsearch image with 3 replicas,kubectl create deployment gitlab --image=docker.elastic.co/elasticsearch/elasticsearch --replicas=3
Import specific keys from a config map,kubectl set env --keys=LOG_LEVEL --from=configmap/global-config deployment/payment-processor-deployment
Get output from cosmic-container from pod vpn-service-pod,kubectl attach vpn-service-pod -c cosmic-container
Update pod 'backend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods backend tier-
Create a job with a command,kubectl create job indexing --image=mongo -- mongod
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=settings=/path/to/profiles/file1.txt --from-file=key2=/path/to/data/file2.txt
Set deployment payment-processor-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment payment-processor-deployment kube-controller-manager
Create a new config map named app-config-dev from the key=value pairs in the file,kubectl create configmap app-config-dev --from-file=path/to/properties
Switch to raw terminal mode; sends stdin to 'bash' in astro-container from pod analytics-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach analytics-pod -c astro-container -i -t
Create a new secret named ssh-key-secret from an env file,kubectl create secret generic ssh-key-secret --from-env-file=path/to/configs.env
Add a taint with key 'special' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  special=app-node-6:PreferNoSchedule
Create a new secret named password-secret with keys for each file in folder bar,kubectl create secret generic password-secret --from-file=path/to/parameters
"Listen on port 6379 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 6379:8081"
Add a taint with key 'app' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  app=app-node-6:PreferNoSchedule
"Create a service for a replicated centos using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs centos --port=8084 --target-port=300100
"Get output from running the 'postgres' command from pod email-service-pod, using the first container by default",kubectl exec email-service-pod -- postgres
Return only the phase value of the specified pod,kubectl get -o template pod/media-stream-pod --template={{.status.phase}}
"Create a service for an php deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment php --port=8888 --target-port=909100
Create a new LoadBalancer service named monitoring-lb,kubectl create service loadbalancer monitoring-lb --tcp=27017:8443
Create a copy of cdn-service-pod adding a debug container and changing container images,"kubectl debug cdn-service-pod -it --copy-to=debug-image-api --image=debian --set-image=scheduler=my-scheduler:1.0,worker=my-custom-worker:1.2.3"
"Start a wordpress pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=wordpress --overrides='{ ""apiVersion"": ""feature-branch-2.3.0"", ""spec"": { ... } }'"
Set deployment payment-processor-deployment's service account to argocd,kubectl set serviceaccount deployment payment-processor-deployment argocd
Return snapshot of previous terminated warp-drive container logs from pod email-service-pod,kubectl logs -p -c warp-drive email-service-pod
Set custom TLS server name to use for validation for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --tls-server-name=testing-cluster
Start a redis pod and let the container expose port 9092,kubectl run hazelcast --image=redis --port=9092
"Create a cluster role named ""view"" with API Group specified","kubectl create clusterrole view --verb=list,create,connect --resource=statefulsets.apps"
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/cache-cluster-deployment -c media-stream-pod-1
Update pod 'backend' with the label 'role' and the value 'frontend',kubectl label pods backend role=frontend
"Update pod 'auth' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth expiration-date='2024-12-31'
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/api-service-pod 8080:8081
Return snapshot logs from container web-app-deployment-1 of a deployment named mypod,kubectl logs deployment/web-app-deployment -c mypod-1
Create a new ExternalName service named external-geolocation-service,kubectl create service externalname external-geolocation-service --external-name dummy-website.io
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=e2e
Create a job with a command,kubectl create job deployment-rollout-job --image=node -- npm --version
"Listen on port 5000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/web-app-pod 5000:8088
"Listen on port 6379 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 6379:6379"
Get output from running the 'pg_dump --version' command in nano-bot from pod api-service-pod,kubectl exec api-service-pod -c nano-bot -- pg_dump --version
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/ubuntu
"Listen on port 6379 locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod 6379:8888
Resume an already paused deployment,kubectl rollout resume deployment/services
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/docker-registry"
Get output from running the 'go' command in nebula-navigator from pod api-service-pod,kubectl exec api-service-pod -c nebula-navigator -- go
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/log-aggregator-pod
Get output from running the 'geth' command in astro-container from pod e-commerce-pod,kubectl exec e-commerce-pod -c astro-container -- geth
"Create a cluster role named ""reader"" that allows user to perform ""create"", ""get"" and ""proxy"" on configmaps","kubectl create clusterrole reader --verb=create,get,proxy --resource=configmaps"
Set deployment load-balancer-deployment's service account to kube-proxy,kubectl set serviceaccount deployment load-balancer-deployment kube-proxy
Create a new secret named ldap-credentials-secret from an env file,kubectl create secret generic ldap-credentials-secret --from-env-file=path/to/properties.env
"Create a cluster role named ""foo"" with ResourceName specified",kubectl create clusterrole foo --verb=exec --resource=pods --resource-name=report-generator --resource-name=database-master
Create a new NodePort service named proxy-service-nodeport,kubectl create service nodeport proxy-service-nodeport --tcp=8000:5432
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/email-service-pod
View the details of daemonset revision 3,kubectl rollout history daemonset/staging --revision=3
Get output from running the 'ash' command in warp-drive from pod chat-app-pod,kubectl exec chat-app-pod -c warp-drive -- ash
Restart a deployment,kubectl rollout restart deployment/development
Get output from running the 'mysql' command in cosmic-container from pod vpn-service-pod,kubectl exec vpn-service-pod -c cosmic-container -- mysql
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.local-context.cluster cluster-gamma
"Update pod 'backend' with the annotation 'contact-email' and the value support@example.com # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods backend contact-email=support@example.com
"Create a role named ""bar"" with ResourceName specified",kubectl create role bar --verb=get --resource=pods --resource-name=auth-proxy --resource-name=order-fulfillment
"Check to see if I can get the job named ""security-scan-job"" in namespace ""monitoring""",kubectl auth can-i list jobs.batch/security-scan-job -n monitoring
Create a new secret named ssh-key-secret using a combination of a file and a literal,kubectl create secret generic ssh-key-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
Execute set-last-applied against each configuration file in a directory,kubectl apply set-last-applied -f options/
Copy /tmp/foo_dir from a remote pod to /tmp/bar locally,kubectl cp kube-system/monitoring-agent-pod-6:/tmp/foo_dir /tmp/bar
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/frontend-pod 8081:5432
Create a deployment named sonarqube that runs the mongo image and expose port 27017,kubectl create deployment sonarqube --image=mongo --port=27017
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/env-vars deployment/proxy-service-deployment
Create a new config map named monitoring-config from an env file,kubectl create configmap monitoring-config --from-env-file=path/to/properties.env
"If the deployment named dev-environment-rs's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/dev-environment-rs
"If the deployment named dev-environment-rs's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/dev-environment-rs
"Get output from running the 'jenkins-plugin-cli' command from pod media-stream-pod, using the first container by default",kubectl exec media-stream-pod -- jenkins-plugin-cli
Create a new secret named docker-registry-secret from an env file,kubectl create secret generic docker-registry-secret --from-env-file=path/to/settings.env
Update pod 'chat-app' with the label 'component' and the value 'api',kubectl label pods chat-app component=api
Add to node 'monitoring-node-15' a taint with key 'environment' and no value,kubectl taint nodes monitoring-node-15 environment:NoSchedule
"Update a pod identified by type and name in ""settings.json""",kubectl annotate -f settings.json compliance-level=PCI-DSS
Add to node 'node-2' a taint with key 'app' and no value,kubectl taint nodes node-2 app:NoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node node-1 -p $'spec:\n rules:\n- http:\n    paths:\n    - path: /\n      backend:\n        service:\n          name: new-service'
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/monitoring-config deployment/gateway-deployment
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.cluster-1-context.cluster data-cluster
"Listen on a random port locally, forwarding to 3000 in the pod",kubectl port-forward pod/backend-pod :3000
Set deployment mydeployment's service account to default,kubectl set serviceaccount deployment mydeployment default
Get output from running the 'python --version' command in nebula-navigator from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c nebula-navigator -- python --version
Create a cron job with a command,"kubectl create cronjob log-rotation --image=mongo --schedule=""*/1 * * * *"" -- mongo"
Create a deployment named wordpress that runs the amazonlinux image,kubectl create deployment wordpress --image=amazonlinux
Copy /tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp velero/worker-pod-4:/tmp/foo /tmp/bar_dir
Add to node 'dev-node-4' a taint with key 'workload' and no value,kubectl taint nodes dev-node-4 workload:NoSchedule
Create a new secret named email-credentials-secret with keys for each file in folder bar,kubectl create secret generic email-credentials-secret --from-file=path/to/data
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/chat-app-pod
Update pod 'web' with the label 'app' and the value 'myapp',kubectl label pods web app=myapp
"Listen on a random port locally, forwarding to 5000 in the pod",kubectl port-forward pod/analytics-pod :5000
"Listen on port 8080 locally, forwarding to 8081 in the pod",kubectl port-forward pod/security-service-pod 8080:8081
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/cache-service"
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""mobile-apps"" API group",kubectl get deployments.v2.1.0.mobile-apps -o yaml
Update pod 'frontend' with the label 'tier' and the value 'frontend',kubectl label pods frontend tier=frontend
Start a jenkins pod and let the container expose port 8181,kubectl run hazelcast --image=jenkins --port=8181
"Update pod 'payment' with the annotation 'app-version' and the value 2.5.1 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods payment app-version=2.5.1
Create a job with a command,kubectl create job log-collection --image=ethereum/client-go -- geth version
"Start a jenkins pod and set labels ""app=jenkins"" and ""env=prod"" in the container","kubectl run hazelcast --image=jenkins --labels=""app=jenkins,env=prod"""
"Listen on port 3000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 3000:3000
"Get output from running the 'psql' command from pod auth-service-pod, using the first container by default",kubectl exec auth-service-pod -- psql
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=8443 --target-port=300000
Copy /tmp/foo local file to /tmp/bar in a remote pod in a specific container,kubectl cp /tmp/foo auth-service-pod-11:/tmp/bar -c front-end-container
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 6379 6379
"Listen on port 8080 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8080:5000"
Get output from running the 'jenkins-plugin-cli' command in cyber-sleuth from pod api-service-pod,kubectl exec api-service-pod -c cyber-sleuth -- jenkins-plugin-cli
"If the deployment named db-migration-replicaset's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/db-migration-replicaset
Update image of all containers of daemonset namespace-1 to 'openjdk:16.0.2',kubectl set image daemonset namespace-1 *=openjdk:16.0.2
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/env-vars deployment/log-aggregator-deployment
Create a new ClusterIP service named my-cs,kubectl create service clusterip my-cs --tcp=8000:8000
"Create a service for a replicated nginx, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc nginx --port=80 --target-port=909200
Create a new ExternalName service named external-git-service,kubectl create service externalname external-git-service --external-name news-demo.news
Set deployment api-server-deployment's service account to cert-manager,kubectl set serviceaccount deployment api-server-deployment cert-manager
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8088 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8088 8088
List one or more resources by their type and names,kubectl get rc/web service/api-service-rc pods/log-aggregator-pod
Add a taint with key 'app' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  app=app-node-6:PreferNoSchedule
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=sun-cluster
Create a copy of analytics-pod adding a debug container and changing container images,"kubectl debug analytics-pod -it --copy-to=dgb-img --image=debian --set-image=cache=redis:alpine,web=nginx:latest"
"Listen on port 8888 locally, forwarding to 3000 in the pod",kubectl port-forward pod/proxy-server-pod 8888:3000
Update image of all containers of daemonset staging to 'golang:1.17',kubectl set image daemonset staging *=golang:1.17
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/properties/file2.txt
"Listen on a random port locally, forwarding to 5432 in the pod",kubectl port-forward pod/mypod :5432
Update pod 'media-stream' with the label 'tier' and the value 'database',kubectl label pods media-stream tier=database
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""apps"" API group",kubectl get deployments.v1.1.0.apps -o yaml
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod api-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach api-service-pod -c lunar-launcher -i -t
Create a pod disruption budget named cache-cluster-pdb that will select all pods with the region=us-east label # and require at least one of them being available at any point in time,kubectl create poddisruptionbudget cache-cluster-pdb --selector=region=us-east --min-available=1
Create a job with a command,kubectl create job deployment-rollout-job --image=redis -- redis-server --version
"Listen on port 6379 locally, forwarding to 5000 in the pod",kubectl port-forward pod/security-service-pod 6379:5000
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/global-config deployment/email-server-deployment
Create a copy of email-service-pod adding a debug container and changing container images,"kubectl debug email-service-pod -it --copy-to=my-custom-dbg --image=debian --set-image=app=app:debug,worker=my-custom-worker:1.2.3"
"Update pod 'proxy' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy backup-strategy='daily backups'
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/ui-config deployment/api-server-deployment
"Update node 'testing-node-11' with a taint with key 'app' and value 'backend' and effect 'PreferNoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes testing-node-11 app=backend:PreferNoSchedule
"If the deployment named staging-app-rs's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/staging-app-rs
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""api-v2"" API group",kubectl get deployments.dev-2.2.0.api-v2 -o json
Create a job with a command,"kubectl create job database-seeding-job --image=nginx -- nginx -g ""daemon off;"""
Create a copy of monitoring-pod adding a debug container and changing container images,"kubectl debug monitoring-pod -it --copy-to=debug-image-api --image=debian --set-image=api=api:v2,worker=my-custom-worker:1.2.3"
"List deployments in YAML output format, in the ""feature-branch-2.3.0"" version of the ""custom-deployments"" API group",kubectl get deployments.feature-branch-2.3.0.custom-deployments -o yaml
"Update pod 'analytics' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods analytics team='frontend team'
"Auto scale a replication controller ""cdn"", with the number of pods between 1 and 6, target CPU utilization at 81%",kubectl autoscale rc cdn --max=6 --cpu-percent=81
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""sandbox-apps"" API group",kubectl get deployments.v1.1.1.sandbox-apps -o yaml
"Delete pods and services with same names ""api"" and ""web""","kubectl delete pod,service api web"
Disable cert checking for the dev cluster entry,kubectl config set-cluster e2e --insecure-skip-tls-verify=true
Edit the data in docker-registry.yaml in JSON then create the resource using the edited data,kubectl create -f docker-registry.yaml --edit -o json
"Delete pods and services with same names ""frontend"" and ""backend""","kubectl delete pod,service frontend backend"
"Listen on port 5000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 5000:9090"
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/kube-system-config deployment/log-aggregator-deployment
Get output from cosmic-container from pod mypod,kubectl attach mypod -c cosmic-container
"Create a single ingress called 'app-loadbalancer-ingress' that directs requests to website.com/bar to svc # svc1:9091 with a tls secret ""my-cert""","kubectl create ingress app-loadbalancer-ingress --rule=""website.com/bar=svc1:9091,tls=my-cert"""
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod 8088:8088
"Get output from running 'dotnet' command from the first pod of the service authentication-service, using the first container by default",kubectl exec svc/authentication-service -- dotnet
View the last-applied-configuration annotations by type/name in YAML,kubectl apply view-last-applied deployment/mcr.microsoft.com/dotnet/core/runtime
"Listen on port 5432 locally, forwarding to 8081 in the pod",kubectl port-forward pod/mypod 5432:8081
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=staging-cluster
"Listen on port 8081 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8081:5432"
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.app-1-context.cluster data-cluster
Get output from running the 'php --version' command in astro-container from pod security-service-pod,kubectl exec security-service-pod -c astro-container -- php --version
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod frontend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach frontend-pod -c quantum-quark -i -t
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=5000:8082
Create a deployment named auth that runs the mysql image and expose port 6379,kubectl create deployment auth --image=mysql --port=6379
Update pod 'vpn' with the label 'release' and the value 'v2.0',kubectl label pods vpn release=v2.0
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/chat-app-pod 8000:5432
Add a taint with key 'app' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  app=dev-node-4:PreferNoSchedule
Add a taint with key 'environment' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  environment=backup-node-14:PreferNoSchedule
Set deployment log-aggregator-deployment's service account to cert-manager,kubectl set serviceaccount deployment log-aggregator-deployment cert-manager
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=8082 --target-port=300000
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/log-config deployment/payment-processor-deployment
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/authentication-service"
Create a new secret named aws-credentials-secret from an env file,kubectl create secret generic aws-credentials-secret --from-env-file=path/to/profiles.env
Get the password for the cloud-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""cloud-cluster"")].user.password}'"
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-config-dev deployment/backend-microservice-deployment
Return snapshot of previous terminated astro-container container logs from pod payment-gateway-pod,kubectl logs -p -c astro-container payment-gateway-pod
"Check to see if I can get the job named ""backup-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/backup-job -n kube-public
Create a new secret named azure-storage-secret with keys for each file in folder bar,kubectl create secret generic azure-storage-secret --from-file=path/to/preferences
Update pod 'cdn' with the label 'component' and the value 'api',kubectl label pods cdn component=api
Switch to raw terminal mode; sends stdin to 'bash' in nebula-navigator from pod gateway-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach gateway-pod -c nebula-navigator -i -t
Get output from running the 'jenkins-plugin-cli' command in cosmic-container from pod analytics-pod,kubectl exec analytics-pod -c cosmic-container -- jenkins-plugin-cli
"If the deployment named mysql's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/mysql
Begin streaming the logs of the nebula-navigator container in pod mypod,kubectl logs -f -c nebula-navigator mypod
Get output from running the 'dotnet --list-runtimes' command in rocket-ranger from pod chat-app-pod,kubectl exec chat-app-pod -c rocket-ranger -- dotnet --list-runtimes
Create a new ExternalName service named external-authentication-service,kubectl create service externalname external-authentication-service --external-name documentation-tech.tech
Roll back to daemonset revision 3,kubectl rollout undo daemonset/staging --to-revision=3
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""custom-deployments"" API group",kubectl get deployments.v3.0.0.custom-deployments -o json
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""my-apps"" API group",kubectl get deployments.stable-2.0.0.my-apps -o json
"Start a php pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=php --overrides='{ ""apiVersion"": ""v1.0.0"", ""spec"": { ... } }'"
Add a taint with key 'app' on nodes having label service=auth,kubectl taint node -l service=auth  app=backup-node-14:PreferNoSchedule
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.v1.0.0.sandbox-apps -o json
Begin streaming the logs of the ruby container in pod payment-gateway-pod,kubectl logs -f -c ruby payment-gateway-pod
"Listen on port 8088 locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod 8088:8088
"Mark node ""monitoring-node-15"" as schedulable",kubectl uncordon monitoring-node-15
Get output from running the 'bash' command in stardust-shuttle from pod backend-pod,kubectl exec backend-pod -c stardust-shuttle -- bash
"Start a docker.elastic.co/elasticsearch/elasticsearch pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=docker.elastic.co/elasticsearch/elasticsearch --overrides='{ ""apiVersion"": ""custom-version"", ""spec"": { ... } }'"
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/cdn-service-pod
Update image of all containers of daemonset namespace-1 to 'mysql:5.7.35',kubectl set image daemonset namespace-1 *=mysql:5.7.35
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-secrets deployment/authentication-service-deployment
Create a new secret named cert-manager-secret from an env file,kubectl create secret generic cert-manager-secret --from-env-file=path/to/preferences.env
Update pod 'vpn' with the label 'env' and the value 'development',kubectl label pods vpn env=development
Create a new NodePort service named ingress-controller-nodeport,kubectl create service nodeport ingress-controller-nodeport --tcp=8443:8080
Update pod 'cdn' with the label 'unhealthy' and the value 'true',kubectl label pods cdn unhealthy=true
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/e-commerce-pod
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=conf=/path/to/preferences/file1.txt --from-file=data=/path/to/preferences/file2.txt
"Listen on port 5432 on localhost and selected IP, forwarding to 8080 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 5432:8080"
"Create a role named ""reader"" with SubResource specified","kubectl create role reader --verb=use,delete,connect --resource=persistentvolumes,persistentvolumes/status"
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/db-config deployment/api-server-deployment
Set the cluster field in the my-context context to prod-cluster,kubectl config set contexts.app-1-context.cluster prod-cluster
"Listen on port 8080 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8080:9090
Create a job with a command,kubectl create job log-processing-job --image=python -- python
"Get output from running the 'nginx' command from pod security-service-pod, using the first container by default",kubectl exec security-service-pod -- nginx
Create a deployment with a command,kubectl create deployment monitoring --image=nginx -- nginx
Create a new LoadBalancer service named backend-lb,kubectl create service loadbalancer backend-lb --tcp=8089:5432
Return snapshot logs from all containers in pods defined by label customer=acme-corp,kubectl logs -l customer=acme-corp --all-containers=true
Get output from quantum-quark from pod e-commerce-pod,kubectl attach e-commerce-pod -c quantum-quark
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/backend-service"
Set the resource request and limits for all containers in runtime,"kubectl set resources deployment runtime --limits=cpu=200m,memory=512Mi --requests=cpu=5,memory=4Gi"
Get output from running the 'mongo --version' command in mycontainer from pod vpn-service-pod,kubectl exec vpn-service-pod -c mycontainer -- mongo --version
"Listen on port 5000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/api-service 5000:https
Remove from node 'db-node-7' the taint with key 'disktype' and effect 'NoSchedule' if one exists,kubectl taint nodes db-node-7 disktype:NoSchedule-
"Get output from running 'redis-server' command from the first pod of the service backend-service, using the first container by default",kubectl exec svc/backend-service -- redis-server
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 8888 9090
Update pod 'media-stream' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods media-stream description-
"Update pod 'email' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods email status=unhealthy
"Auto scale a deployment ""foo"", with the number of pods between 4 and 11, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment foo --min=4 --max=11
"Get output from running the 'kafka-console-producer --broker-list localhost:9092 --topic test' command from pod gateway-pod, using the first container by default",kubectl exec gateway-pod -- kafka-console-producer --broker-list localhost:9092 --topic test
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/api-config deployment/scheduler-app-deployment
Create a cron job with a command,"kubectl create cronjob data-sync --image=ubuntu --schedule=""*/1 * * * *"" -- docker run -d ubuntu sleep 3600"
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml SLA='99.9% uptime'
"Listen on port 5432 locally, forwarding to 3000 in the pod",kubectl port-forward pod/mypod 5432:3000
"Listen on port 8888 on all addresses, forwarding to 8000 in the pod",kubectl port-forward --address 0.0.0.0 pod/frontend-pod 8888:8000
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp velero/backend-pod-13::/tmp/foo /tmp/bar
"Listen on port 8088 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 8088:3000"
"Listen on port 8888 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8888:8081
Remove from node 'monitoring-node-15' all the taints with key 'environment',kubectl taint nodes monitoring-node-15 environment-
Edit the deployment 'monitoring-stack-deployment' in YAML and save the modified config in its annotation,kubectl edit deployment/monitoring-stack-deployment -o yaml --save-config
List one or more resources by their type and names,kubectl get rc/web service/frontend-rc pods/proxy-service-pod
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""my-apps"" API group",kubectl get deployments.v1.1.0.my-apps -o yaml
Start a ubuntu pod and let the container expose port 8081,kubectl run hazelcast --image=ubuntu --port=8081
Set the user field on the cluster-1-context context entry without touching other values,kubectl config set-context cluster-1-context --user=cluster-admin
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.cluster-1-context.cluster cluster-alpha
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/env-vars deployment/cache-cluster-deployment
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node gpu-node-12 -p $'spec:\n someField: newValue'
"List deployments in JSON output format, in the ""v1.0.0"" version of the ""my-apps"" API group",kubectl get deployments.v1.0.0.my-apps -o json
Copy /tmp/foo_dir local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp /tmp/foo_dir kube-dns/logging-agent-pod-7:/tmp/bar_dir
Use an alternative editor,"KUBE_EDITOR=""vim"" kubectl edit svc/db-service"
Get output from running the 'elasticsearch' command in mycontainer from pod email-service-pod,kubectl exec email-service-pod -c mycontainer -- elasticsearch
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/monitoring-stack-deployment -c web-app-pod-1
Add a taint with key 'cpu-type' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  cpu-type=backup-node-14:PreferNoSchedule
Create a new secret named api-key-secret with keys for each file in folder bar,kubectl create secret generic api-key-secret --from-file=path/to/settings
"Listen on port 8080 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8080:8081
Start a postgres pod and let the container expose port 3001,kubectl run hazelcast --image=postgres --port=3001
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-config-prod deployment/frontend-deployment
"Update pod 'foo' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods foo criticality='high'
Execute set-last-applied against each configuration file in a directory,kubectl apply set-last-applied -f parameters/
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node testing-node-11 -p '{""spec"":{""containers"":[{""name"":""container-name"", ""resources"":{""limits"":{""cpu"":""200m""}}}]}'"
"If the deployment named payment-service-rs's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/payment-service-rs
"Listen on port 6379 locally, forwarding to 8000 in the pod",kubectl port-forward pod/e-commerce-pod 6379:8000
Show all logs from pod security-service-pod written in the last hour,kubectl logs --since=1h security-service-pod
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir logging/worker-pod-4:/tmp/bar
Get output from stardust-shuttle from pod api-service-pod,kubectl attach api-service-pod -c stardust-shuttle
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=8010 --target-port=543200
Describe a pod,kubectl describe pods/backend
"Listen on port 5000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 5000:8081
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=3000 --target-port=808900
"Listen on port 3000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/proxy-server-pod 3000:3000"
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-config-prod deployment/backend-microservice-deployment
Set custom TLS server name to use for validation for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --tls-server-name=cluster-gamma
Update pod 'vpn' with the label 'env' and the value 'staging',kubectl label pods vpn env=staging
"List deployments in YAML output format, in the ""alpha-2.0"" version of the ""web-apps"" API group",kubectl get deployments.alpha-2.0.web-apps -o yaml
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod proxy-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach proxy-service-pod -c code-explorer -i -t
"Delete pods and services with same names ""vpn"" and ""web""","kubectl delete pod,service vpn web"
Create a copy of proxy-server-pod adding a debug container and changing container images,"kubectl debug proxy-server-pod -it --copy-to=debug-image-api --image=debian --set-image=scheduler=my-scheduler:1.0,logger=logging-app:debug"
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/chat-app-pod 8080 9090
"Set a deployments jenkins container cpu limits to ""3"" and memory to ""4Gi""","kubectl set resources deployment jenkins -c=nginx --limits=cpu=3,memory=4Gi"
Embed certificate authority data for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
Create a new secret named jwt-secret with keys for each file in folder bar,kubectl create secret generic jwt-secret --from-file=path/to/parameters
Rename the context 'cluster-1-context' to 'team-beta-context' in your kubeconfig file,kubectl config rename-context cluster-1-context team-beta-context
Create a new secret named ssl-key-secret with keys for each file in folder bar,kubectl create secret generic ssl-key-secret --from-file=path/to/options
"Listen on port 9090 locally, forwarding to 8088 in the pod",kubectl port-forward pod/backend-pod 9090:8088
Create a job with a command,kubectl create job security-scan-job --image=php -- php --version
"Create a service for a replicated ubuntu, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ubuntu --port=8181 --target-port=300100
Remove the environment variable ENV from container 'mycontainer' in all deployment configs,"kubectl set env deployments --all --containers=""mycontainer"" ENV-"
"Listen on port 8080 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8080:6379"
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-name-config deployment/api-server-deployment
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp kube-proxy/payment-gateway-pod-19:~/.config/kube :/tmp/bar
Set deployment proxy-service-deployment's service account to flux,kubectl set serviceaccount deployment proxy-service-deployment flux
Create a deployment named jenkins that runs the ubuntu image and expose port 3306,kubectl create deployment jenkins --image=ubuntu --port=3306
"Listen on port 9090 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 9090:8080
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/security-service-pod 9090 9090
"Get output from running 'gem --version' command from the first pod of the deployment search-engine-deployment, using the first container by default",kubectl exec deploy/search-engine-deployment -- gem --version
Update pod 'backend' with the label 'tier' and the value 'database',kubectl label pods backend tier=database
Remove from node 'worker-node-3' all the taints with key 'zone',kubectl taint nodes worker-node-3 zone-
Embed certificate authority data for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --embed-certs --certificate-authority=~/.kube/sun-cluster/kubernetes.ca.crt
Import environment from a secret,kubectl set env --from=secret/api-key-secret deployment/api-server-deployment
"Get output from running 'npm --version' command from the first pod of the deployment email-server-deployment, using the first container by default",kubectl exec deploy/email-server-deployment -- npm --version
Add a taint with key 'disktype' on nodes having label component=proxy,kubectl taint node -l component=proxy  disktype=storage-node-13:PreferNoSchedule
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=edge-cluster
"Get output from running 'redis-cli' command from the first pod of the service notification-service, using the first container by default",kubectl exec svc/notification-service -- redis-cli
Copy ~/.config/kube from a remote pod to /tmp/bar locally,kubectl cp prometheus/file-server-pod-14:~/.config/kube /tmp/bar
Set the user field on the client-2-context context entry without touching other values,kubectl config set-context client-2-context --user=cluster-admin
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.team-alpha-context.cluster my-k8s-cluster
"If the deployment named baz's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/baz
Get output from running the 'redis-cli' command in cosmic-container from pod security-service-pod,kubectl exec security-service-pod -c cosmic-container -- redis-cli
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=9090:8082
Return snapshot of previous terminated astro-container container logs from pod proxy-server-pod,kubectl logs -p -c astro-container proxy-server-pod
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/media-stream-pod
"Listen on port 3000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/proxy-server-pod 3000:5432
"Get output from running the 'jenkins --version' command from pod mypod, using the first container by default",kubectl exec mypod -- jenkins --version
"Wait for the pod ""web-app-pod"" to contain the status condition of type ""Ready""",kubectl wait --for=condition=Ready pod/web-app-pod
"Check to see if I can get the job named ""load-testing-job"" in namespace ""logging""",kubectl auth can-i list jobs.batch/load-testing-job -n logging
Create a new secret named api-key-secret with keys for each file in folder bar,kubectl create secret generic api-key-secret --from-file=path/to/options
"Listen on port 8080 locally, forwarding to 8088 in the pod",kubectl port-forward pod/cdn-service-pod 8080:8088
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/global-config deployment/scheduler-app-deployment
Set the last-applied-configuration of a resource to match the contents of a file,kubectl apply set-last-applied -f options.yaml
"Delete pods and services with same names ""payment"" and ""proxy""","kubectl delete pod,service payment proxy"
Embed certificate authority data for the web-cluster cluster entry,kubectl config set-cluster web-cluster --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
"Update node 'storage-node-13' with a taint with key 'zone' and value 'us-west-1a' and effect 'PreferNoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes storage-node-13 zone=us-west-1a:PreferNoSchedule
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named vpn-service-pod,kubectl logs deployment/scheduler-app-deployment -c vpn-service-pod-1
Create a new secret named payment-gateway-secret with keys for each file in folder bar,kubectl create secret generic payment-gateway-secret --from-file=path/to/preferences
Create a deployment named db that runs the jenkins image and expose port 9091,kubectl create deployment db --image=jenkins --port=9091
Create a new secret named jwt-secret with key1=supersecret and key2=topsecret,kubectl create secret generic jwt-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-secrets deployment/web-app-deployment
Get output from running the 'yum install -y wget' command in nano-bot from pod mypod,kubectl exec mypod -c nano-bot -- yum install -y wget
"Delete pods and services with same names ""analytics"" and ""log-aggregator""","kubectl delete pod,service analytics log-aggregator"
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/kube-system-config deployment/scheduler-app-deployment
Show metrics for a given pod and its containers,kubectl top pod payment-gateway-pod --containers
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller email-service-rc
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-config deployment/scheduler-app-deployment
"Auto scale a deployment ""media-stream"", with the number of pods between 2 and 14, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment media-stream --min=2 --max=14
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod gateway-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8081 8888
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod cdn-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach cdn-service-pod -c rocket-ranger -i -t
"Listen on port 5432 locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod 5432:5000
Create a job with a command,kubectl create job image-build-job --image=wordpress -- mysql --version
Add a taint with key 'hardware' on nodes having label release=beta,kubectl taint node -l release=beta  hardware=app-node-6:PreferNoSchedule
Update pod 'proxy-server' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy-server release-
Create a job with a command,kubectl create job log-collection --image=amazonlinux -- bash
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/log-config deployment/gateway-deployment
Embed certificate authority data for the star-cluster cluster entry,kubectl config set-cluster star-cluster --embed-certs --certificate-authority=~/.kube/staging-cluster/kubernetes.ca.crt
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod monitoring-pod # and sends stdout/stderr from 'bash' back to the client,kubectl exec monitoring-pod -c lunar-launcher -i -t -- bash -il
"Create or update exec auth plugin environment variables for the ""operator"" entry",kubectl config set-credentials operator --exec-env=key1=val1 --exec-env=key2=val2
Print the supported API versions,kubectl api-versions
Switch to raw terminal mode; sends stdin to 'bash' in lunar-launcher from pod chat-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach chat-app-pod -c lunar-launcher -i -t
Get output from running the 'sleep 3600' command in lunar-launcher from pod proxy-server-pod,kubectl exec proxy-server-pod -c lunar-launcher -- sleep 3600
Get output from running the 'postgres' command in stardust-shuttle from pod media-stream-pod,kubectl exec media-stream-pod -c stardust-shuttle -- postgres
"Delete pods and services with same names ""chat-app"" and ""backend""","kubectl delete pod,service chat-app backend"
Get output from running the 'ash' command in mycontainer from pod vpn-service-pod,kubectl exec vpn-service-pod -c mycontainer -- ash
Create a new secret named api-secret-key with keys for each file in folder bar,kubectl create secret generic api-secret-key --from-file=path/to/options
Set the cluster field in the my-context context to edge-cluster,kubectl config set contexts.user-b-context.cluster edge-cluster
Create a copy of media-stream-pod changing all container images to redis,kubectl debug media-stream-pod --copy-to=debug-image-memcached --set-image=*=redis
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/authentication-service"
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/app-name-config deployment/user-management-deployment
"Listen on port 5432 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 5432:8888"
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""security-user"" entry",kubectl config set-credentials security-user --auth-provider=oidc --auth-provider-arg=client-secret-
Add a taint with key 'disktype' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  disktype=app-node-6:PreferNoSchedule
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""prod-apps"" API group",kubectl get deployments.dev-2.2.0.prod-apps -o yaml
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/proxy-service-deployment DB_HOST=localhost -o yaml
Start a ruby pod and let the container expose port 8081,kubectl run hazelcast --image=ruby --port=8081
Get output from running the 'npm --version' command in nebula-navigator from pod proxy-server-pod,kubectl exec proxy-server-pod -c nebula-navigator -- npm --version
"If the deployment named backend-service-replicaset's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/backend-service-replicaset
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.on-prem-context.cluster app-cluster
Copy ~/.config/kube from a remote pod to /tmp/bar locally,kubectl cp default/api-server-pod-3:~/.config/kube /tmp/bar
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/global-config deployment/order-processing-deployment
"Update pod 'proxy-server' with the annotation 'release-notes' and the value 'https://example.com/release-notes/v2.5.1' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server release-notes='https://example.com/release-notes/v2.5.1'
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-settings deployment/api-server-deployment
Return snapshot of previous terminated ruby container logs from pod monitoring-pod,kubectl logs -p -c ruby monitoring-pod
Create a new config map named app-settings with specified keys instead of file basenames on disk,kubectl create configmap app-settings --from-file=properties=/path/to/preferences/file1.txt --from-file=key1=/path/to/configs/file2.txt
"Listen on port 8000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/backend-pod 8000:9090
"Listen on port 9090 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 9090:9090
Get output from running the 'mysqld' command in warp-drive from pod monitoring-pod,kubectl exec monitoring-pod -c warp-drive -- mysqld
"Update pod 'proxy' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods proxy criticality='high'
"Listen on port 5000 locally, forwarding to 8081 in the pod",kubectl port-forward pod/mypod 5000:8081
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""k8s-admin"" entry",kubectl config set-credentials k8s-admin --auth-provider=oidc --auth-provider-arg=client-secret-
"Get output from running the 'postgres' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- postgres
"Listen on port 8000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod 8000:8888
"Listen on port 8081 locally, forwarding to 6379 in the pod",kubectl port-forward pod/analytics-pod 8081:6379
Set deployment cache-cluster-deployment's service account to spinnaker,kubectl set serviceaccount deployment cache-cluster-deployment spinnaker
Create a job with a command,kubectl create job certificate-renewal --image=mcr.microsoft.com/dotnet/core/runtime -- dotnet
Create a new ClusterIP service named security-service-clusterip,kubectl create service clusterip security-service-clusterip --tcp=8000:8181
Create a job with a command,kubectl create job testing --image=centos -- bash
List resource information in custom columns,"kubectl get pod web-app-pod -o custom-columns=CONTAINER:.spec.containers[0].name,IMAGE:.spec.containers[0].image"
Return snapshot logs from container payment-processor-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/payment-processor-deployment -c auth-service-pod-1
"Check to see if I can get the job named ""data-migration-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/data-migration-job -n namespace-1
Create a copy of payment-gateway-pod adding a debug container and changing container images,"kubectl debug payment-gateway-pod -it --copy-to=debug-image-memcached --image=debian --set-image=cache=redis:alpine,api=api:v2"
"Listen on port 8080 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8080:8888
Create a copy of proxy-server-pod changing all container images to confluentinc/cp-kafka,kubectl debug proxy-server-pod --copy-to=debug-image-app --set-image=*=confluentinc/cp-kafka
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 9090 9090
Add a taint with key 'app' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  app=dev-node-4:PreferNoSchedule
Begin streaming the logs of the warp-drive container in pod monitoring-pod,kubectl logs -f -c warp-drive monitoring-pod
Add a taint with key 'workload' on nodes having label environment=production,kubectl taint node -l environment=production  workload=storage-node-13:PreferNoSchedule
"Delete pods and services with same names ""gateway"" and ""gateway""","kubectl delete pod,service gateway gateway"
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=data-cluster
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node kube-master-9 -p $'stringData:\n password: new-password'
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.client-1-context.cluster my-k8s-cluster
Create a new config map named ui-config with specified keys instead of file basenames on disk,kubectl create configmap ui-config --from-file=conf=/path/to/parameters/file1.txt --from-file=data=/path/to/data/file2.txt
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""beta-apps"" API group",kubectl get deployments.v3.0.0.beta-apps -o yaml
List resources from a directory with kustomization.yaml - e.g. config/kustomization.yaml,kubectl get -k config/
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/ui-config deployment/search-engine-deployment
Return snapshot logs from container frontend-deployment-1 of a deployment named web-app-pod,kubectl logs deployment/frontend-deployment -c web-app-pod-1
Add a taint with key 'hardware' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  hardware=monitoring-node-15:PreferNoSchedule
Create a copy of mypod changing the command of nano-bot,kubectl debug mypod -it --copy-to=debug-image-1 --container=nano-bot -- sh
Get output from running the 'kafka-topics --list' command in stardust-shuttle from pod media-stream-pod,kubectl exec media-stream-pod -c stardust-shuttle -- kafka-topics --list
Create a job,kubectl create job image-build-job --image=busybox
Import environment from a secret,kubectl set env --from=secret/my-secret deployment/backend-microservice-deployment
Update pod 'log-aggregator' with the label 'role' and the value 'frontend',kubectl label pods log-aggregator role=frontend
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/proxy-server-pod
Add a taint with key 'dedicated' on nodes having label tier=frontend,kubectl taint node -l tier=frontend  dedicated=app-node-6:PreferNoSchedule
Update pod 'analytics' with the label 'role' and the value 'backend',kubectl label pods analytics role=backend
Update image of all containers of daemonset development to 'centos:8.4.2105',kubectl set image daemonset development *=centos:8.4.2105
Get output from running the 'go' command in mycontainer from pod monitoring-pod,kubectl exec monitoring-pod -c mycontainer -- go
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=8000 --target-port=700000
Set the client-key-data field in the saas-admin user using --set-raw-bytes option,kubectl config set users.saas-admin.client-key-data cert_data_here --set-raw-bytes=true
Get output from cyber-sleuth from pod analytics-pod,kubectl attach analytics-pod -c cyber-sleuth
"Listen on port 8088 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8088:3000
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/api-server-deployment 8088 3000
Create a new ExternalName service named external-authentication-service,kubectl create service externalname external-authentication-service --external-name illustration-shop.shop
"Listen on port 3000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 3000:8888"
"Listen on port 8000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8000:8088
Return snapshot logs from first container of a job named database-indexing-job,kubectl logs job/database-indexing-job
Update pod 'web' with the label 'env' and the value 'production',kubectl label pods web env=production
Edit the last-applied-configuration annotations by file in JSON,kubectl apply edit-last-applied -f config.yaml -o json
"Create a service for a replicated wordpress using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs wordpress --port=8010 --target-port=909200
Import specific keys from a config map,kubectl set env --keys=max_connections --from=configmap/app-settings deployment/backend-microservice-deployment
"Delete pods and services with same names ""analytics"" and ""analytics""","kubectl delete pod,service analytics analytics"
View the details of daemonset revision 7,kubectl rollout history daemonset/namespace-1 --revision=7
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""alpha-apps"" API group",kubectl get deployments.v1.1.0.alpha-apps -o json
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8000 8000
Get output from warp-drive from pod database-pod,kubectl attach database-pod -c warp-drive
"Update pod 'cdn' with the annotation 'app-version' and the value '2.5.1', overwriting any existing value",kubectl annotate --overwrite pods cdn app-version='2.5.1'
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/authentication-service-deployment 8000 6379
Embed certificate authority data for the cloud-cluster cluster entry,kubectl config set-cluster cloud-cluster --embed-certs --certificate-authority=~/.kube/sun-cluster/kubernetes.ca.crt
"Listen on port 8000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/web-app-pod 8000:3000
Create a new NodePort service named e-commerce-nodeport,kubectl create service nodeport e-commerce-nodeport --tcp=8082:8089
Use an alternative editor,"KUBE_EDITOR=""gedit"" kubectl edit svc/user-service"
"Delete pods and services with same names ""foo"" and ""monitoring""","kubectl delete pod,service foo monitoring"
Get output from running the 'mysql' command in cyber-sleuth from pod security-service-pod,kubectl exec security-service-pod -c cyber-sleuth -- mysql
Embed certificate authority data for the data-cluster cluster entry,kubectl config set-cluster data-cluster --embed-certs --certificate-authority=~/.kube/cluster-gamma/kubernetes.ca.crt
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/log-aggregator-deployment -c chat-app-pod-1
Create a job with a command,kubectl create job backup --image=php -- composer --version
"Listen on port 9090 locally, forwarding to 5000 in the pod",kubectl port-forward pod/proxy-server-pod 9090:5000
"Listen on port 8000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/cdn-service-pod 8000:8888
"Get output from running the 'bash' command from pod vpn-service-pod, using the first container by default",kubectl exec vpn-service-pod -- bash
"Listen on port 8888 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8888:5000"
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/scheduler-service"
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""internal-apps"" API group",kubectl get deployments.v2.1.0.internal-apps -o yaml
"Listen on port 5432 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 5432:8081
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/namespace-config deployment/payment-processor-deployment
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=cluster-alpha
Create a new secret named oauth-secret with keys for each file in folder bar,kubectl create secret generic oauth-secret --from-file=path/to/preferences
Return snapshot of previous terminated code-explorer container logs from pod security-service-pod,kubectl logs -p -c code-explorer security-service-pod
Create a deployment named loadbalancer that runs the mysql image and expose port 8000,kubectl create deployment loadbalancer --image=mysql --port=8000
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/db-config deployment/monitoring-stack-deployment
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/app-config deployment/user-management-deployment
"Create a cluster role named ""reader"" with SubResource specified","kubectl create clusterrole reader --verb=proxy,update,patch --resource=pods,pods/status"
Create a new secret named app-config-secret from an env file,kubectl create secret generic app-config-secret --from-env-file=path/to/profiles.env
"Update pod 'chat-app' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods chat-app SLA='99.9% uptime'
Embed certificate authority data for the kube-cluster-2 cluster entry,kubectl config set-cluster kube-cluster-2 --embed-certs --certificate-authority=~/.kube/edge-cluster/kubernetes.ca.crt
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/ui-config deployment/cache-cluster-deployment
Update pod 'monitoring' with the label 'role' and the value 'cache',kubectl label pods monitoring role=cache
"Get output from running the 'nginx' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- nginx
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8080 5000
Get output from running the 'go' command in astro-container from pod security-service-pod,kubectl exec security-service-pod -c astro-container -- go
Use an alternative editor,"KUBE_EDITOR=""atom"" kubectl edit svc/monitoring-service"
Set the resource request and limits for all containers in go,"kubectl set resources deployment go --limits=cpu=200m,memory=512Mi --requests=cpu=50m,memory=128Mi"
"Listen on port 8080 locally, forwarding to 8000 in the pod",kubectl port-forward pod/proxy-server-pod 8080:8000
Create a copy of web-app-pod changing all container images to mongo,kubectl debug web-app-pod --copy-to=debug-image-1 --set-image=*=mongo
Add a taint with key 'dedicated' on nodes having label app=web-app,kubectl taint node -l app=web-app  dedicated=backup-node-14:PreferNoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node web-node-8 -p $'spec:\n unschedulable: true'
"Listen on port 8088 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8088:8080
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod backend-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach backend-pod -c code-explorer -i -t
"Check to see if I can do everything in my current namespace (""*"" means all)",kubectl auth can-i '*' '*'
Create a new secret named payment-gateway-secret with keys for each file in folder bar,kubectl create secret generic payment-gateway-secret --from-file=path/to/configurations
Create a pod using the data in params.json,kubectl create -f ./params.json
"Listen on port 6379 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 6379:8888
"Start a golang pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=golang --overrides='{ ""apiVersion"": ""stable-2.0.0"", ""spec"": { ... } }'"
Return snapshot logs from container proxy-service-deployment-1 of a deployment named api-service-pod,kubectl logs deployment/proxy-service-deployment -c api-service-pod-1
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""mobile-apps"" API group",kubectl get deployments.alpha-2.0.mobile-apps -o json
"Scale a resource identified by type and name specified in ""parameters.yaml"" to 3",kubectl scale --replicas=3 -f parameters.yaml
Create a copy of frontend-pod changing all container images to python,kubectl debug frontend-pod --copy-to=debug-image-api --set-image=*=python
Add a taint with key 'workload' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  workload=storage-node-13:PreferNoSchedule
"Listen on port 8080 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8080:5432
"Create a service for an ruby deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment ruby --port=8181 --target-port=818100
"Update pod 'web' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods web criticality='high'
Return only the phase value of the specified pod,kubectl get -o template pod/e-commerce-pod --template={{.status.phase}}
"Delete pods and services with same names ""gateway"" and ""email""","kubectl delete pod,service gateway email"
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5000:9090
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/email-service"
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/queue-processing-job -n kube-node-lease
Begin streaming the logs of the nano-bot container in pod chat-app-pod,kubectl logs -f -c nano-bot chat-app-pod
"Listen on port 3000 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 3000:5432"
Set deployment log-aggregator-deployment's service account to kube-dns,kubectl set serviceaccount deployment log-aggregator-deployment kube-dns
"Create a service for an wordpress deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment wordpress --port=8010 --target-port=808900
Create a new secret named gcp-service-account-secret from an env file,kubectl create secret generic gcp-service-account-secret --from-env-file=path/to/preferences.env
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/log-aggregator-pod 9090:8080
Return snapshot of previous terminated ruby container logs from pod proxy-service-pod,kubectl logs -p -c ruby proxy-service-pod
"Create a service for a replicated alpine using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs alpine --port=8081 --target-port=808800
"Listen on port 8080 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8080:5000"
Return snapshot logs from pod e-commerce-pod with multi containers,kubectl logs e-commerce-pod --all-containers=true
"Listen on port 5000 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 5000:9090"
Set the resource request and limits for all containers in node,"kubectl set resources deployment node --limits=cpu=200m,memory=512Mi --requests=cpu=100m,memory=64Mi"
Get output from running the 'mongo' command in code-explorer from pod vpn-service-pod,kubectl exec vpn-service-pod -c code-explorer -- mongo
Edit the job 'cron-job' in JSON using the v1 API format,kubectl edit job.v1.batch/cron-job -o json
"Listen on port 8888 locally, forwarding to 5432 in the pod",kubectl port-forward pod/chat-app-pod 8888:5432
Create a new NodePort service named vpn-service-nodeport,kubectl create service nodeport vpn-service-nodeport --tcp=8081:8083
Create a copy of auth-service-pod adding a debug container and changing container images,"kubectl debug auth-service-pod -it --copy-to=dgb-img --image=debian --set-image=logger=logging-app:debug,api=api:v2"
Print the supported non-namespaced resources,kubectl api-resources --shortnamesspaced=false
Create a new secret named git-credentials-secret with keys for each file in folder bar,kubectl create secret generic git-credentials-secret --from-file=path/to/settings
Create a pod disruption budget named frontend-pdb that will select all pods with the owner=team-1 label # and require minumum 9 of them being available at any point in time,kubectl create poddisruptionbudget frontend-pdb --selector=owner=team-1 --min-available=9
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/global-config deployment/search-engine-deployment
Add a taint with key 'zone' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  zone=node-2:PreferNoSchedule
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.dev-context.cluster dev-cluster
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/api-service-pod 6379 3000
Begin streaming the logs of the lunar-launcher container in pod log-aggregator-pod,kubectl logs -f -c lunar-launcher log-aggregator-pod
Add a taint with key 'workload' on nodes having label service=auth,kubectl taint node -l service=auth  workload=worker-node-3:PreferNoSchedule
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=conf=/path/to/options/file1.txt --from-file=data=/path/to/configurations/file2.txt
Create a new NodePort service named log-aggregator-nodeport,kubectl create service nodeport log-aggregator-nodeport --tcp=8080:9000
"List a pod identified by type and name specified in ""conf.yaml"" in YAML output format",kubectl get -f conf.yaml -o yaml
"Update pod 'proxy-server' with the annotation 'compliance-level' and the value 'PCI-DSS', overwriting any existing value",kubectl annotate --overwrite pods proxy-server compliance-level='PCI-DSS'
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8080 8888
"Start a mongo pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mongo --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
Create a job with a command,kubectl create job deployment-rollout-job --image=php --
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/search-engine-deployment 8088 8888
"Listen on port 5000 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5000:8088
"Check to see if I can get the job named ""image-processing-job"" in namespace ""kube-node-lease""",kubectl auth can-i list jobs.batch/image-processing-job -n kube-node-lease
Update image of all containers of daemonset development to 'amazonlinux:2',kubectl set image daemonset development *=amazonlinux:2
Update deployment 'log-aggregator-deployment' with a new environment variable,kubectl set env deployment/log-aggregator-deployment SMTP_PASSWORD=your-password
"Listen on port 6379 locally, forwarding to 6379 in the pod",kubectl port-forward pod/proxy-server-pod 6379:6379
"Listen on port 8088 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8088:6379"
Create a cron job with a command,"kubectl create cronjob daily-report --image=python --schedule=""*/1 * * * *"" -- pip --version"
Update a container's image using a JSON patch with positional arrays,"kubectl patch pod e-commerce-pod --type='json' -p='[{""op"": ""replace"", ""path"": ""/spec/containers/0/image"", ""value"":""new image""}]'"
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""custom-deployments"" API group",kubectl get deployments.v1.1.1.custom-deployments -o json
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/web-app-pod :8088
Create a job with a command,kubectl create job log-collection --image=ethereum/client-go -- geth
Return snapshot logs from container payment-processor-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/payment-processor-deployment -c analytics-pod-1
"If the deployment named db-migration-replicaset's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/db-migration-replicaset
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-settings deployment/api-server-deployment
Add a taint with key 'cpu-type' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  cpu-type=node-1:PreferNoSchedule
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/frontend-service"
Update deployment 'scheduler-app-deployment' with a new environment variable,kubectl set env deployment/scheduler-app-deployment LOG_LEVEL=info
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""web-apps"" API group",kubectl get deployments.dev-2.2.0.web-apps -o json
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=80 --target-port=900000
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""legacy-apps"" API group",kubectl get deployments.v1.1.1.legacy-apps -o json
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/app-config-dev deployment/email-server-deployment
Return only the phase value of the specified pod,kubectl get -o template pod/gateway-pod --template={{.status.phase}}
"Listen on port 8081 locally, forwarding to 9090 in the pod",kubectl port-forward pod/api-service-pod 8081:9090
Create a job with a command,kubectl create job indexing --image=docker.elastic.co/elasticsearch/elasticsearch -- elasticsearch --version
"Update pod 'frontend' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods frontend monitoring-tool='Prometheus'
"Listen on port 8081 locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod 8081:8888
"Listen on port 5000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/web-app-pod 5000:5000
"Auto scale a deployment ""backend"", with the number of pods between 7 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment backend --min=7 --max=15
Switch to raw terminal mode; sends stdin to 'bash' in code-explorer from pod analytics-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach analytics-pod -c code-explorer -i -t
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=cloud-cluster
Start a centos pod and let the container expose port 8083,kubectl run hazelcast --image=centos --port=8083
"Listen on port 8888 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/log-aggregator-pod 8888:5000
Update deployment 'web-app-deployment' with a new environment variable,kubectl set env deployment/web-app-deployment DEBUG=true
"Check to see if I can get the job named ""backup-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/backup-job -n testing
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/web-app-pod
Update image of all containers of daemonset services to 'python:3.9.7',kubectl set image daemonset services *=python:3.9.7
Get output from running the 'elasticsearch --version' command in lunar-launcher from pod cdn-service-pod,kubectl exec cdn-service-pod -c lunar-launcher -- elasticsearch --version
"Create a cluster role named ""reader"" with ResourceName specified",kubectl create clusterrole reader --verb=use --resource=services --resource-name=content-delivery --resource-name=keycloak-server
"Listen on port 8081 locally, forwarding to 3000 in the pod",kubectl port-forward pod/mypod 8081:3000
Switch to raw terminal mode; sends stdin to 'bash' in cyber-sleuth from pod media-stream-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach media-stream-pod -c cyber-sleuth -i -t
Create a new secret named api-key-secret from an env file,kubectl create secret generic api-key-secret --from-env-file=path/to/configs.env
"Check to see if I can get the job named ""security-scan-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/security-scan-job -n kube-system
Set the cluster field in the my-context context to moon-cluster,kubectl config set contexts.service-account-context.cluster moon-cluster
Get output from running the 'nginx' command in mycontainer from pod monitoring-pod,kubectl exec monitoring-pod -c mycontainer -- nginx
Create a new ClusterIP service named catalog-service-clusterip,kubectl create service clusterip catalog-service-clusterip --tcp=8084:3306
Copy /tmp/foo_dir local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir cert-manager/worker-pod-4:/tmp/bar
Create a job with a command,kubectl create job certificate-renewal --image=php -- php --version
Import specific keys from a config map,kubectl set env --keys=smtp_server --from=configmap/api-config deployment/backend-microservice-deployment
Create a copy of gateway-pod adding a debug container and changing container images,"kubectl debug gateway-pod -it --copy-to=debug-image-memcached --image=debian --set-image=web=nginx:latest,api=api:v2"
Create a copy of frontend-pod adding a debug container and changing container images,"kubectl debug frontend-pod -it --copy-to=debug-image-api --image=debian --set-image=web=nginx:latest,scheduler=my-scheduler:1.0"
List a single pod in YAML output format,kubectl get -o yaml pod proxy-service-pod
Start a python pod and let the container expose port 9090,kubectl run hazelcast --image=python --port=9090
"Get output from running the 'wp' command from pod chat-app-pod, using the first container by default",kubectl exec chat-app-pod -- wp
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/frontend-pod 5432 8888
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp argocd/security-scanner-pod-18:~/.config/kube /tmp/bar_dir
Get output from running the 'wp' command in stardust-shuttle from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c stardust-shuttle -- wp
Create a copy of frontend-pod changing all container images to golang,kubectl debug frontend-pod --copy-to=debug-image-api --set-image=*=golang
Add a taint with key 'hardware' on nodes having label release=beta,kubectl taint node -l release=beta  hardware=web-node-8:PreferNoSchedule
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp prometheus/cache-pod-5:~/.config/kube :/tmp/bar
Remove from node 'testing-node-11' the taint with key 'zone' and effect 'PreferNoSchedule' if one exists,kubectl taint nodes testing-node-11 zone:PreferNoSchedule-
Add a taint with key 'dedicated' on nodes having label myLabel,kubectl taint node -l myLabel  dedicated=prod-node-5:PreferNoSchedule
Update image of all containers of daemonset development to 'mongo:5.0.2',kubectl set image daemonset development *=mongo:5.0.2
"List deployments in JSON output format, in the ""v2.0.0"" version of the ""mobile-apps"" API group",kubectl get deployments.v2.0.0.mobile-apps -o json
"Delete pods and services with same names ""email"" and ""chat-app""","kubectl delete pod,service email chat-app"
Update pod 'vpn' with the label 'role' and the value 'cache',kubectl label pods vpn role=cache
Get output from running the 'docker run -it ubuntu' command in nano-bot from pod chat-app-pod,kubectl exec chat-app-pod -c nano-bot -- docker run -it ubuntu
"If the deployment named foo's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/foo
"Get output from running 'apk add curl' command from the first pod of the service payment-service, using the first container by default",kubectl exec svc/payment-service -- apk add curl
Create a job with a command,kubectl create job log-collection --image=ubuntu -- docker run -it ubuntu
"Listen on port 8000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8000:8888"
"Listen on port 5432 locally, forwarding to 5000 in the pod",kubectl port-forward pod/api-service-pod 5432:5000
"Update pod 'foo' with the annotation 'security-scan-status' and the value 'pass' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo security-scan-status=pass
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/load-balancer-deployment CACHE_SIZE=64MB -o yaml
Update deployment 'frontend-deployment' with a new environment variable,kubectl set env deployment/frontend-deployment S3_BUCKET=my-s3-bucket
Set the resource request and limits for all containers in jenkins,"kubectl set resources deployment jenkins --limits=cpu=200m,memory=512Mi --requests=cpu=5,memory=128Mi"
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=9090 --target-port=909000
Get output from running the 'mongo' command in stardust-shuttle from pod cdn-service-pod,kubectl exec cdn-service-pod -c stardust-shuttle -- mongo
Display only the most recent 23 lines of output in pod chat-app-pod,kubectl logs --tail=23 chat-app-pod
Create a deployment named mattermost that runs the php image,kubectl create deployment mattermost --image=php
"Auto scale a deployment ""web"", with the number of pods between 6 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment web --min=6 --max=9
Get output from running the 'geth attach' command in lunar-launcher from pod monitoring-pod,kubectl exec monitoring-pod -c lunar-launcher -- geth attach
Create a new ExternalName service named external-messaging-service,kubectl create service externalname external-messaging-service --external-name example-domain.com
Add a taint with key 'workload' on nodes having label myLabel,kubectl taint node -l myLabel  workload=monitoring-node-15:PreferNoSchedule
Update pod 'security' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods security description-
Update pod 'api' with the label 'env' and the value 'production',kubectl label pods api env=production
Add a taint with key 'dedicated' on nodes having label environment=production,kubectl taint node -l environment=production  dedicated=worker-node-3:PreferNoSchedule
Create a new secret named jwt-secret from an env file,kubectl create secret generic jwt-secret --from-env-file=path/to/preferences.env
Import specific keys from a config map,kubectl set env --keys=SECRET_KEY --from=configmap/app-name-config deployment/search-engine-deployment
Update pod 'proxy-server' with the label 'component' and the value 'worker',kubectl label pods proxy-server component=worker
"Listen on port 9090 locally, forwarding to 8080 in the pod",kubectl port-forward pod/chat-app-pod 9090:8080
"Get output from running 'mysqld' command from the first pod of the deployment mydeployment, using the first container by default",kubectl exec deploy/mydeployment -- mysqld
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/backend-pod
Create a deployment named registry that runs the jenkins image with 6 replicas,kubectl create deployment registry --image=jenkins --replicas=6
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 8000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 6379 8000
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp istio-system/file-server-pod-14:/tmp/foo_dir /tmp/bar_dir
Create a job with a command,kubectl create job log-processing-job --image=php -- php --version
Roll back to daemonset revision 5,kubectl rollout undo daemonset/development --to-revision=5
Scale a replica set named 'staging-app-rs' to 1,kubectl scale --replicas=1 rs/staging-app-rs
Set deployment database-deployment's service account to kube-dns,kubectl set serviceaccount deployment database-deployment kube-dns
"Update pod 'proxy' with the annotation 'env' and the value 'staging', overwriting any existing value",kubectl annotate --overwrite pods proxy env='staging'
"Listen on port 8000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/frontend-pod 8000:8000
"Update a pod identified by type and name in ""setup.json""",kubectl annotate -f setup.json git-repo='https://github.com/example/my-app'
"Listen on port 9090 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 9090:3000"
Return snapshot of previous terminated astro-container container logs from pod cdn-service-pod,kubectl logs -p -c astro-container cdn-service-pod
Create a new ClusterIP service named ldap-service-clusterip,kubectl create service clusterip ldap-service-clusterip --tcp=9092:8081
"Listen on ports 9090 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 9090 3000
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/monitoring-pod
"Auto scale a replication controller ""gateway"", with the number of pods between 1 and 3, target CPU utilization at 40%",kubectl autoscale rc gateway --max=3 --cpu-percent=40
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/e-commerce-pod 3000:5000
Start a golang pod and let the container expose port 8081,kubectl run hazelcast --image=golang --port=8081
"Set a deployments ubuntu container cpu limits to ""500m"" and memory to ""64Mi""","kubectl set resources deployment ubuntu -c=nginx --limits=cpu=500m,memory=64Mi"
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8088 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 8088 8088
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8000 3000
"Listen on port 8081 locally, forwarding to 5000 in the pod",kubectl port-forward pod/chat-app-pod 8081:5000
Get output from nano-bot from pod monitoring-pod,kubectl attach monitoring-pod -c nano-bot
Add a taint with key 'workload' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  workload=dev-node-4:PreferNoSchedule
"Create a service for a pod cdn-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod cdn-service-pod --port=8000 --name=frontend
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 8443,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=8443
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json criticality=high
Update deployment 'scheduler-app-deployment' with a new environment variable,kubectl set env deployment/scheduler-app-deployment PORT=8080
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/monitoring-config deployment/scheduler-app-deployment
"List deployments in JSON output format, in the ""stable-2.0.0"" version of the ""prod-apps"" API group",kubectl get deployments.stable-2.0.0.prod-apps -o json
List one or more resources by their type and names,kubectl get rc/web service/vpn-service-rc pods/cdn-service-pod
Get output from running the 'elasticsearch' command in time-machine from pod proxy-server-pod,kubectl exec proxy-server-pod -c time-machine -- elasticsearch
Add a taint with key 'cpu-type' on nodes having label role=database,kubectl taint node -l role=database  cpu-type=web-node-8:PreferNoSchedule
Get output from nebula-navigator from pod email-service-pod,kubectl attach email-service-pod -c nebula-navigator
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json backup-strategy='daily backups'
Set the server field on the cluster-gamma cluster to https://1.2.3.4,kubectl config set clusters.cluster-gamma.server https://1.2.3.4
"Listen on port 5432 locally, forwarding to 3000 in the pod",kubectl port-forward pod/log-aggregator-pod 5432:3000
"Delete pods and services with same names ""cdn"" and ""log-aggregator""","kubectl delete pod,service cdn log-aggregator"
Start a nginx pod and let the container expose port 8181,kubectl run hazelcast --image=nginx --port=8181
Create a job with a command,kubectl create job data-migration-job --image=jenkins -- java -jar /usr/share/jenkins/jenkins.war
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.edge-context.cluster cluster-beta
Start a mongo pod and let the container expose port 8010,kubectl run hazelcast --image=mongo --port=8010
Return snapshot logs from container authentication-service-deployment-1 of a deployment named monitoring-pod,kubectl logs deployment/authentication-service-deployment -c monitoring-pod-1
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/api-service-pod 5000:9090
Create a new secret named my-secret with keys for each file in folder bar,kubectl create secret generic my-secret --from-file=path/to/data
Set the cluster field in the my-context context to on-prem-cluster,kubectl config set contexts.testing-context.cluster on-prem-cluster
Embed certificate authority data for the web-cluster cluster entry,kubectl config set-cluster web-cluster --embed-certs --certificate-authority=~/.kube/my-k8s-cluster/kubernetes.ca.crt
Create a new NodePort service named api-service-nodeport,kubectl create service nodeport api-service-nodeport --tcp=9090:9092
Create a copy of log-aggregator-pod changing all container images to busybox,kubectl debug log-aggregator-pod --copy-to=dgb-img --set-image=*=busybox
Add a taint with key 'dedicated' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  dedicated=backup-node-14:PreferNoSchedule
Copy :/tmp/foo from a remote pod to /tmp/bar_dir locally,kubectl cp logging/api-server-pod-3::/tmp/foo /tmp/bar_dir
Create a new NodePort service named cdn-service-nodeport,kubectl create service nodeport cdn-service-nodeport --tcp=6379:8080
Create a new config map named kube-system-config with specified keys instead of file basenames on disk,kubectl create configmap kube-system-config --from-file=settings=/path/to/properties/file1.txt --from-file=key2=/path/to/preferences/file2.txt
"Wait for the pod ""frontend-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/frontend-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
Create a copy of gateway-pod changing all container images to centos,kubectl debug gateway-pod --copy-to=my-debugger --set-image=*=centos
"Listen on port 8081 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 8081:5000
Add a taint with key 'app' on nodes having label owner=john-doe,kubectl taint node -l owner=john-doe  app=db-node-7:PreferNoSchedule
Begin streaming the logs of the astro-container container in pod api-service-pod,kubectl logs -f -c astro-container api-service-pod
"Listen on port 3000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/chat-app-pod 3000:8888
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=staging-cluster
Return snapshot logs from container gateway-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/gateway-deployment -c proxy-service-pod-1
Update pod 'cdn' with the label 'role' and the value 'backend',kubectl label pods cdn role=backend
Update image of all containers of daemonset nginx to 'php:7.4.22',kubectl set image daemonset nginx *=php:7.4.22
"If the deployment named db-migration-replicaset's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/db-migration-replicaset
Add a taint with key 'dedicated' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  dedicated=edge-node-10:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=secret_key --from=configmap/app-name-config deployment/database-deployment
"If the deployment named app-v2-replicaset's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/app-v2-replicaset
Create a deployment named logging that runs the redis image and expose port 6379,kubectl create deployment logging --image=redis --port=6379
Update a container's image; spec.containers[*].name is required because it's a merge key,"kubectl patch pod proxy-service-pod -p '{""spec"":{""containers"":[{""name"":""kubernetes-serve-hostname"",""image"":""new image""}]}}'"
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/kube-system-config deployment/analytics-platform-deployment
"Create or update exec auth plugin environment variables for the ""system"" entry",kubectl config set-credentials system --exec-env=key1=val1 --exec-env=key2=val2
"Update pod 'backend' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods backend expiration-date='2024-12-31'
Update pod 'backend' with the label 'app' and the value 'myapp',kubectl label pods backend app=myapp
"Create a service for a pod vpn-service-pod, which serves on port 444 with the name ""frontend""",kubectl expose pod vpn-service-pod --port=5001 --name=frontend
Create a new ClusterIP service named shipping-service-clusterip,kubectl create service clusterip shipping-service-clusterip --tcp=6379:8080
Begin streaming the logs of the cyber-sleuth container in pod security-service-pod,kubectl logs -f -c cyber-sleuth security-service-pod
Display only the most recent 12 lines of output in pod chat-app-pod,kubectl logs --tail=12 chat-app-pod
Set deployment frontend-deployment's service account to istio,kubectl set serviceaccount deployment frontend-deployment istio
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/namespace-config deployment/payment-processor-deployment
Update image of all containers of daemonset app-v2 to 'openjdk:16.0.2',kubectl set image daemonset app-v2 *=openjdk:16.0.2
"Update pod 'web' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web last-deployment=2023-03-15
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/web-app-pod 3000:6379
Update pod 'proxy-server' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy-server tier-
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""experimental-apps"" API group",kubectl get deployments.v1.1.1.experimental-apps -o json
"Listen on port 9090 locally, forwarding to 8081 in the pod",kubectl port-forward pod/log-aggregator-pod 9090:8081
"Enable the Google Compute Platform auth provider for the ""system"" entry",kubectl config set-credentials system --auth-provider=gcp
"Create a service for a replicated php using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs php --port=5432 --target-port=808200
"Start a mcr.microsoft.com/dotnet/core/runtime pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mcr.microsoft.com/dotnet/core/runtime --overrides='{ ""apiVersion"": ""v1.0.0"", ""spec"": { ... } }'"
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 8000 8888
Start a confluentinc/cp-kafka pod and let the container expose port 9090,kubectl run hazelcast --image=confluentinc/cp-kafka --port=9090
"Auto scale a deployment ""frontend"", with the number of pods between 2 and 15, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment frontend --min=2 --max=15
Add a taint with key 'special' on nodes having label team=devops,kubectl taint node -l team=devops  special=storage-node-13:PreferNoSchedule
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/authentication-service"
"Create a service for a replication controller identified by type and name specified in ""ruby-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f ruby-controller.yaml --port=9092 --target-port=808400
Approve CSR 'csr-node-1',kubectl certificate approve csr-node-1
Scale a replica set named 'api-service-rs' to 1,kubectl scale --replicas=1 rs/api-service-rs
Set the cluster field in the my-context context to web-cluster,kubectl config set contexts.team-alpha-context.cluster web-cluster
Create a new config map named log-config from the key=value pairs in the file,kubectl create configmap log-config --from-file=path/to/data
"Listen on port 5000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5000:5432
Apply the configuration in preferences.json to a pod,kubectl apply -f ./preferences.json
Get output from running the 'composer --version' command in lunar-launcher from pod media-stream-pod,kubectl exec media-stream-pod -c lunar-launcher -- composer --version
Get output from running the 'mongod' command in cyber-sleuth from pod web-app-pod,kubectl exec web-app-pod -c cyber-sleuth -- mongod
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/web-app-pod 8088:9090
"Auto scale a deployment ""database"", with the number of pods between 5 and 12, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment database --min=5 --max=12
Get output from running the 'jenkins-plugin-cli' command in cyber-sleuth from pod backend-pod,kubectl exec backend-pod -c cyber-sleuth -- jenkins-plugin-cli
Update pod 'proxy' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy component-
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/monitoring-config deployment/analytics-platform-deployment
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/app-config deployment/backend-microservice-deployment
Begin streaming the logs of the nano-bot container in pod gateway-pod,kubectl logs -f -c nano-bot gateway-pod
Add a taint with key 'hardware' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  hardware=web-node-8:PreferNoSchedule
Display only the most recent 20 lines of output in pod email-service-pod,kubectl logs --tail=20 email-service-pod
Import environment from a secret,kubectl set env --from=secret/app-config-secret deployment/gateway-deployment
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""api-v2"" API group",kubectl get deployments.v1.1.0.api-v2 -o yaml
Create a deployment named registry that runs the alpine image with 7 replicas,kubectl create deployment registry --image=alpine --replicas=7
"Auto scale a replication controller ""api"", with the number of pods between 1 and 4, target CPU utilization at 50%",kubectl autoscale rc api --max=4 --cpu-percent=50
Copy /tmp/foo_dir local file to :/tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo_dir rook-ceph/load-balancer-pod-9::/tmp/bar
"Listen on port 6379 locally, forwarding to 8081 in the pod",kubectl port-forward pod/cdn-service-pod 6379:8081
Update image of all containers of daemonset prod to 'ruby:3.0.2',kubectl set image daemonset prod *=ruby:3.0.2
Describe a pod,kubectl describe pods/task-processor
"List deployments in YAML output format, in the ""hotfix-1.1.2"" version of the ""apps"" API group",kubectl get deployments.hotfix-1.1.2.apps -o yaml
Start a ethereum/client-go pod and let the container expose port 5001,kubectl run hazelcast --image=ethereum/client-go --port=5001
Diff file read from stdin,cat config.json | kubectl diff -f -
Add a taint with key 'datacenter' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  datacenter=node-1:PreferNoSchedule
"Update pod 'chat-app' with the annotation 'git-repo' and the value 'https, overwriting any existing value",kubectl annotate --overwrite pods chat-app git-repo='https://github.com/example/my-app'
"If the deployment named mysql's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/mysql
"Update a pod identified by type and name in ""pod.json""",kubectl annotate -f pod.json git-repo='https://github.com/example/my-app'
"Get output from running the 'go run hello.go' command from pod gateway-pod, using the first container by default",kubectl exec gateway-pod -- go run hello.go
"Delete pods and services with same names ""auth"" and ""media-stream""","kubectl delete pod,service auth media-stream"
Get output from running the 'dotnet --list-sdks' command in rocket-ranger from pod analytics-pod,kubectl exec analytics-pod -c rocket-ranger -- dotnet --list-sdks
Create a deployment with a command,kubectl create deployment grafana --image=nginx -- nginx -t
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=cluster-alpha
Add a taint with key 'dedicated' on nodes having label customer=acme-corp,kubectl taint node -l customer=acme-corp  dedicated=dev-node-4:PreferNoSchedule
Create a new config map named app-config-prod with specified keys instead of file basenames on disk,kubectl create configmap app-config-prod --from-file=settings=/path/to/configs/file1.txt --from-file=key2=/path/to/options/file2.txt
"Listen on port 3000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/log-aggregator-pod 3000:8000"
"Create a service for a replication controller identified by type and name specified in ""ubuntu-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f ubuntu-controller.yaml --port=8888 --target-port=808200
Copy /tmp/foo local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp /tmp/foo kubeapps/front-end-pod-12:/tmp/bar_dir
"Listen on port 3000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/monitoring-service 3000:https
"If the deployment named webapp-replicaset's current size is 5, scale mysql to 3",kubectl scale --current-replicas=5 --replicas=3 deployment/webapp-replicaset
"If the deployment named app-v2-replicaset's current size is 3, scale mysql to 3",kubectl scale --current-replicas=3 --replicas=3 deployment/app-v2-replicaset
Return snapshot of previous terminated mycontainer container logs from pod vpn-service-pod,kubectl logs -p -c mycontainer vpn-service-pod
Create a new secret named monitoring-credentials-secret with keys for each file in folder bar,kubectl create secret generic monitoring-credentials-secret --from-file=path/to/configs
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/app-settings deployment/payment-processor-deployment
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/frontend-pod 5000 8080
Get output from running the 'bash' command in nano-bot from pod media-stream-pod,kubectl exec media-stream-pod -c nano-bot -- bash
Set custom TLS server name to use for validation for the moon-cluster cluster entry,kubectl config set-cluster moon-cluster --tls-server-name=my-k8s-cluster
Create a new secret named private-key-secret from an env file,kubectl create secret generic private-key-secret --from-env-file=path/to/parameters.env
Update image of all containers of daemonset app-v2 to 'centos:8.4.2105',kubectl set image daemonset app-v2 *=centos:8.4.2105
"Listen on port 8000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/chat-app-pod 8000:8088
Copy /tmp/foo_dir from a remote pod to :/tmp/bar locally,kubectl cp kube-flannel/image-resizer-pod-20:/tmp/foo_dir :/tmp/bar
Switch to raw terminal mode; sends stdin to 'bash' in quantum-quark from pod auth-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach auth-service-pod -c quantum-quark -i -t
"Delete pods and services with same names ""monitoring"" and ""payment""","kubectl delete pod,service monitoring payment"
Get the documentation of a specific field of a resource,kubectl explain resource=services.metadata.name
Get output from running the 'geth version' command in mycontainer from pod vpn-service-pod,kubectl exec vpn-service-pod -c mycontainer -- geth version
Create a cron job with a command,"kubectl create cronjob data-processing --image=redis --schedule=""*/1 * * * *"" -- redis-server"
Create a new secret named oauth-secret with keys for each file in folder bar,kubectl create secret generic oauth-secret --from-file=path/to/configurations
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.client-2-context.cluster staging-cluster
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node edge-node-10 -p '{""spec"":{""unschedulable"":true}}'"
Create a deployment with a command,kubectl create deployment prometheus --image=confluentinc/cp-kafka -- kafka-topics --list
Create a new secret named aws-credentials-secret with keys for each file in folder bar,kubectl create secret generic aws-credentials-secret --from-file=path/to/parameters
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/env-vars deployment/user-management-deployment
Begin streaming the logs of the stardust-shuttle container in pod frontend-pod,kubectl logs -f -c stardust-shuttle frontend-pod
Create a copy of mypod changing all container images to mysql,kubectl debug mypod --copy-to=debug-image-web --set-image=*=mysql
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 9092,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=9092
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=conf=/path/to/profiles/file1.txt --from-file=data=/path/to/settings/file2.txt
Get output from time-machine from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c time-machine
Remove from node 'k8s-node-1' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes k8s-node-1 hardware:NoExecute-
Get output from running the 'node' command in code-explorer from pod database-pod,kubectl exec database-pod -c code-explorer -- node
Describe one context in your kubeconfig file,kubectl config get-contexts team-alpha-context
"Delete pods and services with same names ""proxy"" and ""chat-app""","kubectl delete pod,service proxy chat-app"
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=moon-cluster
"Update pod 'log-aggregator' with the annotation 'SLA' and the value '99.9% uptime' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator SLA='99.9% uptime'
Create a copy of vpn-service-pod changing all container images to confluentinc/cp-kafka,kubectl debug vpn-service-pod --copy-to=my-debugger --set-image=*=confluentinc/cp-kafka
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/kube-system-config deployment/load-balancer-deployment
"Check to see if I can get the job named ""batch-processing-job"" in namespace ""kube-system""",kubectl auth can-i list jobs.batch/batch-processing-job -n kube-system
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/monitoring-pod
"Delete pods and services with same names ""analytics"" and ""gateway""","kubectl delete pod,service analytics gateway"
Get output from running the 'bash' command in nano-bot from pod auth-service-pod,kubectl exec auth-service-pod -c nano-bot -- bash
Create a job with a command,kubectl create job scaling-job --image=ethereum/client-go -- geth version
"Listen on port 3000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/email-service 3000:https
"List deployments in JSON output format, in the ""legacy-1.0.0"" version of the ""custom-apps"" API group",kubectl get deployments.legacy-1.0.0.custom-apps -o json
"Listen on port 8081 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8081:8888
Set deployment backend-microservice-deployment's service account to vault,kubectl set serviceaccount deployment backend-microservice-deployment vault
Create a new namespace named kube-dns,kubectl create namespace kube-dns
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=sun-cluster
Create a job with a command,kubectl create job log-collection --image=python -- python --version
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 9090 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 5432 9090
Create a deployment named registry that runs the mysql image,kubectl create deployment registry --image=mysql
Update pod 'api' with the label 'env' and the value 'development',kubectl label pods api env=development
Use an alternative editor,"KUBE_EDITOR=""nano"" kubectl edit svc/backend-service"
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/frontend-service"
Update pod 'log-aggregator' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods log-aggregator tier-
"Update pod 'monitoring' with the annotation 'backup-strategy' and the value 'daily backups' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring backup-strategy='daily backups'
"Check to see if I can get the job named ""queue-processing-job"" in namespace ""namespace-1""",kubectl auth can-i list jobs.batch/queue-processing-job -n namespace-1
Import environment from a secret,kubectl set env --from=secret/azure-storage-secret deployment/log-aggregator-deployment
Restart a deployment,kubectl rollout restart deployment/my-deployment
"Delete pods and services with same names ""backend"" and ""media-stream""","kubectl delete pod,service backend media-stream"
"Create or update exec auth plugin environment variables for the ""dev-user"" entry",kubectl config set-credentials dev-user --exec-env=key1=val1 --exec-env=key2=val2
Add a taint with key 'disktype' on nodes having label component=proxy,kubectl taint node -l component=proxy  disktype=dev-node-4:PreferNoSchedule
"If the deployment named frontend-rs's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/frontend-rs
Import specific keys from a config map,kubectl set env --keys=DEBUG_MODE --from=configmap/env-vars deployment/frontend-deployment
"Create a service for a replicated wordpress, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc wordpress --port=8080 --target-port=800000
Set the cluster field in the my-context context to staging-cluster,kubectl config set contexts.edge-context.cluster staging-cluster
Copy /tmp/foo from a remote pod to :/tmp/bar locally,kubectl cp kube-system/web-app-pod-1:/tmp/foo :/tmp/bar
Add a taint with key 'disktype' on nodes having label service=auth,kubectl taint node -l service=auth  disktype=prod-node-5:PreferNoSchedule
"Remove the ""client-secret"" config value for the OpenID Connect auth provider for the ""api-user"" entry",kubectl config set-credentials api-user --auth-provider=oidc --auth-provider-arg=client-secret-
Create a job with a command,kubectl create job indexing --image=mysql -- mysql
Get output from rocket-ranger from pod payment-gateway-pod,kubectl attach payment-gateway-pod -c rocket-ranger
"Delete pods and services with same names ""frontend"" and ""email""","kubectl delete pod,service frontend email"
Create a deployment with a command,kubectl create deployment my-dep --image=node -- node
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/e-commerce-pod 3000:8000
Import specific keys from a config map,kubectl set env --keys=redis_host --from=configmap/app-config-dev deployment/authentication-service-deployment
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/kube-system-config deployment/order-processing-deployment
"If the deployment named foo's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/foo
"Listen on port 6379 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 6379:8888"
Use an alternative editor,"KUBE_EDITOR=""notepad"" kubectl edit svc/user-service"
Remove the environment variable ENV from container 'code-explorer' in all deployment configs,"kubectl set env deployments --all --containers=""code-explorer"" ENV-"
Rename the context 'on-prem-context' to 'app-2-context' in your kubeconfig file,kubectl config rename-context on-prem-context app-2-context
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/scheduler-service"
Get output from running the 'mongo --version' command in quantum-quark from pod analytics-pod,kubectl exec analytics-pod -c quantum-quark -- mongo --version
Set the cluster field in the my-context context to galaxy-cluster,kubectl config set contexts.service-account-context.cluster galaxy-cluster
Return snapshot logs from container log-aggregator-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/log-aggregator-deployment -c gateway-pod-1
Update a single-container pod's image version (tag) to v4,kubectl get pod email-service-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/log-config deployment/api-server-deployment
Create a deployment named nats that runs the redis image with 3 replicas,kubectl create deployment nats --image=redis --replicas=3
"Enable new exec auth plugin for the ""jane.smith"" entry",kubectl config set-credentials jane.smith --exec-command=/path/to/the/executable --exec-api-version=client.authentication.k8s.io/v1beta1
"Listen on port 8081 locally, forwarding to 8000 in the pod",kubectl port-forward pod/api-service-pod 8081:8000
Rollback to the previous deployment,kubectl rollout undo deployment/development
"Start a mcr.microsoft.com/dotnet/core/runtime pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=mcr.microsoft.com/dotnet/core/runtime --overrides='{ ""apiVersion"": ""hotfix-1.1.2"", ""spec"": { ... } }'"
"Create a single ingress called 'rontend-ingress' that directs requests to testing.com/example to svc # svc1:8080 with a tls secret ""my-cert""","kubectl create ingress rontend-ingress --rule=""testing.com/example=svc1:8080,tls=my-cert"""
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/cdn-service-pod 5000:9090
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.local-context.cluster cluster-beta
Begin streaming the logs of the nebula-navigator container in pod cdn-service-pod,kubectl logs -f -c nebula-navigator cdn-service-pod
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/analytics-platform-deployment -c gateway-pod-1
Get output from nano-bot from pod email-service-pod,kubectl attach email-service-pod -c nano-bot
"Set a deployment's node:14.17.3 container image to 'node', and its busybox container image to 'busybox'",kubectl set image deployment/node busybox=busybox node=node:14.17.3
Use an alternative editor,"KUBE_EDITOR=""nvim"" kubectl edit svc/proxy-service"
Get output from running the 'dotnet --list-sdks' command in nano-bot from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c nano-bot -- dotnet --list-sdks
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/loadbalancer-service"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8081 8080
"Check to see if I can get the job named ""log-rotation-job"" in namespace ""development""",kubectl auth can-i list jobs.batch/log-rotation-job -n development
Create a new config map named app-config-dev with specified keys instead of file basenames on disk,kubectl create configmap app-config-dev --from-file=properties=/path/to/preferences/file1.txt --from-file=key1=/path/to/settings/file2.txt
"Listen on port 6379 on localhost and selected IP, forwarding to 8088 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 6379:8088"
Rename the context 'cloud-context' to 'user-a-context' in your kubeconfig file,kubectl config rename-context cloud-context user-a-context
Create a new config map named app-name-config with specified keys instead of file basenames on disk,kubectl create configmap app-name-config --from-file=properties=/path/to/configs/file1.txt --from-file=key1=/path/to/data/file2.txt
Embed certificate authority data for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --embed-certs --certificate-authority=~/.kube/prod-cluster/kubernetes.ca.crt
Return snapshot of previous terminated cosmic-container container logs from pod media-stream-pod,kubectl logs -p -c cosmic-container media-stream-pod
Add a taint with key 'special' on nodes having label stack=tech-stack,kubectl taint node -l stack=tech-stack  special=app-node-6:PreferNoSchedule
Begin streaming the logs from all containers in pods defined by label environment=production,kubectl logs -f -l environment=production --all-containers=true
"Listen on port 8000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8000:8081"
"Set a deployments wordpress container cpu limits to ""5"" and memory to ""1Gi""","kubectl set resources deployment wordpress -c=nginx --limits=cpu=5,memory=1Gi"
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/app-settings deployment/scheduler-app-deployment
"Get output from running the 'mysql' command from pod frontend-pod, using the first container by default",kubectl exec frontend-pod -- mysql
"List deployments in YAML output format, in the ""dev-2.2.0"" version of the ""third-party-apps"" API group",kubectl get deployments.dev-2.2.0.third-party-apps -o yaml
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=on-prem-cluster
"Get output from running 'ash' command from the first pod of the deployment payment-processor-deployment, using the first container by default",kubectl exec deploy/payment-processor-deployment -- ash
"Listen on port 3000 locally, forwarding to 3000 in the pod",kubectl port-forward pod/mypod 3000:3000
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node testing-node-11 -p '{""spec"":{""replicas"":3}'"
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/security-service-pod 8081 3000
"Set only the ""client-key"" field on the ""developer"" # entry, without touching other values",kubectl config set-credentials developer --client-key=~/.kube/admin.key
"Start a ruby pod and set labels ""app=ruby"" and ""env=prod"" in the container","kubectl run hazelcast --image=ruby --labels=""app=ruby,env=prod"""
Create a pod disruption budget named frontend-pdb that will select all pods with the region=us-east label # and require minimum four of them being available at any point in time,kubectl create poddisruptionbudget frontend-pdb --selector=region=us-east --min-available=4
"Listen on port 3000 locally, forwarding to 8088 in the pod",kubectl port-forward pod/proxy-server-pod 3000:8088
"Start a mysql pod and set labels ""app=mysql"" and ""env=prod"" in the container","kubectl run hazelcast --image=mysql --labels=""app=mysql,env=prod"""
Begin streaming the logs of the stardust-shuttle container in pod vpn-service-pod,kubectl logs -f -c stardust-shuttle vpn-service-pod
"Create a service for a replication controller identified by type and name specified in ""nginx-controller.yaml"", which serves on port 80 and connects to the containers on port 8000",kubectl expose -f nginx-controller.yaml --port=8443 --target-port=808100
"Listen on port 8000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8000:3000
Create a cron job with a command,"kubectl create cronjob data-processing --image=ethereum/client-go --schedule=""*/1 * * * *"" -- geth"
Set custom TLS server name to use for validation for the staging-cluster cluster entry,kubectl config set-cluster staging-cluster --tls-server-name=dev-cluster
"List deployments in JSON output format, in the ""v1.1.1"" version of the ""external-apps"" API group",kubectl get deployments.v1.1.1.external-apps -o json
Add a taint with key 'special' on nodes having label release=beta,kubectl taint node -l release=beta  special=kube-master-9:PreferNoSchedule
"Enable the Google Compute Platform auth provider for the ""cluster-admin"" entry",kubectl config set-credentials cluster-admin --auth-provider=gcp
Create a new config map named db-config from an env file,kubectl create configmap db-config --from-env-file=path/to/settings.env
"List deployments in YAML output format, in the ""custom-version"" version of the ""apps"" API group",kubectl get deployments.custom-version.apps -o yaml
Rename the context 'staging-context' to 'app-2-context' in your kubeconfig file,kubectl config rename-context staging-context app-2-context
Set the cluster field in the my-context context to sun-cluster,kubectl config set contexts.team-alpha-context.cluster sun-cluster
List one or more resources by their type and names,kubectl get rc/web service/auth-service-rc pods/cdn-service-pod
Switch to raw terminal mode; sends stdin to 'bash' in rocket-ranger from pod auth-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach auth-service-pod -c rocket-ranger -i -t
Scale a replica set named 'frontend-rs' to 7,kubectl scale --replicas=7 rs/frontend-rs
Return snapshot logs from container backend-microservice-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/backend-microservice-deployment -c gateway-pod-1
Switch to raw terminal mode; sends stdin to 'bash' in warp-drive from pod log-aggregator-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach log-aggregator-pod -c warp-drive -i -t
"Listen on port 9090 locally, forwarding to 5432 in the pod",kubectl port-forward pod/e-commerce-pod 9090:5432
Set deployment proxy-service-deployment's service account to argocd,kubectl set serviceaccount deployment proxy-service-deployment argocd
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node app-node-6 -p $'spec:\n replicas: 3'
Display only the most recent 43 lines of output in pod cdn-service-pod,kubectl logs --tail=43 cdn-service-pod
Update image of all containers of daemonset nginx to 'alpine:3.14',kubectl set image daemonset nginx *=alpine:3.14
"Listen on port 9090 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 9090:5000
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 8000 5432
Update pod 'foo' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods foo app-
Set deployment authentication-service-deployment's service account to dashboard,kubectl set serviceaccount deployment authentication-service-deployment dashboard
Update a single-container pod's image version (tag) to v4,kubectl get pod web-app-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
"If the deployment named api-service-rs's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/api-service-rs
"Listen on a random port locally, forwarding to 8088 in the pod",kubectl port-forward pod/api-service-pod :8088
Update pod 'api' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods api env-
Create a deployment named grafana that runs the alpine image,kubectl create deployment grafana --image=alpine
"If the deployment named webapp-replicaset's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/webapp-replicaset
List a single pod in JSON output format,kubectl get -o json pod proxy-server-pod
Create a job with a command,kubectl create job audit-job --image=ethereum/client-go -- geth attach
Import environment from a secret,kubectl set env --from=secret/ldap-credentials-secret deployment/email-server-deployment
Set deployment authentication-service-deployment's service account to tiller,kubectl set serviceaccount deployment authentication-service-deployment tiller
Add a taint with key 'environment' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  environment=dev-node-4:PreferNoSchedule
"List deployments in JSON output format, in the ""beta-1.0"" version of the ""legacy-apps"" API group",kubectl get deployments.beta-1.0.legacy-apps -o json
"Check to see if I can get the job named ""backup-job"" in namespace ""staging""",kubectl auth can-i list jobs.batch/backup-job -n staging
Edit the service named 'scheduler-service',kubectl edit svc/scheduler-service
Copy /tmp/foo_dir from a remote pod to /tmp/bar_dir locally,kubectl cp argocd/payment-gateway-pod-19:/tmp/foo_dir /tmp/bar_dir
"Check to see if I can get the job named ""cache-warming-job"" in namespace ""default""",kubectl auth can-i list jobs.batch/cache-warming-job -n default
Get output from cyber-sleuth from pod auth-service-pod,kubectl attach auth-service-pod -c cyber-sleuth
"Create a single ingress called 'app1-ingress' that directs requests to site.com/bar to svc # svc1:8082 with a tls secret ""my-cert""","kubectl create ingress app1-ingress --rule=""site.com/bar=svc1:8082,tls=my-cert"""
"If the deployment named dev-environment-rs's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/dev-environment-rs
Create a new config map named global-config with specified keys instead of file basenames on disk,kubectl create configmap global-config --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/parameters/file2.txt
Create a new ClusterIP service named ldap-service-clusterip,kubectl create service clusterip ldap-service-clusterip --tcp=6379:5001
Return snapshot logs from container frontend-deployment-1 of a deployment named auth-service-pod,kubectl logs deployment/frontend-deployment -c auth-service-pod-1
Create a new secret named email-credentials-secret with keys for each file in folder bar,kubectl create secret generic email-credentials-secret --from-file=path/to/settings
"Create a job from a cron job named ""log-rotation""",kubectl create job test-job --from=cronjob/log-rotation
Scale a replica set named 'web' to 3,kubectl scale --replicas=3 rs/web
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-secrets deployment/mydeployment
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""backup-apps"" API group",kubectl get deployments.rc-1.1.0.backup-apps -o yaml
"Listen on port 8080 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 8080:3000
Create a job with a command,kubectl create job database-seeding-job --image=wordpress -- apache2ctl -D FOREGROUND
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod monitoring-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach monitoring-pod -c time-machine -i -t
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=9092:3306
Display only the most recent 3 lines of output in pod proxy-server-pod,kubectl logs --tail=3 proxy-server-pod
Get output from running the 'redis-cli' command in time-machine from pod frontend-pod,kubectl exec frontend-pod -c time-machine -- redis-cli
Get output from running the 'apk add curl' command in warp-drive from pod api-service-pod,kubectl exec api-service-pod -c warp-drive -- apk add curl
Get output from running the 'python --version' command in stardust-shuttle from pod api-service-pod,kubectl exec api-service-pod -c stardust-shuttle -- python --version
"Mark node ""monitoring-node-15"" as unschedulable",kubectl cordon monitoring-node-15
Get output from running the 'node' command in mycontainer from pod backend-pod,kubectl exec backend-pod -c mycontainer -- node
List one or more resources by their type and names,kubectl get rc/web service/email-service-rc pods/analytics-pod
"Listen on port 9090 locally, forwarding to 8888 in the pod",kubectl port-forward pod/cdn-service-pod 9090:8888
"Get output from running 'redis-server' command from the first pod of the deployment load-balancer-deployment, using the first container by default",kubectl exec deploy/load-balancer-deployment -- redis-server
Update pod 'cdn' with the label 'env' and the value 'development',kubectl label pods cdn env=development
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/database-pod
Create a new secret named docker-registry-secret with keys for each file in folder bar,kubectl create secret generic docker-registry-secret --from-file=path/to/parameters
Create a new ClusterIP service named notification-service-clusterip,kubectl create service clusterip notification-service-clusterip --tcp=5000:7000
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.admin-context.cluster star-cluster
Unset namespace in user-b-context context,kubectl config unset contexts.user-b-context.namespace
"Create a cluster role named ""admin_role"" with ResourceName specified",kubectl create clusterrole admin_role --verb=patch --resource=configmaps --resource-name=notification-service --resource-name=content-delivery
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/log-aggregator-pod 8081:5432
Get output from warp-drive from pod cdn-service-pod,kubectl attach cdn-service-pod -c warp-drive
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/cache-cluster-deployment -c cdn-service-pod-1
Get output from nebula-navigator from pod cdn-service-pod,kubectl attach cdn-service-pod -c nebula-navigator
"List deployments in YAML output format, in the ""custom-version"" version of the ""my-apps"" API group",kubectl get deployments.custom-version.my-apps -o yaml
Return snapshot logs from pod backend-pod with multi containers,kubectl logs backend-pod --all-containers=true
Set custom TLS server name to use for validation for the sun-cluster cluster entry,kubectl config set-cluster sun-cluster --tls-server-name=galaxy-cluster
"Set a deployments hazelcast container cpu limits to ""500m"" and memory to ""512Mi""","kubectl set resources deployment hazelcast -c=nginx --limits=cpu=500m,memory=512Mi"
List one or more resources by their type and names,kubectl get rc/web service/gateway-rc pods/backend-pod
"Get output from running the 'docker run -d ubuntu sleep 3600' command from pod mypod, using the first container by default",kubectl exec mypod -- docker run -d ubuntu sleep 3600
Return snapshot of previous terminated astro-container container logs from pod chat-app-pod,kubectl logs -p -c astro-container chat-app-pod
List one or more resources by their type and names,kubectl get rc/web service/monitoring-rc pods/vpn-service-pod
Set deployment email-server-deployment's service account to kube-scheduler,kubectl set serviceaccount deployment email-server-deployment kube-scheduler
Create a deployment named gateway that runs the alpine image and expose port 5001,kubectl create deployment gateway --image=alpine --port=5001
Return only the phase value of the specified pod,kubectl get -o template pod/email-service-pod --template={{.status.phase}}
Begin streaming the logs from all containers in pods defined by label project=project-alpha,kubectl logs -f -l project=project-alpha --all-containers=true
Copy :/tmp/foo local file to :/tmp/bar in a remote pod in namespace,kubectl cp :/tmp/foo kubeapps/api-server-pod-3::/tmp/bar
Create a copy of auth-service-pod changing all container images to php,kubectl debug auth-service-pod --copy-to=dgb-img --set-image=*=php
"Update a pod identified by type and name in ""preferences.json""",kubectl annotate -f preferences.json expiration-date='2024-12-31'
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/web-app-pod 8888:8888
"Listen on port 5432 locally, forwarding to 8000 in the pod",kubectl port-forward pod/web-app-pod 5432:8000
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/settings/file2.txt
Update pod 'web' by removing an annotation named 'description' if it exists # Does not require the --overwrite flag,kubectl annotate pods web description-
Set deployment authentication-service-deployment's service account to kube-controller-manager,kubectl set serviceaccount deployment authentication-service-deployment kube-controller-manager
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/database-deployment 3000 6379
Create a job with a command,kubectl create job cleanup --image=redis -- redis-server --version
Update pod 'frontend' with the label 'tier' and the value 'database',kubectl label pods frontend tier=database
Update pod 'monitoring' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods monitoring unhealthy-
Create a deployment with a command,kubectl create deployment jenkins-x --image=php -- php --version
"Listen on port 3000 on all addresses, forwarding to 5432 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 3000:5432
"Create a service for a replicated python using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs python --port=9000 --target-port=808800
Add a taint with key 'disktype' on nodes having label release=beta,kubectl taint node -l release=beta  disktype=k8s-node-1:PreferNoSchedule
"If the deployment named payment-service-rs's current size is 5, scale mysql to 5",kubectl scale --current-replicas=5 --replicas=5 deployment/payment-service-rs
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=on-prem-cluster
"Embed client certificate data in the ""security-user"" entry",kubectl config set-credentials security-user --client-certificate=~/.kube/admin.crt --embed-certs=true
Create a deployment with a command,kubectl create deployment app --image=python -- pip --version
"Listen on port 8888 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/security-service-pod 8888:8000"
Start a ethereum/client-go pod and let the container expose port 9091,kubectl run hazelcast --image=ethereum/client-go --port=9091
"Listen on port 5000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 5000:9090
"Create or update exec auth plugin environment variables for the ""k8s-admin"" entry",kubectl config set-credentials k8s-admin --exec-env=key1=val1 --exec-env=key2=val2
"Listen on port 3000 on localhost and selected IP, forwarding to 3000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/chat-app-pod 3000:3000"
Begin streaming the logs of the nano-bot container in pod log-aggregator-pod,kubectl logs -f -c nano-bot log-aggregator-pod
Create a new resource quota named best-effort,kubectl create quota best-effort --hard=pods=100 --scopes=BestEffort
Print the supported API resources sorted by a column,kubectl api-resources --sort-by=namespaced
Set custom TLS server name to use for validation for the kube-cluster-1 cluster entry,kubectl config set-cluster kube-cluster-1 --tls-server-name=dev-cluster
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=my-k8s-cluster
Create a new secret named monitoring-credentials-secret from an env file,kubectl create secret generic monitoring-credentials-secret --from-env-file=path/to/settings.env
Scale stateful set named 'web' to 3,kubectl scale --replicas=3 statefulset/web
Disable cert checking for the dev cluster entry,kubectl config set-cluster data-cluster --insecure-skip-tls-verify=true
"List deployments in JSON output format, in the ""dev-2.2.0"" version of the ""third-party-apps"" API group",kubectl get deployments.dev-2.2.0.third-party-apps -o json
Embed certificate authority data for the e2e cluster entry,kubectl config set-cluster e2e --embed-certs --certificate-authority=~/.kube/app-cluster/kubernetes.ca.crt
Set deployment analytics-platform-deployment's service account to cert-manager,kubectl set serviceaccount deployment analytics-platform-deployment cert-manager
Create a copy of vpn-service-pod changing all container images to redis,kubectl debug vpn-service-pod --copy-to=my-debugger --set-image=*=redis
Display only the most recent 3 lines of output in pod gateway-pod,kubectl logs --tail=3 gateway-pod
Delete the dev-user user,kubectl config delete-user dev-user
"Update pod 'foo' with the annotation 'expiration-date' and the value '2024-12-31', overwriting any existing value",kubectl annotate --overwrite pods foo expiration-date='2024-12-31'
View the rollout history of a deployment,kubectl rollout history deployment/app-v2
"Listen on port 6379 locally, forwarding to 8088 in the pod",kubectl port-forward pod/mypod 6379:8088
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=5001 --target-port=300000
"Delete pods and services with same names ""security"" and ""media-stream""","kubectl delete pod,service security media-stream"
"Listen on port 6379 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 6379:8888"
Begin streaming the logs from all containers in pods defined by label app=web-app,kubectl logs -f -l app=web-app --all-containers=true
Update pod 'api' with the label 'release' and the value 'v1.0',kubectl label pods api release=v1.0
Create a job with a command,kubectl create job security-scan-job --image=ruby -- gem --version
"Listen on port 8081 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8081:8088
Return snapshot logs from container order-processing-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/order-processing-deployment -c frontend-pod-1
"Run a proxy to the Kubernetes API server on port 6379, serving static content from ./local/www/",kubectl proxy --port=6379 --www=./local/www/
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=kube-cluster-1
Import specific keys from a config map,kubectl set env --keys=api_key --from=configmap/ui-config deployment/mydeployment
Return snapshot logs from container email-server-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/email-server-deployment -c proxy-server-pod-1
Return snapshot logs from container mydeployment-1 of a deployment named backend-pod,kubectl logs deployment/mydeployment -c backend-pod-1
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod security-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach security-service-pod -c nano-bot -i -t
Set custom TLS server name to use for validation for the star-cluster cluster entry,kubectl config set-cluster star-cluster --tls-server-name=edge-cluster
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 5000 3000
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""apps"" API group",kubectl get deployments.rc-1.1.0.apps -o yaml
"Listen on port 8888 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 8888:6379
Copy :/tmp/foo from a remote pod to /tmp/bar locally,kubectl cp logging/web-app-pod-1::/tmp/foo /tmp/bar
Display only the most recent 5 lines of output in pod api-service-pod,kubectl logs --tail=5 api-service-pod
"List deployments in YAML output format, in the ""v1.1.1"" version of the ""legacy-apps"" API group",kubectl get deployments.v1.1.1.legacy-apps -o yaml
"Update pod 'vpn' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods vpn expiration-date='2024-12-31'
"Listen on port 8080 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/cdn-service-pod 8080:8088
"Get output from running 'node' command from the first pod of the deployment log-aggregator-deployment, using the first container by default",kubectl exec deploy/log-aggregator-deployment -- node
Switch to raw terminal mode; sends stdin to 'bash' in nano-bot from pod mypod # and sends stdout/stderr from 'bash' back to the client,kubectl attach mypod -c nano-bot -i -t
Return snapshot of previous terminated ruby container logs from pod auth-service-pod,kubectl logs -p -c ruby auth-service-pod
Get output from running the 'redis-server' command in code-explorer from pod monitoring-pod,kubectl exec monitoring-pod -c code-explorer -- redis-server
"Get output from running 'elasticsearch --version' command from the first pod of the deployment web-app-deployment, using the first container by default",kubectl exec deploy/web-app-deployment -- elasticsearch --version
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8088 8888
"If the deployment named db-migration-replicaset's current size is 1, scale mysql to 1",kubectl scale --current-replicas=1 --replicas=1 deployment/db-migration-replicaset
"Auto scale a deployment ""proxy-server"", with the number of pods between 6 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment proxy-server --min=6 --max=8
Remove from node 'kube-master-9' the taint with key 'special' and effect 'NoSchedule' if one exists,kubectl taint nodes kube-master-9 special:NoSchedule-
Create a new secret named oauth-secret using a combination of a file and a literal,kubectl create secret generic oauth-secret --from-file=ssh-privatekey=path/to/id_rsa --from-literal=passphrase=topsecret
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/analytics-pod 8888:8888
Create a new ExternalName service named external-email-service,kubectl create service externalname external-email-service --external-name test-site.org
Use the context for the e2e cluster,kubectl config use-context e2e
Get output from running the 'mongo' command in time-machine from pod auth-service-pod,kubectl exec auth-service-pod -c time-machine -- mongo
Return snapshot of previous terminated code-explorer container logs from pod proxy-server-pod,kubectl logs -p -c code-explorer proxy-server-pod
Import environment from a config map with a prefix,kubectl set env --from=configmap/app-settings --prefix=MYSQL_ deployment/backend-microservice-deployment
Set custom TLS server name to use for validation for the cluster-gamma cluster entry,kubectl config set-cluster cluster-gamma --tls-server-name=testing-cluster
Update all deployments' and rc's nginx container's image to 'postgres:13.4',"kubectl set image deployments,rc postgres=postgres:13.4 --all"
Copy ~/.config/kube local file to /tmp/bar_dir in a remote pod in namespace,kubectl cp ~/.config/kube kube-dns/message-broker-pod-15:/tmp/bar_dir
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/api-service-pod 3000 8081
Create a new NodePort service named database-nodeport,kubectl create service nodeport database-nodeport --tcp=8084:8010
Set the last-applied-configuration of a resource to match the contents of a file,kubectl apply set-last-applied -f params.yaml
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/log-aggregator-pod
"Auto scale a deployment ""cdn"", with the number of pods between 7 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment cdn --min=7 --max=13
Get output from time-machine from pod proxy-service-pod,kubectl attach proxy-service-pod -c time-machine
Add a taint with key 'app' on nodes having label zone=us-east-1,kubectl taint node -l zone=us-east-1  app=k8s-node-1:PreferNoSchedule
"Update pod 'email' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods email monitoring-tool='Prometheus'
Use the context for the data-cluster cluster,kubectl config use-context data-cluster
Get output from running the 'nginx' command in quantum-quark from pod frontend-pod,kubectl exec frontend-pod -c quantum-quark -- nginx
Embed certificate authority data for the e2e cluster entry,kubectl config set-cluster e2e --embed-certs --certificate-authority=~/.kube/dev-cluster/kubernetes.ca.crt
Create a new secret named oauth-secret from an env file,kubectl create secret generic oauth-secret --from-env-file=path/to/profiles.env
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/api-service-pod 5000 9090
Create a new secret named jwt-secret with keys for each file in folder bar,kubectl create secret generic jwt-secret --from-file=path/to/profiles
Create a new NodePort service named proxy-service-nodeport,kubectl create service nodeport proxy-service-nodeport --tcp=6379:8088
Remove from node 'kube-master-9' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes kube-master-9 cpu-type:NoSchedule-
Add a taint with key 'datacenter' on nodes having label version=v1.0.0,kubectl taint node -l version=v1.0.0  datacenter=db-node-7:PreferNoSchedule
Set deployment search-engine-deployment's service account to spinnaker,kubectl set serviceaccount deployment search-engine-deployment spinnaker
Update pod 'log-aggregator' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods log-aggregator unhealthy-
Return snapshot logs from container search-engine-deployment-1 of a deployment named cdn-service-pod,kubectl logs deployment/search-engine-deployment -c cdn-service-pod-1
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/log-config deployment/search-engine-deployment
"Delete pods and services with same names ""log-aggregator"" and ""api""","kubectl delete pod,service log-aggregator api"
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/db-config deployment/api-server-deployment
Set the cluster field in the my-context context to app-cluster,kubectl config set contexts.client-1-context.cluster app-cluster
Show all logs from pod monitoring-pod written in the last hour,kubectl logs --since=1h monitoring-pod
Import environment from a secret,kubectl set env --from=secret/aws-credentials-secret deployment/web-app-deployment
Set the client-key-data field in the john.doe user using --set-raw-bytes option,kubectl config set users.john.doe.client-key-data cert_data_here --set-raw-bytes=true
"Listen on port 3000 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 3000:9090
Get output from time-machine from pod api-service-pod,kubectl attach api-service-pod -c time-machine
Create a job with a command,kubectl create job security-scan-job --image=postgres -- pg_dump --version
Update pod 'payment' only if the resource is unchanged from version 1,kubectl label pods payment status=unhealthy --resource-version=1
"Listen on port 5000 on all addresses, forwarding to 6379 in the pod",kubectl port-forward --address 0.0.0.0 pod/mypod 5000:6379
"Listen on a random port locally, forwarding to 8081 in the pod",kubectl port-forward pod/log-aggregator-pod :8081
"List deployments in YAML output format, in the ""v2.0.0"" version of the ""internal-apps"" API group",kubectl get deployments.v2.0.0.internal-apps -o yaml
Get the documentation of a specific field of a resource,kubectl explain resource=pods.status.podIP
"Run a proxy to the Kubernetes API server, changing the API prefix to k8s-api # This makes e.g. the pods API available at localhost:8001/k8s-api/v1/pods/",kubectl proxy --api-prefix=/k8s-api
Copy :/tmp/foo_dir local directory to /tmp/bar_dir in a remote pod in the default namespace,kubectl cp :/tmp/foo_dir message-broker-pod-15:/tmp/bar_dir
Remove from node 'storage-node-13' the taint with key 'cpu-type' and effect 'NoSchedule' if one exists,kubectl taint nodes storage-node-13 cpu-type:NoSchedule-
"Update node 'edge-node-10' with a taint with key 'hardware' and value 'gpu' and effect 'NoExecute' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes edge-node-10 hardware=gpu:NoExecute
Create a new namespace named kube-public,kubectl create namespace kube-public
Embed certificate authority data for the e2e cluster entry,kubectl config set-cluster e2e --embed-certs --certificate-authority=~/.kube/prod-cluster/kubernetes.ca.crt
"Listen on port 5000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/e-commerce-pod 5000:8080
Create a new config map named app-config-dev with key1=config1 and key2=config2,kubectl create configmap app-config-dev --from-literal=properties=config1 --from-literal=key1=config2
"Listen on port 8088 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/analytics-pod 8088:8088
"Listen on port 5000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod 5000:8888
Update all deployments' and rc's nginx container's image to 'php:7.4.22',"kubectl set image deployments,rc php=php:7.4.22 --all"
Return snapshot logs from container search-engine-deployment-1 of a deployment named chat-app-pod,kubectl logs deployment/search-engine-deployment -c chat-app-pod-1
"Update a pod identified by type and name in ""params.json""",kubectl annotate -f params.json compliance-level=PCI-DSS
"Delete pods and services with same names ""frontend"" and ""database""","kubectl delete pod,service frontend database"
Get output from running the 'node' command in rocket-ranger from pod payment-gateway-pod,kubectl exec payment-gateway-pod -c rocket-ranger -- node
Add a taint with key 'special' on nodes having label app-type=microservice,kubectl taint node -l app-type=microservice  special=k8s-node-1:PreferNoSchedule
Delete the my-k8s-cluster cluster,kubectl config delete-cluster my-k8s-cluster
"Get output from running the 'elasticsearch-plugin --list' command from pod mypod, using the first container by default",kubectl exec mypod -- elasticsearch-plugin --list
Create a new config map named kube-system-config from the key=value pairs in the file,kubectl create configmap kube-system-config --from-file=path/to/properties
Use an alternative editor,"KUBE_EDITOR=""emacs"" kubectl edit svc/email-service"
"Update pod 'email' with the annotation 'team' and the value 'frontend-team', overwriting any existing value",kubectl annotate --overwrite pods email team='frontend-team'
Return snapshot logs from container notification-handler-deployment-1 of a deployment named backend-pod,kubectl logs deployment/notification-handler-deployment -c backend-pod-1
Approve CSR 'csr-mongo-13',kubectl certificate approve csr-mongo-13
Update pod 'backend' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods backend release-
Create a cron job with a command,"kubectl create cronjob log-rotation --image=redis --schedule=""*/1 * * * *"" -- redis-server --version"
Set the resource request and limits for all containers in wordpress,"kubectl set resources deployment wordpress --limits=cpu=200m,memory=512Mi --requests=cpu=50m,memory=4Gi"
"Delete pods and services with same names ""foo"" and ""analytics""","kubectl delete pod,service foo analytics"
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in the pod",kubectl port-forward pod/analytics-pod 5000 8080
"Update a pod identified by type and name in ""docker-registry.yaml""",kubectl annotate -f docker-registry.yaml security-scan-status=pass
Create a pod disruption budget named api-service-pdb that will select all pods with the app=rails label # and require at least one of them being available at any point in time,kubectl create poddisruptionbudget api-service-pdb --selector=app=rails --min-available=1
Get output from running the 'node' command in lunar-launcher from pod proxy-service-pod,kubectl exec proxy-service-pod -c lunar-launcher -- node
Edit the service named 'gateway-service',kubectl edit svc/gateway-service
"Set a deployments runtime container cpu limits to ""1"" and memory to ""128Mi""","kubectl set resources deployment runtime -c=nginx --limits=cpu=1,memory=128Mi"
"Update pod 'cdn' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods cdn custom-label='my-custom-value'
"Start a alpine pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=alpine --overrides='{ ""apiVersion"": ""v1.1.1"", ""spec"": { ... } }'"
Remove from node 'k8s-node-1' the taint with key 'datacenter' and effect 'NoExecute' if one exists,kubectl taint nodes k8s-node-1 datacenter:NoExecute-
Add to node 'backup-node-14' a taint with key 'dedicated' and no value,kubectl taint nodes backup-node-14 dedicated:NoSchedule
"Auto scale a deployment ""security"", with the number of pods between 6 and 8, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment security --min=6 --max=8
"Listen on port 5000 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/database-service 5000:https
Create a deployment named worker that runs the mcr.microsoft.com/dotnet/core/runtime image and expose port 8080,kubectl create deployment worker --image=mcr.microsoft.com/dotnet/core/runtime --port=8080
Copy /tmp/foo local file to /tmp/bar in a remote pod in namespace,kubectl cp /tmp/foo kube-dns/message-broker-pod-15:/tmp/bar
"If the deployment named backend-service-replicaset's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/backend-service-replicaset
Apply resources from a directory containing kustomization.yaml - e.g. settings/kustomization.yaml,kubectl apply -k settings/
"Create a service for a replicated php, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc php --port=8888 --target-port=844300
Update image of all containers of daemonset staging to 'nginx:1.21.3',kubectl set image daemonset staging *=nginx:1.21.3
Begin streaming the logs of the time-machine container in pod e-commerce-pod,kubectl logs -f -c time-machine e-commerce-pod
"Listen on ports 8081 and 6000 locally, forwarding data to/from ports 3000 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 8081 3000
List one or more resources by their type and names,kubectl get rc/web service/media-stream-rc pods/analytics-pod
Create a new ClusterIP service named api-service-clusterip,kubectl create service clusterip api-service-clusterip --tcp=5001:8888
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=edge-cluster
"Delete pods and services with same names ""api"" and ""foo""","kubectl delete pod,service api foo"
Update image of all containers of daemonset prod to 'python:3.9.7',kubectl set image daemonset prod *=python:3.9.7
"Listen on port 3000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/web-app-pod 3000:5000"
Create a new ClusterIP service named order-service-clusterip,kubectl create service clusterip order-service-clusterip --tcp=8443:5000
Update pod 'proxy-server' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods proxy-server component-
"Listen on port 5000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 5000:3000
Create a pod disruption budget named frontend-pdb that will select all pods with the role=worker label # and require minimum one of them being available at any point in time,kubectl create poddisruptionbudget frontend-pdb --selector=role=worker --min-available=1
Add a taint with key 'hardware' on nodes having label team=devops,kubectl taint node -l team=devops  hardware=backup-node-14:PreferNoSchedule
Create a new config map named namespace-config with specified keys instead of file basenames on disk,kubectl create configmap namespace-config --from-file=conf=/path/to/properties/file1.txt --from-file=data=/path/to/preferences/file2.txt
"Delete pods and services with same names ""proxy-server"" and ""proxy""","kubectl delete pod,service proxy-server proxy"
Note: --prune is still in Alpha # Apply the configuration in manifest.yaml that matches label service=auth and delete all other resources that are not in the file and match label app=nginx,kubectl apply --prune -f manifest.yaml -l service=auth
Create a new secret named private-key-secret with key1=supersecret and key2=topsecret,kubectl create secret generic private-key-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/kube-system-config deployment/email-server-deployment
Update pod 'api' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods api app-
Delete all pods,kubectl delete pods --all
Get output from running the 'geth' command in quantum-quark from pod frontend-pod,kubectl exec frontend-pod -c quantum-quark -- geth
Update image of all containers of daemonset services to 'java:11.0.12',kubectl set image daemonset services *=java:11.0.12
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/web-app-pod 5000 8888
Update image of all containers of daemonset nginx to 'redis:6.2.5',kubectl set image daemonset nginx *=redis:6.2.5
"If the deployment named web's current size is 7, scale mysql to 3",kubectl scale --current-replicas=7 --replicas=3 deployment/web
Create a copy of vpn-service-pod adding a debug container and changing container images,"kubectl debug vpn-service-pod -it --copy-to=debug-image-web --image=debian --set-image=worker=my-custom-worker:1.2.3,web=nginx:latest"
Create a new secret named ldap-credentials-secret with keys for each file in folder bar,kubectl create secret generic ldap-credentials-secret --from-file=path/to/configs
Use an alternative editor,"KUBE_EDITOR=""vi"" kubectl edit svc/notification-service"
"If the deployment named mysql's current size is 3, scale mysql to 1",kubectl scale --current-replicas=3 --replicas=1 deployment/mysql
"Listen on port 6379 on localhost and selected IP, forwarding to 6379 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 6379:6379"
"List all allowed actions in namespace ""development""",kubectl auth can-i --list --namespace=development
Add a taint with key 'hardware' on nodes having label service=auth,kubectl taint node -l service=auth  hardware=backup-node-14:PreferNoSchedule
Edit the service named 'logging-service',kubectl edit svc/logging-service
"Listen on port 8081 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/web-app-pod 8081:5000
Start a confluentinc/cp-kafka pod and let the container expose port 27017,kubectl run hazelcast --image=confluentinc/cp-kafka --port=27017
"Listen on port 8000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/e-commerce-pod 8000:8888"
Create a job with a command,kubectl create job batch-processing --image=php -- composer --version
List one or more resources by their type and names,kubectl get rc/web service/security-service-rc pods/vpn-service-pod
Update pod 'web' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods web unhealthy-
Create a new secret named private-key-secret with keys for each file in folder bar,kubectl create secret generic private-key-secret --from-file=path/to/configurations
"Get output from running 'docker run -d ubuntu sleep 3600' command from the first pod of the deployment load-balancer-deployment, using the first container by default",kubectl exec deploy/load-balancer-deployment -- docker run -d ubuntu sleep 3600
Display only the most recent 5 lines of output in pod media-stream-pod,kubectl logs --tail=5 media-stream-pod
Create a new secret named ssl-key-secret from an env file,kubectl create secret generic ssl-key-secret --from-env-file=path/to/preferences.env
"Set a deployments alpine container cpu limits to ""2"" and memory to ""1Gi""","kubectl set resources deployment alpine -c=nginx --limits=cpu=2,memory=1Gi"
Create a copy of chat-app-pod changing the command of cyber-sleuth,kubectl debug chat-app-pod -it --copy-to=my-debugger --container=cyber-sleuth -- sh
Create a new LoadBalancer service named e-commerce-lb,kubectl create service loadbalancer e-commerce-lb --tcp=8010:27017
Add to node 'kube-master-9' a taint with key 'cpu-type' and no value,kubectl taint nodes kube-master-9 cpu-type:NoSchedule
Disable cert checking for the dev cluster entry,kubectl config set-cluster moon-cluster --insecure-skip-tls-verify=true
Start a nginx pod and let the container expose port 9092,kubectl run hazelcast --image=nginx --port=9092
"Listen on port 3000 locally, forwarding to 6379 in the pod",kubectl port-forward pod/log-aggregator-pod 3000:6379
"Create a cluster role named ""foo"" with ResourceName specified",kubectl create clusterrole foo --verb=list --resource=pods --resource-name=file-uploader --resource-name=image-processor
Set deployment payment-processor-deployment's service account to elasticsearch,kubectl set serviceaccount deployment payment-processor-deployment elasticsearch
Import specific keys from a config map,kubectl set env --keys=my-example-key --from=configmap/monitoring-config deployment/payment-processor-deployment
"Listen on port 8088 locally, forwarding to 8000 in the pod",kubectl port-forward pod/security-service-pod 8088:8000
"Delete pods and services with same names ""auth"" and ""email""","kubectl delete pod,service auth email"
"Get output from running the 'jenkins --version' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- jenkins --version
"Listen on port 8081 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/proxy-server-pod 8081:3000
Create a deployment named nats that runs the ruby image,kubectl create deployment nats --image=ruby
Return snapshot logs from first container of a job named deploy-artifacts-job,kubectl logs job/deploy-artifacts-job
Begin streaming the logs of the nano-bot container in pod mypod,kubectl logs -f -c nano-bot mypod
Create a new ClusterIP service named log-service-clusterip,kubectl create service clusterip log-service-clusterip --tcp=8081:3306
Return snapshot logs from container order-processing-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/order-processing-deployment -c media-stream-pod-1
List one or more resources by their type and names,kubectl get rc/web service/proxy-server-rc pods/e-commerce-pod
"Listen on port 5000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 5000:5000"
Remove from node 'app-node-6' all the taints with key 'disktype',kubectl taint nodes app-node-6 disktype-
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 5432 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/log-aggregator-deployment 5432 5432
Set the cluster field in the my-context context to my-k8s-cluster,kubectl config set contexts.app-2-context.cluster my-k8s-cluster
"Listen on port 8080 locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod 8080:5000
Copy ~/.config/kube from a remote pod to /tmp/bar_dir locally,kubectl cp istio-system/auth-service-pod-11:~/.config/kube /tmp/bar_dir
"Listen on port 8000 locally, forwarding to 5432 in the pod",kubectl port-forward pod/backend-pod 8000:5432
Remove from node 'db-node-7' the taint with key 'hardware' and effect 'NoExecute' if one exists,kubectl taint nodes db-node-7 hardware:NoExecute-
"Listen on port 8000 on localhost and selected IP, forwarding to 5000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8000:5000"
"Update pod 'foo' with the annotation 'monitoring-tool' and the value 'Prometheus', overwriting any existing value",kubectl annotate --overwrite pods foo monitoring-tool='Prometheus'
"Get output from running the 'go version' command from pod api-service-pod, using the first container by default",kubectl exec api-service-pod -- go version
Get output from running the 'python' command in rocket-ranger from pod proxy-server-pod,kubectl exec proxy-server-pod -c rocket-ranger -- python
Create a job with a command,kubectl create job report-generation-job --image=ruby -- irb
"List deployments in YAML output format, in the ""stable-2.0.0"" version of the ""third-party-apps"" API group",kubectl get deployments.stable-2.0.0.third-party-apps -o yaml
"Listen on port 8088 locally, forwarding to 5432 in the pod",kubectl port-forward pod/cdn-service-pod 8088:5432
Get output from running the 'composer --version' command in code-explorer from pod gateway-pod,kubectl exec gateway-pod -c code-explorer -- composer --version
List one or more resources by their type and names,kubectl get rc/web service/payment-gateway-rc pods/web-app-pod
"Delete pods and services with same names ""web"" and ""cdn""","kubectl delete pod,service web cdn"
Create a job with a command,kubectl create job indexing --image=node -- node --version
"Get output from running 'php --version' command from the first pod of the service backend-service, using the first container by default",kubectl exec svc/backend-service -- php --version
"List deployments in YAML output format, in the ""v3.0.0"" version of the ""custom-deployments"" API group",kubectl get deployments.v3.0.0.custom-deployments -o yaml
Import specific keys from a config map,kubectl set env --keys=config_file_path --from=configmap/app-config deployment/search-engine-deployment
"Update a pod identified by type and name in ""conf.json""",kubectl annotate -f conf.json scaling-policy=auto-horizontal-scaling
"Listen on port 5432 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/api-service-pod 5432:8888"
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node node-1 -p $'spec:\n replicas: 3'
"Update node 'dev-node-4' with a taint with key 'cpu-type' and value 'x86' and effect 'NoSchedule' # If a taint with that key and effect already exists, its value is replaced as specified",kubectl taint nodes dev-node-4 cpu-type=x86:NoSchedule
Return snapshot of previous terminated nano-bot container logs from pod log-aggregator-pod,kubectl logs -p -c nano-bot log-aggregator-pod
Add a taint with key 'app' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  app=db-node-7:PreferNoSchedule
Set deployment proxy-service-deployment's service account to kube-proxy,kubectl set serviceaccount deployment proxy-service-deployment kube-proxy
"Set a deployments python container cpu limits to ""200m"" and memory to ""512Mi""","kubectl set resources deployment python -c=nginx --limits=cpu=200m,memory=512Mi"
Add a taint with key 'zone' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  zone=dev-node-4:PreferNoSchedule
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""web-apps"" API group",kubectl get deployments.rc-1.1.0.web-apps -o json
"Update pod 'database' with the annotation 'owner' and the value 'alice smith' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods database owner='alice smith'
"Listen on port 5000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/api-service-pod 5000:5000
Describe pods by label team=devops,kubectl describe po -l team=devops
Add to node 'node-1' a taint with key 'zone' and no value,kubectl taint nodes node-1 zone:NoSchedule
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node backup-node-14 -p '{""spec"":{""containers"":[{""name"":""container-name"", ""resources"":{""limits"":{""cpu"":""200m""}}}]}'"
List one or more resources by their type and names,kubectl get rc/web service/e-commerce-rc pods/vpn-service-pod
"Remove exec auth plugin environment variables for the ""developer"" entry",kubectl config set-credentials developer --exec-env=var-to-remove-
"Listen on ports 8080 and 6000 locally, forwarding data to/from ports 5000 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/mydeployment 8080 5000
Create a new ExternalName service named external-cloud-storage-service,kubectl create service externalname external-cloud-storage-service --external-name tutorial-ai.ai
"Update pod 'log-aggregator' with the annotation 'owner' and the value 'alice-smith', overwriting any existing value",kubectl annotate --overwrite pods log-aggregator owner='alice-smith'
Update pod 'gateway' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods gateway role-
"Listen on port 8888 locally, forwarding to 9090 in the pod",kubectl port-forward pod/web-app-pod 8888:9090
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node kube-master-9 -p $'spec:\n containers:\n- name: container-name\n  resources:\n    limits:\n      cpu: 200m'
"Listen on port 5432 locally, forwarding to 8088 in the pod",kubectl port-forward pod/log-aggregator-pod 5432:8088
Create a new secret named tls-certificate-secret with key1=supersecret and key2=topsecret,kubectl create secret generic tls-certificate-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
Return snapshot logs from container api-server-deployment-1 of a deployment named frontend-pod,kubectl logs deployment/api-server-deployment -c frontend-pod-1
Add a taint with key 'dedicated' on nodes having label project=project-alpha,kubectl taint node -l project=project-alpha  dedicated=edge-node-10:PreferNoSchedule
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/backend-pod
Start a golang pod and let the container expose port 8082,kubectl run hazelcast --image=golang --port=8082
Start a node pod and let the container expose port 9090,kubectl run hazelcast --image=node --port=9090
Scale a replica set named 'api-service-rs' to 5,kubectl scale --replicas=5 rs/api-service-rs
Get output from astro-container from pod proxy-service-pod,kubectl attach proxy-service-pod -c astro-container
Create a job with a command,kubectl create job security-scan-job --image=amazonlinux -- bash
Add a taint with key 'workload' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  workload=storage-node-13:PreferNoSchedule
"Listen on port 8081 locally, forwarding to 5432 in the pod",kubectl port-forward pod/chat-app-pod 8081:5432
"Listen on port 8888 locally, forwarding to 8088 in the pod",kubectl port-forward pod/log-aggregator-pod 8888:8088
"Create a cluster role name ""bar"" with NonResourceURL specified","kubectl create clusterrole ""bar"" --verb=get --non-resource-url=/port-forward"
Set the last-applied-configuration of a resource to match the contents of a file,kubectl apply set-last-applied -f settings.yaml
"Create a role named ""reader"" with ResourceName specified",kubectl create role reader --verb=proxy --resource=pods --resource-name=monitoring-prometheus --resource-name=queue-consumer
Begin streaming the logs of the cyber-sleuth container in pod vpn-service-pod,kubectl logs -f -c cyber-sleuth vpn-service-pod
Update image of all containers of daemonset namespace- to 'java:11.0.12',kubectl set image daemonset namespace-3 *=java:11.0.12
Begin streaming the logs of the rocket-ranger container in pod log-aggregator-pod,kubectl logs -f -c rocket-ranger log-aggregator-pod
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/alpine
Add a taint with key 'disktype' on nodes having label instance=app-instance-1,kubectl taint node -l instance=app-instance-1  disktype=dev-node-4:PreferNoSchedule
"Start a redis pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=redis --overrides='{ ""apiVersion"": ""beta-1.0"", ""spec"": { ... } }'"
Scale a replica set named 'prod-app-rs' to 3,kubectl scale --replicas=3 rs/prod-app-rs
Create a copy of auth-service-pod changing all container images to postgres,kubectl debug auth-service-pod --copy-to=debug-image-1 --set-image=*=postgres
Embed certificate authority data for the star-cluster cluster entry,kubectl config set-cluster star-cluster --embed-certs --certificate-authority=~/.kube/cluster-gamma/kubernetes.ca.crt
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8888 9090
"Listen on port 8888 locally, forwarding to 8888 in the pod",kubectl port-forward pod/frontend-pod 8888:8888
"Enable the Google Compute Platform auth provider for the ""prod-user"" entry",kubectl config set-credentials prod-user --auth-provider=gcp
Create a new NodePort service named web-app-nodeport,kubectl create service nodeport web-app-nodeport --tcp=8084:8000
"List deployments in YAML output format, in the ""rc-1.1.0"" version of the ""alpha-apps"" API group",kubectl get deployments.rc-1.1.0.alpha-apps -o yaml
"Listen on port 8088 locally, forwarding to 3000 in the pod",kubectl port-forward pod/web-app-pod 8088:3000
Switch to raw terminal mode; sends stdin to 'bash' in time-machine from pod web-app-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach web-app-pod -c time-machine -i -t
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.v2.1.0.sandbox-apps -o json
"List deployments in JSON output format, in the ""feature-branch-2.3.0"" version of the ""sandbox-apps"" API group",kubectl get deployments.feature-branch-2.3.0.sandbox-apps -o json
Use the context for the dev-cluster cluster,kubectl config use-context dev-cluster
Return only the phase value of the specified pod,kubectl get -o template pod/log-aggregator-pod --template={{.status.phase}}
Create a job with a command,kubectl create job backup --image=postgres -- postgres
Update deployment 'notification-handler-deployment' with a new environment variable,kubectl set env deployment/notification-handler-deployment DEBUG=true
Create a new config map named namespace-config based on folder data,kubectl create configmap namespace-config --from-file=path/to/data
"Listen on port 8088 locally, forwarding to 3000 in the pod",kubectl port-forward pod/mypod 8088:3000
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/db-config deployment/payment-processor-deployment
Update deployment 'load-balancer-deployment' with a new environment variable,kubectl set env deployment/load-balancer-deployment MAX_CONNECTIONS=100
"Check to see if I can get the job named ""cleanup-job"" in namespace ""testing""",kubectl auth can-i list jobs.batch/cleanup-job -n testing
"Create a service for a replicated alpine, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc alpine --port=8084 --target-port=543200
Create a new NodePort service named backend-nodeport,kubectl create service nodeport backend-nodeport --tcp=8000:8083
"Start a confluentinc/cp-kafka pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=confluentinc/cp-kafka --overrides='{ ""apiVersion"": ""v3.0.0"", ""spec"": { ... } }'"
View the details of daemonset revision 3,kubectl rollout history daemonset/namespace-3 --revision=3
Start a mcr.microsoft.com/dotnet/core/runtime pod and let the container expose port 8084,kubectl run hazelcast --image=mcr.microsoft.com/dotnet/core/runtime --port=8084
Display only the most recent 5 lines of output in pod monitoring-pod,kubectl logs --tail=5 monitoring-pod
"Listen on port 5432 on all addresses, forwarding to 9090 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 5432:9090
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 8888 and 6000 in the pod",kubectl port-forward pod/e-commerce-pod 5432 8888
Roll back to daemonset revision 1,kubectl rollout undo daemonset/test --to-revision=1
Create a job with a command,kubectl create job monitoring-job --image=ruby -- irb
"Get output from running 'ruby --version' command from the first pod of the service analytics-service, using the first container by default",kubectl exec svc/analytics-service -- ruby --version
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.dev-context.cluster data-cluster
"Partially update a node using a strategic merge patch, specifying the patch as JSON","kubectl patch node dev-node-4 -p '{""spec"":{""containers"":[{""name"":""container-name"", ""resources"":{""limits"":{""cpu"":""200m""}}}]}'"
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/payment-service"
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-identity-provider-service
Start a golang pod and let the container expose port 8089,kubectl run hazelcast --image=golang --port=8089
"Update pod 'database' with the annotation 'custom-label' and the value 'my-custom-value', overwriting any existing value",kubectl annotate --overwrite pods database custom-label='my-custom-value'
"If the deployment named webapp-replicaset's current size is 7, scale mysql to 1",kubectl scale --current-replicas=7 --replicas=1 deployment/webapp-replicaset
Update a single-container pod's image version (tag) to v4,kubectl get pod frontend-pod -o yaml | sed 's/\(image: myimage\):.*$/\1:v4/' | kubectl replace -f -
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 6379 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 5000 6379
"Listen on port 5432 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 5432:8080
Import specific keys from a config map,kubectl set env --keys=MAX_CONNECTIONS --from=configmap/namespace-config deployment/backend-microservice-deployment
Return snapshot logs from container cache-cluster-deployment-1 of a deployment named e-commerce-pod,kubectl logs deployment/cache-cluster-deployment -c e-commerce-pod-1
Get output from running the 'go' command in mycontainer from pod database-pod,kubectl exec database-pod -c mycontainer -- go
"List deployments in YAML output format, in the ""v2.1.0"" version of the ""web-apps"" API group",kubectl get deployments.v2.1.0.web-apps -o yaml
"List deployments in YAML output format, in the ""custom-version"" version of the ""testing-apps"" API group",kubectl get deployments.custom-version.testing-apps -o yaml
Update image of all containers of daemonset prod to 'wordpress:5.8.1',kubectl set image daemonset prod *=wordpress:5.8.1
Add a taint with key 'dedicated' on nodes having label feature=feature-xyz,kubectl taint node -l feature=feature-xyz  dedicated=app-node-6:PreferNoSchedule
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named backend-pod,kubectl logs deployment/analytics-platform-deployment -c backend-pod-1
"Start a jenkins pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=jenkins --overrides='{ ""apiVersion"": ""v2.0.0"", ""spec"": { ... } }'"
"Update a pod identified by type and name in ""parameters.json""",kubectl annotate -f parameters.json SLA='99.9% uptime'
Return snapshot logs from container email-server-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/email-server-deployment -c media-stream-pod-1
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 5000 and 6000 in the pod",kubectl port-forward pod/log-aggregator-pod 8000 5000
Return snapshot logs from container search-engine-deployment-1 of a deployment named analytics-pod,kubectl logs deployment/search-engine-deployment -c analytics-pod-1
Copy ~/.config/kube from a remote pod to :/tmp/bar locally,kubectl cp rook-ceph/file-server-pod-14:~/.config/kube :/tmp/bar
Create a deployment named db that runs the redis image and expose port 9092,kubectl create deployment db --image=redis --port=9092
"Update pod 'foo' with the annotation 'team' and the value 'frontend team' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods foo team='frontend team'
Display only the most recent 12 lines of output in pod api-service-pod,kubectl logs --tail=12 api-service-pod
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/app-config deployment/payment-processor-deployment
Create a new secret named encryption-key-secret with keys for each file in folder bar,kubectl create secret generic encryption-key-secret --from-file=path/to/configurations
Delete the cluster-gamma cluster,kubectl config delete-cluster cluster-gamma
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/log-config deployment/web-app-deployment
"Listen on port 8081 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/mypod 8081:8888"
Create a new ClusterIP service named database-service-clusterip,kubectl create service clusterip database-service-clusterip --tcp=8181:3306
Create a new NodePort service named auth-service-nodeport,kubectl create service nodeport auth-service-nodeport --tcp=8088:3001
Create a job with a command,kubectl create job monitoring-job --image=postgres -- pg_dump --version
Start a alpine pod and let the container expose port 6379,kubectl run hazelcast --image=alpine --port=6379
Show metrics for the pods defined by label app-type=microservice,kubectl top pod -l app-type=microservice
Use an alternative editor,"KUBE_EDITOR=""micro"" kubectl edit svc/analytics-service"
Return snapshot of previous terminated time-machine container logs from pod vpn-service-pod,kubectl logs -p -c time-machine vpn-service-pod
Create a new secret named app-config-secret with key1=supersecret and key2=topsecret,kubectl create secret generic app-config-secret --from-literal=key1=supersecret --from-literal=key2=topsecret
Begin streaming the logs of the rocket-ranger container in pod auth-service-pod,kubectl logs -f -c rocket-ranger auth-service-pod
Create a deployment named monitoring that runs the ubuntu image and expose port 8443,kubectl create deployment monitoring --image=ubuntu --port=8443
Set custom TLS server name to use for validation for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --tls-server-name=staging-cluster
"Listen on port 3000 on all addresses, forwarding to 3000 in the pod",kubectl port-forward --address 0.0.0.0 pod/security-service-pod 3000:3000
"Listen on ports 3000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 3000 8080
"Listen on port 6379 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/backend-pod 6379:8080
Start a docker.elastic.co/elasticsearch/elasticsearch pod and let the container expose port 5000,kubectl run hazelcast --image=docker.elastic.co/elasticsearch/elasticsearch --port=5000
"Delete pods and services with same names ""monitoring"" and ""security""","kubectl delete pod,service monitoring security"
Set deployment gateway-deployment's service account to dashboard,kubectl set serviceaccount deployment gateway-deployment dashboard
Add a taint with key 'environment' on nodes having label myLabel,kubectl taint node -l myLabel  environment=worker-node-3:PreferNoSchedule
Create a deployment named db that runs the nginx image,kubectl create deployment db --image=nginx
"Update pod 'web' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods web scaling-policy=auto-horizontal-scaling
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 8888 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/analytics-platform-deployment 8888 8888
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/app-config-prod deployment/payment-processor-deployment
Check the rollout status of a daemonset,kubectl rollout status daemonset/namespace-3
Roll back to the previous deployment,kubectl rollout undo deployment/app-v2
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 8081 and 6000 in the pod",kubectl port-forward pod/cdn-service-pod 8088 8081
"Listen on port 5000 on all addresses, forwarding to 8081 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 5000:8081
"Listen on port 9090 locally, forwarding to 8000 in the pod",kubectl port-forward pod/proxy-server-pod 9090:8000
"Get output from running the 'java -jar /usr/share/jenkins/jenkins.war' command from pod security-service-pod, using the first container by default",kubectl exec security-service-pod -- java -jar /usr/share/jenkins/jenkins.war
"Listen on ports 8888 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/frontend-pod 8888 5432
"If the deployment named web's current size is 7, scale mysql to 7",kubectl scale --current-replicas=7 --replicas=7 deployment/web
Import environment from a secret,kubectl set env --from=secret/database-secret deployment/web-app-deployment
"Wait for the pod ""database-pod"" to be deleted, with a timeout of 60s, after having issued the ""delete"" command","kubectl delete pod/database-pod
kubectl wait --for=delete pod/busybox1 --timeout=60s"
"Check to see if I can get the job named ""content-import-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/content-import-job -n kube-ingress
Create a new LoadBalancer service named security-service-lb,kubectl create service loadbalancer security-service-lb --tcp=8443:8010
List one or more resources by their type and names,kubectl get rc/web service/chat-app-rc pods/database-pod
Return snapshot logs from all containers in pods defined by label version=v1.0.0,kubectl logs -l version=v1.0.0 --all-containers=true
"Listen on port 5000 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/analytics-pod 5000:8081"
"Listen on port 5000 locally, forwarding to 9090 in the pod",kubectl port-forward pod/proxy-server-pod 5000:9090
Get output from running the 'composer --version' command in rocket-ranger from pod proxy-service-pod,kubectl exec proxy-service-pod -c rocket-ranger -- composer --version
Return snapshot logs from container mydeployment-1 of a deployment named log-aggregator-pod,kubectl logs deployment/mydeployment -c log-aggregator-pod-1
List one or more resources by their type and names,kubectl get rc/web service/cdn-service-rc pods/e-commerce-pod
Set deployment analytics-platform-deployment's service account to default,kubectl set serviceaccount deployment analytics-platform-deployment default
"If the deployment named webapp-replicaset's current size is 3, scale mysql to 5",kubectl scale --current-replicas=3 --replicas=5 deployment/webapp-replicaset
Create a new secret named ldap-credentials-secret with keys for each file in folder bar,kubectl create secret generic ldap-credentials-secret --from-file=path/to/options
Create a deployment named grafana that runs the hazelcast image,kubectl create deployment grafana --image=hazelcast/hazelcast
Return snapshot of previous terminated quantum-quark container logs from pod security-service-pod,kubectl logs -p -c quantum-quark security-service-pod
"Partially update a node using a strategic merge patch, specifying the patch as YAML",kubectl patch node testing-node-11 -p $'spec:\n containers:\n- name: container-name\n  resources:\n    limits:\n      cpu: 200m'
Create a new config map named ui-config based on folder profiles,kubectl create configmap ui-config --from-file=path/to/profiles
"Update pod 'media-stream' with the annotation 'criticality' and the value high # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream criticality=high
Create a new resource quota named configmap-quota,kubectl create quota configmap-quota --hard=configmaps=5
"Listen on a random port locally, forwarding to 8080 in the pod",kubectl port-forward pod/proxy-server-pod :8080
Edit the last-applied-configuration annotations by type/name in YAML,kubectl apply edit-last-applied deployment/ruby
"List deployments in JSON output format, in the ""v2.1.0"" version of the ""prod-apps"" API group",kubectl get deployments.v2.1.0.prod-apps -o json
Create a new secret named gcp-service-account-secret from an env file,kubectl create secret generic gcp-service-account-secret --from-env-file=path/to/settings.env
"Create a service for a replicated ruby, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc ruby --port=8000 --target-port=808300
"Update pod 'media-stream' with the annotation 'expiration-date' and the value '2024-12-31' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods media-stream expiration-date='2024-12-31'
"Set a deployments kafka container cpu limits to ""200m"" and memory to ""4Gi""","kubectl set resources deployment kafka -c=nginx --limits=cpu=200m,memory=4Gi"
Create a new config map named env-vars with specified keys instead of file basenames on disk,kubectl create configmap env-vars --from-file=conf=/path/to/options/file1.txt --from-file=data=/path/to/configs/file2.txt
Return snapshot of previous terminated quantum-quark container logs from pod database-pod,kubectl logs -p -c quantum-quark database-pod
Update all deployments' and rc's nginx container's image to 'centos:8.4.2105',"kubectl set image deployments,rc centos=centos:8.4.2105 --all"
Create a new ClusterIP service named messaging-service-clusterip,kubectl create service clusterip messaging-service-clusterip --tcp=5001:8000
List one or more resources by their type and names,kubectl get rc/web service/database-rc pods/e-commerce-pod
Get output from quantum-quark from pod log-aggregator-pod,kubectl attach log-aggregator-pod -c quantum-quark
Return only the phase value of the specified pod,kubectl get -o template pod/monitoring-pod --template={{.status.phase}}
Get output from running the 'dotnet' command in cosmic-container from pod proxy-service-pod,kubectl exec proxy-service-pod -c cosmic-container -- dotnet
Return snapshot of previous terminated nebula-navigator container logs from pod analytics-pod,kubectl logs -p -c nebula-navigator analytics-pod
Delete resources from a directory containing kustomization.yaml - e.g. setup/kustomization.yaml,kubectl delete -k setup/
Create a deployment named db that runs the centos image,kubectl create deployment db --image=centos
Import specific keys from a config map,kubectl set env --keys=database_url --from=configmap/app-config deployment/proxy-service-deployment
Update pod 'auth' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods auth role-
Update image of all containers of daemonset namespace-1 to 'mongo:5.0.2',kubectl set image daemonset namespace-1 *=mongo:5.0.2
"Update pod 'proxy' with the annotation 'last-deployment' and the value 2023-03-15 # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy last-deployment=2023-03-15
Create a new NodePort service named media-stream-nodeport,kubectl create service nodeport media-stream-nodeport --tcp=5432:8888
Set custom TLS server name to use for validation for the e2e cluster entry,kubectl config set-cluster e2e --tls-server-name=data-cluster
Start a redis pod and let the container expose port 8083,kubectl run hazelcast --image=redis --port=8083
Get the documentation of a specific field of a resource,kubectl explain resource=services.status.serviceName
Get output from running the 'jenkins-plugin-cli' command in time-machine from pod frontend-pod,kubectl exec frontend-pod -c time-machine -- jenkins-plugin-cli
"Listen on port 8081 on localhost and selected IP, forwarding to 9090 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8081:9090"
Set the cluster field in the my-context context to cluster-alpha,kubectl config set contexts.prod-context.cluster cluster-alpha
"Set a deployments jenkins container cpu limits to ""3"" and memory to ""2Gi""","kubectl set resources deployment jenkins -c=nginx --limits=cpu=3,memory=2Gi"
"Output modified deployment in YAML, and does not alter the object on the server",kubectl set env deployment/analytics-platform-deployment SECRET_KEY=your-secret-key -o yaml
"Update a pod identified by type and name in ""options.json""",kubectl annotate -f options.json last-deployment=2023-03-15
Create a deployment named registry that runs the ethereum/client-go image and expose port 7000,kubectl create deployment registry --image=ethereum/client-go --port=7000
Create a new ExternalName service named external-geolocation-service,kubectl create service externalname external-geolocation-service --external-name documentation-tech.tech
Get output from stardust-shuttle from pod auth-service-pod,kubectl attach auth-service-pod -c stardust-shuttle
"Listen on port 6379 locally, forwarding to 5000 in the pod",kubectl port-forward pod/mypod 6379:5000
"Listen on port 3000 locally, forwarding to 8888 in the pod",kubectl port-forward pod/e-commerce-pod 3000:8888
"Listen on port 5432 locally, forwarding to 9090 in the pod",kubectl port-forward pod/chat-app-pod 5432:9090
List the environment variables defined on a deployments 'user-management-deployment',kubectl set env deployment/user-management-deployment --list
"Delete pods and services with same names ""backend"" and ""email""","kubectl delete pod,service backend email"
List all configmaps in ps output format,kubectl get configmaps
Add a taint with key 'special' on nodes having label app=web-app,kubectl taint node -l app=web-app  special=edge-node-10:PreferNoSchedule
Create a copy of email-service-pod changing all container images to mysql,kubectl debug email-service-pod --copy-to=debug-image-memcached --set-image=*=mysql
Return snapshot logs from container database-deployment-1 of a deployment named backend-pod,kubectl logs deployment/database-deployment -c backend-pod-1
"Listen on ports 6379 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/proxy-server-pod 6379 9090
Add a taint with key 'app' on nodes having label service=auth,kubectl taint node -l service=auth  app=kube-master-9:PreferNoSchedule
Create a deployment named my-dep that runs the jenkins image,kubectl create deployment my-dep --image=jenkins
Update pod 'backend' with the label 'env' and the value 'development',kubectl label pods backend env=development
Create a deployment named prometheus that runs the php image and expose port 8181,kubectl create deployment prometheus --image=php --port=8181
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/proxy-service-pod
Import environment from a secret,kubectl set env --from=secret/api-secret-key deployment/backend-microservice-deployment
Create a copy of frontend-pod changing all container images to mysql,kubectl debug frontend-pod --copy-to=my-debugger --set-image=*=mysql
Create a new config map named monitoring-config with specified keys instead of file basenames on disk,kubectl create configmap monitoring-config --from-file=settings=/path/to/properties/file1.txt --from-file=key2=/path/to/properties/file2.txt
"Create a role named ""admin_role"" with ResourceName specified",kubectl create role admin_role --verb=create --resource=pods --resource-name=search-elasticsearch --resource-name=cdn-proxy
Set custom TLS server name to use for validation for the cluster-alpha cluster entry,kubectl config set-cluster cluster-alpha --tls-server-name=cluster-gamma
"Mark node ""edge-node-10"" as schedulable",kubectl uncordon edge-node-10
Create a copy of payment-gateway-pod adding a debug container and changing container images,"kubectl debug payment-gateway-pod -it --copy-to=my-debugger --image=debian --set-image=web=nginx:latest,app=app:debug"
"Create a role binding for app-operator, sysadmin, and security-auditors using the view cluster role",kubectl create rolebinding view --clusterrole=view --user=app-operator --user=sysadmin --group=security-auditors
Set the cluster field in the my-context context to cluster-beta,kubectl config set contexts.admin-context.cluster cluster-beta
Import specific keys from a config map,kubectl set env --keys=EXTERNAL_API_URL --from=configmap/app-name-config deployment/web-app-deployment
Create a copy of mypod changing all container images to nginx,kubectl debug mypod --copy-to=debug-image-memcached --set-image=*=nginx
Update pod 'chat-app' with the label 'unhealthy' and the value 'true',kubectl label pods chat-app unhealthy=true
Display only the most recent 3 lines of output in pod api-service-pod,kubectl logs --tail=3 api-service-pod
Embed certificate authority data for the prod-cluster cluster entry,kubectl config set-cluster prod-cluster --embed-certs --certificate-authority=~/.kube/galaxy-cluster/kubernetes.ca.crt
"Check to see if I can get the job named ""log-analysis-job"" in namespace ""cert-manager""",kubectl auth can-i list jobs.batch/log-analysis-job -n cert-manager
Unset namespace in admin-context context,kubectl config unset contexts.admin-context.namespace
Set the cluster field in the my-context context to star-cluster,kubectl config set contexts.testing-context.cluster star-cluster
"Listen on port 5432 on localhost and selected IP, forwarding to 5432 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 5432:5432"
Get output from running the 'redis-server' command in cosmic-container from pod log-aggregator-pod,kubectl exec log-aggregator-pod -c cosmic-container -- redis-server
"List deployments in JSON output format, in the ""v3.0.0"" version of the ""my-apps"" API group",kubectl get deployments.v3.0.0.my-apps -o json
"Listen on port 6379 on all addresses, forwarding to 8080 in the pod",kubectl port-forward --address 0.0.0.0 pod/e-commerce-pod 6379:8080
"Listen on port 6379 on all addresses, forwarding to 8088 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 6379:8088
Update pod 'proxy-server' with the label 'component' and the value 'api',kubectl label pods proxy-server component=api
Print the supported namespaced resources,kubectl api-resources --groupspaced=true
"Update pod 'payment' with the annotation 'scaling-policy' and the value 'auto-horizontal-scaling', overwriting any existing value",kubectl annotate --overwrite pods payment scaling-policy='auto-horizontal-scaling'
Create a deployment named nats that runs the docker.elastic.co/elasticsearch/elasticsearch image,kubectl create deployment nats --image=docker.elastic.co/elasticsearch/elasticsearch
Create a new config map named app-secrets with specified keys instead of file basenames on disk,kubectl create configmap app-secrets --from-file=settings=/path/to/data/file1.txt --from-file=key2=/path/to/profiles/file2.txt
Delete the system user,kubectl config delete-user system
Add a taint with key 'dedicated' on nodes having label namespace=mynamespace,kubectl taint node -l namespace=mynamespace  dedicated=gpu-node-12:PreferNoSchedule
Import specific keys from a config map,kubectl set env --keys=debug_mode --from=configmap/db-config deployment/log-aggregator-deployment
Begin streaming the logs of the quantum-quark container in pod api-service-pod,kubectl logs -f -c quantum-quark api-service-pod
Set custom TLS server name to use for validation for the on-prem-cluster cluster entry,kubectl config set-cluster on-prem-cluster --tls-server-name=prod-cluster
"Update pod 'proxy-server' with the annotation 'git-repo' and the value 'https://github.com/example/my-app' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods proxy-server git-repo='https://github.com/example/my-app'
Create a job with a command,kubectl create job security-scan-job --image=redis -- redis-server --version
"If the deployment named web's current size is 3, scale mysql to 7",kubectl scale --current-replicas=3 --replicas=7 deployment/web
"Create a service for a replicated nginx using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs nginx --port=9091 --target-port=808000
Return snapshot logs from container user-management-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/user-management-deployment -c gateway-pod-1
"Check to see if I can get the job named ""cleanup-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/cleanup-job -n kube-ingress
Set custom TLS server name to use for validation for the my-k8s-cluster cluster entry,kubectl config set-cluster my-k8s-cluster --tls-server-name=cloud-cluster
Get output from running the 'go version' command in code-explorer from pod auth-service-pod,kubectl exec auth-service-pod -c code-explorer -- go version
"Set basic auth for the ""k8s-admin"" entry",kubectl config set-credentials k8s-admin --username=admin --password=uXFGweU9l35qcif
Set the cluster field in the my-context context to kube-cluster-1,kubectl config set contexts.prod-context.cluster kube-cluster-1
Set deployment load-balancer-deployment's service account to dashboard,kubectl set serviceaccount deployment load-balancer-deployment dashboard
"Listen on ports 8088 and 6000 locally, forwarding data to/from ports 5432 and 6000 in the pod",kubectl port-forward pod/mypod 8088 5432
"Auto scale a deployment ""gateway"", with the number of pods between 1 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment gateway --min=1 --max=13
Update pod 'payment' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods payment app-
Return snapshot logs from container scheduler-app-deployment-1 of a deployment named proxy-service-pod,kubectl logs deployment/scheduler-app-deployment -c proxy-service-pod-1
Get output from cosmic-container from pod chat-app-pod,kubectl attach chat-app-pod -c cosmic-container
"Listen on port 8888 locally, forwarding to 5000 in the pod",kubectl port-forward pod/cdn-service-pod 8888:5000
Start a jenkins pod and let the container expose port 9000,kubectl run hazelcast --image=jenkins --port=9000
Get output from running the 'kafka-topics --list' command in nano-bot from pod chat-app-pod,kubectl exec chat-app-pod -c nano-bot -- kafka-topics --list
Get output from stardust-shuttle from pod gateway-pod,kubectl attach gateway-pod -c stardust-shuttle
Update deployment 'database-deployment' with a new environment variable,kubectl set env deployment/database-deployment JWT_SECRET=your-jwt-secret
"Delete pods and services with same names ""log-aggregator"" and ""web""","kubectl delete pod,service log-aggregator web"
Import specific keys from a config map,kubectl set env --keys=external_api_url --from=configmap/kube-system-config deployment/proxy-service-deployment
Start a nginx pod and let the container expose port 8443,kubectl run hazelcast --image=nginx --port=8443
Describe one context in your kubeconfig file,kubectl config get-contexts user-a-context
"Start a ruby pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=ruby --overrides='{ ""apiVersion"": ""stable-2.0.0"", ""spec"": { ... } }'"
"Listen on ports 5432 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/mypod 5432 9090
"Listen on port 8000 on localhost and selected IP, forwarding to 8000 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/cdn-service-pod 8000:8000"
"List deployments in JSON output format, in the ""alpha-2.0"" version of the ""experimental-apps"" API group",kubectl get deployments.alpha-2.0.experimental-apps -o json
Create a new config map named api-config with specified keys instead of file basenames on disk,kubectl create configmap api-config --from-file=settings=/path/to/preferences/file1.txt --from-file=key2=/path/to/configs/file2.txt
Set the cluster field in the my-context context to dev-cluster,kubectl config set contexts.team-beta-context.cluster dev-cluster
List one or more resources by their type and names,kubectl get rc/web service/analytics-rc pods/email-service-pod
Create a new config map named app-secrets from the key=value pairs in the file,kubectl create configmap app-secrets --from-file=path/to/preferences
Create a new secret named database-secret with keys for each file in folder bar,kubectl create secret generic database-secret --from-file=path/to/settings
"Get output from running the 'bash' command from pod analytics-pod, using the first container by default",kubectl exec analytics-pod -- bash
Create a job with a command,kubectl create job log-processing-job --image=jenkins -- jenkins --version
"Listen on port 3000 locally, forwarding to 8000 in the pod",kubectl port-forward pod/chat-app-pod 3000:8000
List a single replication controller with specified NAME in ps output format,kubectl get replicationcontroller database-rc
Set deployment web-app-deployment's service account to fluentd,kubectl set serviceaccount deployment web-app-deployment fluentd
"Listen on port 8081 on all addresses, forwarding to 5000 in the pod",kubectl port-forward --address 0.0.0.0 pod/chat-app-pod 8081:5000
Create a job with a command,kubectl create job monitoring-job --image=mysql -- mysqld
List one or more resources by their type and names,kubectl get rc/web service/backend-rc pods/payment-gateway-pod
"Listen on port 8088 locally, forwarding to 8888 in the pod",kubectl port-forward pod/chat-app-pod 8088:8888
"Listen on ports 8000 and 6000 locally, forwarding data to/from ports 8080 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/email-server-deployment 8000 8080
Rename the context 'testing-context' to 'team-alpha-context' in your kubeconfig file,kubectl config rename-context testing-context team-alpha-context
Create a new ExternalName service named external-notification-service,kubectl create service externalname external-notification-service --external-name document-company.com
Get output from running the 'node --version' command in warp-drive from pod e-commerce-pod,kubectl exec e-commerce-pod -c warp-drive -- node --version
Return snapshot logs from container analytics-platform-deployment-1 of a deployment named proxy-server-pod,kubectl logs deployment/analytics-platform-deployment -c proxy-server-pod-1
"Delete pods and services with same names ""api"" and ""log-aggregator""","kubectl delete pod,service api log-aggregator"
"Update pod 'monitoring' with the label 'status' and the value 'unhealthy', overwriting any existing value",kubectl label --overwrite pods monitoring status=unhealthy
Start a confluentinc/cp-kafka pod and let the container expose port 8082,kubectl run hazelcast --image=confluentinc/cp-kafka --port=8082
"Check to see if I can get the job named ""database-indexing-job"" in namespace ""kube-ingress""",kubectl auth can-i list jobs.batch/database-indexing-job -n kube-ingress
Return snapshot logs from container database-deployment-1 of a deployment named gateway-pod,kubectl logs deployment/database-deployment -c gateway-pod-1
Add to node 'testing-node-11' a taint with key 'disktype' and no value,kubectl taint nodes testing-node-11 disktype:NoSchedule
Delete the edge-cluster cluster,kubectl config delete-cluster edge-cluster
Create a copy of mypod changing all container images to mcr.microsoft.com/dotnet/core/runtime,kubectl debug mypod --copy-to=my-debugger --set-image=*=mcr.microsoft.com/dotnet/core/runtime
Return snapshot logs from container monitoring-stack-deployment-1 of a deployment named media-stream-pod,kubectl logs deployment/monitoring-stack-deployment -c media-stream-pod-1
Create a copy of chat-app-pod changing the command of astro-container,kubectl debug chat-app-pod -it --copy-to=my-custom-dbg --container=astro-container -- sh
Add to node 'worker-node-3' a taint with key 'disktype' and no value,kubectl taint nodes worker-node-3 disktype:NoSchedule
Dump a set of namespaces to ~/.config/kube,"kubectl cluster-info dump --namespaces default,kube-system --output-directory=~/.config/kube"
"Check to see if I can get the job named ""data-synchronization-job"" in namespace ""kube-public""",kubectl auth can-i list jobs.batch/data-synchronization-job -n kube-public
Get the password for the sun-cluster user,"kubectl config view -o jsonpath='{.users[?(@.name == ""sun-cluster"")].user.password}'"
Create a new secret named encryption-key-secret with keys for each file in folder bar,kubectl create secret generic encryption-key-secret --from-file=path/to/preferences
"Auto scale a deployment ""payment"", with the number of pods between 6 and 13, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment payment --min=6 --max=13
Update all deployments' and rc's nginx container's image to 'wordpress:5.8.1',"kubectl set image deployments,rc wordpress=wordpress:5.8.1 --all"
"Get output from running the 'bash' command from pod cdn-service-pod, using the first container by default",kubectl exec cdn-service-pod -- bash
"Listen on port 8888 on localhost and selected IP, forwarding to 8081 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8888:8081"
Embed certificate authority data for the edge-cluster cluster entry,kubectl config set-cluster edge-cluster --embed-certs --certificate-authority=~/.kube/on-prem-cluster/kubernetes.ca.crt
Create a new config map named log-config with specified keys instead of file basenames on disk,kubectl create configmap log-config --from-file=properties=/path/to/profiles/file1.txt --from-file=key1=/path/to/configurations/file2.txt
Import specific keys from a config map,kubectl set env --keys=log_level --from=configmap/log-config deployment/database-deployment
Create a deployment named grafana that runs the mcr.microsoft.com/dotnet/core/runtime image with 7 replicas,kubectl create deployment grafana --image=mcr.microsoft.com/dotnet/core/runtime --replicas=7
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/app-settings deployment/api-server-deployment
"Update pod 'monitoring' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods monitoring monitoring-tool=Prometheus
Rename the context 'staging-context' to 'team-alpha-context' in your kubeconfig file,kubectl config rename-context staging-context team-alpha-context
Set deployment web-app-deployment's service account to flux,kubectl set serviceaccount deployment web-app-deployment flux
Set the cluster field in the my-context context to cluster-gamma,kubectl config set contexts.cluster-2-context.cluster cluster-gamma
Create a cron job with a command,"kubectl create cronjob report-generation --image=centos --schedule=""*/1 * * * *"" -- yum install -y wget"
Set custom TLS server name to use for validation for the cluster-beta cluster entry,kubectl config set-cluster cluster-beta --tls-server-name=my-k8s-cluster
Begin streaming the logs of the cosmic-container container in pod payment-gateway-pod,kubectl logs -f -c cosmic-container payment-gateway-pod
Create a job with a command,kubectl create job monitoring-job --image=python -- pip --version
Create a copy of vpn-service-pod changing all container images to python,kubectl debug vpn-service-pod --copy-to=debug-image-memcached --set-image=*=python
"List deployments in JSON output format, in the ""v1.1.0"" version of the ""testing-apps"" API group",kubectl get deployments.v1.1.0.testing-apps -o json
Update a cluster role binding for elasticsearch,kubectl set subject clusterrolebinding admin --serviceaccount=namespace:elasticsearch
Set the client-key-data field in the system user using --set-raw-bytes option,kubectl config set users.system.client-key-data cert_data_here --set-raw-bytes=true
Return snapshot of previous terminated rocket-ranger container logs from pod web-app-pod,kubectl logs -p -c rocket-ranger web-app-pod
Update pod 'payment' by removing a label named 'bar' if it exists # Does not require the --overwrite flag,kubectl label pods payment tier-
Create a job with a command,kubectl create job log-processing-job --image=alpine -- ash
Check the rollout status of a daemonset,kubectl rollout status daemonset/services
Set the cluster field in the my-context context to data-cluster,kubectl config set contexts.user-a-context.cluster data-cluster
"List deployments in YAML output format, in the ""v1.1.0"" version of the ""testing-apps"" API group",kubectl get deployments.v1.1.0.testing-apps -o yaml
Set custom TLS server name to use for validation for the galaxy-cluster cluster entry,kubectl config set-cluster galaxy-cluster --tls-server-name=app-cluster
Import specific keys from a config map,kubectl set env --keys=CONFIG_FILE_PATH --from=configmap/env-vars deployment/email-server-deployment
Set custom TLS server name to use for validation for the app-cluster cluster entry,kubectl config set-cluster app-cluster --tls-server-name=prod-cluster
"Get output from running 'mongo --version' command from the first pod of the deployment analytics-platform-deployment, using the first container by default",kubectl exec deploy/analytics-platform-deployment -- mongo --version
Scale a replica set named 'backend-service-replicaset' to 7,kubectl scale --replicas=7 rs/backend-service-replicaset
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/api-config deployment/payment-processor-deployment
"Update pod 'log-aggregator' with the annotation 'monitoring-tool' and the value 'Prometheus' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods log-aggregator monitoring-tool=Prometheus
"Update pod 'cdn' with the annotation 'criticality' and the value 'high', overwriting any existing value",kubectl annotate --overwrite pods cdn criticality='high'
"Auto scale a deployment ""cdn"", with the number of pods between 4 and 9, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment cdn --min=4 --max=9
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 9090 and 6000 in the pod",kubectl port-forward pod/analytics-pod 5000 9090
"Update pod 'auth' with the annotation 'alert-email' and the value 'alerts@example.com' # If the same annotation is set multiple times, only the last value will be applied",kubectl annotate pods auth alert-email=alerts@example.com
"Create a service for an centos deployment, which serves on port 80 and connects to the containers on port 8000",kubectl expose deployment centos --port=3000 --target-port=330600
Create a deployment named loadbalancer that runs the jenkins image and expose port 5001,kubectl create deployment loadbalancer --image=jenkins --port=5001
"Listen on ports 5000 and 6000 locally, forwarding data to/from ports 8081 and 6000 in a pod selected by the deployment",kubectl port-forward deployment/web-app-deployment 5000 8081
Create a copy of media-stream-pod changing all container images to redis,kubectl debug media-stream-pod --copy-to=my-debugger --set-image=*=redis
Get output from rocket-ranger from pod proxy-service-pod,kubectl attach proxy-service-pod -c rocket-ranger
"Listen on port 5432 on all addresses, forwarding to 8888 in the pod",kubectl port-forward --address 0.0.0.0 pod/api-service-pod 5432:8888
Get output from running the 'jenkins-plugin-cli' command in mycontainer from pod cdn-service-pod,kubectl exec cdn-service-pod -c mycontainer -- jenkins-plugin-cli
Create a deployment named loadbalancer that runs the mongo image with 6 replicas,kubectl create deployment loadbalancer --image=mongo --replicas=6
"Listen on port 3000 locally, forwarding to 8080 in the pod",kubectl port-forward pod/chat-app-pod 3000:8080
Begin streaming the logs of the cyber-sleuth container in pod monitoring-pod,kubectl logs -f -c cyber-sleuth monitoring-pod
"Listen on port 3000 locally, forwarding to 5000 in the pod",kubectl port-forward pod/cdn-service-pod 3000:5000
List all the contexts in your kubeconfig file,kubectl config get-contexts
Add to node 'k8s-node-1' a taint with key 'zone' and no value,kubectl taint nodes k8s-node-1 zone:NoSchedule
Get output from running the 'elasticsearch-plugin --list' command in cyber-sleuth from pod web-app-pod,kubectl exec web-app-pod -c cyber-sleuth -- elasticsearch-plugin --list
List one or more resources by their type and names,kubectl get rc/web service/web-app-rc pods/log-aggregator-pod
"Listen on port 8000 on localhost and selected IP, forwarding to 8888 in the pod","kubectl port-forward --address localhost,10.19.21.23 pod/backend-pod 8000:8888"
Add to node 'backup-node-14' a taint with key 'environment' and no value,kubectl taint nodes backup-node-14 environment:NoSchedule
Use an alternative editor,"KUBE_EDITOR=""sublime"" kubectl edit svc/search-service"
Switch to raw terminal mode; sends stdin to 'bash' in nebula-navigator from pod email-service-pod # and sends stdout/stderr from 'bash' back to the client,kubectl attach email-service-pod -c nebula-navigator -i -t
Create a job with a command,kubectl create job image-build-job --image=redis -- redis-cli
Import specific keys from a config map,kubectl set env --keys=DATABASE_URL --from=configmap/db-config deployment/database-deployment
"Create a job from a cron job named ""data-processing""",kubectl create job test-job --from=cronjob/data-processing
Add to node 'worker-node-3' a taint with key 'hardware' and no value,kubectl taint nodes worker-node-3 hardware:NoSchedule
"Create a cluster role name ""default_role"" with NonResourceURL specified","kubectl create clusterrole ""default_role"" --verb=connect --non-resource-url=/oapi/*"
Get output from running the 'nginx' command in quantum-quark from pod backend-pod,kubectl exec backend-pod -c quantum-quark -- nginx
"Listen on port 6379 locally, forwarding to the targetPort of the service's port named ""https"" in a pod selected by the service",kubectl port-forward service/monitoring-service 6379:https
Display only the most recent 3 lines of output in pod security-service-pod,kubectl logs --tail=3 security-service-pod
"Auto scale a deployment ""database"", with the number of pods between 4 and 10, no target CPU utilization specified so a default autoscaling policy will be used",kubectl autoscale deployment database --min=4 --max=10
Get output from running the 'mongo' command in stardust-shuttle from pod chat-app-pod,kubectl exec chat-app-pod -c stardust-shuttle -- mongo
"List deployments in JSON output format, in the ""rc-1.1.0"" version of the ""experimental-apps"" API group",kubectl get deployments.rc-1.1.0.experimental-apps -o json
Rename the context 'cluster-1-context' to 'team-alpha-context' in your kubeconfig file,kubectl config rename-context cluster-1-context team-alpha-context
Update pod 'gateway' with the label 'role' and the value 'frontend',kubectl label pods gateway role=frontend
"Listen on port 8088 locally, forwarding to 9090 in the pod",kubectl port-forward pod/e-commerce-pod 8088:9090
Import specific keys from a config map,kubectl set env --keys=API_KEY --from=configmap/log-config deployment/backend-microservice-deployment
Show metrics for all pods in the given namespace,kubectl top pod --namespace=external-metrics-service
Create a copy of monitoring-pod changing all container images to nginx,kubectl debug monitoring-pod --copy-to=debug-image-app --set-image=*=nginx
Import specific keys from a config map,kubectl set env --keys=SMTP_SERVER --from=configmap/kube-system-config deployment/load-balancer-deployment
"If the deployment named staging-app-rs's current size is 1, scale mysql to 3",kubectl scale --current-replicas=1 --replicas=3 deployment/staging-app-rs
Display only the most recent 53 lines of output in pod cdn-service-pod,kubectl logs --tail=53 cdn-service-pod
"Start a nginx pod, but overload the spec with a partial set of values parsed from JSON","kubectl run nginx --image=nginx --overrides='{ ""apiVersion"": ""feature-branch-2.3.0"", ""spec"": { ... } }'"
"Create a service for a replicated node using replica set, which serves on port 80 and connects to the containers on port 8000",kubectl expose rs node --port=8010 --target-port=808400
"If the deployment named app-v2-replicaset's current size is 5, scale mysql to 7",kubectl scale --current-replicas=5 --replicas=7 deployment/app-v2-replicaset
Return snapshot of previous terminated rocket-ranger container logs from pod email-service-pod,kubectl logs -p -c rocket-ranger email-service-pod
"Create a service for a replicated node, which serves on port 80 and connects to the containers on port 8000",kubectl expose rc node --port=80 --target-port=900000
"Create a cluster role binding for developer3, k8s-admin, and qa-engineers using the bar cluster role",kubectl create clusterrolebinding bar --clusterrole=bar --user=developer3 --user=k8s-admin --group=qa-engineers
Update image of all containers of daemonset staging to 'centos:8.4.2105',kubectl set image daemonset staging *=centos:8.4.2105
Import specific keys from a config map,kubectl set env --keys=REDIS_HOST --from=configmap/log-config deployment/search-engine-deployment
